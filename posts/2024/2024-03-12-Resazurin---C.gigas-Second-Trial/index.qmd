---
author: Sam White
toc-title: Contents
toc-depth: 5
toc-location: left
title: Resazurin - C.gigas Second Trial
date: '2024-03-12'
draft: false
engine: knitr
categories: 
  - Crassostrea gigas
  - Pacific oyster
  - 2024
  - resazurin
---
# INTRO

[After running the initial resazuring test on 20240308](../2024-03-08-Resazurin---Preliminary-Respiration-Test-Using-C.gigas/index.qmd) (Notebook), Steven/Ariana [asked that I run another trial](https://github.com/RobertsLab/resources/issues/1842) (GitHub Issue). This second trial was designed to get some baseline respiration from a set of oysters, followed by a heat stress at 35<sup>o</sup>C.

For this initial test, I followed the [resazurin assay](https://github.com/RobertsLab/project-gigas-carryover/blob/27441a713dfe68578758103bb82dd4dca4b4c091/protocols/Resazurin-assay.md) (commit 27441a7) shared by Steven, with the following modifications:

- Non-sterile water/sea water was used.

- No penn/strep/Fungizone used.

## Procedure

### Pre-stress

A total of nine small oysters were weighed, measured (using analog calipers). Two larger oyters were also weighed/measured and placed in their own glass Petri dishes. Fresh resazuring assay media was prepared. Two milliliters was added to 11 wells of the 12-well plate - the final position (`C04`) was left empty. Twenty milliliters was added to each Petri dish. These volumes ensured that the oysters would be submerged when added.

Fluorescence was measured on a Victor<sup>3</sup> plate reader immediatley after adding resazurin assay media to the plate and dishes. The oysters were then distributed/added to the 12-well plate and dishes. Fluorescence was measured again after 0.5 and 1.0hrs. To measure the dishes, 2mL of assay media was transferred to wells `A01` and `A02` of a clean 12-well plate (the smaller of the two oysters in `A01`).

### Heat stress @ 35<sup>o</sup>C.

As before, a fresh batch of resazurin assay media was made and distributed in a 12-well plate and two glass Petri dishes. The plate and the dishes were warmed at 35<sup>o</sup>C in a warm air incubator (Barnstead) for 45mins. The 12-well plate was covered; the Petri dishes were not. Fluorescence was measured on a Victor<sup>3</sup> plate reader immediately before  transferring oysters to the plate and dishes.

Oysters were transferred from the pre-stress plate/dishes to the pre-warmed plate/dishes. Fluorescence was measured again after 0.5 and 1.0hrs. To measure the dishes, 2mL of assay media was transferred to wells `A01` and `A02` of a clean 12-well plate (the smaller of the two oysters in `A01`).

### Plate layout

![Oysters in 12-well plate, a ruler, and oysters in two glass Petri dishes.](20240312-cgig-12_well-dishes-with_ruler.jpg){fig-alt="Oysters in 12-well plate, a ruler, and oysters in two glass Petri dishes."}

# RESULTS

## Output files

All files have been deposited in the [`project-gigas-carryover` repo](https://github.com/RobertsLab/project-gigas-carryover/tree/main/lifestage_carryover/data/resazurin_trial_02). Please visit that link to obtain files, as well as view the [`REAMDE.md` file](https://github.com/RobertsLab/project-gigas-carryover/tree/main/lifestage_carryover/data/resazurin_trial_02/REAMDE.md) for descriptions of each file.

All measurements were compiled in the following file:

- [`20240312-cgig-resazurin-trial-02.csv`](https://github.com/RobertsLab/project-gigas-carryover/blob/04a64e3bd45487b5cd631f5817937d3cd4318e70/lifestage_carryover/data/resazurin_trial_02/20240312-cgig-resazurin-trial-02.csv) (CSV; commit `a2398b0`)

## Analysis

::: callout-note
Data frame links to commit `a2398b0`.
:::

```{r setup, include=FALSE}
library(knitr)
library(dplyr)
library(ggplot2)
library(tidyr)
knitr::opts_chunk$set(
  echo = TRUE,         # Display code chunks
  eval = FALSE,        # Evaluate code chunks
  warning = FALSE,     # Hide warnings
  message = FALSE,     # Hide messages
  comment = "",        # Prevents appending '##' to beginning of lines in code output
  width = 1000         # adds scroll bar
)
```


### Read in `20240312-cgig-resazurin-trial-02.csv`
```{r read-in-csv, eval=TRUE}
resazurin.df <- read.csv("https://raw.githubusercontent.com/RobertsLab/project-gigas-carryover/a2398b08c839035df3c8924b12de55e2d91d8824/lifestage_carryover/data/resazurin_trial_02/20240312-cgig-resazurin-trial-02.csv",
header = TRUE,
sep = ",")

str(resazurin.df)
```


### Reshape the data from wide to long format
```{r reshape-data}
resazurin_data_long <- resazurin.df %>%
  pivot_longer(cols = c(t0, t0.5, t1.0), names_to = "time_point", values_to = "A590")
```

#### Pre-stress

##### Plot pre-stress raw flourescence

```{r plot-pre-stress-raw-fluorescence, eval=TRUE}
# Filter the data for treatment == "pre-stress"
pre_stress_data <- subset(resazurin_data_long, treatment == "pre-stress")

# Get unique sample names
unique_samples <- unique(pre_stress_data$sample)

# Define colors for unique samples
sample_colors <- ifelse(grepl("^neg-control", unique_samples), "black", rainbow(length(unique_samples)))

# Create a named vector for color mapping
sample_color_mapping <- setNames(sample_colors, unique_samples)

# Create the dot plot
ggplot(pre_stress_data, aes(x = time_point, y = A590, color = sample)) +
  geom_line(aes(group = sample), linetype = "solid", size = 1) + # Set linetype to solid
  geom_point() +
  scale_color_manual(values = sample_color_mapping) +
  labs(x = "Time Point", y = "A590", color = "Sample", linetype = "Sample") +
  theme_minimal()
```

##### Plot pre-stress control-subtracted fluorescence

```{r control-adjusted-fluorescence, eval=TRUE}
# Step 1: Calculate the mean of A590 for each time point for "pre-stress" samples beginning with "neg-control"
neg_control_means <- pre_stress_data %>%
  filter(grepl("^neg-control", sample)) %>%
  group_by(time_point) %>%
  summarise(mean_A590 = mean(A590))

# Step 2: Subtract the mean calculated in step 1 from each corresponding time point for other samples
adjusted_data <- pre_stress_data %>%
  left_join(neg_control_means, by = "time_point") %>%
  mutate(adjusted_A590 = ifelse(!is.na(mean_A590), A590 - mean_A590, A590))

# Step 3: Filter out values from samples "empty" and samples beginning with "neg-control"
adjusted_data <- adjusted_data %>%
  filter(!grepl("^empty|^neg-control", sample))

# Step 4: Create a dot plot using the adjusted values
ggplot(adjusted_data, aes(x = time_point, y = adjusted_A590, color = sample)) +
  geom_line(aes(group = sample), linetype = "solid", size = 1) +
  geom_point() +
  labs(x = "Time Point", y = "Adjusted A590", color = "Sample") +
  theme_minimal()
```


### Heat stress @ 35<sup>o</sup>C

##### Plot heat stress raw flourescence

```{r plot-heat stress-raw-fluorescence, eval=TRUE}
# Reshape the data frame from wide to long format using tidyr
resazurin.df_long <- pivot_longer(resazurin.df, 
                                  cols = starts_with("A590.hs"), 
                                  names_to = "time_point", 
                                  values_to = "A590_heat_stress_value")

# Create a new column to specify the color
resazurin.df_long$color <- ifelse(grepl("^neg-control", resazurin.df_long$sample), "neg-control", resazurin.df_long$sample)

# Get unique non-"neg-control" samples
non_neg_control_samples <- setdiff(unique(resazurin.df_long$sample), "neg-control")

# Define color palette
sample_colors <- c("neg-control" = "black", 
                   setNames(rainbow(length(non_neg_control_samples)), 
                            non_neg_control_samples))

# Plot the dot plot with lines
ggplot(resazurin.df_long, aes(x = time_point, y = A590_heat_stress_value, group = sample, color = color)) +
  geom_point(size = 3) +  # Larger dot size
  geom_line() +  # Connect dots with lines
  scale_color_manual(values = sample_colors) +  # Assigning colors to samples
  labs(x = "Time Point", y = "Raw A590 (RFUs)", title = "Raw A590 heat stress Values", color = "Sample") +
  theme_minimal()
```

##### Plot heat stress control-subtracted fluorescence

```{r control-adjusted-fluorescence, eval=TRUE}
# Step 1: Calculate the mean value of neg control samples
neg_control_mean <- resazurin.df %>%
  filter(sample %in% c("neg-control-01", "neg-control-02")) %>%
  select(starts_with("A590.hs")) %>%
  summarise_all(mean)

# Step 2: Subtract the mean value from other samples
resazurin_subtracted.df <- resazurin.df %>%
  mutate_at(vars(starts_with("A590.hs")), ~ . - neg_control_mean[[1]])

# Pivot the data frame to longer format and filter out 'empty' sample
resazurin_long <- resazurin_subtracted.df %>%
  filter(!startsWith(sample, "neg-control") & sample != "empty") %>%
  pivot_longer(cols = starts_with("A590.hs"), names_to = "Time_Point", values_to = "Mean_Subtracted_Value")

# Create dot plot with lines connecting values for each sample
ggplot(resazurin_long, aes(x = Time_Point, y = Mean_Subtracted_Value, group = sample, color = sample)) +
  geom_point() +
  geom_line() +
  labs(x = "Time Point", y = "Control-adjusted A590 (RFUs)") +
  theme(legend.position = "right")
```



### Combined bar plot

#### Calculate the mean of A590 for each time point for "pre-stress" samples beginning with "neg-control"
```{r calc-neg-control-mean, eval=TRUE}
# Step 1: Calculate the mean of A590 for each time point for "pre-stress" samples beginning with "neg-control"
neg_control_means <- resazurin_data_long %>%
  filter(grepl("^neg-control", sample)) %>%
  group_by(time_point) %>%
  summarise(mean_A590 = mean(A590))

str(neg_control_means)
```

#### Subtract negative controls
```{r subtract-neg-control, eval=TRUE}

# Subtract the mean calculated in step 1 from each corresponding time point for other samples
adjusted_data <- resazurin_data_long %>%
  left_join(neg_control_means, by = "time_point") %>%
  mutate(adjusted_A590 = ifelse(!is.na(mean_A590), A590 - mean_A590, A590))

str(adjusted_data)
```

#### Filter for desired data
```{r filter-data, eval=TRUE}
# Filter out values from samples "empty" and samples beginning with "neg-control"
adjusted_data_filtered <- adjusted_data %>%
  filter(!grepl("^empty|^neg-control", sample))


# Filter data for "pre-stress" and "heat_stress" treatments
filtered_data <- adjusted_data_filtered %>%
  filter(treatment %in% c("pre-stress", "heat_stress"))

str(filtered_data)
```


#### Pivot the data to have separate columns for "t0" and "t1.0"
```{r pivot-data, eval=TRUE}
pivoted_data <- filtered_data %>%
  filter(time_point %in% c("t0", "t1.0")) %>%
  group_by(sample, time_point, treatment) %>%
  summarize(adjusted_A590 = first(adjusted_A590)) %>%
  pivot_wider(names_from = time_point, values_from = adjusted_A590)

str(pivoted_data)
```



#### Calculate the difference in A590 between "t0" and "t1.0" normalized by weight
```{r calc-delta-A590-div-weight, eval=TRUE}
difference_data <- pivoted_data %>%
  left_join(filtered_data %>%
  select(sample, weight.mg, treatment), by = c("sample", "treatment")) %>%
  mutate(difference = (`t1.0` - `t0`) / weight.mg)

str(difference_data)
```

#### Grouped bar plot
```{r grouped-bar-plot, eval=TRUE}
# Reorder treatment levels
# Makes pre-stress on left and heat-stress on right
difference_data$treatment <- factor(difference_data$treatment, levels = c("pre-stress", "heat_stress"))

# Get default ggplot2 colors
default_colors <- scales::hue_pal()(2)

# Define custom fill colors with swapped treatments
custom_colors <- c("pre-stress" = default_colors[2], "heat_stress" = default_colors[1])

# Plot grouped bar plot with swapped treatments and default colors
ggplot(difference_data, aes(x = reorder(sample, weight.mg), y = difference, fill = treatment)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
  labs(x = "Sample", y = "\u0394 A590 per mg") + # Unicode for capital delta is \u0394
  scale_fill_manual(values = custom_colors) +  # Assign default ggplot2 colors to custom treatments
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1)) +
  geom_segment(aes(x = 0, xend = max(as.numeric(as.factor(difference_data$sample))) + 1.0, y = -3.5, yend = -3.5), arrow = arrow(type = "open", length = unit(0.2, "inches")), color = "black") + # adds arrow along X-axis
  geom_text(aes(x = 0, y = -8.0, label = "Smaller"), hjust = 0, vjust = 0, color = "black") +
  geom_text(aes(x = max(as.numeric(as.factor(difference_data$sample))) + 0.5, y = -8.0, label = "Larger"), hjust = 1, vjust = 0, color = "black")

```

## DISCUSSION

Glancing at the grouped bar plots, it appears that the smaller oysters have a greater change in respiration during heat stress. Additionally, the two largest oysters, possibly unintutively, exhibit the lowest changes in respiration. However, my guess is that these larger oysters have the ability to remain closed for longer durations than the smaller oysters. As such, they remained closed after being handled and placed in the resazurin assay media. This would explain low respiration rates _and_ minimal response to heat stress.

This idea is further supported by the fact that we see that as oysters get larger, their respiration rates are _lower_ than when unstressed. It's possible that the heat stress triggered a response for them to keep closed and, in turn, reducing respiration. While the smallest oysters are unable to keep their shells closed for lengthy periods of time, requiring them to open and respire at higher rates during heat stress.