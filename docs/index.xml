<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Sam&#39;s Notebook</title>
<link>https://robertslab.github.io/sams-notebook/</link>
<atom:link href="https://robertslab.github.io/sams-notebook/index.xml" rel="self" type="application/rss+xml"/>
<description></description>
<generator>quarto-1.6.42</generator>
<lastBuildDate>Thu, 23 Oct 2025 07:00:00 GMT</lastBuildDate>
<item>
  <title>Demultiplexing - S.namaychush PacBio Sequencing Using Lima</title>
  <dc:creator>Sam White</dc:creator>
  <link>https://robertslab.github.io/sams-notebook/posts/2025/2025-10-23-Demultiplexing---S.namaychush-PacBio-Sequencing-Using-Lima/</link>
  <description><![CDATA[ 





<section id="intro" class="level1">
<h1>INTRO</h1>
<p>The <a href="../../../posts/2025/2025-08-04-Data-Received---S.namaycush-PacBio-from-Angie-Schmoldt-at-Univ.-of-Wisconsin-Milwaukee/index.html">data we received on 20250804</a> was received as two pools of data and had not been demultiplexed. Steven <a href="https://github.com/RobertsLab/resources/issues/2354">assigned the task of demultiplexing to me</a> (GitHub Issue).</p>
</section>
<section id="materials-methods" class="level1">
<h1>MATERIALS &amp; METHODS</h1>
<p>I installed the <a href="https://github.com/PacificBiosciences/pbbioconda">PacBio software, <code>lima</code></a>(GitHub repo) on Raven in a mamba/conda environment:</p>
<p><code>mamba create -n pacbio_lima_env lima -c bioconda -y</code></p>
<p>Using this environment, I demultiplexed the data into both BAM files files.</p>
<p>A second environment using <a href="https://github.com/PacificBiosciences/pbtk">PacBio software, ‘pbtk’</a> was created for BAM to FastQ conversion:</p>
<p><code>mamba create -n pacbio_pbtk_env pbtk -c bioconda -y</code></p>
<p>I used the <code>bam2fastq</code> software in the <code>pbtk</code> package to perform the conversions.</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>Although labelled as BAMs, these are not alignment files. I believe the BAM format allows for better compression and the usage of <a href="https://pacbiofileformats.readthedocs.io/en/latest/BAM.html#use-of-read-tags-for-per-read-base-base-modifications">SAM tags</a> (PacBio methylation tag explanation) to allow for data annotation (e.g.&nbsp;marking methylation).</p>
</div>
</div>
<section id="pool1" class="level2">
<h2 class="anchored" data-anchor-id="pool1">POOL1</h2>
<section id="bams" class="level3">
<h3 class="anchored" data-anchor-id="bams">BAMs</h3>
<p>Created BAM outputs in <code>/home/shared/16TB_HDD_01/sam/data/S_namaychush/Pool1/hifi_reads/demultiplexed/bams</code>:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lima</span> ../../m84082_250614_081210_s3.hifi_reads.bam <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-2">../../barcodes.fasta <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-3">m84082_250614_081210_s3.hifi_reads.demux.bam <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-4">--hifi-preset SYMMETRIC <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-5">--split-named <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb1-6">--split-subdirs</span></code></pre></div>
<p>The command splits the demutlplexed BAMs into their own subdirectories.</p>
</section>
<section id="fastqs" class="level3">
<h3 class="anchored" data-anchor-id="fastqs">FastQs</h3>
<p>Created FastQ outputs in <code>/home/shared/16TB_HDD_01/sam/data/S_namaychush/Pool1/hifi_reads/demultiplexed/fastqs</code>:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">bam2fastq</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-2">-o /home/shared/16TB_HDD_01/sam/data/S_namaychush/Pool1/hifi_reads/demultiplexed/fastqs/{basename of input BAM} <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb2-3">/home/shared/16TB_HDD_01/sam/data/S_namaychush/Pool1/hifi_reads/demultiplexed/bams/{BAM_directory}/{individual_BAM}</span></code></pre></div>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> ../../barcodes.fasta </span>
<span id="cb3-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>bc2041</span>
<span id="cb3-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">TATGATCACTGAGTAT</span></span>
<span id="cb3-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>bc2071</span>
<span id="cb3-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">CGAGTCTAGCGAGTAT</span></span>
<span id="cb3-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>bc2072</span>
<span id="cb3-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">TATCAGTAGTGAGTAT</span></span></code></pre></div>
</section>
</section>
<section id="pool2" class="level2">
<h2 class="anchored" data-anchor-id="pool2">POOL2</h2>
<section id="bams-1" class="level3">
<h3 class="anchored" data-anchor-id="bams-1">BAMs</h3>
<p>Created BAM outputs in <code>/home/shared/16TB_HDD_01/sam/data/S_namaychush/Pool2/hifi_reads/demultiplexed/bams</code>:</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lima</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-2">../../m84082_250614_101514_s4.hifi_reads.bam <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-3">../../barcodes.fasta m84082_250614_101514_s4.hifi_reads.demux.bam <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-4">--hifi-preset SYMMETRIC <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-5">--split-named <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb4-6">--split-subdirs</span></code></pre></div>
<p>The command splits the demutlplexed BAMs into their own subdirectories.</p>
</section>
<section id="fastqs-1" class="level3">
<h3 class="anchored" data-anchor-id="fastqs-1">FastQs</h3>
<p>Created FastQ outputs in <code>/home/shared/16TB_HDD_01/sam/data/S_namaychush/Pool2/hifi_reads/demultiplexed/fastqs</code>:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">bam2fastq</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb5-2">-o /home/shared/16TB_HDD_01/sam/data/S_namaychush/Pool2/hifi_reads/demultiplexed/fastqs/{basename of input BAM} <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb5-3">/home/shared/16TB_HDD_01/sam/data/S_namaychush/Pool1/hifi_reads/demultiplexed/bams/{BAM_directory}/{individual_BAM}</span></code></pre></div>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span> ../../barcodes.fasta </span>
<span id="cb6-2"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>bc2069</span>
<span id="cb6-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">TCTATGACATGAGTAT</span></span>
<span id="cb6-4"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>bc2070</span>
<span id="cb6-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">TACTGCTCACGAGTAT</span></span>
<span id="cb6-6"><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>bc2073</span>
<span id="cb6-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ATCACTAGTCGAGTAT</span></span></code></pre></div>
</section>
</section>
</section>
<section id="results" class="level1">
<h1>RESULTS</h1>
<p>Data was rsync’d to Owl:</p>
<ul>
<li><p><a href="https://owl.fish.washington.edu/nightingales/S_namaycush/LakeTrout/Pool1/hifi_reads/demultiplexed/">https://owl.fish.washington.edu/nightingales/S_namaycush/LakeTrout/Pool1/hifi_reads/demultiplexed/</a></p></li>
<li><p><a href="https://owl.fish.washington.edu/nightingales/S_namaycush/LakeTrout/Pool2/hifi_reads/demultiplexed/">https://owl.fish.washington.edu/nightingales/S_namaycush/LakeTrout/Pool2/hifi_reads/demultiplexed/</a></p></li>
</ul>
<section id="pool1-directory-layout" class="level2">
<h2 class="anchored" data-anchor-id="pool1-directory-layout">Pool1 Directory Layout</h2>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>This is truncated to focus on the demultiplexing.</p>
</div>
</div>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4.0K</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  hifi_reads</span>
<span id="cb7-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> ├── [  76]  barcodes.fasta</span>
<span id="cb7-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4.0K</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  demultiplexed</span>
<span id="cb7-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4.0K</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  bams</span>
<span id="cb7-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4.0K</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  bc2041--bc2041</span>
<span id="cb7-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">9.0G</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  m84082_250614_081210_s3.hifi_reads.demux.bc2041--bc2041.bam</span>
<span id="cb7-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; ├── [ 35M]  m84082_250614_081210_s3.hifi_reads.demux.bc2041--bc2041.bam.pbi</span>
<span id="cb7-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; └── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2.2K</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  m84082_250614_081210_s3.hifi_reads.demux.bc2041--bc2041.consensusreadset.xml</span>
<span id="cb7-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4.0K</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  bc2071--bc2071</span>
<span id="cb7-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">7.6G</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  m84082_250614_081210_s3.hifi_reads.demux.bc2071--bc2071.bam</span>
<span id="cb7-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; ├── [ 36M]  m84082_250614_081210_s3.hifi_reads.demux.bc2071--bc2071.bam.pbi</span>
<span id="cb7-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; └── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2.2K</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  m84082_250614_081210_s3.hifi_reads.demux.bc2071--bc2071.consensusreadset.xml</span>
<span id="cb7-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4.0K</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  bc2072--bc2072</span>
<span id="cb7-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">5.5G</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  m84082_250614_081210_s3.hifi_reads.demux.bc2072--bc2072.bam</span>
<span id="cb7-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; ├── [ 25M]  m84082_250614_081210_s3.hifi_reads.demux.bc2072--bc2072.bam.pbi</span>
<span id="cb7-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; └── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2.2K</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  m84082_250614_081210_s3.hifi_reads.demux.bc2072--bc2072.consensusreadset.xml</span>
<span id="cb7-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">5.9K</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  m84082_250614_081210_s3.hifi_reads.demux.consensusreadset.xml</span>
<span id="cb7-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1.6K</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  m84082_250614_081210_s3.hifi_reads.demux.json</span>
<span id="cb7-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; ├── [ 156]  m84082_250614_081210_s3.hifi_reads.demux.lima.counts</span>
<span id="cb7-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1.8G</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  m84082_250614_081210_s3.hifi_reads.demux.lima.report</span>
<span id="cb7-21"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; └── [ 845]  m84082_250614_081210_s3.hifi_reads.demux.lima.summary</span>
<span id="cb7-22"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; └── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4.0K</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  fastqs</span>
<span id="cb7-23"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp;     ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">8.1G</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  m84082_250614_081210_s3.hifi_reads.demux.bc2041--bc2041.fastq.gz</span>
<span id="cb7-24"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp;     ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">6.8G</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  m84082_250614_081210_s3.hifi_reads.demux.bc2071--bc2071.fastq.gz</span>
<span id="cb7-25"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp;     └── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4.9G</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  m84082_250614_081210_s3.hifi_reads.demux.bc2072--bc2072.fastq.gz</span>
<span id="cb7-26"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> ├── [ 21G]  m84082_250614_081210_s3.hifi_reads.bam</span>
<span id="cb7-27"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> └── [ 93M]  m84082_250614_081210_s3.hifi_reads.bam.pbi</span></code></pre></div>
</section>
<section id="pool2-directory-layout" class="level2">
<h2 class="anchored" data-anchor-id="pool2-directory-layout">Pool2 Directory Layout</h2>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4.0K</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  hifi_reads</span>
<span id="cb8-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> ├── [  75]  barcodes.fasta</span>
<span id="cb8-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4.0K</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  demultiplexed</span>
<span id="cb8-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4.0K</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  bams</span>
<span id="cb8-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4.0K</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  bc2069--bc2069</span>
<span id="cb8-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3.5G</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  m84082_250614_101514_s4.hifi_reads.demux.bc2069--bc2069.bam</span>
<span id="cb8-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; ├── [ 14M]  m84082_250614_101514_s4.hifi_reads.demux.bc2069--bc2069.bam.pbi</span>
<span id="cb8-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; └── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2.2K</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  m84082_250614_101514_s4.hifi_reads.demux.bc2069--bc2069.consensusreadset.xml</span>
<span id="cb8-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4.0K</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  bc2070--bc2070</span>
<span id="cb8-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">6.9G</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  m84082_250614_101514_s4.hifi_reads.demux.bc2070--bc2070.bam</span>
<span id="cb8-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; ├── [ 32M]  m84082_250614_101514_s4.hifi_reads.demux.bc2070--bc2070.bam.pbi</span>
<span id="cb8-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; └── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2.2K</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  m84082_250614_101514_s4.hifi_reads.demux.bc2070--bc2070.consensusreadset.xml</span>
<span id="cb8-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4.0K</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  bc2073--bc2073</span>
<span id="cb8-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">8.8G</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  m84082_250614_101514_s4.hifi_reads.demux.bc2073--bc2073.bam</span>
<span id="cb8-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; ├── [ 39M]  m84082_250614_101514_s4.hifi_reads.demux.bc2073--bc2073.bam.pbi</span>
<span id="cb8-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; │&nbsp;&nbsp; └── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">2.2K</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  m84082_250614_101514_s4.hifi_reads.demux.bc2073--bc2073.consensusreadset.xml</span>
<span id="cb8-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">5.9K</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  m84082_250614_101514_s4.hifi_reads.demux.consensusreadset.xml</span>
<span id="cb8-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1.6K</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  m84082_250614_101514_s4.hifi_reads.demux.json</span>
<span id="cb8-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; ├── [ 156]  m84082_250614_101514_s4.hifi_reads.demux.lima.counts</span>
<span id="cb8-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">1.6G</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  m84082_250614_101514_s4.hifi_reads.demux.lima.report</span>
<span id="cb8-21"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; │&nbsp;&nbsp; └── [ 843]  m84082_250614_101514_s4.hifi_reads.demux.lima.summary</span>
<span id="cb8-22"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp; └── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">4.0K</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  fastqs</span>
<span id="cb8-23"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp;     ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">3.1G</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  m84082_250614_101514_s4.hifi_reads.demux.bc2069--bc2069.fastq.gz</span>
<span id="cb8-24"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp;     ├── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">6.2G</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  m84082_250614_101514_s4.hifi_reads.demux.bc2070--bc2070.fastq.gz</span>
<span id="cb8-25"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> │&nbsp;&nbsp;     └── <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">[</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">7.9G</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">]</span>  m84082_250614_101514_s4.hifi_reads.demux.bc2073--bc2073.fastq.gz</span>
<span id="cb8-26"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> ├── [ 18G]  m84082_250614_101514_s4.hifi_reads.bam</span>
<span id="cb8-27"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│&nbsp;&nbsp;</span> └── [ 83M]  m84082_250614_101514_s4.hifi_reads.bam.pbi</span></code></pre></div>


</section>
</section>

 ]]></description>
  <category>2025</category>
  <category>PacBio</category>
  <category>lima</category>
  <category>Salvelinus namaycush</category>
  <category>Lake Trout</category>
  <guid>https://robertslab.github.io/sams-notebook/posts/2025/2025-10-23-Demultiplexing---S.namaychush-PacBio-Sequencing-Using-Lima/</guid>
  <pubDate>Thu, 23 Oct 2025 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Reverse Transcription - C.gigas PolyIC Mechanical Trials RNA for Valentina from 20251002</title>
  <dc:creator>Sam White</dc:creator>
  <link>https://robertslab.github.io/sams-notebook/posts/2025/2025-10-19-Reverse-Transcription---C.gigas-PolyIC-Mechanical-Trials-RNA-for-Valentina-from-20251002/</link>
  <description><![CDATA[ 





<section id="intro" class="level1">
<h1>INTRO</h1>
<p>Took me a while to get around to this, but I performed reverse transcription on the remainder of Valentaina’s RNA <a href="../../../posts/2025/2025-09-02-RNA-Isolation---C.gigas-PolyIC-Mechanical-Trials-for-Valentina-Using-Quick-DNA-RNA-Miniprep-Plus-Kit/index.html">that I isolated on 20250902</a>. Needed to get supplies and figure out a time to actually process these 94 samples. See the cDNA calcs Google Sheet below for a list of samples.</p>
</section>
<section id="materials-methods" class="level1">
<h1>MATERIALS &amp; METHODS</h1>
<p>Reverse transcription was performed using the <a href="https://github.com/RobertsLab/resources/blob/master/protocols/Commercial_Protocols/Promega-goscript-reverse-transcription-system-protocol.pdf">GoScript Reverse Transcription System (Promega)</a> (PDF), using oligo dT primers and 1.5mM MgCl<sub>2</sub>. The reaction size was doubled, from 20uL to 40uL, to allow for sufficient cDNA for all the downstream qPCRs we plan to perform. The optional RNasin was also used. Reactions were set up in a 96-well, standard qPCR plate. Plate was sealed with strip caps. The reverse transcriptase components were prepared as a master mix and then distributed to RNA/oligo dT mixtures.</p>
<p>I used 200ng of RNA in the reactions.</p>
<p>Briefly, here is how the reactions were setup:</p>
<ol type="1">
<li>Combined RNA (200ng), oligo dT primers, and H<sub>2</sub>O to a final volume of 10uL.</li>
<li>Incubated plate at 70<sup>o</sup>C for 5mins and immediately chilled plate in ice water for 5mins.</li>
<li>Added 30uL of RT reaction master mix to each sample.</li>
<li>Incubated plate at 25<sup>o</sup>C for 5mins.</li>
<li>Incubated plate at 42<sup>o</sup>C for 60mins.</li>
<li>Incubated plate at 70<sup>o</sup>C for 15mins to deactivate reverse transcriptase.</li>
</ol>
<p>All incubations were conducted in a 96-well PTC-200 (MJ Research) thermalcycler using a heated lid.</p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>Step 6 is <em>required</em> if using cDNA for downstream qPCR analyses.</p>
</div>
</div>
<section id="cdna-calcs-and-plate-layout" class="level2">
<h2 class="anchored" data-anchor-id="cdna-calcs-and-plate-layout">cDNA calcs and plate layout:</h2>
<ul>
<li><a href="https://docs.google.com/spreadsheets/d/1jz4OLddk1oRCsNAV96OLfXdmBld0oT3vtq1vJWDG4iI/edit?usp=sharing">20251019-cgig-cDNA-calcs-polyIC</a> (Google Sheet)</li>
</ul>
<p>Plate was stored at -20<sup>o</sup>C.</p>


</section>
</section>

 ]]></description>
  <category>Crassostrea gigas</category>
  <category>Pacific oyster</category>
  <category>Qubit</category>
  <category>RNA</category>
  <category>Magallana gigas</category>
  <category>Poly IC</category>
  <category>reverse transcription</category>
  <guid>https://robertslab.github.io/sams-notebook/posts/2025/2025-10-19-Reverse-Transcription---C.gigas-PolyIC-Mechanical-Trials-RNA-for-Valentina-from-20251002/</guid>
  <pubDate>Sun, 19 Oct 2025 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Method Testing - E5 Timeseries Multi-species Multi-omics Using workflow-stdm-02</title>
  <dc:creator>Sam White</dc:creator>
  <link>https://robertslab.github.io/sams-notebook/posts/2025/2025-10-16-Method-Testing---E5-Timeseries-Multi-species-Multi-omics-Using-workflow-stdm-02/</link>
  <description><![CDATA[ 





<section id="intro" class="level1">
<h1>INTRO</h1>
<p>This notebook is an introductory exploration of the E5 coral <a href="https://github.com/urol-e5/timeseries_molecular"><code>urol-e5/timeseries_molecular</code></a> (GitHub repo) multi-species data using a tensor decomposition approach, using <a href="https://github.com/sr320/workflow-stdm-02"><code>orkflow-stdm-02</code></a> (GitHub Repo), a tensor decomposition package Steven created using an AI agent.</p>
<p>The primary goal was simply to run the package and see what types of files/visualizations it generated.</p>
<p>Overall, it appers to <em>function</em>, in that the expected outputs are generated. However, the outputs make it a bit difficult to assess <em>how</em> and if the results are what we’d expect (primarily due to our lack of experience with tensor decomposition models). For stuff that can be assessed, there are minor issues like the code outputing array index values instead of strings (e.g.&nbsp;instead of species abbreviations, the numbers <code>0</code>, <code>1</code>, <code>2</code>, &amp; <code>3</code> are used; their positions in the array during analysis).</p>
<p>Additionaly, some of the plots that are generated are a bit suspect, suggesting the model isn’t functioning properly. As an example, the plot of Components and Factor Values across Time Points seems to only have two possible vlues for any of the components. This seems unlikely, I think?</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://raw.githubusercontent.com/urol-e5/timeseries_molecular/refs/heads/main/M-multi-species/output/13.00-multiomics-stdm-02/export/time_factors_line.png" class="img-fluid figure-img"></p>
<figcaption>Line plot showing components plotted as factor values by timepoints. There are only two visible lines, purple across the top and a grey line across the bottom at 0.</figcaption>
</figure>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>The contents below are from knitted markdown <a href="https://github.com/urol-e5/timeseries_molecular/blob/9bf0088e848a0ead053016829f77c10376ea01c8/M-multi-species/scripts/13.00-multiomics-stdm-02.Rmd"><code>13.00-multiomics-stdm-02.Rmd</code></a> (commit <code>9bf0088</code>).</p>
</div>
</div>
<hr>
</section>
<section id="background" class="level1">
<h1>1 BACKGROUND</h1>
<p>This notebook performs tensor decomposition analysis on multi-species gene expression timeseries data using Steven’s <a href="https://github.com/sr320/workflow-stdm-02"><code>workflow-stdm-02</code></a> (GitHub repo) tensor decomposition project.</p>
<p>This package was auto-generated based on instructions provided by Steven. He created a few different packages and wanted them tested. The goal of this notebook is primarily to see how easily this package runs and whether the output is useful (i.e.&nbsp;useful visualizations, human-readable results tables, etc.)</p>
<section id="input-data" class="level2">
<h2 class="anchored" data-anchor-id="input-data">1.1 Input Data</h2>
<p>The <code>workflow-stdm-02</code> package processes a VST (Variance Stabilizing Transformation) counts matrix containing multi-species gene expression data across time points. The input file structure is:</p>
<ul>
<li><strong>Input file</strong>: <code>vst_counts_matrix.csv</code> (9,802 rows × 113 columns)
<ul>
<li><strong>Genes</strong>: 8,820 ortholog groups (OG_XXXXX identifiers)</li>
<li><strong>Species</strong>: 3 coral species (ACR, POR, POC)</li>
<li><strong>Time points</strong>: 4 time points (TP1, TP2, TP3, TP4)</li>
<li><strong>Samples</strong>: Multiple biological replicates per species-timepoint combination</li>
<li><strong>Data format</strong>: VST-normalized gene expression values</li>
</ul></li>
</ul>
<p>The package performs tensor decomposition to identify latent factors that capture patterns across the gene × species × time dimensions using sparse CP (CANDECOMP/PARAFAC) decomposition with L1 regularization.</p>
</section>
<section id="output-structure" class="level2">
<h2 class="anchored" data-anchor-id="output-structure">1.2 Output Structure</h2>
<p>The workflow generates comprehensive output organized into four main directories:</p>
<pre><code>output/
├── tensor/              # 3D tensor construction
│   ├── tensor.npz      # Compressed 3D tensor (genes × species × timepoints)
│   ├── genes.csv       # Gene ID mappings and indices
│   ├── species.csv     # Species code mappings
│   ├── timepoints.csv  # Timepoint mappings
│   └── tensor_shapes.json # Tensor dimensions and metadata
├── optimization/        # Hyperparameter optimization results
│   ├── best_params.json    # Optimal rank and L1 penalties
│   ├── top_trials.csv      # Best performing parameter combinations
│   ├── trials.csv          # All optimization trials
│   └── optuna_study.pkl    # Optuna study object
├── fit/                # Model fitting results
│   ├── gene_factors.csv    # Gene factor loadings (A matrix)
│   ├── species_factors.csv # Species factor loadings (B matrix)
│   ├── time_factors.csv    # Time factor loadings (C matrix)
│   ├── loss_history.csv    # Convergence history
│   └── fit_metrics.json    # Model performance metrics
└── export/             # Human-readable results with annotations
    ├── gene_factors_with_ids.csv      # Gene factors with OG identifiers
    ├── species_factors_with_codes.csv # Species factors with species codes
    ├── time_factors_with_labels.csv   # Time factors with timepoint labels
    ├── decomposition_results.json     # Complete results summary
    └── factor_heatmaps.png            # Factor visualization plots</code></pre>
<p>Key output metrics include reconstruction error, explained variance, sparsity levels, and convergence status. The final decomposition identifies latent factors that capture coordinated patterns of gene expression across species and time.</p>
</section>
</section>
<section id="setup" class="level1">
<h1>2 SETUP</h1>
<section id="libraries" class="level2">
<h2 class="anchored" data-anchor-id="libraries">2.1 Libraries</h2>
</section>
<section id="set-r-variables" class="level2">
<h2 class="anchored" data-anchor-id="set-r-variables">2.2 Set R variables</h2>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># OUTPUT DIRECTORY</span></span>
<span id="cb2-2">output_dir <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../output/13.00-multiomics-stdm"</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#INPUT FILE(S)</span></span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># PYTHON ENVIRONMENT - Use the sr320-stdm-02 uv environment</span></span>
<span id="cb2-7">python_path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/shared/16TB_HDD_01/sam/gitrepos/sr320/workflow-stdm-02/sr320-stdm-02-env/bin/python"</span></span></code></pre></div>
</section>
<section id="load-project-python-environment" class="level2">
<h2 class="anchored" data-anchor-id="load-project-python-environment">2.3 Load project Python environment</h2>
<p>The project uses the <code>sr320-stdm-02-env</code> uv virtual environment with the <code>new-tensor</code> package and all required dependencies. If this is successful, the Python path should show the <code>sr320-stdm-02-env</code> environment.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the sr320-stdm-02-env uv environment</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(reticulate)</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set Python path to the sr320-stdm-02-env environment</span></span>
<span id="cb3-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use_python</span>(python_path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">required =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show final configuration</span></span>
<span id="cb3-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">py_config</span>()</span></code></pre></div>
<pre><code>## python:         /home/shared/16TB_HDD_01/sam/gitrepos/sr320/workflow-stdm-02/sr320-stdm-02-env/bin/python
## libpython:      /usr/lib/python3.12/config-3.12-x86_64-linux-gnu/libpython3.12.so
## pythonhome:     /home/shared/16TB_HDD_01/sam/gitrepos/sr320/workflow-stdm-02/sr320-stdm-02-env:/home/shared/16TB_HDD_01/sam/gitrepos/sr320/workflow-stdm-02/sr320-stdm-02-env
## virtualenv:     /home/shared/16TB_HDD_01/sam/gitrepos/sr320/workflow-stdm-02/sr320-stdm-02-env/bin/activate_this.py
## version:        3.12.3 (main, Aug 14 2025, 17:47:21) [GCC 13.3.0]
## numpy:          /home/shared/16TB_HDD_01/sam/gitrepos/sr320/workflow-stdm-02/sr320-stdm-02-env/lib/python3.12/site-packages/numpy
## numpy_version:  2.3.4
## 
## NOTE: Python version was forced by use_python() function</code></pre>
</section>
</section>
<section id="tensor-decomposition-workflow" class="level1">
<h1>3 TENSOR DECOMPOSITION WORKFLOW</h1>
<section id="step-1-build-tensor" class="level2">
<h2 class="anchored" data-anchor-id="step-1-build-tensor">3.1 Step 1: Build Tensor</h2>
<p>Build a 3D tensor from the VST counts matrix with replicate aggregation. The input data is already VST-normalized, so no additional normalization is applied.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> subprocess</span>
<span id="cb5-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define paths</span></span>
<span id="cb5-5">input_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../output/14-pca-orthologs/vst_counts_matrix.csv"</span></span>
<span id="cb5-6">output_base <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.output_dir  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use R variable</span></span>
<span id="cb5-7"></span>
<span id="cb5-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create output directory structure</span></span>
<span id="cb5-9">tensor_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(output_base, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tensor"</span>)</span>
<span id="cb5-10">os.makedirs(tensor_dir, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb5-11"></span>
<span id="cb5-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Build tensor using the new-tensor CLI</span></span>
<span id="cb5-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># All parameters with their values (defaults noted in comments)</span></span>
<span id="cb5-14">cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb5-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/shared/16TB_HDD_01/sam/gitrepos/sr320/workflow-stdm-02/sr320-stdm-02-env/bin/new-tensor"</span>,</span>
<span id="cb5-16">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"build-tensor"</span>,</span>
<span id="cb5-17">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--input-path"</span>, input_file,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Required: path to VST counts matrix</span></span>
<span id="cb5-18">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--output-dir"</span>, tensor_dir,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Custom output directory</span></span>
<span id="cb5-19">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--aggregation-method"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"median"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Default: median (alternatives: mean, trimmed_mean)</span></span>
<span id="cb5-20">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--normalization"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Custom: none (default: zscore; alternatives: minmax, log1p)</span></span>
<span id="cb5-21">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--min-expression"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1.0"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Default: 1.0 (minimum expression threshold)</span></span>
<span id="cb5-22">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--min-variance-percentile"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10.0"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Default: 10.0 (variance percentile threshold)</span></span>
<span id="cb5-23">]</span>
<span id="cb5-24"></span>
<span id="cb5-25"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Building tensor..."</span>)</span>
<span id="cb5-26"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Command: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>join(cmd)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb5-27">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> subprocess.run(cmd, capture_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb5-28"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(result.stdout)</span>
<span id="cb5-29"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result.stderr:</span>
<span id="cb5-30">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Errors/Warnings:"</span>, result.stderr)</span>
<span id="cb5-31"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Tensor saved to: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tensor_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>## Building tensor...
## Command: /home/shared/16TB_HDD_01/sam/gitrepos/sr320/workflow-stdm-02/sr320-stdm-02-env/bin/new-tensor build-tensor --input-path ../output/14-pca-orthologs/vst_counts_matrix.csv --output-dir ../output/13.00-multiomics-stdm/tensor --aggregation-method median --normalization none --min-expression 1.0 --min-variance-percentile 10.0
## 
## Errors/Warnings: INFO:new_tensor.cli:Starting tensor construction
## INFO:new_tensor.io:Loading CSV from ../output/14-pca-orthologs/vst_counts_matrix.csv
## INFO:new_tensor.io:Loaded 9800 genes with 117 samples
## INFO:new_tensor.io:Input data validation completed
## INFO:new_tensor.io:Found species codes: ['ACR', 'POC', 'POR']
## INFO:new_tensor.io:Found timepoints: [1, 2, 3, 4]
## INFO:new_tensor.preprocess:Aggregating replicates using median method
## INFO:new_tensor.preprocess:Aggregated to 12 species-timepoint combinations
## INFO:new_tensor.preprocess:Filtering genes based on expression and variance
## INFO:new_tensor.preprocess:Expression filter: 9800/9800 genes
## INFO:new_tensor.preprocess:Variance filter: 8820/9800 genes
## INFO:new_tensor.preprocess:Combined filter: 8820/9800 genes
## INFO:new_tensor.preprocess:Skipping normalization
## INFO:new_tensor.tensor:Building 3D tensor from aggregated data
## INFO:new_tensor.tensor:Tensor dimensions: 8820 genes × 3 species × 4 timepoints
## INFO:new_tensor.tensor:Tensor density: 105840/105840 non-zero entries
## INFO:new_tensor.utils:Output directory: /home/shared/16TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/M-multi-species/output/13.00-multiomics-stdm/tensor (resolved from ../output/13.00-multiomics-stdm/tensor)
## INFO:new_tensor.tensor:Saved tensor to /home/shared/16TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/M-multi-species/output/13.00-multiomics-stdm/tensor/tensor.npz
## INFO:new_tensor.tensor:Saved tensor mappings to /home/shared/16TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/M-multi-species/output/13.00-multiomics-stdm/tensor
## INFO:new_tensor.cli:Tensor saved to /home/shared/16TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/M-multi-species/output/13.00-multiomics-stdm/tensor
## 
## Tensor saved to: ../output/13.00-multiomics-stdm/tensor</code></pre>
</section>
<section id="step-2-optimize-hyperparameters" class="level2">
<h2 class="anchored" data-anchor-id="step-2-optimize-hyperparameters">3.2 Step 2: Optimize Hyperparameters</h2>
<p>Run hyperparameter optimization using Optuna to find the optimal rank and L1 penalty parameters.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> subprocess</span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb7-3"></span>
<span id="cb7-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define paths</span></span>
<span id="cb7-5">tensor_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(r.output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tensor"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tensor.npz"</span>)</span>
<span id="cb7-6">optimization_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(r.output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"optimization"</span>)</span>
<span id="cb7-7">os.makedirs(optimization_dir, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb7-8"></span>
<span id="cb7-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Optimize hyperparameters using the new-tensor CLI</span></span>
<span id="cb7-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># All parameters with their values (defaults noted in comments)</span></span>
<span id="cb7-11">cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb7-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/shared/16TB_HDD_01/sam/gitrepos/sr320/workflow-stdm-02/sr320-stdm-02-env/bin/new-tensor"</span>,</span>
<span id="cb7-13">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"optimize"</span>,</span>
<span id="cb7-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--tensor-path"</span>, tensor_file,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Required: path to tensor file</span></span>
<span id="cb7-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--output-dir"</span>, optimization_dir,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Custom output directory</span></span>
<span id="cb7-16">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--n-trials"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Default: 100 (number of optimization trials)</span></span>
<span id="cb7-17">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--rank-min"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Custom: 4 (default: 2; minimum rank to try)</span></span>
<span id="cb7-18">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--rank-max"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"30"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Custom: 30 (default: 12; maximum rank to try)</span></span>
<span id="cb7-19">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--lambda-min"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.0001"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Default: 0.0001 (minimum L1 penalty)</span></span>
<span id="cb7-20">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--lambda-max"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1.0"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Default: 1.0 (maximum L1 penalty)</span></span>
<span id="cb7-21">]</span>
<span id="cb7-22"></span>
<span id="cb7-23"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Optimizing hyperparameters..."</span>)</span>
<span id="cb7-24"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Command: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>join(cmd)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb7-25">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> subprocess.run(cmd, capture_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb7-26"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(result.stdout)</span>
<span id="cb7-27"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result.stderr:</span>
<span id="cb7-28">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Errors/Warnings:"</span>, result.stderr)</span>
<span id="cb7-29"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Optimization results saved to: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimization_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb7-30"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Check output/optimization/best_params.json for optimal rank."</span>)</span></code></pre></div>
<pre><code>## Optimizing hyperparameters...
## Command: /home/shared/16TB_HDD_01/sam/gitrepos/sr320/workflow-stdm-02/sr320-stdm-02-env/bin/new-tensor optimize --tensor-path ../output/13.00-multiomics-stdm/tensor/tensor.npz --output-dir ../output/13.00-multiomics-stdm/optimization --n-trials 100 --rank-min 4 --rank-max 30 --lambda-min 0.0001 --lambda-max 1.0
## [I 2025-10-16 08:25:28,056] Trial 0 finished with value: 9.91927074157517 and parameters: {'rank': 14, 'lambda_A': 0.6351221010640696, 'lambda_B': 0.08471801418819976, 'lambda_C': 0.024810409748678097, 'non_negative': True}. Best is trial 0 with value: 9.91927074157517.
## [I 2025-10-16 08:25:28,138] Trial 1 finished with value: 13.40153897664898 and parameters: {'rank': 5, 'lambda_A': 0.29154431891537513, 'lambda_B': 0.02537815508265665, 'lambda_C': 0.06796578090758151, 'non_negative': False}. Best is trial 0 with value: 9.91927074157517.
## [I 2025-10-16 08:25:28,493] Trial 2 finished with value: 37.931969759404275 and parameters: {'rank': 26, 'lambda_A': 0.0007068974950624604, 'lambda_B': 0.000533703276260396, 'lambda_C': 0.0005415244119402539, 'non_negative': False}. Best is trial 0 with value: 9.91927074157517.
## [I 2025-10-16 08:25:28,653] Trial 3 finished with value: 25.08601058074366 and parameters: {'rank': 15, 'lambda_A': 0.0014618962793704966, 'lambda_B': 0.0280163515871626, 'lambda_C': 0.0003613894271216529, 'non_negative': False}. Best is trial 0 with value: 9.91927074157517.
## [I 2025-10-16 08:25:28,867] Trial 4 finished with value: 11.163634949007252 and parameters: {'rank': 16, 'lambda_A': 0.13826232179369857, 'lambda_B': 0.0006290644294586153, 'lambda_C': 0.011400863701127324, 'non_negative': True}. Best is trial 0 with value: 9.91927074157517.
## [I 2025-10-16 08:25:29,138] Trial 5 finished with value: 12.323014419088114 and parameters: {'rank': 20, 'lambda_A': 0.00048094619675015767, 'lambda_B': 0.00018205657658407274, 'lambda_C': 0.6245139574743068, 'non_negative': True}. Best is trial 0 with value: 9.91927074157517.
## [I 2025-10-16 08:25:29,268] Trial 6 finished with value: 21.565007833488547 and parameters: {'rank': 12, 'lambda_A': 0.00024586032763280086, 'lambda_B': 0.054567254856014755, 'lambda_C': 0.005762487216478602, 'non_negative': False}. Best is trial 0 with value: 9.91927074157517.
## [I 2025-10-16 08:25:29,332] Trial 7 finished with value: 12.231858595297059 and parameters: {'rank': 4, 'lambda_A': 0.43379206974909373, 'lambda_B': 0.0010842262717330165, 'lambda_C': 0.04467752817973906, 'non_negative': False}. Best is trial 0 with value: 9.91927074157517.
## [I 2025-10-16 08:25:29,520] Trial 8 finished with value: 7.702411290712876 and parameters: {'rank': 18, 'lambda_A': 0.0005488047000766049, 'lambda_B': 0.755681014127442, 'lambda_C': 0.12604664585649453, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:29,852] Trial 9 finished with value: 30.27767484793075 and parameters: {'rank': 20, 'lambda_A': 0.48696409415208936, 'lambda_B': 0.00022592797420156976, 'lambda_C': 0.0006080390190296605, 'non_negative': False}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:30,245] Trial 10 finished with value: 7.702411290712876 and parameters: {'rank': 29, 'lambda_A': 0.00782184644489916, 'lambda_B': 0.7553503645583184, 'lambda_C': 0.5997863556602815, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:30,625] Trial 11 finished with value: 7.702411290712876 and parameters: {'rank': 28, 'lambda_A': 0.01152597508263691, 'lambda_B': 0.8839094438875608, 'lambda_C': 0.7169219063367045, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:31,126] Trial 12 finished with value: 7.702411290712876 and parameters: {'rank': 30, 'lambda_A': 0.005751707844202112, 'lambda_B': 0.6697376781283138, 'lambda_C': 0.1711941591483064, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:31,381] Trial 13 finished with value: 14.419925492891778 and parameters: {'rank': 24, 'lambda_A': 0.026837193414400193, 'lambda_B': 0.25041198927005687, 'lambda_C': 0.20160609828133647, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:31,489] Trial 14 finished with value: 11.182859773230964 and parameters: {'rank': 9, 'lambda_A': 0.00012748888933395585, 'lambda_B': 0.003265509226695849, 'lambda_C': 0.18781323389598886, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:31,844] Trial 15 finished with value: 10.997196851341496 and parameters: {'rank': 21, 'lambda_A': 0.002507752044857025, 'lambda_B': 0.31327657894882527, 'lambda_C': 0.9057268923024396, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:32,100] Trial 16 finished with value: 14.531369814494486 and parameters: {'rank': 24, 'lambda_A': 0.03303111276278625, 'lambda_B': 0.15574290892508183, 'lambda_C': 0.0025862000456164697, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:32,216] Trial 17 finished with value: 8.860229829229166 and parameters: {'rank': 10, 'lambda_A': 0.003844180704394389, 'lambda_B': 0.012001686164551854, 'lambda_C': 0.2668178233993521, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:32,409] Trial 18 finished with value: 12.330409977605488 and parameters: {'rank': 18, 'lambda_A': 0.06923342300040311, 'lambda_B': 0.004579588598371669, 'lambda_C': 0.07373692003558777, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:32,811] Trial 19 finished with value: 7.702411290712876 and parameters: {'rank': 30, 'lambda_A': 0.011424502475070332, 'lambda_B': 0.7534933229670142, 'lambda_C': 0.00011065136021091021, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:33,060] Trial 20 finished with value: 15.72945212488288 and parameters: {'rank': 23, 'lambda_A': 0.0013978658013325288, 'lambda_B': 0.11072448678802875, 'lambda_C': 0.020860444459961155, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:33,431] Trial 21 finished with value: 7.702411290712876 and parameters: {'rank': 27, 'lambda_A': 0.008686865419501416, 'lambda_B': 0.9552243923232476, 'lambda_C': 0.6178449911287014, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:33,810] Trial 22 finished with value: 14.25441962188506 and parameters: {'rank': 28, 'lambda_A': 0.015216177542255406, 'lambda_B': 0.3682823087479855, 'lambda_C': 0.3641424562421856, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:34,273] Trial 23 finished with value: 11.93470491873419 and parameters: {'rank': 28, 'lambda_A': 0.056105382606156606, 'lambda_B': 0.4471215250907212, 'lambda_C': 0.9918005895525797, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:34,548] Trial 24 finished with value: 14.519596175255312 and parameters: {'rank': 26, 'lambda_A': 0.0006336522743157443, 'lambda_B': 0.17180167160471832, 'lambda_C': 0.09045267503127573, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:34,847] Trial 25 finished with value: 7.702411290712876 and parameters: {'rank': 22, 'lambda_A': 0.0020597175059583485, 'lambda_B': 0.8405753359041572, 'lambda_C': 0.37670819502931896, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:35,040] Trial 26 finished with value: 12.056497791050809 and parameters: {'rank': 18, 'lambda_A': 0.020217288216278686, 'lambda_B': 0.39191606617531327, 'lambda_C': 0.1119876399575546, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:35,446] Trial 27 finished with value: 20.37693747678954 and parameters: {'rank': 30, 'lambda_A': 0.00010800482900554439, 'lambda_B': 0.04251650563590359, 'lambda_C': 0.40277102115563174, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:35,711] Trial 28 finished with value: 14.491912943733603 and parameters: {'rank': 25, 'lambda_A': 0.005913877930777845, 'lambda_B': 0.20015668643827006, 'lambda_C': 0.045718387513843536, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:35,853] Trial 29 finished with value: 12.259785814371917 and parameters: {'rank': 12, 'lambda_A': 0.15059863513309535, 'lambda_B': 0.10337667684888936, 'lambda_C': 0.01557318063896172, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:35,953] Trial 30 finished with value: 11.153448552569126 and parameters: {'rank': 8, 'lambda_A': 0.0003022852418669405, 'lambda_B': 0.08813985910837592, 'lambda_C': 0.005246845012264985, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:36,451] Trial 31 finished with value: 7.702411290712876 and parameters: {'rank': 30, 'lambda_A': 0.004756662549199691, 'lambda_B': 0.6665849665132884, 'lambda_C': 0.17813256299118949, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:36,831] Trial 32 finished with value: 13.937715267904306 and parameters: {'rank': 28, 'lambda_A': 0.008846733308279646, 'lambda_B': 0.5223376281200467, 'lambda_C': 0.03627187721863262, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:37,139] Trial 33 finished with value: 7.702411290712876 and parameters: {'rank': 29, 'lambda_A': 0.0009945556840825593, 'lambda_B': 0.9202694747785678, 'lambda_C': 0.14456187515898158, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:37,497] Trial 34 finished with value: 33.194953037603625 and parameters: {'rank': 26, 'lambda_A': 0.0038364150186191086, 'lambda_B': 0.2888805332344143, 'lambda_C': 0.5624646678532733, 'non_negative': False}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:37,869] Trial 35 finished with value: 11.877868413837776 and parameters: {'rank': 27, 'lambda_A': 0.03381177152383052, 'lambda_B': 0.5063166491716194, 'lambda_C': 0.32039237557244943, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:38,029] Trial 36 finished with value: 23.923016071869945 and parameters: {'rank': 14, 'lambda_A': 0.0027060769111988715, 'lambda_B': 0.02052447999033456, 'lambda_C': 0.108644413749255, 'non_negative': False}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:38,372] Trial 37 finished with value: 14.588777473857384 and parameters: {'rank': 25, 'lambda_A': 0.007398515665034275, 'lambda_B': 0.05698581519024479, 'lambda_C': 0.5651352119267025, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:38,470] Trial 38 finished with value: 11.066703903036125 and parameters: {'rank': 6, 'lambda_A': 0.0014156313951346191, 'lambda_B': 0.19324693679480404, 'lambda_C': 0.945112740519758, 'non_negative': False}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:38,858] Trial 39 finished with value: 7.702411290712876 and parameters: {'rank': 29, 'lambda_A': 0.013918970121871436, 'lambda_B': 0.5945357193954297, 'lambda_C': 0.059077682475768556, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:39,176] Trial 40 finished with value: 30.53716243996929 and parameters: {'rank': 20, 'lambda_A': 0.0004114412157967232, 'lambda_B': 0.12712036134256907, 'lambda_C': 0.23762634780232547, 'non_negative': False}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:39,670] Trial 41 finished with value: 7.702411290712876 and parameters: {'rank': 30, 'lambda_A': 0.01392646946320707, 'lambda_B': 0.6442648339007867, 'lambda_C': 0.0002690793124588626, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:40,063] Trial 42 finished with value: 7.702411290712876 and parameters: {'rank': 29, 'lambda_A': 0.054123079865322186, 'lambda_B': 0.8726317095919451, 'lambda_C': 0.00011458422209579283, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:40,429] Trial 43 finished with value: 12.089143480743413 and parameters: {'rank': 27, 'lambda_A': 0.1160789381682145, 'lambda_B': 0.3516872326378421, 'lambda_C': 0.0012671298290049629, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:40,842] Trial 44 finished with value: 20.0567168822205 and parameters: {'rank': 30, 'lambda_A': 0.02146620338378346, 'lambda_B': 0.2450386714094701, 'lambda_C': 0.00541912112655133, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:41,169] Trial 45 finished with value: 13.891073846313365 and parameters: {'rank': 24, 'lambda_A': 0.011955770427101041, 'lambda_B': 0.5365962012017482, 'lambda_C': 0.0001100002711964987, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:41,337] Trial 46 finished with value: 13.512796900821591 and parameters: {'rank': 15, 'lambda_A': 0.00568207766416622, 'lambda_B': 0.002394739752960539, 'lambda_C': 0.0011983161343563638, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:41,717] Trial 47 finished with value: 14.385280823465715 and parameters: {'rank': 28, 'lambda_A': 0.00019297355872959033, 'lambda_B': 0.287194512068423, 'lambda_C': 0.16492015572273577, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:42,059] Trial 48 finished with value: 14.589433024362094 and parameters: {'rank': 25, 'lambda_A': 0.000987509378450424, 'lambda_B': 0.06361176702246522, 'lambda_C': 0.5108648506283376, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:42,372] Trial 49 finished with value: 7.702411290712876 and parameters: {'rank': 23, 'lambda_A': 0.0031868229082082943, 'lambda_B': 0.7060511236142365, 'lambda_C': 0.031164014938860073, 'non_negative': False}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:42,737] Trial 50 finished with value: 7.702411290712876 and parameters: {'rank': 27, 'lambda_A': 0.03802544950289038, 'lambda_B': 0.9357919338705497, 'lambda_C': 0.008278699652681593, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:43,129] Trial 51 finished with value: 7.702411290712876 and parameters: {'rank': 29, 'lambda_A': 0.9702623759258517, 'lambda_B': 0.9586570849364209, 'lambda_C': 0.6239878027747205, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:43,483] Trial 52 finished with value: 14.125074000503421 and parameters: {'rank': 26, 'lambda_A': 0.009174155038684106, 'lambda_B': 0.4452807932868869, 'lambda_C': 0.26042577783587767, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:43,853] Trial 53 finished with value: 12.31665071272732 and parameters: {'rank': 27, 'lambda_A': 0.022297159364709593, 'lambda_B': 0.000122339319170651, 'lambda_C': 0.6471536851980759, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:44,266] Trial 54 finished with value: 20.437222277814218 and parameters: {'rank': 30, 'lambda_A': 0.002182612028671096, 'lambda_B': 0.0005874957066385832, 'lambda_C': 0.41100944952421026, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:44,646] Trial 55 finished with value: 13.142178900006481 and parameters: {'rank': 28, 'lambda_A': 0.007021601987749822, 'lambda_B': 0.35796282336451163, 'lambda_C': 0.8714440623369312, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:44,851] Trial 56 finished with value: 13.319296686266188 and parameters: {'rank': 19, 'lambda_A': 0.009667039650528148, 'lambda_B': 0.22942468333143828, 'lambda_C': 0.2804858578539912, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:45,087] Trial 57 finished with value: 21.392846473449225 and parameters: {'rank': 22, 'lambda_A': 0.01707569218224427, 'lambda_B': 0.13973419172472296, 'lambda_C': 0.06467991729781217, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:45,481] Trial 58 finished with value: 7.702411290712876 and parameters: {'rank': 29, 'lambda_A': 0.004661306217339234, 'lambda_B': 0.9975375683267106, 'lambda_C': 0.0033101676735387236, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:45,721] Trial 59 finished with value: 14.622532920808695 and parameters: {'rank': 17, 'lambda_A': 0.0017109817788444985, 'lambda_B': 0.0003263906431720573, 'lambda_C': 0.7549679623511959, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:45,857] Trial 60 finished with value: 12.337533866356377 and parameters: {'rank': 12, 'lambda_A': 0.027003696156245052, 'lambda_B': 0.006649150054778909, 'lambda_C': 0.1253442484135517, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:46,146] Trial 61 finished with value: 7.702411290712876 and parameters: {'rank': 21, 'lambda_A': 0.0006849905332388105, 'lambda_B': 0.7013540331395108, 'lambda_C': 0.4213384102686047, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:46,448] Trial 62 finished with value: 20.62820145598854 and parameters: {'rank': 22, 'lambda_A': 0.003282633048173829, 'lambda_B': 0.427426288633542, 'lambda_C': 0.21628459917822768, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:46,800] Trial 63 finished with value: 7.702411290712876 and parameters: {'rank': 26, 'lambda_A': 0.0021215656630557615, 'lambda_B': 0.75456695927985, 'lambda_C': 0.3334078633529735, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:47,284] Trial 64 finished with value: 7.702411290712876 and parameters: {'rank': 28, 'lambda_A': 0.006370834749726971, 'lambda_B': 0.599541030413235, 'lambda_C': 0.5300932950141273, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:47,482] Trial 65 finished with value: 15.22711981069581 and parameters: {'rank': 17, 'lambda_A': 0.000942298453875689, 'lambda_B': 0.4410771584938217, 'lambda_C': 0.019469530041028853, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:47,830] Trial 66 finished with value: 14.313011357733195 and parameters: {'rank': 24, 'lambda_A': 0.010810636813485226, 'lambda_B': 0.32755286741446893, 'lambda_C': 0.3913170623642701, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:48,260] Trial 67 finished with value: 7.702411290712876 and parameters: {'rank': 30, 'lambda_A': 0.0047062523582045625, 'lambda_B': 0.770160260950635, 'lambda_C': 0.09247248408398182, 'non_negative': False}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:48,566] Trial 68 finished with value: 11.855945615730572 and parameters: {'rank': 27, 'lambda_A': 0.00794321899943011, 'lambda_B': 0.5205414779314799, 'lambda_C': 0.1866251326237264, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:48,840] Trial 69 finished with value: 12.295637474963636 and parameters: {'rank': 19, 'lambda_A': 0.017818969878239704, 'lambda_B': 0.03355514389935884, 'lambda_C': 0.7255937916240696, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:49,167] Trial 70 finished with value: 15.826208209385412 and parameters: {'rank': 29, 'lambda_A': 0.00020576736449091554, 'lambda_B': 0.01649091002559682, 'lambda_C': 0.0002767469804937398, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:49,690] Trial 71 finished with value: 7.702411290712876 and parameters: {'rank': 30, 'lambda_A': 0.004682374878204598, 'lambda_B': 0.6848942691611007, 'lambda_C': 0.1458748266820725, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:50,108] Trial 72 finished with value: 15.80105990989417 and parameters: {'rank': 29, 'lambda_A': 0.0004173787186088282, 'lambda_B': 0.0011529544120358283, 'lambda_C': 0.4742058117389902, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:50,632] Trial 73 finished with value: 7.702411290712876 and parameters: {'rank': 30, 'lambda_A': 0.01212198336015896, 'lambda_B': 0.5924770559489551, 'lambda_C': 0.32004671210870145, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:50,936] Trial 74 finished with value: 12.234489727409514 and parameters: {'rank': 27, 'lambda_A': 0.003924637870491414, 'lambda_B': 0.18137310874128393, 'lambda_C': 0.20975580042571393, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:51,428] Trial 75 finished with value: 13.2527783451824 and parameters: {'rank': 28, 'lambda_A': 0.0017514230152006144, 'lambda_B': 0.25331041899224466, 'lambda_C': 0.9605941196159318, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:51,838] Trial 76 finished with value: 7.702411290712876 and parameters: {'rank': 23, 'lambda_A': 0.005735743712639571, 'lambda_B': 0.8095296729776793, 'lambda_C': 0.2543165733907181, 'non_negative': False}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:52,122] Trial 77 finished with value: 14.261155851513632 and parameters: {'rank': 25, 'lambda_A': 0.0027745736834864977, 'lambda_B': 0.37998859145228436, 'lambda_C': 0.047375789114311624, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:52,334] Trial 78 finished with value: 7.702411290712876 and parameters: {'rank': 14, 'lambda_A': 0.007562650866769657, 'lambda_B': 0.9846421914280261, 'lambda_C': 0.0811825818579365, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:52,660] Trial 79 finished with value: 13.964210118071469 and parameters: {'rank': 29, 'lambda_A': 0.013490008791369214, 'lambda_B': 0.5122101209088451, 'lambda_C': 0.11556257048473018, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:52,952] Trial 80 finished with value: 14.366274363446834 and parameters: {'rank': 26, 'lambda_A': 0.042057896376429385, 'lambda_B': 0.3028040815760118, 'lambda_C': 0.0004927029354670193, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:53,266] Trial 81 finished with value: 7.702411290712876 and parameters: {'rank': 28, 'lambda_A': 0.0010935490191139527, 'lambda_B': 0.7752882360303991, 'lambda_C': 0.1615221981850723, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:53,699] Trial 82 finished with value: 7.702411290712876 and parameters: {'rank': 30, 'lambda_A': 0.0008765424797641972, 'lambda_B': 0.6442067905338374, 'lambda_C': 0.33613658026806575, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:54,028] Trial 83 finished with value: 7.702411290712876 and parameters: {'rank': 29, 'lambda_A': 0.0005001692734654153, 'lambda_B': 0.9927996049673214, 'lambda_C': 0.72743611174937, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:54,434] Trial 84 finished with value: 14.070882233802486 and parameters: {'rank': 28, 'lambda_A': 0.0002911864727091217, 'lambda_B': 0.4735026543908035, 'lambda_C': 0.14476478145613322, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:54,765] Trial 85 finished with value: 7.702411290712876 and parameters: {'rank': 29, 'lambda_A': 0.001252971421324456, 'lambda_B': 0.5901916555236231, 'lambda_C': 0.01043457001669746, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:55,199] Trial 86 finished with value: 19.616375858762346 and parameters: {'rank': 30, 'lambda_A': 0.0099869267603346, 'lambda_B': 0.39529748670369264, 'lambda_C': 0.5002682365106321, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:55,598] Trial 87 finished with value: 7.702411290712876 and parameters: {'rank': 27, 'lambda_A': 0.002090721593835961, 'lambda_B': 0.7984899767324513, 'lambda_C': 0.054377972391540935, 'non_negative': False}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:55,890] Trial 88 finished with value: 14.4071153194797 and parameters: {'rank': 26, 'lambda_A': 0.003464074934463693, 'lambda_B': 0.27806734931552274, 'lambda_C': 0.0012517500026353228, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:56,315] Trial 89 finished with value: 15.592048468109 and parameters: {'rank': 29, 'lambda_A': 0.026412565821738447, 'lambda_B': 0.21677956747590799, 'lambda_C': 0.09377005702439416, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:56,601] Trial 90 finished with value: 7.702411290712876 and parameters: {'rank': 25, 'lambda_A': 0.0008016365396662871, 'lambda_B': 0.811341733881362, 'lambda_C': 0.18713778689838095, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:57,138] Trial 91 finished with value: 18.992804982151714 and parameters: {'rank': 30, 'lambda_A': 0.016003528709477955, 'lambda_B': 0.5444384031724905, 'lambda_C': 0.03640258529267616, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:57,539] Trial 92 finished with value: 7.702411290712876 and parameters: {'rank': 28, 'lambda_A': 0.0056218209168558755, 'lambda_B': 0.6366110826933181, 'lambda_C': 0.0632980719116021, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:57,940] Trial 93 finished with value: 12.02210808803982 and parameters: {'rank': 27, 'lambda_A': 0.0005068952575351023, 'lambda_B': 0.4160601423928182, 'lambda_C': 0.2888571735494726, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:58,353] Trial 94 finished with value: 7.702411290712876 and parameters: {'rank': 29, 'lambda_A': 0.00814758013913939, 'lambda_B': 0.8435594946569757, 'lambda_C': 0.00013978122483368087, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:58,753] Trial 95 finished with value: 7.702411290712876 and parameters: {'rank': 28, 'lambda_A': 0.01235337242848547, 'lambda_B': 0.9854879445406823, 'lambda_C': 0.0018337432308381811, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:59,280] Trial 96 finished with value: 7.702411290712876 and parameters: {'rank': 30, 'lambda_A': 0.004309557114685113, 'lambda_B': 0.6164066994882925, 'lambda_C': 0.11409480914141784, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:59,707] Trial 97 finished with value: 15.405266708083769 and parameters: {'rank': 29, 'lambda_A': 0.0015994631526042925, 'lambda_B': 0.3327026145566166, 'lambda_C': 0.4309146009765499, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:25:59,998] Trial 98 finished with value: 10.864846727267931 and parameters: {'rank': 16, 'lambda_A': 0.0027865119502672887, 'lambda_B': 0.47634398324957056, 'lambda_C': 0.6053103536005864, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## [I 2025-10-16 08:26:00,270] Trial 99 finished with value: 7.702411290712876 and parameters: {'rank': 19, 'lambda_A': 0.018556489315822426, 'lambda_B': 0.7190810423979014, 'lambda_C': 0.22679695624884716, 'non_negative': True}. Best is trial 8 with value: 7.702411290712876.
## Errors/Warnings: INFO:new_tensor.cli:Starting hyperparameter optimization
## INFO:new_tensor.tensor:Loaded tensor from ../output/13.00-multiomics-stdm/tensor/tensor.npz with shape (8820, 3, 4)
## INFO:new_tensor.optimize:Starting hyperparameter optimization with 100 trials
## [I 2025-10-16 08:25:27,879] A new study created in memory with name: cp_optimization
## 
##   0%|          | 0/100 [00:00&lt;?, ?it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=14
## INFO:new_tensor.model:L1 penalties: λ_A=0.6351221010640696, λ_B=0.08471801418819976, λ_C=0.024810409748678097
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.15s
## INFO:new_tensor.model:Final metrics: R²=0.0182, sparsity_A=0.8571
## 
##                                        
## 
##   0%|          | 0/100 [00:00&lt;?, ?it/s]
## Best trial: 0. Best value: 9.91927:   0%|          | 0/100 [00:00&lt;?, ?it/s]
## Best trial: 0. Best value: 9.91927:   1%|          | 1/100 [00:00&lt;00:17,  5.74it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=5
## INFO:new_tensor.model:L1 penalties: λ_A=0.29154431891537513, λ_B=0.02537815508265665, λ_C=0.06796578090758151
## INFO:new_tensor.model:Non-negative: False
## INFO:new_tensor.model:CP decomposition completed in 0.07s
## INFO:new_tensor.model:Final metrics: R²=0.0496, sparsity_A=0.0000
## 
##                                                                                    
## 
## Best trial: 0. Best value: 9.91927:   1%|          | 1/100 [00:00&lt;00:17,  5.74it/s]
## Best trial: 0. Best value: 9.91927:   1%|          | 1/100 [00:00&lt;00:17,  5.74it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=26
## INFO:new_tensor.model:L1 penalties: λ_A=0.0007068974950624604, λ_B=0.000533703276260396, λ_C=0.0005415244119402539
## INFO:new_tensor.model:Non-negative: False
## INFO:new_tensor.model:CP decomposition completed in 0.32s
## INFO:new_tensor.model:Final metrics: R²=0.2595, sparsity_A=0.0000
## 
##                                                                                    
## 
## Best trial: 0. Best value: 9.91927:   2%|▏         | 2/100 [00:00&lt;00:17,  5.74it/s]
## Best trial: 0. Best value: 9.91927:   2%|▏         | 2/100 [00:00&lt;00:17,  5.74it/s]
## Best trial: 0. Best value: 9.91927:   3%|▎         | 3/100 [00:00&lt;00:20,  4.82it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=15
## INFO:new_tensor.model:L1 penalties: λ_A=0.0014618962793704966, λ_B=0.0280163515871626, λ_C=0.0003613894271216529
## INFO:new_tensor.model:Non-negative: False
## INFO:new_tensor.model:CP decomposition completed in 0.14s
## INFO:new_tensor.model:Final metrics: R²=0.1521, sparsity_A=0.0000
## 
##                                                                                    
## 
## Best trial: 0. Best value: 9.91927:   3%|▎         | 3/100 [00:00&lt;00:20,  4.82it/s]
## Best trial: 0. Best value: 9.91927:   3%|▎         | 3/100 [00:00&lt;00:20,  4.82it/s]
## Best trial: 0. Best value: 9.91927:   4%|▍         | 4/100 [00:00&lt;00:18,  5.24it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=16
## INFO:new_tensor.model:L1 penalties: λ_A=0.13826232179369857, λ_B=0.0006290644294586153, λ_C=0.011400863701127324
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.19s
## INFO:new_tensor.model:Final metrics: R²=0.0312, sparsity_A=0.8125
## 
##                                                                                    
## 
## Best trial: 0. Best value: 9.91927:   4%|▍         | 4/100 [00:00&lt;00:18,  5.24it/s]
## Best trial: 0. Best value: 9.91927:   4%|▍         | 4/100 [00:00&lt;00:18,  5.24it/s]
## Best trial: 0. Best value: 9.91927:   5%|▌         | 5/100 [00:00&lt;00:18,  5.04it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=20
## INFO:new_tensor.model:L1 penalties: λ_A=0.00048094619675015767, λ_B=0.00018205657658407274, λ_C=0.6245139574743068
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.25s
## INFO:new_tensor.model:Final metrics: R²=0.0411, sparsity_A=0.8000
## 
##                                                                                    
## 
## Best trial: 0. Best value: 9.91927:   5%|▌         | 5/100 [00:01&lt;00:18,  5.04it/s]
## Best trial: 0. Best value: 9.91927:   5%|▌         | 5/100 [00:01&lt;00:18,  5.04it/s]
## Best trial: 0. Best value: 9.91927:   6%|▌         | 6/100 [00:01&lt;00:20,  4.51it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=12
## INFO:new_tensor.model:L1 penalties: λ_A=0.00024586032763280086, λ_B=0.054567254856014755, λ_C=0.005762487216478602
## INFO:new_tensor.model:Non-negative: False
## INFO:new_tensor.model:CP decomposition completed in 0.11s
## INFO:new_tensor.model:Final metrics: R²=0.1207, sparsity_A=0.0000
## 
##                                                                                    
## 
## Best trial: 0. Best value: 9.91927:   6%|▌         | 6/100 [00:01&lt;00:20,  4.51it/s]
## Best trial: 0. Best value: 9.91927:   6%|▌         | 6/100 [00:01&lt;00:20,  4.51it/s]
## Best trial: 0. Best value: 9.91927:   7%|▋         | 7/100 [00:01&lt;00:17,  5.18it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=4
## INFO:new_tensor.model:L1 penalties: λ_A=0.43379206974909373, λ_B=0.0010842262717330165, λ_C=0.04467752817973906
## INFO:new_tensor.model:Non-negative: False
## INFO:new_tensor.model:CP decomposition completed in 0.05s
## INFO:new_tensor.model:Final metrics: R²=0.0393, sparsity_A=0.0000
## 
##                                                                                    
## 
## Best trial: 0. Best value: 9.91927:   7%|▋         | 7/100 [00:01&lt;00:17,  5.18it/s]
## Best trial: 0. Best value: 9.91927:   7%|▋         | 7/100 [00:01&lt;00:17,  5.18it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=18
## INFO:new_tensor.model:L1 penalties: λ_A=0.0005488047000766049, λ_B=0.755681014127442, λ_C=0.12604664585649453
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.17s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                    
## 
## Best trial: 0. Best value: 9.91927:   8%|▊         | 8/100 [00:01&lt;00:17,  5.18it/s]
## Best trial: 8. Best value: 7.70241:   8%|▊         | 8/100 [00:01&lt;00:17,  5.18it/s]
## Best trial: 8. Best value: 7.70241:   9%|▉         | 9/100 [00:01&lt;00:14,  6.20it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=20
## INFO:new_tensor.model:L1 penalties: λ_A=0.48696409415208936, λ_B=0.00022592797420156976, λ_C=0.0006080390190296605
## INFO:new_tensor.model:Non-negative: False
## INFO:new_tensor.model:CP decomposition completed in 0.31s
## INFO:new_tensor.model:Final metrics: R²=0.1873, sparsity_A=0.0000
## 
##                                                                                    
## 
## Best trial: 8. Best value: 7.70241:   9%|▉         | 9/100 [00:01&lt;00:14,  6.20it/s]
## Best trial: 8. Best value: 7.70241:   9%|▉         | 9/100 [00:01&lt;00:14,  6.20it/s]
## Best trial: 8. Best value: 7.70241:  10%|█         | 10/100 [00:01&lt;00:18,  4.89it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=29
## INFO:new_tensor.model:L1 penalties: λ_A=0.00782184644489916, λ_B=0.7553503645583184, λ_C=0.5997863556602815
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.35s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  10%|█         | 10/100 [00:02&lt;00:18,  4.89it/s]
## Best trial: 8. Best value: 7.70241:  10%|█         | 10/100 [00:02&lt;00:18,  4.89it/s]
## Best trial: 8. Best value: 7.70241:  11%|█         | 11/100 [00:02&lt;00:22,  3.93it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=28
## INFO:new_tensor.model:L1 penalties: λ_A=0.01152597508263691, λ_B=0.8839094438875608, λ_C=0.7169219063367045
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.34s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  11%|█         | 11/100 [00:02&lt;00:22,  3.93it/s]
## Best trial: 8. Best value: 7.70241:  11%|█         | 11/100 [00:02&lt;00:22,  3.93it/s]
## Best trial: 8. Best value: 7.70241:  12%|█▏        | 12/100 [00:02&lt;00:25,  3.46it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=30
## INFO:new_tensor.model:L1 penalties: λ_A=0.005751707844202112, λ_B=0.6697376781283138, λ_C=0.1711941591483064
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.46s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  12%|█▏        | 12/100 [00:03&lt;00:25,  3.46it/s]
## Best trial: 8. Best value: 7.70241:  12%|█▏        | 12/100 [00:03&lt;00:25,  3.46it/s]
## Best trial: 8. Best value: 7.70241:  13%|█▎        | 13/100 [00:03&lt;00:30,  2.87it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=24
## INFO:new_tensor.model:L1 penalties: λ_A=0.026837193414400193, λ_B=0.25041198927005687, λ_C=0.20160609828133647
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.22s
## INFO:new_tensor.model:Final metrics: R²=0.0518, sparsity_A=0.7500
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  13%|█▎        | 13/100 [00:03&lt;00:30,  2.87it/s]
## Best trial: 8. Best value: 7.70241:  13%|█▎        | 13/100 [00:03&lt;00:30,  2.87it/s]
## Best trial: 8. Best value: 7.70241:  14%|█▍        | 14/100 [00:03&lt;00:27,  3.11it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=9
## INFO:new_tensor.model:L1 penalties: λ_A=0.00012748888933395585, λ_B=0.003265509226695849, λ_C=0.18781323389598886
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.08s
## INFO:new_tensor.model:Final metrics: R²=0.0316, sparsity_A=0.6667
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  14%|█▍        | 14/100 [00:03&lt;00:27,  3.11it/s]
## Best trial: 8. Best value: 7.70241:  14%|█▍        | 14/100 [00:03&lt;00:27,  3.11it/s]
## Best trial: 8. Best value: 7.70241:  15%|█▌        | 15/100 [00:03&lt;00:22,  3.85it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=21
## INFO:new_tensor.model:L1 penalties: λ_A=0.002507752044857025, λ_B=0.31327657894882527, λ_C=0.9057268923024396
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.32s
## INFO:new_tensor.model:Final metrics: R²=0.0230, sparsity_A=0.8571
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  15%|█▌        | 15/100 [00:03&lt;00:22,  3.85it/s]
## Best trial: 8. Best value: 7.70241:  15%|█▌        | 15/100 [00:03&lt;00:22,  3.85it/s]
## Best trial: 8. Best value: 7.70241:  16%|█▌        | 16/100 [00:03&lt;00:24,  3.48it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=24
## INFO:new_tensor.model:L1 penalties: λ_A=0.03303111276278625, λ_B=0.15574290892508183, λ_C=0.0025862000456164697
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.22s
## INFO:new_tensor.model:Final metrics: R²=0.0569, sparsity_A=0.7500
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  16%|█▌        | 16/100 [00:04&lt;00:24,  3.48it/s]
## Best trial: 8. Best value: 7.70241:  16%|█▌        | 16/100 [00:04&lt;00:24,  3.48it/s]
## Best trial: 8. Best value: 7.70241:  17%|█▋        | 17/100 [00:04&lt;00:23,  3.59it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=10
## INFO:new_tensor.model:L1 penalties: λ_A=0.003844180704394389, λ_B=0.012001686164551854, λ_C=0.2668178233993521
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.09s
## INFO:new_tensor.model:Final metrics: R²=0.0105, sparsity_A=0.9000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  17%|█▋        | 17/100 [00:04&lt;00:23,  3.59it/s]
## Best trial: 8. Best value: 7.70241:  17%|█▋        | 17/100 [00:04&lt;00:23,  3.59it/s]
## Best trial: 8. Best value: 7.70241:  18%|█▊        | 18/100 [00:04&lt;00:18,  4.34it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=18
## INFO:new_tensor.model:L1 penalties: λ_A=0.06923342300040311, λ_B=0.004579588598371669, λ_C=0.07373692003558777
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.16s
## INFO:new_tensor.model:Final metrics: R²=0.0418, sparsity_A=0.7778
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  18%|█▊        | 18/100 [00:04&lt;00:18,  4.34it/s]
## Best trial: 8. Best value: 7.70241:  18%|█▊        | 18/100 [00:04&lt;00:18,  4.34it/s]
## Best trial: 8. Best value: 7.70241:  19%|█▉        | 19/100 [00:04&lt;00:17,  4.57it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=30
## INFO:new_tensor.model:L1 penalties: λ_A=0.011424502475070332, λ_B=0.7534933229670142, λ_C=0.00011065136021091021
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.36s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  19%|█▉        | 19/100 [00:04&lt;00:17,  4.57it/s]
## Best trial: 8. Best value: 7.70241:  19%|█▉        | 19/100 [00:04&lt;00:17,  4.57it/s]
## Best trial: 8. Best value: 7.70241:  20%|██        | 20/100 [00:04&lt;00:21,  3.65it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=23
## INFO:new_tensor.model:L1 penalties: λ_A=0.0013978658013325288, λ_B=0.11072448678802875, λ_C=0.020860444459961155
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.21s
## INFO:new_tensor.model:Final metrics: R²=0.0687, sparsity_A=0.6957
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  20%|██        | 20/100 [00:05&lt;00:21,  3.65it/s]
## Best trial: 8. Best value: 7.70241:  20%|██        | 20/100 [00:05&lt;00:21,  3.65it/s]
## Best trial: 8. Best value: 7.70241:  21%|██        | 21/100 [00:05&lt;00:21,  3.76it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=27
## INFO:new_tensor.model:L1 penalties: λ_A=0.008686865419501416, λ_B=0.9552243923232476, λ_C=0.6178449911287014
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.33s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  21%|██        | 21/100 [00:05&lt;00:21,  3.76it/s]
## Best trial: 8. Best value: 7.70241:  21%|██        | 21/100 [00:05&lt;00:21,  3.76it/s]
## Best trial: 8. Best value: 7.70241:  22%|██▏       | 22/100 [00:05&lt;00:23,  3.36it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=28
## INFO:new_tensor.model:L1 penalties: λ_A=0.015216177542255406, λ_B=0.3682823087479855, λ_C=0.3641424562421856
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.34s
## INFO:new_tensor.model:Final metrics: R²=0.0441, sparsity_A=0.7857
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  22%|██▏       | 22/100 [00:05&lt;00:23,  3.36it/s]
## Best trial: 8. Best value: 7.70241:  22%|██▏       | 22/100 [00:05&lt;00:23,  3.36it/s]
## Best trial: 8. Best value: 7.70241:  23%|██▎       | 23/100 [00:05&lt;00:24,  3.11it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=28
## INFO:new_tensor.model:L1 penalties: λ_A=0.056105382606156606, λ_B=0.4471215250907212, λ_C=0.9918005895525797
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.42s
## INFO:new_tensor.model:Final metrics: R²=0.0234, sparsity_A=0.8571
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  23%|██▎       | 23/100 [00:06&lt;00:24,  3.11it/s]
## Best trial: 8. Best value: 7.70241:  23%|██▎       | 23/100 [00:06&lt;00:24,  3.11it/s]
## Best trial: 8. Best value: 7.70241:  24%|██▍       | 24/100 [00:06&lt;00:27,  2.74it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=26
## INFO:new_tensor.model:L1 penalties: λ_A=0.0006336522743157443, λ_B=0.17180167160471832, λ_C=0.09045267503127573
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.24s
## INFO:new_tensor.model:Final metrics: R²=0.0562, sparsity_A=0.7692
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  24%|██▍       | 24/100 [00:06&lt;00:27,  2.74it/s]
## Best trial: 8. Best value: 7.70241:  24%|██▍       | 24/100 [00:06&lt;00:27,  2.74it/s]
## Best trial: 8. Best value: 7.70241:  25%|██▌       | 25/100 [00:06&lt;00:25,  2.96it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=22
## INFO:new_tensor.model:L1 penalties: λ_A=0.0020597175059583485, λ_B=0.8405753359041572, λ_C=0.37670819502931896
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.26s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  25%|██▌       | 25/100 [00:06&lt;00:25,  2.96it/s]
## Best trial: 8. Best value: 7.70241:  25%|██▌       | 25/100 [00:06&lt;00:25,  2.96it/s]
## Best trial: 8. Best value: 7.70241:  26%|██▌       | 26/100 [00:06&lt;00:24,  3.07it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=18
## INFO:new_tensor.model:L1 penalties: λ_A=0.020217288216278686, λ_B=0.39191606617531327, λ_C=0.1119876399575546
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.16s
## INFO:new_tensor.model:Final metrics: R²=0.0289, sparsity_A=0.7778
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  26%|██▌       | 26/100 [00:07&lt;00:24,  3.07it/s]
## Best trial: 8. Best value: 7.70241:  26%|██▌       | 26/100 [00:07&lt;00:24,  3.07it/s]
## Best trial: 8. Best value: 7.70241:  27%|██▋       | 27/100 [00:07&lt;00:20,  3.49it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=30
## INFO:new_tensor.model:L1 penalties: λ_A=0.00010800482900554439, λ_B=0.04251650563590359, λ_C=0.40277102115563174
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.37s
## INFO:new_tensor.model:Final metrics: R²=0.1095, sparsity_A=0.6333
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  27%|██▋       | 27/100 [00:07&lt;00:20,  3.49it/s]
## Best trial: 8. Best value: 7.70241:  27%|██▋       | 27/100 [00:07&lt;00:20,  3.49it/s]
## Best trial: 8. Best value: 7.70241:  28%|██▊       | 28/100 [00:07&lt;00:23,  3.10it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=25
## INFO:new_tensor.model:L1 penalties: λ_A=0.005913877930777845, λ_B=0.20015668643827006, λ_C=0.045718387513843536
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.23s
## INFO:new_tensor.model:Final metrics: R²=0.0550, sparsity_A=0.7600
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  28%|██▊       | 28/100 [00:07&lt;00:23,  3.10it/s]
## Best trial: 8. Best value: 7.70241:  28%|██▊       | 28/100 [00:07&lt;00:23,  3.10it/s]
## Best trial: 8. Best value: 7.70241:  29%|██▉       | 29/100 [00:07&lt;00:21,  3.28it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=12
## INFO:new_tensor.model:L1 penalties: λ_A=0.15059863513309535, λ_B=0.10337667684888936, λ_C=0.01557318063896172
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.11s
## INFO:new_tensor.model:Final metrics: R²=0.0389, sparsity_A=0.6667
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  29%|██▉       | 29/100 [00:07&lt;00:21,  3.28it/s]
## Best trial: 8. Best value: 7.70241:  29%|██▉       | 29/100 [00:07&lt;00:21,  3.28it/s]
## Best trial: 8. Best value: 7.70241:  30%|███       | 30/100 [00:07&lt;00:17,  3.90it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=8
## INFO:new_tensor.model:L1 penalties: λ_A=0.0003022852418669405, λ_B=0.08813985910837592, λ_C=0.005246845012264985
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.07s
## INFO:new_tensor.model:Final metrics: R²=0.0303, sparsity_A=0.6250
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  30%|███       | 30/100 [00:08&lt;00:17,  3.90it/s]
## Best trial: 8. Best value: 7.70241:  30%|███       | 30/100 [00:08&lt;00:17,  3.90it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=30
## INFO:new_tensor.model:L1 penalties: λ_A=0.004756662549199691, λ_B=0.6665849665132884, λ_C=0.17813256299118949
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.46s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  31%|███       | 31/100 [00:08&lt;00:17,  3.90it/s]
## Best trial: 8. Best value: 7.70241:  31%|███       | 31/100 [00:08&lt;00:17,  3.90it/s]
## Best trial: 8. Best value: 7.70241:  32%|███▏      | 32/100 [00:08&lt;00:18,  3.63it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=28
## INFO:new_tensor.model:L1 penalties: λ_A=0.008846733308279646, λ_B=0.5223376281200467, λ_C=0.03627187721863262
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.34s
## INFO:new_tensor.model:Final metrics: R²=0.0294, sparsity_A=0.7857
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  32%|███▏      | 32/100 [00:08&lt;00:18,  3.63it/s]
## Best trial: 8. Best value: 7.70241:  32%|███▏      | 32/100 [00:08&lt;00:18,  3.63it/s]
## Best trial: 8. Best value: 7.70241:  33%|███▎      | 33/100 [00:08&lt;00:20,  3.31it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=29
## INFO:new_tensor.model:L1 penalties: λ_A=0.0009945556840825593, λ_B=0.9202694747785678, λ_C=0.14456187515898158
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.27s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  33%|███▎      | 33/100 [00:09&lt;00:20,  3.31it/s]
## Best trial: 8. Best value: 7.70241:  33%|███▎      | 33/100 [00:09&lt;00:20,  3.31it/s]
## Best trial: 8. Best value: 7.70241:  34%|███▍      | 34/100 [00:09&lt;00:20,  3.30it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=26
## INFO:new_tensor.model:L1 penalties: λ_A=0.0038364150186191086, λ_B=0.2888805332344143, λ_C=0.5624646678532733
## INFO:new_tensor.model:Non-negative: False
## INFO:new_tensor.model:CP decomposition completed in 0.32s
## INFO:new_tensor.model:Final metrics: R²=0.1796, sparsity_A=0.1154
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  34%|███▍      | 34/100 [00:09&lt;00:20,  3.30it/s]
## Best trial: 8. Best value: 7.70241:  34%|███▍      | 34/100 [00:09&lt;00:20,  3.30it/s]
## Best trial: 8. Best value: 7.70241:  35%|███▌      | 35/100 [00:09&lt;00:20,  3.14it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=27
## INFO:new_tensor.model:L1 penalties: λ_A=0.03381177152383052, λ_B=0.5063166491716194, λ_C=0.32039237557244943
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.33s
## INFO:new_tensor.model:Final metrics: R²=0.0206, sparsity_A=0.8519
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  35%|███▌      | 35/100 [00:09&lt;00:20,  3.14it/s]
## Best trial: 8. Best value: 7.70241:  35%|███▌      | 35/100 [00:09&lt;00:20,  3.14it/s]
## Best trial: 8. Best value: 7.70241:  36%|███▌      | 36/100 [00:09&lt;00:21,  3.00it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=14
## INFO:new_tensor.model:L1 penalties: λ_A=0.0027060769111988715, λ_B=0.02052447999033456, λ_C=0.108644413749255
## INFO:new_tensor.model:Non-negative: False
## INFO:new_tensor.model:CP decomposition completed in 0.13s
## INFO:new_tensor.model:Final metrics: R²=0.1422, sparsity_A=0.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  36%|███▌      | 36/100 [00:10&lt;00:21,  3.00it/s]
## Best trial: 8. Best value: 7.70241:  36%|███▌      | 36/100 [00:10&lt;00:21,  3.00it/s]
## Best trial: 8. Best value: 7.70241:  37%|███▋      | 37/100 [00:10&lt;00:17,  3.52it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=25
## INFO:new_tensor.model:L1 penalties: λ_A=0.007398515665034275, λ_B=0.05698581519024479, λ_C=0.5651352119267025
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.31s
## INFO:new_tensor.model:Final metrics: R²=0.0594, sparsity_A=0.7600
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  37%|███▋      | 37/100 [00:10&lt;00:17,  3.52it/s]
## Best trial: 8. Best value: 7.70241:  37%|███▋      | 37/100 [00:10&lt;00:17,  3.52it/s]
## Best trial: 8. Best value: 7.70241:  38%|███▊      | 38/100 [00:10&lt;00:18,  3.32it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=6
## INFO:new_tensor.model:L1 penalties: λ_A=0.0014156313951346191, λ_B=0.19324693679480404, λ_C=0.945112740519758
## INFO:new_tensor.model:Non-negative: False
## INFO:new_tensor.model:CP decomposition completed in 0.07s
## INFO:new_tensor.model:Final metrics: R²=0.0263, sparsity_A=0.5000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  38%|███▊      | 38/100 [00:10&lt;00:18,  3.32it/s]
## Best trial: 8. Best value: 7.70241:  38%|███▊      | 38/100 [00:10&lt;00:18,  3.32it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=29
## INFO:new_tensor.model:L1 penalties: λ_A=0.013918970121871436, λ_B=0.5945357193954297, λ_C=0.059077682475768556
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.35s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  39%|███▉      | 39/100 [00:10&lt;00:18,  3.32it/s]
## Best trial: 8. Best value: 7.70241:  39%|███▉      | 39/100 [00:10&lt;00:18,  3.32it/s]
## Best trial: 8. Best value: 7.70241:  40%|████      | 40/100 [00:10&lt;00:16,  3.64it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=20
## INFO:new_tensor.model:L1 penalties: λ_A=0.0004114412157967232, λ_B=0.12712036134256907, λ_C=0.23762634780232547
## INFO:new_tensor.model:Non-negative: False
## INFO:new_tensor.model:CP decomposition completed in 0.28s
## INFO:new_tensor.model:Final metrics: R²=0.1855, sparsity_A=0.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  40%|████      | 40/100 [00:11&lt;00:16,  3.64it/s]
## Best trial: 8. Best value: 7.70241:  40%|████      | 40/100 [00:11&lt;00:16,  3.64it/s]
## Best trial: 8. Best value: 7.70241:  41%|████      | 41/100 [00:11&lt;00:16,  3.51it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=30
## INFO:new_tensor.model:L1 penalties: λ_A=0.01392646946320707, λ_B=0.6442648339007867, λ_C=0.0002690793124588626
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.45s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  41%|████      | 41/100 [00:11&lt;00:16,  3.51it/s]
## Best trial: 8. Best value: 7.70241:  41%|████      | 41/100 [00:11&lt;00:16,  3.51it/s]
## Best trial: 8. Best value: 7.70241:  42%|████▏     | 42/100 [00:11&lt;00:19,  2.95it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=29
## INFO:new_tensor.model:L1 penalties: λ_A=0.054123079865322186, λ_B=0.8726317095919451, λ_C=0.00011458422209579283
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.35s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  42%|████▏     | 42/100 [00:12&lt;00:19,  2.95it/s]
## Best trial: 8. Best value: 7.70241:  42%|████▏     | 42/100 [00:12&lt;00:19,  2.95it/s]
## Best trial: 8. Best value: 7.70241:  43%|████▎     | 43/100 [00:12&lt;00:20,  2.83it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=27
## INFO:new_tensor.model:L1 penalties: λ_A=0.1160789381682145, λ_B=0.3516872326378421, λ_C=0.0012671298290049629
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.33s
## INFO:new_tensor.model:Final metrics: R²=0.0307, sparsity_A=0.8519
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  43%|████▎     | 43/100 [00:12&lt;00:20,  2.83it/s]
## Best trial: 8. Best value: 7.70241:  43%|████▎     | 43/100 [00:12&lt;00:20,  2.83it/s]
## Best trial: 8. Best value: 7.70241:  44%|████▍     | 44/100 [00:12&lt;00:20,  2.80it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=30
## INFO:new_tensor.model:L1 penalties: λ_A=0.02146620338378346, λ_B=0.2450386714094701, λ_C=0.00541912112655133
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.37s
## INFO:new_tensor.model:Final metrics: R²=0.0956, sparsity_A=0.6333
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  44%|████▍     | 44/100 [00:12&lt;00:20,  2.80it/s]
## Best trial: 8. Best value: 7.70241:  44%|████▍     | 44/100 [00:12&lt;00:20,  2.80it/s]
## Best trial: 8. Best value: 7.70241:  45%|████▌     | 45/100 [00:12&lt;00:20,  2.68it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=24
## INFO:new_tensor.model:L1 penalties: λ_A=0.011955770427101041, λ_B=0.5365962012017482, λ_C=0.0001100002711964987
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.29s
## INFO:new_tensor.model:Final metrics: R²=0.0272, sparsity_A=0.7500
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  45%|████▌     | 45/100 [00:13&lt;00:20,  2.68it/s]
## Best trial: 8. Best value: 7.70241:  45%|████▌     | 45/100 [00:13&lt;00:20,  2.68it/s]
## Best trial: 8. Best value: 7.70241:  46%|████▌     | 46/100 [00:13&lt;00:19,  2.78it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=15
## INFO:new_tensor.model:L1 penalties: λ_A=0.00568207766416622, λ_B=0.002394739752960539, λ_C=0.0011983161343563638
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.14s
## INFO:new_tensor.model:Final metrics: R²=0.0529, sparsity_A=0.6667
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  46%|████▌     | 46/100 [00:13&lt;00:19,  2.78it/s]
## Best trial: 8. Best value: 7.70241:  46%|████▌     | 46/100 [00:13&lt;00:19,  2.78it/s]
## Best trial: 8. Best value: 7.70241:  47%|████▋     | 47/100 [00:13&lt;00:16,  3.29it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=28
## INFO:new_tensor.model:L1 penalties: λ_A=0.00019297355872959033, λ_B=0.287194512068423, λ_C=0.16492015572273577
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.34s
## INFO:new_tensor.model:Final metrics: R²=0.0501, sparsity_A=0.7857
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  47%|████▋     | 47/100 [00:13&lt;00:16,  3.29it/s]
## Best trial: 8. Best value: 7.70241:  47%|████▋     | 47/100 [00:13&lt;00:16,  3.29it/s]
## Best trial: 8. Best value: 7.70241:  48%|████▊     | 48/100 [00:13&lt;00:16,  3.07it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=25
## INFO:new_tensor.model:L1 penalties: λ_A=0.000987509378450424, λ_B=0.06361176702246522, λ_C=0.5108648506283376
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.30s
## INFO:new_tensor.model:Final metrics: R²=0.0594, sparsity_A=0.7600
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  48%|████▊     | 48/100 [00:14&lt;00:16,  3.07it/s]
## Best trial: 8. Best value: 7.70241:  48%|████▊     | 48/100 [00:14&lt;00:16,  3.07it/s]
## Best trial: 8. Best value: 7.70241:  49%|████▉     | 49/100 [00:14&lt;00:16,  3.02it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=23
## INFO:new_tensor.model:L1 penalties: λ_A=0.0031868229082082943, λ_B=0.7060511236142365, λ_C=0.031164014938860073
## INFO:new_tensor.model:Non-negative: False
## INFO:new_tensor.model:CP decomposition completed in 0.28s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  49%|████▉     | 49/100 [00:14&lt;00:16,  3.02it/s]
## Best trial: 8. Best value: 7.70241:  49%|████▉     | 49/100 [00:14&lt;00:16,  3.02it/s]
## Best trial: 8. Best value: 7.70241:  50%|█████     | 50/100 [00:14&lt;00:16,  3.07it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=27
## INFO:new_tensor.model:L1 penalties: λ_A=0.03802544950289038, λ_B=0.9357919338705497, λ_C=0.008278699652681593
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.33s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  50%|█████     | 50/100 [00:14&lt;00:16,  3.07it/s]
## Best trial: 8. Best value: 7.70241:  50%|█████     | 50/100 [00:14&lt;00:16,  3.07it/s]
## Best trial: 8. Best value: 7.70241:  51%|█████     | 51/100 [00:14&lt;00:16,  2.96it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=29
## INFO:new_tensor.model:L1 penalties: λ_A=0.9702623759258517, λ_B=0.9586570849364209, λ_C=0.6239878027747205
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.35s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  51%|█████     | 51/100 [00:15&lt;00:16,  2.96it/s]
## Best trial: 8. Best value: 7.70241:  51%|█████     | 51/100 [00:15&lt;00:16,  2.96it/s]
## Best trial: 8. Best value: 7.70241:  52%|█████▏    | 52/100 [00:15&lt;00:16,  2.83it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=26
## INFO:new_tensor.model:L1 penalties: λ_A=0.009174155038684106, λ_B=0.4452807932868869, λ_C=0.26042577783587767
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.31s
## INFO:new_tensor.model:Final metrics: R²=0.0382, sparsity_A=0.7692
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  52%|█████▏    | 52/100 [00:15&lt;00:16,  2.83it/s]
## Best trial: 8. Best value: 7.70241:  52%|█████▏    | 52/100 [00:15&lt;00:16,  2.83it/s]
## Best trial: 8. Best value: 7.70241:  53%|█████▎    | 53/100 [00:15&lt;00:16,  2.83it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=27
## INFO:new_tensor.model:L1 penalties: λ_A=0.022297159364709593, λ_B=0.000122339319170651, λ_C=0.6471536851980759
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.33s
## INFO:new_tensor.model:Final metrics: R²=0.0409, sparsity_A=0.8519
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  53%|█████▎    | 53/100 [00:15&lt;00:16,  2.83it/s]
## Best trial: 8. Best value: 7.70241:  53%|█████▎    | 53/100 [00:15&lt;00:16,  2.83it/s]
## Best trial: 8. Best value: 7.70241:  54%|█████▍    | 54/100 [00:15&lt;00:16,  2.79it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=30
## INFO:new_tensor.model:L1 penalties: λ_A=0.002182612028671096, λ_B=0.0005874957066385832, λ_C=0.41100944952421026
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.37s
## INFO:new_tensor.model:Final metrics: R²=0.1122, sparsity_A=0.6333
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  54%|█████▍    | 54/100 [00:16&lt;00:16,  2.79it/s]
## Best trial: 8. Best value: 7.70241:  54%|█████▍    | 54/100 [00:16&lt;00:16,  2.79it/s]
## Best trial: 8. Best value: 7.70241:  55%|█████▌    | 55/100 [00:16&lt;00:16,  2.67it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=28
## INFO:new_tensor.model:L1 penalties: λ_A=0.007021601987749822, λ_B=0.35796282336451163, λ_C=0.8714440623369312
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.34s
## INFO:new_tensor.model:Final metrics: R²=0.0359, sparsity_A=0.8214
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  55%|█████▌    | 55/100 [00:16&lt;00:16,  2.67it/s]
## Best trial: 8. Best value: 7.70241:  55%|█████▌    | 55/100 [00:16&lt;00:16,  2.67it/s]
## Best trial: 8. Best value: 7.70241:  56%|█████▌    | 56/100 [00:16&lt;00:16,  2.66it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=19
## INFO:new_tensor.model:L1 penalties: λ_A=0.009667039650528148, λ_B=0.22942468333143828, λ_C=0.2804858578539912
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.17s
## INFO:new_tensor.model:Final metrics: R²=0.0440, sparsity_A=0.7368
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  56%|█████▌    | 56/100 [00:16&lt;00:16,  2.66it/s]
## Best trial: 8. Best value: 7.70241:  56%|█████▌    | 56/100 [00:16&lt;00:16,  2.66it/s]
## Best trial: 8. Best value: 7.70241:  57%|█████▋    | 57/100 [00:16&lt;00:13,  3.08it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=22
## INFO:new_tensor.model:L1 penalties: λ_A=0.01707569218224427, λ_B=0.13973419172472296, λ_C=0.06467991729781217
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.20s
## INFO:new_tensor.model:Final metrics: R²=0.1134, sparsity_A=0.4545
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  57%|█████▋    | 57/100 [00:17&lt;00:13,  3.08it/s]
## Best trial: 8. Best value: 7.70241:  57%|█████▋    | 57/100 [00:17&lt;00:13,  3.08it/s]
## Best trial: 8. Best value: 7.70241:  58%|█████▊    | 58/100 [00:17&lt;00:12,  3.35it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=29
## INFO:new_tensor.model:L1 penalties: λ_A=0.004661306217339234, λ_B=0.9975375683267106, λ_C=0.0033101676735387236
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.35s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  58%|█████▊    | 58/100 [00:17&lt;00:12,  3.35it/s]
## Best trial: 8. Best value: 7.70241:  58%|█████▊    | 58/100 [00:17&lt;00:12,  3.35it/s]
## Best trial: 8. Best value: 7.70241:  59%|█████▉    | 59/100 [00:17&lt;00:13,  3.06it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=17
## INFO:new_tensor.model:L1 penalties: λ_A=0.0017109817788444985, λ_B=0.0003263906431720573, λ_C=0.7549679623511959
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.21s
## INFO:new_tensor.model:Final metrics: R²=0.0609, sparsity_A=0.6471
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  59%|█████▉    | 59/100 [00:17&lt;00:13,  3.06it/s]
## Best trial: 8. Best value: 7.70241:  59%|█████▉    | 59/100 [00:17&lt;00:13,  3.06it/s]
## Best trial: 8. Best value: 7.70241:  60%|██████    | 60/100 [00:17&lt;00:12,  3.32it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=12
## INFO:new_tensor.model:L1 penalties: λ_A=0.027003696156245052, λ_B=0.006649150054778909, λ_C=0.1253442484135517
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.11s
## INFO:new_tensor.model:Final metrics: R²=0.0419, sparsity_A=0.6667
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  60%|██████    | 60/100 [00:17&lt;00:12,  3.32it/s]
## Best trial: 8. Best value: 7.70241:  60%|██████    | 60/100 [00:17&lt;00:12,  3.32it/s]
## Best trial: 8. Best value: 7.70241:  61%|██████    | 61/100 [00:17&lt;00:09,  3.98it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=21
## INFO:new_tensor.model:L1 penalties: λ_A=0.0006849905332388105, λ_B=0.7013540331395108, λ_C=0.4213384102686047
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.25s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  61%|██████    | 61/100 [00:18&lt;00:09,  3.98it/s]
## Best trial: 8. Best value: 7.70241:  61%|██████    | 61/100 [00:18&lt;00:09,  3.98it/s]
## Best trial: 8. Best value: 7.70241:  62%|██████▏   | 62/100 [00:18&lt;00:09,  3.81it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=22
## INFO:new_tensor.model:L1 penalties: λ_A=0.003282633048173829, λ_B=0.427426288633542, λ_C=0.21628459917822768
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.27s
## INFO:new_tensor.model:Final metrics: R²=0.0792, sparsity_A=0.4545
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  62%|██████▏   | 62/100 [00:18&lt;00:09,  3.81it/s]
## Best trial: 8. Best value: 7.70241:  62%|██████▏   | 62/100 [00:18&lt;00:09,  3.81it/s]
## Best trial: 8. Best value: 7.70241:  63%|██████▎   | 63/100 [00:18&lt;00:10,  3.64it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=26
## INFO:new_tensor.model:L1 penalties: λ_A=0.0021215656630557615, λ_B=0.75456695927985, λ_C=0.3334078633529735
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.31s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  63%|██████▎   | 63/100 [00:18&lt;00:10,  3.64it/s]
## Best trial: 8. Best value: 7.70241:  63%|██████▎   | 63/100 [00:18&lt;00:10,  3.64it/s]
## Best trial: 8. Best value: 7.70241:  64%|██████▍   | 64/100 [00:18&lt;00:10,  3.36it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=28
## INFO:new_tensor.model:L1 penalties: λ_A=0.006370834749726971, λ_B=0.599541030413235, λ_C=0.5300932950141273
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.44s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  64%|██████▍   | 64/100 [00:19&lt;00:10,  3.36it/s]
## Best trial: 8. Best value: 7.70241:  64%|██████▍   | 64/100 [00:19&lt;00:10,  3.36it/s]
## Best trial: 8. Best value: 7.70241:  65%|██████▌   | 65/100 [00:19&lt;00:12,  2.83it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=17
## INFO:new_tensor.model:L1 penalties: λ_A=0.000942298453875689, λ_B=0.4410771584938217, λ_C=0.019469530041028853
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.16s
## INFO:new_tensor.model:Final metrics: R²=0.0459, sparsity_A=0.5882
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  65%|██████▌   | 65/100 [00:19&lt;00:12,  2.83it/s]
## Best trial: 8. Best value: 7.70241:  65%|██████▌   | 65/100 [00:19&lt;00:12,  2.83it/s]
## Best trial: 8. Best value: 7.70241:  66%|██████▌   | 66/100 [00:19&lt;00:10,  3.26it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=24
## INFO:new_tensor.model:L1 penalties: λ_A=0.010810636813485226, λ_B=0.32755286741446893, λ_C=0.3913170623642701
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.31s
## INFO:new_tensor.model:Final metrics: R²=0.0468, sparsity_A=0.7500
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  66%|██████▌   | 66/100 [00:19&lt;00:10,  3.26it/s]
## Best trial: 8. Best value: 7.70241:  66%|██████▌   | 66/100 [00:19&lt;00:10,  3.26it/s]
## Best trial: 8. Best value: 7.70241:  67%|██████▋   | 67/100 [00:19&lt;00:10,  3.13it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=30
## INFO:new_tensor.model:L1 penalties: λ_A=0.0047062523582045625, λ_B=0.770160260950635, λ_C=0.09247248408398182
## INFO:new_tensor.model:Non-negative: False
## INFO:new_tensor.model:CP decomposition completed in 0.39s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  67%|██████▋   | 67/100 [00:20&lt;00:10,  3.13it/s]
## Best trial: 8. Best value: 7.70241:  67%|██████▋   | 67/100 [00:20&lt;00:10,  3.13it/s]
## Best trial: 8. Best value: 7.70241:  68%|██████▊   | 68/100 [00:20&lt;00:11,  2.84it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=27
## INFO:new_tensor.model:L1 penalties: λ_A=0.00794321899943011, λ_B=0.5205414779314799, λ_C=0.1866251326237264
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.26s
## INFO:new_tensor.model:Final metrics: R²=0.0195, sparsity_A=0.8519
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  68%|██████▊   | 68/100 [00:20&lt;00:11,  2.84it/s]
## Best trial: 8. Best value: 7.70241:  68%|██████▊   | 68/100 [00:20&lt;00:11,  2.84it/s]
## Best trial: 8. Best value: 7.70241:  69%|██████▉   | 69/100 [00:20&lt;00:10,  2.95it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=19
## INFO:new_tensor.model:L1 penalties: λ_A=0.017818969878239704, λ_B=0.03355514389935884, λ_C=0.7255937916240696
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.24s
## INFO:new_tensor.model:Final metrics: R²=0.0399, sparsity_A=0.7895
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  69%|██████▉   | 69/100 [00:20&lt;00:10,  2.95it/s]
## Best trial: 8. Best value: 7.70241:  69%|██████▉   | 69/100 [00:20&lt;00:10,  2.95it/s]
## Best trial: 8. Best value: 7.70241:  70%|███████   | 70/100 [00:20&lt;00:09,  3.13it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=29
## INFO:new_tensor.model:L1 penalties: λ_A=0.00020576736449091554, λ_B=0.01649091002559682, λ_C=0.0002767469804937398
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.28s
## INFO:new_tensor.model:Final metrics: R²=0.0731, sparsity_A=0.7586
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  70%|███████   | 70/100 [00:21&lt;00:09,  3.13it/s]
## Best trial: 8. Best value: 7.70241:  70%|███████   | 70/100 [00:21&lt;00:09,  3.13it/s]
## Best trial: 8. Best value: 7.70241:  71%|███████   | 71/100 [00:21&lt;00:09,  3.11it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=30
## INFO:new_tensor.model:L1 penalties: λ_A=0.004682374878204598, λ_B=0.6848942691611007, λ_C=0.1458748266820725
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.48s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  71%|███████   | 71/100 [00:21&lt;00:09,  3.11it/s]
## Best trial: 8. Best value: 7.70241:  71%|███████   | 71/100 [00:21&lt;00:09,  3.11it/s]
## Best trial: 8. Best value: 7.70241:  72%|███████▏  | 72/100 [00:21&lt;00:10,  2.62it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=29
## INFO:new_tensor.model:L1 penalties: λ_A=0.0004173787186088282, λ_B=0.0011529544120358283, λ_C=0.4742058117389902
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.37s
## INFO:new_tensor.model:Final metrics: R²=0.0719, sparsity_A=0.7586
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  72%|███████▏  | 72/100 [00:22&lt;00:10,  2.62it/s]
## Best trial: 8. Best value: 7.70241:  72%|███████▏  | 72/100 [00:22&lt;00:10,  2.62it/s]
## Best trial: 8. Best value: 7.70241:  73%|███████▎  | 73/100 [00:22&lt;00:10,  2.55it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=30
## INFO:new_tensor.model:L1 penalties: λ_A=0.01212198336015896, λ_B=0.5924770559489551, λ_C=0.32004671210870145
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.48s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  73%|███████▎  | 73/100 [00:22&lt;00:10,  2.55it/s]
## Best trial: 8. Best value: 7.70241:  73%|███████▎  | 73/100 [00:22&lt;00:10,  2.55it/s]
## Best trial: 8. Best value: 7.70241:  74%|███████▍  | 74/100 [00:22&lt;00:11,  2.31it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=27
## INFO:new_tensor.model:L1 penalties: λ_A=0.003924637870491414, λ_B=0.18137310874128393, λ_C=0.20975580042571393
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.26s
## INFO:new_tensor.model:Final metrics: R²=0.0371, sparsity_A=0.8519
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  74%|███████▍  | 74/100 [00:23&lt;00:11,  2.31it/s]
## Best trial: 8. Best value: 7.70241:  74%|███████▍  | 74/100 [00:23&lt;00:11,  2.31it/s]
## Best trial: 8. Best value: 7.70241:  75%|███████▌  | 75/100 [00:23&lt;00:09,  2.54it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=28
## INFO:new_tensor.model:L1 penalties: λ_A=0.0017514230152006144, λ_B=0.25331041899224466, λ_C=0.9605941196159318
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.45s
## INFO:new_tensor.model:Final metrics: R²=0.0410, sparsity_A=0.8214
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  75%|███████▌  | 75/100 [00:23&lt;00:09,  2.54it/s]
## Best trial: 8. Best value: 7.70241:  75%|███████▌  | 75/100 [00:23&lt;00:09,  2.54it/s]
## Best trial: 8. Best value: 7.70241:  76%|███████▌  | 76/100 [00:23&lt;00:10,  2.36it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=23
## INFO:new_tensor.model:L1 penalties: λ_A=0.005735743712639571, λ_B=0.8095296729776793, λ_C=0.2543165733907181
## INFO:new_tensor.model:Non-negative: False
## INFO:new_tensor.model:CP decomposition completed in 0.37s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  76%|███████▌  | 76/100 [00:23&lt;00:10,  2.36it/s]
## Best trial: 8. Best value: 7.70241:  76%|███████▌  | 76/100 [00:23&lt;00:10,  2.36it/s]
## Best trial: 8. Best value: 7.70241:  77%|███████▋  | 77/100 [00:23&lt;00:09,  2.39it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=25
## INFO:new_tensor.model:L1 penalties: λ_A=0.0027745736834864977, λ_B=0.37998859145228436, λ_C=0.047375789114311624
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.25s
## INFO:new_tensor.model:Final metrics: R²=0.0444, sparsity_A=0.7600
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  77%|███████▋  | 77/100 [00:24&lt;00:09,  2.39it/s]
## Best trial: 8. Best value: 7.70241:  77%|███████▋  | 77/100 [00:24&lt;00:09,  2.39it/s]
## Best trial: 8. Best value: 7.70241:  78%|███████▊  | 78/100 [00:24&lt;00:08,  2.64it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=14
## INFO:new_tensor.model:L1 penalties: λ_A=0.007562650866769657, λ_B=0.9846421914280261, λ_C=0.0811825818579365
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.18s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  78%|███████▊  | 78/100 [00:24&lt;00:08,  2.64it/s]
## Best trial: 8. Best value: 7.70241:  78%|███████▊  | 78/100 [00:24&lt;00:08,  2.64it/s]
## Best trial: 8. Best value: 7.70241:  79%|███████▉  | 79/100 [00:24&lt;00:06,  3.04it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=29
## INFO:new_tensor.model:L1 penalties: λ_A=0.013490008791369214, λ_B=0.5122101209088451, λ_C=0.11556257048473018
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.28s
## INFO:new_tensor.model:Final metrics: R²=0.0307, sparsity_A=0.7931
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  79%|███████▉  | 79/100 [00:24&lt;00:06,  3.04it/s]
## Best trial: 8. Best value: 7.70241:  79%|███████▉  | 79/100 [00:24&lt;00:06,  3.04it/s]
## Best trial: 8. Best value: 7.70241:  80%|████████  | 80/100 [00:24&lt;00:06,  3.05it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=26
## INFO:new_tensor.model:L1 penalties: λ_A=0.042057896376429385, λ_B=0.3028040815760118, λ_C=0.0004927029354670193
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.25s
## INFO:new_tensor.model:Final metrics: R²=0.0494, sparsity_A=0.7692
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  80%|████████  | 80/100 [00:25&lt;00:06,  3.05it/s]
## Best trial: 8. Best value: 7.70241:  80%|████████  | 80/100 [00:25&lt;00:06,  3.05it/s]
## Best trial: 8. Best value: 7.70241:  81%|████████  | 81/100 [00:25&lt;00:06,  3.15it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=28
## INFO:new_tensor.model:L1 penalties: λ_A=0.0010935490191139527, λ_B=0.7752882360303991, λ_C=0.1615221981850723
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.27s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  81%|████████  | 81/100 [00:25&lt;00:06,  3.15it/s]
## Best trial: 8. Best value: 7.70241:  81%|████████  | 81/100 [00:25&lt;00:06,  3.15it/s]
## Best trial: 8. Best value: 7.70241:  82%|████████▏ | 82/100 [00:25&lt;00:05,  3.16it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=30
## INFO:new_tensor.model:L1 penalties: λ_A=0.0008765424797641972, λ_B=0.6442067905338374, λ_C=0.33613658026806575
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.39s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  82%|████████▏ | 82/100 [00:25&lt;00:05,  3.16it/s]
## Best trial: 8. Best value: 7.70241:  82%|████████▏ | 82/100 [00:25&lt;00:05,  3.16it/s]
## Best trial: 8. Best value: 7.70241:  83%|████████▎ | 83/100 [00:25&lt;00:05,  2.85it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=29
## INFO:new_tensor.model:L1 penalties: λ_A=0.0005001692734654153, λ_B=0.9927996049673214, λ_C=0.72743611174937
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.29s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  83%|████████▎ | 83/100 [00:26&lt;00:05,  2.85it/s]
## Best trial: 8. Best value: 7.70241:  83%|████████▎ | 83/100 [00:26&lt;00:05,  2.85it/s]
## Best trial: 8. Best value: 7.70241:  84%|████████▍ | 84/100 [00:26&lt;00:05,  2.90it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=28
## INFO:new_tensor.model:L1 penalties: λ_A=0.0002911864727091217, λ_B=0.4735026543908035, λ_C=0.14476478145613322
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.36s
## INFO:new_tensor.model:Final metrics: R²=0.0356, sparsity_A=0.7857
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  84%|████████▍ | 84/100 [00:26&lt;00:05,  2.90it/s]
## Best trial: 8. Best value: 7.70241:  84%|████████▍ | 84/100 [00:26&lt;00:05,  2.90it/s]
## Best trial: 8. Best value: 7.70241:  85%|████████▌ | 85/100 [00:26&lt;00:05,  2.75it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=29
## INFO:new_tensor.model:L1 penalties: λ_A=0.001252971421324456, λ_B=0.5901916555236231, λ_C=0.01043457001669746
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.29s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  85%|████████▌ | 85/100 [00:26&lt;00:05,  2.75it/s]
## Best trial: 8. Best value: 7.70241:  85%|████████▌ | 85/100 [00:26&lt;00:05,  2.75it/s]
## Best trial: 8. Best value: 7.70241:  86%|████████▌ | 86/100 [00:26&lt;00:04,  2.83it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=30
## INFO:new_tensor.model:L1 penalties: λ_A=0.0099869267603346, λ_B=0.39529748670369264, λ_C=0.5002682365106321
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.39s
## INFO:new_tensor.model:Final metrics: R²=0.0757, sparsity_A=0.6333
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  86%|████████▌ | 86/100 [00:27&lt;00:04,  2.83it/s]
## Best trial: 8. Best value: 7.70241:  86%|████████▌ | 86/100 [00:27&lt;00:04,  2.83it/s]
## Best trial: 8. Best value: 7.70241:  87%|████████▋ | 87/100 [00:27&lt;00:04,  2.65it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=27
## INFO:new_tensor.model:L1 penalties: λ_A=0.002090721593835961, λ_B=0.7984899767324513, λ_C=0.054377972391540935
## INFO:new_tensor.model:Non-negative: False
## INFO:new_tensor.model:CP decomposition completed in 0.36s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  87%|████████▋ | 87/100 [00:27&lt;00:04,  2.65it/s]
## Best trial: 8. Best value: 7.70241:  87%|████████▋ | 87/100 [00:27&lt;00:04,  2.65it/s]
## Best trial: 8. Best value: 7.70241:  88%|████████▊ | 88/100 [00:27&lt;00:04,  2.60it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=26
## INFO:new_tensor.model:L1 penalties: λ_A=0.003464074934463693, λ_B=0.27806734931552274, λ_C=0.0012517500026353228
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.25s
## INFO:new_tensor.model:Final metrics: R²=0.0511, sparsity_A=0.7692
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  88%|████████▊ | 88/100 [00:28&lt;00:04,  2.60it/s]
## Best trial: 8. Best value: 7.70241:  88%|████████▊ | 88/100 [00:28&lt;00:04,  2.60it/s]
## Best trial: 8. Best value: 7.70241:  89%|████████▉ | 89/100 [00:28&lt;00:03,  2.81it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=29
## INFO:new_tensor.model:L1 penalties: λ_A=0.026412565821738447, λ_B=0.21677956747590799, λ_C=0.09377005702439416
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.38s
## INFO:new_tensor.model:Final metrics: R²=0.0627, sparsity_A=0.7586
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  89%|████████▉ | 89/100 [00:28&lt;00:03,  2.81it/s]
## Best trial: 8. Best value: 7.70241:  89%|████████▉ | 89/100 [00:28&lt;00:03,  2.81it/s]
## Best trial: 8. Best value: 7.70241:  90%|█████████ | 90/100 [00:28&lt;00:03,  2.65it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=25
## INFO:new_tensor.model:L1 penalties: λ_A=0.0008016365396662871, λ_B=0.811341733881362, λ_C=0.18713778689838095
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.24s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  90%|█████████ | 90/100 [00:28&lt;00:03,  2.65it/s]
## Best trial: 8. Best value: 7.70241:  90%|█████████ | 90/100 [00:28&lt;00:03,  2.65it/s]
## Best trial: 8. Best value: 7.70241:  91%|█████████ | 91/100 [00:28&lt;00:03,  2.86it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=30
## INFO:new_tensor.model:L1 penalties: λ_A=0.016003528709477955, λ_B=0.5444384031724905, λ_C=0.03640258529267616
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.49s
## INFO:new_tensor.model:Final metrics: R²=0.0468, sparsity_A=0.6333
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  91%|█████████ | 91/100 [00:29&lt;00:03,  2.86it/s]
## Best trial: 8. Best value: 7.70241:  91%|█████████ | 91/100 [00:29&lt;00:03,  2.86it/s]
## Best trial: 8. Best value: 7.70241:  92%|█████████▏| 92/100 [00:29&lt;00:03,  2.46it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=28
## INFO:new_tensor.model:L1 penalties: λ_A=0.0056218209168558755, λ_B=0.6366110826933181, λ_C=0.0632980719116021
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.36s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  92%|█████████▏| 92/100 [00:29&lt;00:03,  2.46it/s]
## Best trial: 8. Best value: 7.70241:  92%|█████████▏| 92/100 [00:29&lt;00:03,  2.46it/s]
## Best trial: 8. Best value: 7.70241:  93%|█████████▎| 93/100 [00:29&lt;00:02,  2.47it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=27
## INFO:new_tensor.model:L1 penalties: λ_A=0.0005068952575351023, λ_B=0.4160601423928182, λ_C=0.2888571735494726
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.35s
## INFO:new_tensor.model:Final metrics: R²=0.0273, sparsity_A=0.8519
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  93%|█████████▎| 93/100 [00:30&lt;00:02,  2.47it/s]
## Best trial: 8. Best value: 7.70241:  93%|█████████▎| 93/100 [00:30&lt;00:02,  2.47it/s]
## Best trial: 8. Best value: 7.70241:  94%|█████████▍| 94/100 [00:30&lt;00:02,  2.48it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=29
## INFO:new_tensor.model:L1 penalties: λ_A=0.00814758013913939, λ_B=0.8435594946569757, λ_C=0.00013978122483368087
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.37s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  94%|█████████▍| 94/100 [00:30&lt;00:02,  2.48it/s]
## Best trial: 8. Best value: 7.70241:  94%|█████████▍| 94/100 [00:30&lt;00:02,  2.48it/s]
## Best trial: 8. Best value: 7.70241:  95%|█████████▌| 95/100 [00:30&lt;00:02,  2.46it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=28
## INFO:new_tensor.model:L1 penalties: λ_A=0.01235337242848547, λ_B=0.9854879445406823, λ_C=0.0018337432308381811
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.36s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  95%|█████████▌| 95/100 [00:30&lt;00:02,  2.46it/s]
## Best trial: 8. Best value: 7.70241:  95%|█████████▌| 95/100 [00:30&lt;00:02,  2.46it/s]
## Best trial: 8. Best value: 7.70241:  96%|█████████▌| 96/100 [00:30&lt;00:01,  2.47it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=30
## INFO:new_tensor.model:L1 penalties: λ_A=0.004309557114685113, λ_B=0.6164066994882925, λ_C=0.11409480914141784
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.47s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  96%|█████████▌| 96/100 [00:31&lt;00:01,  2.47it/s]
## Best trial: 8. Best value: 7.70241:  96%|█████████▌| 96/100 [00:31&lt;00:01,  2.47it/s]
## Best trial: 8. Best value: 7.70241:  97%|█████████▋| 97/100 [00:31&lt;00:01,  2.27it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=29
## INFO:new_tensor.model:L1 penalties: λ_A=0.0015994631526042925, λ_B=0.3327026145566166, λ_C=0.4309146009765499
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.38s
## INFO:new_tensor.model:Final metrics: R²=0.0540, sparsity_A=0.7586
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  97%|█████████▋| 97/100 [00:31&lt;00:01,  2.27it/s]
## Best trial: 8. Best value: 7.70241:  97%|█████████▋| 97/100 [00:31&lt;00:01,  2.27it/s]
## Best trial: 8. Best value: 7.70241:  98%|█████████▊| 98/100 [00:31&lt;00:00,  2.29it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=16
## INFO:new_tensor.model:L1 penalties: λ_A=0.0027865119502672887, λ_B=0.47634398324957056, λ_C=0.6053103536005864
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.26s
## INFO:new_tensor.model:Final metrics: R²=0.0169, sparsity_A=0.8125
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  98%|█████████▊| 98/100 [00:32&lt;00:00,  2.29it/s]
## Best trial: 8. Best value: 7.70241:  98%|█████████▊| 98/100 [00:32&lt;00:00,  2.29it/s]
## Best trial: 8. Best value: 7.70241:  99%|█████████▉| 99/100 [00:32&lt;00:00,  2.54it/s]INFO:new_tensor.model:Fitting sparse CP decomposition with rank=19
## INFO:new_tensor.model:L1 penalties: λ_A=0.018556489315822426, λ_B=0.7190810423979014, λ_C=0.22679695624884716
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:CP decomposition completed in 0.24s
## INFO:new_tensor.model:Final metrics: R²=0.0000, sparsity_A=1.0000
## 
##                                                                                     
## 
## Best trial: 8. Best value: 7.70241:  99%|█████████▉| 99/100 [00:32&lt;00:00,  2.54it/s]
## Best trial: 8. Best value: 7.70241:  99%|█████████▉| 99/100 [00:32&lt;00:00,  2.54it/s]
## Best trial: 8. Best value: 7.70241: 100%|██████████| 100/100 [00:32&lt;00:00,  2.80it/s]
## Best trial: 8. Best value: 7.70241: 100%|██████████| 100/100 [00:32&lt;00:00,  3.09it/s]
## INFO:new_tensor.optimize:Best parameters: rank=18, λ_A=0.000549, λ_B=0.755681, λ_C=0.126047
## INFO:new_tensor.utils:Output directory: /home/shared/16TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/M-multi-species/output/13.00-multiomics-stdm/optimization (resolved from ../output/13.00-multiomics-stdm/optimization)
## INFO:new_tensor.optimize:Saved optimization results to /home/shared/16TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/M-multi-species/output/13.00-multiomics-stdm/optimization
## INFO:new_tensor.cli:Optimization results saved to /home/shared/16TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/M-multi-species/output/13.00-multiomics-stdm/optimization
## 
## Optimization results saved to: ../output/13.00-multiomics-stdm/optimization
## 
## Check output/optimization/best_params.json for optimal rank.</code></pre>
</section>
<section id="step-3-review-optimization-results" class="level2">
<h2 class="anchored" data-anchor-id="step-3-review-optimization-results">3.3 Step 3: Review Optimization Results</h2>
<p>Load and display the best hyperparameters found during optimization.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb9-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb9-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb9-4"></span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load best parameters</span></span>
<span id="cb9-6">best_params_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(r.output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"optimization"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"best_params.json"</span>)</span>
<span id="cb9-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(best_params_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb9-8">    best_params <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb9-9"></span>
<span id="cb9-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Best Hyperparameters:"</span>)</span>
<span id="cb9-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(json.dumps(best_params, indent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb9-12"></span>
<span id="cb9-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load top trials</span></span>
<span id="cb9-14">top_trials_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(r.output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"optimization"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"top_trials.csv"</span>)</span>
<span id="cb9-15"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(top_trials_file):</span>
<span id="cb9-16">    top_trials <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(top_trials_file)</span>
<span id="cb9-17">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Top 10 Trials:"</span>)</span>
<span id="cb9-18">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(top_trials.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span></code></pre></div>
<pre><code>## Best Hyperparameters:
## {
##   "rank": 18,
##   "lambda_A": 0.0005488047000766049,
##   "lambda_B": 0.755681014127442,
##   "lambda_C": 0.12604664585649453,
##   "non_negative": true,
##   "best_value": 7.702411290712876,
##   "explained_variance": 0.0,
##   "sparsity_A": 1.0,
##   "sparsity_B": 1.0,
##   "sparsity_C": 1.0
## }
## 
## 
## Top 10 Trials:
##    trial  rank  lambda_A  ...  sparsity_A  sparsity_B  sparsity_C
## 0     12    30  0.005752  ...         1.0         1.0         1.0
## 1     11    28  0.011526  ...         1.0         1.0         1.0
## 2     10    29  0.007822  ...         1.0         1.0         1.0
## 3      8    18  0.000549  ...         1.0         1.0         1.0
## 4     25    22  0.002060  ...         1.0         1.0         1.0
## 5     31    30  0.004757  ...         1.0         1.0         1.0
## 6     21    27  0.008687  ...         1.0         1.0         1.0
## 7     19    30  0.011425  ...         1.0         1.0         1.0
## 8     49    23  0.003187  ...         1.0         1.0         1.0
## 9     50    27  0.038025  ...         1.0         1.0         1.0
## 
## [10 rows x 11 columns]</code></pre>
</section>
<section id="step-4-fit-model" class="level2">
<h2 class="anchored" data-anchor-id="step-4-fit-model">3.4 Step 4: Fit Model</h2>
<p>Fit the CP decomposition model with the optimal parameters identified during optimization. The optimal rank is automatically loaded from the optimization results.</p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> subprocess</span>
<span id="cb11-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb11-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb11-4"></span>
<span id="cb11-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load optimal rank from optimization results</span></span>
<span id="cb11-6">best_params_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(r.output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"optimization"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"best_params.json"</span>)</span>
<span id="cb11-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(best_params_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb11-8">    best_params <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb11-9"></span>
<span id="cb11-10">optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(best_params[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rank'</span>])</span>
<span id="cb11-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank from optimization: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-12"></span>
<span id="cb11-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define paths</span></span>
<span id="cb11-14">tensor_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(r.output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tensor"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tensor.npz"</span>)</span>
<span id="cb11-15">fit_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(r.output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fit"</span>)</span>
<span id="cb11-16">os.makedirs(fit_dir, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb11-17"></span>
<span id="cb11-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fit model using the new-tensor CLI with optimal rank</span></span>
<span id="cb11-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># All parameters with their values (defaults noted in comments)</span></span>
<span id="cb11-20">cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb11-21">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/shared/16TB_HDD_01/sam/gitrepos/sr320/workflow-stdm-02/sr320-stdm-02-env/bin/new-tensor"</span>,</span>
<span id="cb11-22">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fit"</span>,</span>
<span id="cb11-23">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--tensor-path"</span>, tensor_file,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Required: path to tensor file</span></span>
<span id="cb11-24">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--output-dir"</span>, fit_dir,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Custom output directory</span></span>
<span id="cb11-25">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--rank"</span>, optimal_rank,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Required: automatically loaded from optimization results</span></span>
<span id="cb11-26">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--lambda-a"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.1"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Default: 0.1 (L1 penalty for gene factors)</span></span>
<span id="cb11-27">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--lambda-b"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.1"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Default: 0.1 (L1 penalty for species factors)</span></span>
<span id="cb11-28">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--lambda-c"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.1"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Default: 0.1 (L1 penalty for time factors)</span></span>
<span id="cb11-29">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--non-negative"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Custom: enforces non-negativity (default: no-non-negative)</span></span>
<span id="cb11-30">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--max-iter"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"100"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Default: 100 (maximum iterations)</span></span>
<span id="cb11-31">]</span>
<span id="cb11-32"></span>
<span id="cb11-33"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fitting model..."</span>)</span>
<span id="cb11-34"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Command: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>join(cmd)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-35">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> subprocess.run(cmd, capture_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb11-36"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(result.stdout)</span>
<span id="cb11-37"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result.stderr:</span>
<span id="cb11-38">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Errors/Warnings:"</span>, result.stderr)</span>
<span id="cb11-39"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Fit results saved to: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>fit_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>## Using optimal rank from optimization: 18
## Fitting model...
## Command: /home/shared/16TB_HDD_01/sam/gitrepos/sr320/workflow-stdm-02/sr320-stdm-02-env/bin/new-tensor fit --tensor-path ../output/13.00-multiomics-stdm/tensor/tensor.npz --output-dir ../output/13.00-multiomics-stdm/fit --rank 18 --lambda-a 0.1 --lambda-b 0.1 --lambda-c 0.1 --non-negative --max-iter 100
## 
## Errors/Warnings: INFO:new_tensor.cli:Starting CP decomposition fit
## INFO:new_tensor.tensor:Loaded tensor from ../output/13.00-multiomics-stdm/tensor/tensor.npz with shape (8820, 3, 4)
## INFO:new_tensor.model:Fitting sparse CP decomposition with rank=18
## INFO:new_tensor.model:L1 penalties: λ_A=0.1, λ_B=0.1, λ_C=0.1
## INFO:new_tensor.model:Non-negative: True
## INFO:new_tensor.model:Iteration 0: loss=3082595.469073
## INFO:new_tensor.model:Converged at iteration 3 (rel_change=0.000000)
## INFO:new_tensor.model:CP decomposition completed in 0.20s
## INFO:new_tensor.model:Final metrics: R²=0.0391, sparsity_A=0.7778
## INFO:new_tensor.utils:Output directory: /home/shared/16TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/M-multi-species/output/13.00-multiomics-stdm/fit (resolved from ../output/13.00-multiomics-stdm/fit)
## INFO:new_tensor.cli:Fit results saved to /home/shared/16TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/M-multi-species/output/13.00-multiomics-stdm/fit
## 
## Fit results saved to: ../output/13.00-multiomics-stdm/fit</code></pre>
</section>
<section id="step-5-export-results" class="level2">
<h2 class="anchored" data-anchor-id="step-5-export-results">3.5 Step 5: Export Results</h2>
<p>Export the decomposition results with gene IDs, species codes, and time labels.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> subprocess</span>
<span id="cb13-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb13-3"></span>
<span id="cb13-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define paths</span></span>
<span id="cb13-5">fit_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(r.output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fit"</span>)</span>
<span id="cb13-6">mappings_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(r.output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tensor"</span>)</span>
<span id="cb13-7">export_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(r.output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"export"</span>)</span>
<span id="cb13-8">os.makedirs(export_dir, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb13-9"></span>
<span id="cb13-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Export results using the new-tensor CLI</span></span>
<span id="cb13-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># All parameters with their values (defaults noted in comments)</span></span>
<span id="cb13-12">cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb13-13">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/shared/16TB_HDD_01/sam/gitrepos/sr320/workflow-stdm-02/sr320-stdm-02-env/bin/new-tensor"</span>,</span>
<span id="cb13-14">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"export"</span>,</span>
<span id="cb13-15">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--fit-dir"</span>, fit_dir,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Required: directory containing fit results</span></span>
<span id="cb13-16">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--mappings-dir"</span>, mappings_dir,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Required: directory containing tensor mappings</span></span>
<span id="cb13-17">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--output-dir"</span>, export_dir,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Custom output directory</span></span>
<span id="cb13-18">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--plot-heatmaps"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Default: plot-heatmaps (generate factor heatmaps)</span></span>
<span id="cb13-19">]</span>
<span id="cb13-20"></span>
<span id="cb13-21"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Exporting results..."</span>)</span>
<span id="cb13-22"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Command: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>join(cmd)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb13-23">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> subprocess.run(cmd, capture_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb13-24"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(result.stdout)</span>
<span id="cb13-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result.stderr:</span>
<span id="cb13-26">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Errors/Warnings:"</span>, result.stderr)</span>
<span id="cb13-27"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Exported results saved to: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>export_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>## Exporting results...
## Command: /home/shared/16TB_HDD_01/sam/gitrepos/sr320/workflow-stdm-02/sr320-stdm-02-env/bin/new-tensor export --fit-dir ../output/13.00-multiomics-stdm/fit --mappings-dir ../output/13.00-multiomics-stdm/tensor --output-dir ../output/13.00-multiomics-stdm/export --plot-heatmaps
## 
## Errors/Warnings: INFO:new_tensor.cli:Starting export
## INFO:new_tensor.utils:Output directory: /home/shared/16TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/M-multi-species/output/13.00-multiomics-stdm/fit (resolved from ../output/13.00-multiomics-stdm/fit)
## INFO:new_tensor.utils:Output directory: /home/shared/16TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/M-multi-species/output/13.00-multiomics-stdm/tensor (resolved from ../output/13.00-multiomics-stdm/tensor)
## INFO:new_tensor.utils:Output directory: /home/shared/16TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/M-multi-species/output/13.00-multiomics-stdm/export (resolved from ../output/13.00-multiomics-stdm/export)
## INFO:new_tensor.cli:Generated component gene files and gene intersection plot
## INFO:new_tensor.cli:Generated factor heatmaps and line plots
## INFO:new_tensor.cli:Export completed, results saved to /home/shared/16TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/M-multi-species/output/13.00-multiomics-stdm/export
## 
## Exported results saved to: ../output/13.00-multiomics-stdm/export</code></pre>
</section>
<section id="step-6-summary-of-results" class="level2">
<h2 class="anchored" data-anchor-id="step-6-summary-of-results">3.6 Step 6: Summary of Results</h2>
<p>Load and display key results from the decomposition analysis.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb15-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb15-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb15-4"></span>
<span id="cb15-5">export_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(r.output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"export"</span>)</span>
<span id="cb15-6"></span>
<span id="cb15-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load decomposition results summary</span></span>
<span id="cb15-8">results_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(export_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"decomposition_results.json"</span>)</span>
<span id="cb15-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(results_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb15-10">    results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb15-11"></span>
<span id="cb15-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Decomposition Results Summary:"</span>)</span>
<span id="cb15-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(json.dumps(results, indent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb15-14"></span>
<span id="cb15-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load gene factors</span></span>
<span id="cb15-16">gene_factors_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(export_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_factors_with_ids.csv"</span>)</span>
<span id="cb15-17">gene_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(gene_factors_file)</span>
<span id="cb15-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Gene Factors Shape: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_factors<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb15-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">First few gene factors:"</span>)</span>
<span id="cb15-20"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(gene_factors.head())</span>
<span id="cb15-21"></span>
<span id="cb15-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load species factors</span></span>
<span id="cb15-23">species_factors_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(export_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species_factors_with_codes.csv"</span>)</span>
<span id="cb15-24">species_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(species_factors_file)</span>
<span id="cb15-25"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Species Factors Shape: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>species_factors<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb15-26"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Species factors:"</span>)</span>
<span id="cb15-27"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(species_factors)</span>
<span id="cb15-28"></span>
<span id="cb15-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load time factors</span></span>
<span id="cb15-30">time_factors_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(export_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time_factors_with_labels.csv"</span>)</span>
<span id="cb15-31">time_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(time_factors_file)</span>
<span id="cb15-32"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Time Factors Shape: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>time_factors<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb15-33"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Time factors:"</span>)</span>
<span id="cb15-34"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(time_factors)</span></code></pre></div>
<pre><code>## Decomposition Results Summary:
## {
##   "metrics": {
##     "reconstruction_error": 3017526.5976782567,
##     "explained_variance": 0.03910043921427753,
##     "final_loss": 3017573.7926728926,
##     "n_iterations": 4,
##     "sparsity_A": 0.7777777777777778,
##     "sparsity_B": 0.7777777777777778,
##     "sparsity_C": 0.7777777777777778,
##     "converged": true
##   },
##   "gene_mapping": {
##     "OG_00686": 0,
##     "OG_00683": 1,
##     "OG_00685": 2,
##     "OG_00688": 3,
##     "OG_00689": 4,
##     "OG_00687": 5,
##     "OG_00690": 6,
##     "OG_00693": 7,
##     "OG_00691": 8,
##     "OG_00692": 9,
##     "OG_00694": 10,
##     "OG_00695": 11,
##     "OG_00696": 12,
##     "OG_00698": 13,
##     "OG_00699": 14,
##     "OG_00700": 15,
##     "OG_00707": 16,
##     "OG_00703": 17,
##     "OG_00705": 18,
##     "OG_00706": 19,
##     "OG_00701": 20,
##     "OG_00702": 21,
##     "OG_00708": 22,
##     "OG_00709": 23,
##     "OG_00716": 24,
##     "OG_00718": 25,
##     "OG_00719": 26,
##     "OG_00721": 27,
##     "OG_00722": 28,
##     "OG_00723": 29,
##     "OG_00724": 30,
##     "OG_00725": 31,
##     "OG_00726": 32,
##     "OG_00710": 33,
##     "OG_00711": 34,
##     "OG_00712": 35,
##     "OG_00714": 36,
##     "OG_00715": 37,
##     "OG_00727": 38,
##     "OG_00728": 39,
##     "OG_00729": 40,
##     "OG_00732": 41,
##     "OG_00731": 42,
##     "OG_00730": 43,
##     "OG_00744": 44,
##     "OG_00733": 45,
##     "OG_00734": 46,
##     "OG_00735": 47,
##     "OG_00736": 48,
##     "OG_00737": 49,
##     "OG_00738": 50,
##     "OG_00739": 51,
##     "OG_00740": 52,
##     "OG_00741": 53,
##     "OG_00742": 54,
##     "OG_00743": 55,
##     "OG_00748": 56,
##     "OG_00750": 57,
##     "OG_00751": 58,
##     "OG_00752": 59,
##     "OG_00753": 60,
##     "OG_00755": 61,
##     "OG_00756": 62,
##     "OG_00757": 63,
##     "OG_00758": 64,
##     "OG_00759": 65,
##     "OG_00760": 66,
##     "OG_00765": 67,
##     "OG_00763": 68,
##     "OG_00764": 69,
##     "OG_00766": 70,
##     "OG_00768": 71,
##     "OG_00769": 72,
##     "OG_00767": 73,
##     "OG_00770": 74,
##     "OG_00771": 75,
##     "OG_00772": 76,
##     "OG_00774": 77,
##     "OG_00773": 78,
##     "OG_00775": 79,
##     "OG_00781": 80,
##     "OG_00777": 81,
##     "OG_00779": 82,
##     "OG_00783": 83,
##     "OG_00784": 84,
##     "OG_00785": 85,
##     "OG_00786": 86,
##     "OG_00787": 87,
##     "OG_00788": 88,
##     "OG_00790": 89,
##     "OG_00789": 90,
##     "OG_00793": 91,
##     "OG_00791": 92,
##     "OG_00792": 93,
##     "OG_00795": 94,
##     "OG_00797": 95,
##     "OG_00796": 96,
##     "OG_00801": 97,
##     "OG_00803": 98,
##     "OG_00802": 99,
##     "OG_00798": 100,
##     "OG_00799": 101,
##     "OG_00800": 102,
##     "OG_00804": 103,
##     "OG_00805": 104,
##     "OG_00806": 105,
##     "OG_00807": 106,
##     "OG_00808": 107,
##     "OG_00809": 108,
##     "OG_00810": 109,
##     "OG_00811": 110,
##     "OG_00813": 111,
##     "OG_00815": 112,
##     "OG_00816": 113,
##     "OG_00817": 114,
##     "OG_00818": 115,
##     "OG_00814": 116,
##     "OG_00824": 117,
##     "OG_00825": 118,
##     "OG_00820": 119,
##     "OG_00821": 120,
##     "OG_00822": 121,
##     "OG_00830": 122,
##     "OG_00826": 123,
##     "OG_00827": 124,
##     "OG_00828": 125,
##     "OG_00829": 126,
##     "OG_00849": 127,
##     "OG_00850": 128,
##     "OG_00851": 129,
##     "OG_00852": 130,
##     "OG_00853": 131,
##     "OG_00854": 132,
##     "OG_00855": 133,
##     "OG_00856": 134,
##     "OG_00857": 135,
##     "OG_00831": 136,
##     "OG_00832": 137,
##     "OG_00833": 138,
##     "OG_00834": 139,
##     "OG_00836": 140,
##     "OG_00838": 141,
##     "OG_00839": 142,
##     "OG_00840": 143,
##     "OG_00841": 144,
##     "OG_00842": 145,
##     "OG_00843": 146,
##     "OG_00844": 147,
##     "OG_00845": 148,
##     "OG_00846": 149,
##     "OG_00847": 150,
##     "OG_00863": 151,
##     "OG_00864": 152,
##     "OG_00860": 153,
##     "OG_00865": 154,
##     "OG_00867": 155,
##     "OG_00868": 156,
##     "OG_00870": 157,
##     "OG_00871": 158,
##     "OG_00869": 159,
##     "OG_00872": 160,
##     "OG_00873": 161,
##     "OG_00874": 162,
##     "OG_00875": 163,
##     "OG_00876": 164,
##     "OG_00877": 165,
##     "OG_00878": 166,
##     "OG_00879": 167,
##     "OG_00880": 168,
##     "OG_00906": 169,
##     "OG_00907": 170,
##     "OG_00908": 171,
##     "OG_00909": 172,
##     "OG_00910": 173,
##     "OG_00911": 174,
##     "OG_00883": 175,
##     "OG_00884": 176,
##     "OG_00885": 177,
##     "OG_00887": 178,
##     "OG_00888": 179,
##     "OG_00889": 180,
##     "OG_00890": 181,
##     "OG_00891": 182,
##     "OG_00892": 183,
##     "OG_00894": 184,
##     "OG_00896": 185,
##     "OG_00897": 186,
##     "OG_00898": 187,
##     "OG_00899": 188,
##     "OG_00900": 189,
##     "OG_00902": 190,
##     "OG_00903": 191,
##     "OG_00904": 192,
##     "OG_00905": 193,
##     "OG_00918": 194,
##     "OG_00914": 195,
##     "OG_00915": 196,
##     "OG_00916": 197,
##     "OG_00919": 198,
##     "OG_00913": 199,
##     "OG_00921": 200,
##     "OG_00920": 201,
##     "OG_00922": 202,
##     "OG_00923": 203,
##     "OG_00924": 204,
##     "OG_00925": 205,
##     "OG_00926": 206,
##     "OG_00929": 207,
##     "OG_00930": 208,
##     "OG_00931": 209,
##     "OG_00932": 210,
##     "OG_00933": 211,
##     "OG_00934": 212,
##     "OG_00935": 213,
##     "OG_00936": 214,
##     "OG_00937": 215,
##     "OG_00938": 216,
##     "OG_00939": 217,
##     "OG_00940": 218,
##     "OG_00941": 219,
##     "OG_00942": 220,
##     "OG_00943": 221,
##     "OG_00944": 222,
##     "OG_00945": 223,
##     "OG_00946": 224,
##     "OG_00947": 225,
##     "OG_00948": 226,
##     "OG_00949": 227,
##     "OG_00950": 228,
##     "OG_00952": 229,
##     "OG_00953": 230,
##     "OG_00954": 231,
##     "OG_00955": 232,
##     "OG_00956": 233,
##     "OG_00957": 234,
##     "OG_00959": 235,
##     "OG_00960": 236,
##     "OG_00961": 237,
##     "OG_00962": 238,
##     "OG_00965": 239,
##     "OG_00966": 240,
##     "OG_00967": 241,
##     "OG_00968": 242,
##     "OG_00964": 243,
##     "OG_00970": 244,
##     "OG_00969": 245,
##     "OG_00972": 246,
##     "OG_00973": 247,
##     "OG_00974": 248,
##     "OG_00975": 249,
##     "OG_00977": 250,
##     "OG_00978": 251,
##     "OG_00991": 252,
##     "OG_00992": 253,
##     "OG_00987": 254,
##     "OG_00979": 255,
##     "OG_00980": 256,
##     "OG_00981": 257,
##     "OG_00982": 258,
##     "OG_00983": 259,
##     "OG_00984": 260,
##     "OG_00985": 261,
##     "OG_00988": 262,
##     "OG_00989": 263,
##     "OG_00990": 264,
##     "OG_00994": 265,
##     "OG_00996": 266,
##     "OG_00997": 267,
##     "OG_00998": 268,
##     "OG_00999": 269,
##     "OG_01000": 270,
##     "OG_01001": 271,
##     "OG_01004": 272,
##     "OG_01002": 273,
##     "OG_01005": 274,
##     "OG_01006": 275,
##     "OG_01003": 276,
##     "OG_01007": 277,
##     "OG_01008": 278,
##     "OG_01009": 279,
##     "OG_01010": 280,
##     "OG_01011": 281,
##     "OG_01012": 282,
##     "OG_01013": 283,
##     "OG_01014": 284,
##     "OG_01015": 285,
##     "OG_01016": 286,
##     "OG_01017": 287,
##     "OG_01018": 288,
##     "OG_01019": 289,
##     "OG_01020": 290,
##     "OG_01021": 291,
##     "OG_01022": 292,
##     "OG_01023": 293,
##     "OG_01028": 294,
##     "OG_01025": 295,
##     "OG_01026": 296,
##     "OG_01027": 297,
##     "OG_01029": 298,
##     "OG_01030": 299,
##     "OG_01031": 300,
##     "OG_01032": 301,
##     "OG_01034": 302,
##     "OG_01035": 303,
##     "OG_01036": 304,
##     "OG_01037": 305,
##     "OG_01039": 306,
##     "OG_01040": 307,
##     "OG_01044": 308,
##     "OG_01053": 309,
##     "OG_01041": 310,
##     "OG_01042": 311,
##     "OG_01043": 312,
##     "OG_01045": 313,
##     "OG_01046": 314,
##     "OG_01047": 315,
##     "OG_01048": 316,
##     "OG_01049": 317,
##     "OG_01050": 318,
##     "OG_01051": 319,
##     "OG_01052": 320,
##     "OG_01054": 321,
##     "OG_01055": 322,
##     "OG_01056": 323,
##     "OG_01057": 324,
##     "OG_01058": 325,
##     "OG_01059": 326,
##     "OG_01060": 327,
##     "OG_01062": 328,
##     "OG_01063": 329,
##     "OG_01064": 330,
##     "OG_01065": 331,
##     "OG_01067": 332,
##     "OG_01068": 333,
##     "OG_01070": 334,
##     "OG_01071": 335,
##     "OG_01072": 336,
##     "OG_01073": 337,
##     "OG_01074": 338,
##     "OG_01075": 339,
##     "OG_01076": 340,
##     "OG_01077": 341,
##     "OG_01078": 342,
##     "OG_01079": 343,
##     "OG_01080": 344,
##     "OG_01081": 345,
##     "OG_01083": 346,
##     "OG_01086": 347,
##     "OG_01092": 348,
##     "OG_01093": 349,
##     "OG_01094": 350,
##     "OG_01087": 351,
##     "OG_01089": 352,
##     "OG_01090": 353,
##     "OG_01091": 354,
##     "OG_01100": 355,
##     "OG_01096": 356,
##     "OG_01097": 357,
##     "OG_01098": 358,
##     "OG_01099": 359,
##     "OG_01101": 360,
##     "OG_01102": 361,
##     "OG_01103": 362,
##     "OG_01104": 363,
##     "OG_01108": 364,
##     "OG_01105": 365,
##     "OG_01106": 366,
##     "OG_01107": 367,
##     "OG_01110": 368,
##     "OG_01111": 369,
##     "OG_01112": 370,
##     "OG_01113": 371,
##     "OG_01118": 372,
##     "OG_01114": 373,
##     "OG_01115": 374,
##     "OG_01116": 375,
##     "OG_01117": 376,
##     "OG_01120": 377,
##     "OG_01121": 378,
##     "OG_01124": 379,
##     "OG_01123": 380,
##     "OG_01122": 381,
##     "OG_01125": 382,
##     "OG_01127": 383,
##     "OG_01128": 384,
##     "OG_01129": 385,
##     "OG_01130": 386,
##     "OG_01134": 387,
##     "OG_01135": 388,
##     "OG_01136": 389,
##     "OG_01131": 390,
##     "OG_01132": 391,
##     "OG_01138": 392,
##     "OG_01139": 393,
##     "OG_01140": 394,
##     "OG_01141": 395,
##     "OG_01142": 396,
##     "OG_01143": 397,
##     "OG_01145": 398,
##     "OG_01144": 399,
##     "OG_01147": 400,
##     "OG_01148": 401,
##     "OG_01150": 402,
##     "OG_01151": 403,
##     "OG_01163": 404,
##     "OG_01164": 405,
##     "OG_01165": 406,
##     "OG_01169": 407,
##     "OG_01170": 408,
##     "OG_01166": 409,
##     "OG_01167": 410,
##     "OG_01168": 411,
##     "OG_01171": 412,
##     "OG_01154": 413,
##     "OG_01155": 414,
##     "OG_01156": 415,
##     "OG_01157": 416,
##     "OG_01158": 417,
##     "OG_01159": 418,
##     "OG_01160": 419,
##     "OG_01161": 420,
##     "OG_01162": 421,
##     "OG_01176": 422,
##     "OG_01178": 423,
##     "OG_01177": 424,
##     "OG_01173": 425,
##     "OG_01172": 426,
##     "OG_01175": 427,
##     "OG_01179": 428,
##     "OG_01180": 429,
##     "OG_01182": 430,
##     "OG_01184": 431,
##     "OG_01183": 432,
##     "OG_01187": 433,
##     "OG_01185": 434,
##     "OG_01186": 435,
##     "OG_01188": 436,
##     "OG_01196": 437,
##     "OG_01197": 438,
##     "OG_01189": 439,
##     "OG_01190": 440,
##     "OG_01191": 441,
##     "OG_01193": 442,
##     "OG_01194": 443,
##     "OG_01195": 444,
##     "OG_01198": 445,
##     "OG_01200": 446,
##     "OG_01202": 447,
##     "OG_01203": 448,
##     "OG_01204": 449,
##     "OG_01205": 450,
##     "OG_01206": 451,
##     "OG_01207": 452,
##     "OG_01208": 453,
##     "OG_01209": 454,
##     "OG_01210": 455,
##     "OG_01211": 456,
##     "OG_01213": 457,
##     "OG_01212": 458,
##     "OG_01232": 459,
##     "OG_01239": 460,
##     "OG_01240": 461,
##     "OG_01241": 462,
##     "OG_01235": 463,
##     "OG_01236": 464,
##     "OG_01242": 465,
##     "OG_01214": 466,
##     "OG_01215": 467,
##     "OG_01216": 468,
##     "OG_01218": 469,
##     "OG_01219": 470,
##     "OG_01221": 471,
##     "OG_01222": 472,
##     "OG_01223": 473,
##     "OG_01225": 474,
##     "OG_01226": 475,
##     "OG_01228": 476,
##     "OG_01229": 477,
##     "OG_01230": 478,
##     "OG_01231": 479,
##     "OG_01243": 480,
##     "OG_01244": 481,
##     "OG_01247": 482,
##     "OG_01245": 483,
##     "OG_01246": 484,
##     "OG_01249": 485,
##     "OG_01248": 486,
##     "OG_01251": 487,
##     "OG_01250": 488,
##     "OG_01252": 489,
##     "OG_01253": 490,
##     "OG_01254": 491,
##     "OG_01256": 492,
##     "OG_01255": 493,
##     "OG_01257": 494,
##     "OG_01258": 495,
##     "OG_01266": 496,
##     "OG_01267": 497,
##     "OG_01268": 498,
##     "OG_01270": 499,
##     "OG_01271": 500,
##     "OG_01263": 501,
##     "OG_01260": 502,
##     "OG_01261": 503,
##     "OG_01262": 504,
##     "OG_01272": 505,
##     "OG_01273": 506,
##     "OG_01275": 507,
##     "OG_01278": 508,
##     "OG_01276": 509,
##     "OG_01277": 510,
##     "OG_01280": 511,
##     "OG_01281": 512,
##     "OG_01283": 513,
##     "OG_01286": 514,
##     "OG_01284": 515,
##     "OG_01285": 516,
##     "OG_01287": 517,
##     "OG_01288": 518,
##     "OG_01289": 519,
##     "OG_01290": 520,
##     "OG_01291": 521,
##     "OG_01292": 522,
##     "OG_01293": 523,
##     "OG_01294": 524,
##     "OG_01295": 525,
##     "OG_01296": 526,
##     "OG_01303": 527,
##     "OG_01299": 528,
##     "OG_01300": 529,
##     "OG_01307": 530,
##     "OG_01305": 531,
##     "OG_01306": 532,
##     "OG_01308": 533,
##     "OG_01309": 534,
##     "OG_01310": 535,
##     "OG_01311": 536,
##     "OG_01313": 537,
##     "OG_01312": 538,
##     "OG_01321": 539,
##     "OG_01322": 540,
##     "OG_01314": 541,
##     "OG_01315": 542,
##     "OG_01316": 543,
##     "OG_01317": 544,
##     "OG_01323": 545,
##     "OG_01324": 546,
##     "OG_01326": 547,
##     "OG_01325": 548,
##     "OG_01328": 549,
##     "OG_01329": 550,
##     "OG_01330": 551,
##     "OG_01342": 552,
##     "OG_01344": 553,
##     "OG_01345": 554,
##     "OG_01346": 555,
##     "OG_01331": 556,
##     "OG_01332": 557,
##     "OG_01333": 558,
##     "OG_01335": 559,
##     "OG_01336": 560,
##     "OG_01337": 561,
##     "OG_01338": 562,
##     "OG_01339": 563,
##     "OG_01340": 564,
##     "OG_01341": 565,
##     "OG_01350": 566,
##     "OG_01349": 567,
##     "OG_01351": 568,
##     "OG_01363": 569,
##     "OG_01360": 570,
##     "OG_01361": 571,
##     "OG_01362": 572,
##     "OG_01364": 573,
##     "OG_01365": 574,
##     "OG_01366": 575,
##     "OG_01367": 576,
##     "OG_01370": 577,
##     "OG_01369": 578,
##     "OG_01371": 579,
##     "OG_01372": 580,
##     "OG_01373": 581,
##     "OG_01359": 582,
##     "OG_01352": 583,
##     "OG_01353": 584,
##     "OG_01354": 585,
##     "OG_01355": 586,
##     "OG_01356": 587,
##     "OG_01357": 588,
##     "OG_01358": 589,
##     "OG_01374": 590,
##     "OG_01376": 591,
##     "OG_01377": 592,
##     "OG_01378": 593,
##     "OG_01379": 594,
##     "OG_01380": 595,
##     "OG_01381": 596,
##     "OG_01382": 597,
##     "OG_01384": 598,
##     "OG_01383": 599,
##     "OG_01385": 600,
##     "OG_01386": 601,
##     "OG_01387": 602,
##     "OG_01388": 603,
##     "OG_01389": 604,
##     "OG_01398": 605,
##     "OG_01399": 606,
##     "OG_01400": 607,
##     "OG_01390": 608,
##     "OG_01392": 609,
##     "OG_01393": 610,
##     "OG_01394": 611,
##     "OG_01395": 612,
##     "OG_01397": 613,
##     "OG_01401": 614,
##     "OG_01402": 615,
##     "OG_01403": 616,
##     "OG_01404": 617,
##     "OG_01405": 618,
##     "OG_01406": 619,
##     "OG_01407": 620,
##     "OG_01408": 621,
##     "OG_01409": 622,
##     "OG_01410": 623,
##     "OG_00001": 624,
##     "OG_00002": 625,
##     "OG_00003": 626,
##     "OG_00004": 627,
##     "OG_00017": 628,
##     "OG_00019": 629,
##     "OG_00020": 630,
##     "OG_00021": 631,
##     "OG_00023": 632,
##     "OG_00022": 633,
##     "OG_00005": 634,
##     "OG_00006": 635,
##     "OG_00007": 636,
##     "OG_00008": 637,
##     "OG_00009": 638,
##     "OG_00010": 639,
##     "OG_00011": 640,
##     "OG_00012": 641,
##     "OG_00013": 642,
##     "OG_00014": 643,
##     "OG_00015": 644,
##     "OG_00016": 645,
##     "OG_00029": 646,
##     "OG_00024": 647,
##     "OG_00025": 648,
##     "OG_00026": 649,
##     "OG_00027": 650,
##     "OG_00028": 651,
##     "OG_00030": 652,
##     "OG_00032": 653,
##     "OG_00033": 654,
##     "OG_00036": 655,
##     "OG_00034": 656,
##     "OG_00035": 657,
##     "OG_00041": 658,
##     "OG_00038": 659,
##     "OG_00039": 660,
##     "OG_00040": 661,
##     "OG_00047": 662,
##     "OG_00048": 663,
##     "OG_00049": 664,
##     "OG_00042": 665,
##     "OG_00043": 666,
##     "OG_00045": 667,
##     "OG_00050": 668,
##     "OG_00051": 669,
##     "OG_00052": 670,
##     "OG_00057": 671,
##     "OG_00053": 672,
##     "OG_00054": 673,
##     "OG_00056": 674,
##     "OG_00059": 675,
##     "OG_00060": 676,
##     "OG_00063": 677,
##     "OG_00061": 678,
##     "OG_00062": 679,
##     "OG_00064": 680,
##     "OG_00065": 681,
##     "OG_00066": 682,
##     "OG_00067": 683,
##     "OG_00069": 684,
##     "OG_00070": 685,
##     "OG_00071": 686,
##     "OG_00072": 687,
##     "OG_00073": 688,
##     "OG_00074": 689,
##     "OG_00075": 690,
##     "OG_00076": 691,
##     "OG_00077": 692,
##     "OG_00080": 693,
##     "OG_00081": 694,
##     "OG_00078": 695,
##     "OG_00082": 696,
##     "OG_00084": 697,
##     "OG_00085": 698,
##     "OG_00086": 699,
##     "OG_00088": 700,
##     "OG_00087": 701,
##     "OG_00089": 702,
##     "OG_00092": 703,
##     "OG_00093": 704,
##     "OG_00094": 705,
##     "OG_00095": 706,
##     "OG_00096": 707,
##     "OG_00097": 708,
##     "OG_00098": 709,
##     "OG_00099": 710,
##     "OG_00100": 711,
##     "OG_00110": 712,
##     "OG_00112": 713,
##     "OG_00113": 714,
##     "OG_00103": 715,
##     "OG_00104": 716,
##     "OG_00105": 717,
##     "OG_00106": 718,
##     "OG_00107": 719,
##     "OG_00108": 720,
##     "OG_00109": 721,
##     "OG_00114": 722,
##     "OG_00115": 723,
##     "OG_00116": 724,
##     "OG_00117": 725,
##     "OG_00118": 726,
##     "OG_00119": 727,
##     "OG_00121": 728,
##     "OG_00122": 729,
##     "OG_00123": 730,
##     "OG_00124": 731,
##     "OG_00126": 732,
##     "OG_00127": 733,
##     "OG_00129": 734,
##     "OG_00131": 735,
##     "OG_00130": 736,
##     "OG_00132": 737,
##     "OG_00133": 738,
##     "OG_00134": 739,
##     "OG_00135": 740,
##     "OG_00138": 741,
##     "OG_00137": 742,
##     "OG_00139": 743,
##     "OG_00140": 744,
##     "OG_00142": 745,
##     "OG_00141": 746,
##     "OG_00143": 747,
##     "OG_00144": 748,
##     "OG_00145": 749,
##     "OG_00146": 750,
##     "OG_00147": 751,
##     "OG_00148": 752,
##     "OG_00149": 753,
##     "OG_00150": 754,
##     "OG_00152": 755,
##     "OG_00153": 756,
##     "OG_00156": 757,
##     "OG_00155": 758,
##     "OG_00154": 759,
##     "OG_00157": 760,
##     "OG_00158": 761,
##     "OG_00159": 762,
##     "OG_00165": 763,
##     "OG_00166": 764,
##     "OG_00168": 765,
##     "OG_00161": 766,
##     "OG_00162": 767,
##     "OG_00163": 768,
##     "OG_00170": 769,
##     "OG_00171": 770,
##     "OG_00173": 771,
##     "OG_00174": 772,
##     "OG_00175": 773,
##     "OG_00177": 774,
##     "OG_00179": 775,
##     "OG_00180": 776,
##     "OG_00184": 777,
##     "OG_00181": 778,
##     "OG_00182": 779,
##     "OG_00187": 780,
##     "OG_00188": 781,
##     "OG_00189": 782,
##     "OG_00190": 783,
##     "OG_00195": 784,
##     "OG_00192": 785,
##     "OG_00193": 786,
##     "OG_00194": 787,
##     "OG_00209": 788,
##     "OG_00206": 789,
##     "OG_00196": 790,
##     "OG_00197": 791,
##     "OG_00198": 792,
##     "OG_00199": 793,
##     "OG_00200": 794,
##     "OG_00201": 795,
##     "OG_00202": 796,
##     "OG_00203": 797,
##     "OG_00204": 798,
##     "OG_00205": 799,
##     "OG_00207": 800,
##     "OG_00208": 801,
##     "OG_00210": 802,
##     "OG_00211": 803,
##     "OG_00212": 804,
##     "OG_00213": 805,
##     "OG_00214": 806,
##     "OG_00215": 807,
##     "OG_00216": 808,
##     "OG_00221": 809,
##     "OG_00218": 810,
##     "OG_00219": 811,
##     "OG_00220": 812,
##     "OG_00222": 813,
##     "OG_00223": 814,
##     "OG_00224": 815,
##     "OG_00227": 816,
##     "OG_00225": 817,
##     "OG_00226": 818,
##     "OG_00228": 819,
##     "OG_00230": 820,
##     "OG_00232": 821,
##     "OG_00239": 822,
##     "OG_00240": 823,
##     "OG_00233": 824,
##     "OG_00234": 825,
##     "OG_00235": 826,
##     "OG_00236": 827,
##     "OG_00237": 828,
##     "OG_00238": 829,
##     "OG_00258": 830,
##     "OG_00241": 831,
##     "OG_00242": 832,
##     "OG_00243": 833,
##     "OG_00244": 834,
##     "OG_00245": 835,
##     "OG_00246": 836,
##     "OG_00247": 837,
##     "OG_00248": 838,
##     "OG_00249": 839,
##     "OG_00250": 840,
##     "OG_00251": 841,
##     "OG_00252": 842,
##     "OG_00254": 843,
##     "OG_00256": 844,
##     "OG_00257": 845,
##     "OG_00259": 846,
##     "OG_00260": 847,
##     "OG_00261": 848,
##     "OG_00263": 849,
##     "OG_00264": 850,
##     "OG_00267": 851,
##     "OG_00265": 852,
##     "OG_00266": 853,
##     "OG_00269": 854,
##     "OG_00270": 855,
##     "OG_00277": 856,
##     "OG_00278": 857,
##     "OG_00272": 858,
##     "OG_00271": 859,
##     "OG_00273": 860,
##     "OG_00274": 861,
##     "OG_00275": 862,
##     "OG_00280": 863,
##     "OG_00281": 864,
##     "OG_00279": 865,
##     "OG_00285": 866,
##     "OG_00286": 867,
##     "OG_00287": 868,
##     "OG_00292": 869,
##     "OG_00294": 870,
##     "OG_00288": 871,
##     "OG_00289": 872,
##     "OG_00291": 873,
##     "OG_00295": 874,
##     "OG_00296": 875,
##     "OG_00297": 876,
##     "OG_00298": 877,
##     "OG_00304": 878,
##     "OG_00300": 879,
##     "OG_00302": 880,
##     "OG_00309": 881,
##     "OG_00310": 882,
##     "OG_00311": 883,
##     "OG_00306": 884,
##     "OG_00308": 885,
##     "OG_00312": 886,
##     "OG_00314": 887,
##     "OG_00315": 888,
##     "OG_00317": 889,
##     "OG_00316": 890,
##     "OG_00318": 891,
##     "OG_00319": 892,
##     "OG_00320": 893,
##     "OG_00322": 894,
##     "OG_00331": 895,
##     "OG_00332": 896,
##     "OG_00333": 897,
##     "OG_00323": 898,
##     "OG_00324": 899,
##     "OG_00325": 900,
##     "OG_00326": 901,
##     "OG_00327": 902,
##     "OG_00328": 903,
##     "OG_00329": 904,
##     "OG_00330": 905,
##     "OG_00335": 906,
##     "OG_00334": 907,
##     "OG_00337": 908,
##     "OG_00336": 909,
##     "OG_00339": 910,
##     "OG_00341": 911,
##     "OG_00338": 912,
##     "OG_00346": 913,
##     "OG_00342": 914,
##     "OG_00343": 915,
##     "OG_00344": 916,
##     "OG_00345": 917,
##     "OG_00353": 918,
##     "OG_00354": 919,
##     "OG_00355": 920,
##     "OG_00357": 921,
##     "OG_00358": 922,
##     "OG_00347": 923,
##     "OG_00348": 924,
##     "OG_00349": 925,
##     "OG_00351": 926,
##     "OG_00352": 927,
##     "OG_00359": 928,
##     "OG_00361": 929,
##     "OG_00360": 930,
##     "OG_00362": 931,
##     "OG_00364": 932,
##     "OG_00365": 933,
##     "OG_00367": 934,
##     "OG_00369": 935,
##     "OG_00370": 936,
##     "OG_00371": 937,
##     "OG_00372": 938,
##     "OG_00377": 939,
##     "OG_00373": 940,
##     "OG_00374": 941,
##     "OG_00375": 942,
##     "OG_00376": 943,
##     "OG_00378": 944,
##     "OG_00379": 945,
##     "OG_00380": 946,
##     "OG_00381": 947,
##     "OG_00382": 948,
##     "OG_00383": 949,
##     "OG_00386": 950,
##     "OG_00387": 951,
##     "OG_00388": 952,
##     "OG_00391": 953,
##     "OG_00389": 954,
##     "OG_00390": 955,
##     "OG_00395": 956,
##     "OG_00396": 957,
##     "OG_00392": 958,
##     "OG_00393": 959,
##     "OG_00397": 960,
##     "OG_00398": 961,
##     "OG_00399": 962,
##     "OG_00400": 963,
##     "OG_00401": 964,
##     "OG_00402": 965,
##     "OG_00404": 966,
##     "OG_00403": 967,
##     "OG_00407": 968,
##     "OG_00408": 969,
##     "OG_00409": 970,
##     "OG_00410": 971,
##     "OG_00411": 972,
##     "OG_00412": 973,
##     "OG_00413": 974,
##     "OG_00417": 975,
##     "OG_00414": 976,
##     "OG_00415": 977,
##     "OG_00451": 978,
##     "OG_00444": 979,
##     "OG_00418": 980,
##     "OG_00419": 981,
##     "OG_00420": 982,
##     "OG_00421": 983,
##     "OG_00422": 984,
##     "OG_00423": 985,
##     "OG_00424": 986,
##     "OG_00425": 987,
##     "OG_00426": 988,
##     "OG_00428": 989,
##     "OG_00429": 990,
##     "OG_00430": 991,
##     "OG_00431": 992,
##     "OG_00432": 993,
##     "OG_00433": 994,
##     "OG_00434": 995,
##     "OG_00435": 996,
##     "OG_00436": 997,
##     "OG_00437": 998,
##     "OG_00438": 999,
##     "OG_00439": 1000,
##     "OG_00441": 1001,
##     "OG_00442": 1002,
##     "OG_00443": 1003,
##     "OG_00445": 1004,
##     "OG_00447": 1005,
##     "OG_00448": 1006,
##     "OG_00449": 1007,
##     "OG_00471": 1008,
##     "OG_00472": 1009,
##     "OG_00473": 1010,
##     "OG_00474": 1011,
##     "OG_00475": 1012,
##     "OG_00476": 1013,
##     "OG_00452": 1014,
##     "OG_00453": 1015,
##     "OG_00455": 1016,
##     "OG_00456": 1017,
##     "OG_00457": 1018,
##     "OG_00458": 1019,
##     "OG_00459": 1020,
##     "OG_00460": 1021,
##     "OG_00461": 1022,
##     "OG_00462": 1023,
##     "OG_00463": 1024,
##     "OG_00464": 1025,
##     "OG_00466": 1026,
##     "OG_00467": 1027,
##     "OG_00477": 1028,
##     "OG_00478": 1029,
##     "OG_00479": 1030,
##     "OG_00481": 1031,
##     "OG_00482": 1032,
##     "OG_00485": 1033,
##     "OG_00483": 1034,
##     "OG_00484": 1035,
##     "OG_00486": 1036,
##     "OG_00487": 1037,
##     "OG_00488": 1038,
##     "OG_00489": 1039,
##     "OG_00490": 1040,
##     "OG_00491": 1041,
##     "OG_00492": 1042,
##     "OG_00493": 1043,
##     "OG_00496": 1044,
##     "OG_00498": 1045,
##     "OG_00501": 1046,
##     "OG_00499": 1047,
##     "OG_00500": 1048,
##     "OG_00504": 1049,
##     "OG_00502": 1050,
##     "OG_00503": 1051,
##     "OG_00507": 1052,
##     "OG_00509": 1053,
##     "OG_00510": 1054,
##     "OG_00514": 1055,
##     "OG_00517": 1056,
##     "OG_00515": 1057,
##     "OG_00518": 1058,
##     "OG_00519": 1059,
##     "OG_00511": 1060,
##     "OG_00513": 1061,
##     "OG_00521": 1062,
##     "OG_00520": 1063,
##     "OG_00522": 1064,
##     "OG_00524": 1065,
##     "OG_00523": 1066,
##     "OG_00526": 1067,
##     "OG_00527": 1068,
##     "OG_00528": 1069,
##     "OG_00529": 1070,
##     "OG_00530": 1071,
##     "OG_00531": 1072,
##     "OG_00532": 1073,
##     "OG_00533": 1074,
##     "OG_00534": 1075,
##     "OG_00535": 1076,
##     "OG_00536": 1077,
##     "OG_00537": 1078,
##     "OG_00538": 1079,
##     "OG_00540": 1080,
##     "OG_00542": 1081,
##     "OG_00543": 1082,
##     "OG_00544": 1083,
##     "OG_00545": 1084,
##     "OG_00546": 1085,
##     "OG_00547": 1086,
##     "OG_00548": 1087,
##     "OG_00549": 1088,
##     "OG_00550": 1089,
##     "OG_00551": 1090,
##     "OG_00552": 1091,
##     "OG_00555": 1092,
##     "OG_00554": 1093,
##     "OG_00557": 1094,
##     "OG_00558": 1095,
##     "OG_00569": 1096,
##     "OG_00560": 1097,
##     "OG_00562": 1098,
##     "OG_00564": 1099,
##     "OG_00565": 1100,
##     "OG_00566": 1101,
##     "OG_00567": 1102,
##     "OG_00570": 1103,
##     "OG_00586": 1104,
##     "OG_00587": 1105,
##     "OG_00571": 1106,
##     "OG_00572": 1107,
##     "OG_00573": 1108,
##     "OG_00574": 1109,
##     "OG_00575": 1110,
##     "OG_00576": 1111,
##     "OG_00578": 1112,
##     "OG_00580": 1113,
##     "OG_00581": 1114,
##     "OG_00583": 1115,
##     "OG_00584": 1116,
##     "OG_00585": 1117,
##     "OG_00589": 1118,
##     "OG_00590": 1119,
##     "OG_00591": 1120,
##     "OG_00593": 1121,
##     "OG_00594": 1122,
##     "OG_00595": 1123,
##     "OG_00596": 1124,
##     "OG_00597": 1125,
##     "OG_00599": 1126,
##     "OG_00600": 1127,
##     "OG_00601": 1128,
##     "OG_00603": 1129,
##     "OG_00604": 1130,
##     "OG_00605": 1131,
##     "OG_00606": 1132,
##     "OG_00607": 1133,
##     "OG_00610": 1134,
##     "OG_00608": 1135,
##     "OG_00609": 1136,
##     "OG_00611": 1137,
##     "OG_00612": 1138,
##     "OG_00613": 1139,
##     "OG_00614": 1140,
##     "OG_00615": 1141,
##     "OG_00616": 1142,
##     "OG_00617": 1143,
##     "OG_00618": 1144,
##     "OG_00620": 1145,
##     "OG_00619": 1146,
##     "OG_00623": 1147,
##     "OG_00621": 1148,
##     "OG_00622": 1149,
##     "OG_00630": 1150,
##     "OG_00626": 1151,
##     "OG_00627": 1152,
##     "OG_00628": 1153,
##     "OG_00629": 1154,
##     "OG_00631": 1155,
##     "OG_00632": 1156,
##     "OG_00634": 1157,
##     "OG_00633": 1158,
##     "OG_00635": 1159,
##     "OG_00636": 1160,
##     "OG_00638": 1161,
##     "OG_00639": 1162,
##     "OG_00640": 1163,
##     "OG_00641": 1164,
##     "OG_00642": 1165,
##     "OG_00643": 1166,
##     "OG_00647": 1167,
##     "OG_00648": 1168,
##     "OG_00645": 1169,
##     "OG_00646": 1170,
##     "OG_00649": 1171,
##     "OG_00650": 1172,
##     "OG_00652": 1173,
##     "OG_00651": 1174,
##     "OG_00653": 1175,
##     "OG_00654": 1176,
##     "OG_00656": 1177,
##     "OG_00657": 1178,
##     "OG_00658": 1179,
##     "OG_00660": 1180,
##     "OG_00661": 1181,
##     "OG_00665": 1182,
##     "OG_00666": 1183,
##     "OG_00667": 1184,
##     "OG_00662": 1185,
##     "OG_00663": 1186,
##     "OG_00668": 1187,
##     "OG_00673": 1188,
##     "OG_00674": 1189,
##     "OG_00675": 1190,
##     "OG_00670": 1191,
##     "OG_00671": 1192,
##     "OG_00672": 1193,
##     "OG_00676": 1194,
##     "OG_00677": 1195,
##     "OG_00678": 1196,
##     "OG_00679": 1197,
##     "OG_00680": 1198,
##     "OG_00681": 1199,
##     "OG_00682": 1200,
##     "OG_01415": 1201,
##     "OG_01416": 1202,
##     "OG_01414": 1203,
##     "OG_01411": 1204,
##     "OG_01413": 1205,
##     "OG_01417": 1206,
##     "OG_01418": 1207,
##     "OG_01419": 1208,
##     "OG_01420": 1209,
##     "OG_01421": 1210,
##     "OG_01422": 1211,
##     "OG_01426": 1212,
##     "OG_01425": 1213,
##     "OG_01427": 1214,
##     "OG_01430": 1215,
##     "OG_01431": 1216,
##     "OG_01435": 1217,
##     "OG_01436": 1218,
##     "OG_01437": 1219,
##     "OG_01439": 1220,
##     "OG_01440": 1221,
##     "OG_01441": 1222,
##     "OG_01442": 1223,
##     "OG_01443": 1224,
##     "OG_01448": 1225,
##     "OG_01444": 1226,
##     "OG_01445": 1227,
##     "OG_01446": 1228,
##     "OG_01447": 1229,
##     "OG_01450": 1230,
##     "OG_01451": 1231,
##     "OG_01455": 1232,
##     "OG_01454": 1233,
##     "OG_01452": 1234,
##     "OG_01453": 1235,
##     "OG_01456": 1236,
##     "OG_01458": 1237,
##     "OG_01459": 1238,
##     "OG_01461": 1239,
##     "OG_01463": 1240,
##     "OG_01462": 1241,
##     "OG_01464": 1242,
##     "OG_01465": 1243,
##     "OG_01466": 1244,
##     "OG_01467": 1245,
##     "OG_01468": 1246,
##     "OG_01470": 1247,
##     "OG_01471": 1248,
##     "OG_01469": 1249,
##     "OG_01472": 1250,
##     "OG_01473": 1251,
##     "OG_01474": 1252,
##     "OG_01475": 1253,
##     "OG_01482": 1254,
##     "OG_01483": 1255,
##     "OG_01480": 1256,
##     "OG_01481": 1257,
##     "OG_01476": 1258,
##     "OG_01477": 1259,
##     "OG_01479": 1260,
##     "OG_01484": 1261,
##     "OG_01487": 1262,
##     "OG_01488": 1263,
##     "OG_01485": 1264,
##     "OG_01486": 1265,
##     "OG_01494": 1266,
##     "OG_01489": 1267,
##     "OG_01490": 1268,
##     "OG_01493": 1269,
##     "OG_01495": 1270,
##     "OG_01496": 1271,
##     "OG_01497": 1272,
##     "OG_01498": 1273,
##     "OG_01499": 1274,
##     "OG_01501": 1275,
##     "OG_01502": 1276,
##     "OG_01503": 1277,
##     "OG_01510": 1278,
##     "OG_01511": 1279,
##     "OG_01512": 1280,
##     "OG_01514": 1281,
##     "OG_01504": 1282,
##     "OG_01505": 1283,
##     "OG_01506": 1284,
##     "OG_01507": 1285,
##     "OG_01508": 1286,
##     "OG_01515": 1287,
##     "OG_01516": 1288,
##     "OG_01519": 1289,
##     "OG_01520": 1290,
##     "OG_01517": 1291,
##     "OG_01518": 1292,
##     "OG_01522": 1293,
##     "OG_01523": 1294,
##     "OG_01532": 1295,
##     "OG_01533": 1296,
##     "OG_01534": 1297,
##     "OG_01524": 1298,
##     "OG_01525": 1299,
##     "OG_01526": 1300,
##     "OG_01527": 1301,
##     "OG_01528": 1302,
##     "OG_01530": 1303,
##     "OG_01531": 1304,
##     "OG_01535": 1305,
##     "OG_01536": 1306,
##     "OG_01538": 1307,
##     "OG_01539": 1308,
##     "OG_01540": 1309,
##     "OG_01542": 1310,
##     "OG_01541": 1311,
##     "OG_01544": 1312,
##     "OG_01545": 1313,
##     "OG_01546": 1314,
##     "OG_01548": 1315,
##     "OG_01547": 1316,
##     "OG_01543": 1317,
##     "OG_01549": 1318,
##     "OG_01565": 1319,
##     "OG_01566": 1320,
##     "OG_01567": 1321,
##     "OG_01550": 1322,
##     "OG_01551": 1323,
##     "OG_01552": 1324,
##     "OG_01553": 1325,
##     "OG_01554": 1326,
##     "OG_01555": 1327,
##     "OG_01556": 1328,
##     "OG_01557": 1329,
##     "OG_01558": 1330,
##     "OG_01559": 1331,
##     "OG_01560": 1332,
##     "OG_01561": 1333,
##     "OG_01562": 1334,
##     "OG_01571": 1335,
##     "OG_01572": 1336,
##     "OG_01568": 1337,
##     "OG_01569": 1338,
##     "OG_01570": 1339,
##     "OG_01574": 1340,
##     "OG_01575": 1341,
##     "OG_01577": 1342,
##     "OG_01578": 1343,
##     "OG_01576": 1344,
##     "OG_01586": 1345,
##     "OG_01587": 1346,
##     "OG_01588": 1347,
##     "OG_01582": 1348,
##     "OG_01581": 1349,
##     "OG_01583": 1350,
##     "OG_01584": 1351,
##     "OG_01585": 1352,
##     "OG_01607": 1353,
##     "OG_01608": 1354,
##     "OG_01610": 1355,
##     "OG_01609": 1356,
##     "OG_01611": 1357,
##     "OG_01589": 1358,
##     "OG_01590": 1359,
##     "OG_01591": 1360,
##     "OG_01592": 1361,
##     "OG_01593": 1362,
##     "OG_01594": 1363,
##     "OG_01595": 1364,
##     "OG_01596": 1365,
##     "OG_01597": 1366,
##     "OG_01598": 1367,
##     "OG_01599": 1368,
##     "OG_01600": 1369,
##     "OG_01601": 1370,
##     "OG_01602": 1371,
##     "OG_01605": 1372,
##     "OG_01606": 1373,
##     "OG_01613": 1374,
##     "OG_01614": 1375,
##     "OG_01615": 1376,
##     "OG_01612": 1377,
##     "OG_01616": 1378,
##     "OG_01617": 1379,
##     "OG_01618": 1380,
##     "OG_01620": 1381,
##     "OG_01626": 1382,
##     "OG_01621": 1383,
##     "OG_01622": 1384,
##     "OG_01623": 1385,
##     "OG_01624": 1386,
##     "OG_01628": 1387,
##     "OG_01630": 1388,
##     "OG_01631": 1389,
##     "OG_01632": 1390,
##     "OG_01633": 1391,
##     "OG_01635": 1392,
##     "OG_01636": 1393,
##     "OG_01637": 1394,
##     "OG_01639": 1395,
##     "OG_01640": 1396,
##     "OG_01641": 1397,
##     "OG_01642": 1398,
##     "OG_01643": 1399,
##     "OG_01644": 1400,
##     "OG_01645": 1401,
##     "OG_01646": 1402,
##     "OG_01647": 1403,
##     "OG_01648": 1404,
##     "OG_01650": 1405,
##     "OG_01651": 1406,
##     "OG_01652": 1407,
##     "OG_01653": 1408,
##     "OG_01654": 1409,
##     "OG_01655": 1410,
##     "OG_01656": 1411,
##     "OG_01658": 1412,
##     "OG_01659": 1413,
##     "OG_01667": 1414,
##     "OG_01668": 1415,
##     "OG_01669": 1416,
##     "OG_01660": 1417,
##     "OG_01661": 1418,
##     "OG_01662": 1419,
##     "OG_01663": 1420,
##     "OG_01664": 1421,
##     "OG_01671": 1422,
##     "OG_01672": 1423,
##     "OG_01675": 1424,
##     "OG_01679": 1425,
##     "OG_01680": 1426,
##     "OG_01677": 1427,
##     "OG_01678": 1428,
##     "OG_01685": 1429,
##     "OG_01682": 1430,
##     "OG_01683": 1431,
##     "OG_01684": 1432,
##     "OG_01686": 1433,
##     "OG_01687": 1434,
##     "OG_01690": 1435,
##     "OG_01689": 1436,
##     "OG_01692": 1437,
##     "OG_01693": 1438,
##     "OG_01694": 1439,
##     "OG_01699": 1440,
##     "OG_01697": 1441,
##     "OG_01698": 1442,
##     "OG_01702": 1443,
##     "OG_01703": 1444,
##     "OG_01704": 1445,
##     "OG_01705": 1446,
##     "OG_01709": 1447,
##     "OG_01710": 1448,
##     "OG_01707": 1449,
##     "OG_01708": 1450,
##     "OG_01713": 1451,
##     "OG_01712": 1452,
##     "OG_01714": 1453,
##     "OG_01723": 1454,
##     "OG_01724": 1455,
##     "OG_01715": 1456,
##     "OG_01717": 1457,
##     "OG_01718": 1458,
##     "OG_01720": 1459,
##     "OG_01721": 1460,
##     "OG_01725": 1461,
##     "OG_01726": 1462,
##     "OG_01727": 1463,
##     "OG_01728": 1464,
##     "OG_01730": 1465,
##     "OG_01733": 1466,
##     "OG_01732": 1467,
##     "OG_01734": 1468,
##     "OG_01735": 1469,
##     "OG_01736": 1470,
##     "OG_01737": 1471,
##     "OG_01738": 1472,
##     "OG_01739": 1473,
##     "OG_01741": 1474,
##     "OG_01742": 1475,
##     "OG_01743": 1476,
##     "OG_01745": 1477,
##     "OG_01744": 1478,
##     "OG_01747": 1479,
##     "OG_01748": 1480,
##     "OG_01749": 1481,
##     "OG_01750": 1482,
##     "OG_01751": 1483,
##     "OG_01754": 1484,
##     "OG_01755": 1485,
##     "OG_01756": 1486,
##     "OG_01752": 1487,
##     "OG_01757": 1488,
##     "OG_01759": 1489,
##     "OG_01760": 1490,
##     "OG_01761": 1491,
##     "OG_01762": 1492,
##     "OG_01766": 1493,
##     "OG_01765": 1494,
##     "OG_01767": 1495,
##     "OG_01771": 1496,
##     "OG_01772": 1497,
##     "OG_01773": 1498,
##     "OG_01774": 1499,
##     "OG_01775": 1500,
##     "OG_01783": 1501,
##     "OG_01784": 1502,
##     "OG_01776": 1503,
##     "OG_01777": 1504,
##     "OG_01778": 1505,
##     "OG_01779": 1506,
##     "OG_01780": 1507,
##     "OG_01781": 1508,
##     "OG_01782": 1509,
##     "OG_01786": 1510,
##     "OG_01787": 1511,
##     "OG_01788": 1512,
##     "OG_01789": 1513,
##     "OG_01790": 1514,
##     "OG_01791": 1515,
##     "OG_01792": 1516,
##     "OG_01793": 1517,
##     "OG_01794": 1518,
##     "OG_01795": 1519,
##     "OG_01796": 1520,
##     "OG_01798": 1521,
##     "OG_01800": 1522,
##     "OG_01801": 1523,
##     "OG_01802": 1524,
##     "OG_01803": 1525,
##     "OG_01804": 1526,
##     "OG_01807": 1527,
##     "OG_01805": 1528,
##     "OG_01806": 1529,
##     "OG_01808": 1530,
##     "OG_01812": 1531,
##     "OG_01813": 1532,
##     "OG_01810": 1533,
##     "OG_01811": 1534,
##     "OG_01814": 1535,
##     "OG_01815": 1536,
##     "OG_01818": 1537,
##     "OG_01819": 1538,
##     "OG_01817": 1539,
##     "OG_01820": 1540,
##     "OG_01825": 1541,
##     "OG_01826": 1542,
##     "OG_01827": 1543,
##     "OG_01821": 1544,
##     "OG_01822": 1545,
##     "OG_01823": 1546,
##     "OG_01824": 1547,
##     "OG_01828": 1548,
##     "OG_01832": 1549,
##     "OG_01831": 1550,
##     "OG_01833": 1551,
##     "OG_01834": 1552,
##     "OG_01835": 1553,
##     "OG_01836": 1554,
##     "OG_01837": 1555,
##     "OG_01838": 1556,
##     "OG_01866": 1557,
##     "OG_01867": 1558,
##     "OG_01868": 1559,
##     "OG_01839": 1560,
##     "OG_01840": 1561,
##     "OG_01841": 1562,
##     "OG_01842": 1563,
##     "OG_01843": 1564,
##     "OG_01844": 1565,
##     "OG_01845": 1566,
##     "OG_01846": 1567,
##     "OG_01847": 1568,
##     "OG_01848": 1569,
##     "OG_01849": 1570,
##     "OG_01850": 1571,
##     "OG_01853": 1572,
##     "OG_01854": 1573,
##     "OG_01855": 1574,
##     "OG_01856": 1575,
##     "OG_01857": 1576,
##     "OG_01858": 1577,
##     "OG_01860": 1578,
##     "OG_01861": 1579,
##     "OG_01862": 1580,
##     "OG_01863": 1581,
##     "OG_01864": 1582,
##     "OG_01869": 1583,
##     "OG_01870": 1584,
##     "OG_01871": 1585,
##     "OG_01872": 1586,
##     "OG_01873": 1587,
##     "OG_01874": 1588,
##     "OG_01875": 1589,
##     "OG_01877": 1590,
##     "OG_01876": 1591,
##     "OG_01879": 1592,
##     "OG_01880": 1593,
##     "OG_01881": 1594,
##     "OG_01882": 1595,
##     "OG_01883": 1596,
##     "OG_01885": 1597,
##     "OG_01886": 1598,
##     "OG_01884": 1599,
##     "OG_01888": 1600,
##     "OG_01887": 1601,
##     "OG_01890": 1602,
##     "OG_01889": 1603,
##     "OG_01891": 1604,
##     "OG_01893": 1605,
##     "OG_01894": 1606,
##     "OG_01895": 1607,
##     "OG_01896": 1608,
##     "OG_01898": 1609,
##     "OG_01899": 1610,
##     "OG_01897": 1611,
##     "OG_01900": 1612,
##     "OG_01901": 1613,
##     "OG_01902": 1614,
##     "OG_01903": 1615,
##     "OG_01904": 1616,
##     "OG_01905": 1617,
##     "OG_01906": 1618,
##     "OG_01907": 1619,
##     "OG_01908": 1620,
##     "OG_01909": 1621,
##     "OG_01911": 1622,
##     "OG_01912": 1623,
##     "OG_01913": 1624,
##     "OG_01915": 1625,
##     "OG_01914": 1626,
##     "OG_01916": 1627,
##     "OG_01917": 1628,
##     "OG_01918": 1629,
##     "OG_01919": 1630,
##     "OG_01920": 1631,
##     "OG_01921": 1632,
##     "OG_01922": 1633,
##     "OG_01923": 1634,
##     "OG_01924": 1635,
##     "OG_01925": 1636,
##     "OG_01930": 1637,
##     "OG_01931": 1638,
##     "OG_01926": 1639,
##     "OG_01927": 1640,
##     "OG_01928": 1641,
##     "OG_01933": 1642,
##     "OG_01934": 1643,
##     "OG_01935": 1644,
##     "OG_01936": 1645,
##     "OG_01937": 1646,
##     "OG_01938": 1647,
##     "OG_01939": 1648,
##     "OG_01940": 1649,
##     "OG_01941": 1650,
##     "OG_01947": 1651,
##     "OG_01942": 1652,
##     "OG_01943": 1653,
##     "OG_01944": 1654,
##     "OG_01945": 1655,
##     "OG_01946": 1656,
##     "OG_01948": 1657,
##     "OG_01949": 1658,
##     "OG_01952": 1659,
##     "OG_01953": 1660,
##     "OG_01950": 1661,
##     "OG_01951": 1662,
##     "OG_01954": 1663,
##     "OG_01955": 1664,
##     "OG_01956": 1665,
##     "OG_01957": 1666,
##     "OG_01958": 1667,
##     "OG_01960": 1668,
##     "OG_01971": 1669,
##     "OG_01962": 1670,
##     "OG_01963": 1671,
##     "OG_01964": 1672,
##     "OG_01965": 1673,
##     "OG_01966": 1674,
##     "OG_01967": 1675,
##     "OG_01968": 1676,
##     "OG_01969": 1677,
##     "OG_01970": 1678,
##     "OG_01973": 1679,
##     "OG_01975": 1680,
##     "OG_01977": 1681,
##     "OG_01978": 1682,
##     "OG_01979": 1683,
##     "OG_01980": 1684,
##     "OG_01981": 1685,
##     "OG_01998": 1686,
##     "OG_01999": 1687,
##     "OG_01997": 1688,
##     "OG_02009": 1689,
##     "OG_02001": 1690,
##     "OG_02000": 1691,
##     "OG_02002": 1692,
##     "OG_02003": 1693,
##     "OG_02004": 1694,
##     "OG_02006": 1695,
##     "OG_02007": 1696,
##     "OG_02008": 1697,
##     "OG_01983": 1698,
##     "OG_01984": 1699,
##     "OG_01985": 1700,
##     "OG_01986": 1701,
##     "OG_01987": 1702,
##     "OG_01988": 1703,
##     "OG_01990": 1704,
##     "OG_01991": 1705,
##     "OG_01992": 1706,
##     "OG_01993": 1707,
##     "OG_01994": 1708,
##     "OG_01995": 1709,
##     "OG_01996": 1710,
##     "OG_02015": 1711,
##     "OG_02010": 1712,
##     "OG_02011": 1713,
##     "OG_02012": 1714,
##     "OG_02014": 1715,
##     "OG_02036": 1716,
##     "OG_02037": 1717,
##     "OG_02039": 1718,
##     "OG_02030": 1719,
##     "OG_02032": 1720,
##     "OG_02016": 1721,
##     "OG_02017": 1722,
##     "OG_02018": 1723,
##     "OG_02021": 1724,
##     "OG_02022": 1725,
##     "OG_02023": 1726,
##     "OG_02024": 1727,
##     "OG_02025": 1728,
##     "OG_02026": 1729,
##     "OG_02027": 1730,
##     "OG_02028": 1731,
##     "OG_02029": 1732,
##     "OG_02031": 1733,
##     "OG_02033": 1734,
##     "OG_02034": 1735,
##     "OG_02035": 1736,
##     "OG_02042": 1737,
##     "OG_02041": 1738,
##     "OG_02040": 1739,
##     "OG_02043": 1740,
##     "OG_02044": 1741,
##     "OG_02045": 1742,
##     "OG_02046": 1743,
##     "OG_02048": 1744,
##     "OG_02059": 1745,
##     "OG_02060": 1746,
##     "OG_02049": 1747,
##     "OG_02051": 1748,
##     "OG_02052": 1749,
##     "OG_02053": 1750,
##     "OG_02054": 1751,
##     "OG_02055": 1752,
##     "OG_02056": 1753,
##     "OG_02057": 1754,
##     "OG_02058": 1755,
##     "OG_02061": 1756,
##     "OG_02062": 1757,
##     "OG_02063": 1758,
##     "OG_02064": 1759,
##     "OG_02065": 1760,
##     "OG_02066": 1761,
##     "OG_02067": 1762,
##     "OG_02070": 1763,
##     "OG_02071": 1764,
##     "OG_02068": 1765,
##     "OG_02069": 1766,
##     "OG_02072": 1767,
##     "OG_02073": 1768,
##     "OG_02074": 1769,
##     "OG_02075": 1770,
##     "OG_02076": 1771,
##     "OG_02077": 1772,
##     "OG_02078": 1773,
##     "OG_02079": 1774,
##     "OG_02080": 1775,
##     "OG_02081": 1776,
##     "OG_02082": 1777,
##     "OG_02083": 1778,
##     "OG_02084": 1779,
##     "OG_02087": 1780,
##     "OG_02085": 1781,
##     "OG_02089": 1782,
##     "OG_02088": 1783,
##     "OG_02090": 1784,
##     "OG_02091": 1785,
##     "OG_02093": 1786,
##     "OG_02094": 1787,
##     "OG_02095": 1788,
##     "OG_02096": 1789,
##     "OG_02097": 1790,
##     "OG_02098": 1791,
##     "OG_02099": 1792,
##     "OG_02114": 1793,
##     "OG_02115": 1794,
##     "OG_02116": 1795,
##     "OG_02118": 1796,
##     "OG_02119": 1797,
##     "OG_02120": 1798,
##     "OG_02121": 1799,
##     "OG_02122": 1800,
##     "OG_02123": 1801,
##     "OG_02102": 1802,
##     "OG_02103": 1803,
##     "OG_02104": 1804,
##     "OG_02105": 1805,
##     "OG_02106": 1806,
##     "OG_02107": 1807,
##     "OG_02109": 1808,
##     "OG_02110": 1809,
##     "OG_02111": 1810,
##     "OG_02112": 1811,
##     "OG_02113": 1812,
##     "OG_02124": 1813,
##     "OG_02126": 1814,
##     "OG_02127": 1815,
##     "OG_02128": 1816,
##     "OG_02129": 1817,
##     "OG_02130": 1818,
##     "OG_02131": 1819,
##     "OG_02132": 1820,
##     "OG_02147": 1821,
##     "OG_02148": 1822,
##     "OG_02150": 1823,
##     "OG_02134": 1824,
##     "OG_02135": 1825,
##     "OG_02136": 1826,
##     "OG_02137": 1827,
##     "OG_02139": 1828,
##     "OG_02140": 1829,
##     "OG_02141": 1830,
##     "OG_02142": 1831,
##     "OG_02144": 1832,
##     "OG_02145": 1833,
##     "OG_02146": 1834,
##     "OG_02159": 1835,
##     "OG_02160": 1836,
##     "OG_02155": 1837,
##     "OG_02152": 1838,
##     "OG_02153": 1839,
##     "OG_02156": 1840,
##     "OG_02157": 1841,
##     "OG_02158": 1842,
##     "OG_02163": 1843,
##     "OG_02178": 1844,
##     "OG_02179": 1845,
##     "OG_02180": 1846,
##     "OG_02164": 1847,
##     "OG_02165": 1848,
##     "OG_02166": 1849,
##     "OG_02167": 1850,
##     "OG_02168": 1851,
##     "OG_02169": 1852,
##     "OG_02170": 1853,
##     "OG_02172": 1854,
##     "OG_02173": 1855,
##     "OG_02174": 1856,
##     "OG_02175": 1857,
##     "OG_02186": 1858,
##     "OG_02187": 1859,
##     "OG_02184": 1860,
##     "OG_02185": 1861,
##     "OG_02181": 1862,
##     "OG_02182": 1863,
##     "OG_02183": 1864,
##     "OG_02188": 1865,
##     "OG_02189": 1866,
##     "OG_02190": 1867,
##     "OG_02191": 1868,
##     "OG_02192": 1869,
##     "OG_02193": 1870,
##     "OG_02194": 1871,
##     "OG_02195": 1872,
##     "OG_02196": 1873,
##     "OG_02197": 1874,
##     "OG_02198": 1875,
##     "OG_02201": 1876,
##     "OG_02199": 1877,
##     "OG_02200": 1878,
##     "OG_02202": 1879,
##     "OG_02203": 1880,
##     "OG_02204": 1881,
##     "OG_02205": 1882,
##     "OG_02206": 1883,
##     "OG_02208": 1884,
##     "OG_02207": 1885,
##     "OG_02210": 1886,
##     "OG_02211": 1887,
##     "OG_02209": 1888,
##     "OG_02212": 1889,
##     "OG_02214": 1890,
##     "OG_02216": 1891,
##     "OG_02217": 1892,
##     "OG_02231": 1893,
##     "OG_02233": 1894,
##     "OG_02235": 1895,
##     "OG_02236": 1896,
##     "OG_02232": 1897,
##     "OG_02237": 1898,
##     "OG_02220": 1899,
##     "OG_02223": 1900,
##     "OG_02224": 1901,
##     "OG_02225": 1902,
##     "OG_02226": 1903,
##     "OG_02227": 1904,
##     "OG_02228": 1905,
##     "OG_02229": 1906,
##     "OG_02230": 1907,
##     "OG_02241": 1908,
##     "OG_02238": 1909,
##     "OG_02239": 1910,
##     "OG_02240": 1911,
##     "OG_02248": 1912,
##     "OG_02242": 1913,
##     "OG_02243": 1914,
##     "OG_02244": 1915,
##     "OG_02245": 1916,
##     "OG_02246": 1917,
##     "OG_02247": 1918,
##     "OG_02249": 1919,
##     "OG_02250": 1920,
##     "OG_02251": 1921,
##     "OG_02253": 1922,
##     "OG_02254": 1923,
##     "OG_02255": 1924,
##     "OG_02257": 1925,
##     "OG_02256": 1926,
##     "OG_02258": 1927,
##     "OG_02259": 1928,
##     "OG_02266": 1929,
##     "OG_02260": 1930,
##     "OG_02261": 1931,
##     "OG_02263": 1932,
##     "OG_02264": 1933,
##     "OG_02267": 1934,
##     "OG_02268": 1935,
##     "OG_02269": 1936,
##     "OG_02271": 1937,
##     "OG_02270": 1938,
##     "OG_02272": 1939,
##     "OG_02273": 1940,
##     "OG_02275": 1941,
##     "OG_02276": 1942,
##     "OG_02277": 1943,
##     "OG_02278": 1944,
##     "OG_02280": 1945,
##     "OG_02279": 1946,
##     "OG_02281": 1947,
##     "OG_02282": 1948,
##     "OG_02283": 1949,
##     "OG_02284": 1950,
##     "OG_02287": 1951,
##     "OG_02288": 1952,
##     "OG_02289": 1953,
##     "OG_02290": 1954,
##     "OG_02291": 1955,
##     "OG_02292": 1956,
##     "OG_02299": 1957,
##     "OG_02300": 1958,
##     "OG_02293": 1959,
##     "OG_02294": 1960,
##     "OG_02295": 1961,
##     "OG_02296": 1962,
##     "OG_02298": 1963,
##     "OG_02309": 1964,
##     "OG_02310": 1965,
##     "OG_02311": 1966,
##     "OG_02301": 1967,
##     "OG_02302": 1968,
##     "OG_02303": 1969,
##     "OG_02304": 1970,
##     "OG_02305": 1971,
##     "OG_02306": 1972,
##     "OG_02307": 1973,
##     "OG_02308": 1974,
##     "OG_02312": 1975,
##     "OG_02314": 1976,
##     "OG_02315": 1977,
##     "OG_02316": 1978,
##     "OG_02317": 1979,
##     "OG_02319": 1980,
##     "OG_02320": 1981,
##     "OG_02322": 1982,
##     "OG_02323": 1983,
##     "OG_02325": 1984,
##     "OG_02328": 1985,
##     "OG_02329": 1986,
##     "OG_02330": 1987,
##     "OG_02333": 1988,
##     "OG_02332": 1989,
##     "OG_02335": 1990,
##     "OG_02331": 1991,
##     "OG_02336": 1992,
##     "OG_02337": 1993,
##     "OG_02346": 1994,
##     "OG_02338": 1995,
##     "OG_02339": 1996,
##     "OG_02340": 1997,
##     "OG_02341": 1998,
##     "OG_02342": 1999,
##     "OG_02343": 2000,
##     "OG_02345": 2001,
##     "OG_02348": 2002,
##     "OG_02349": 2003,
##     "OG_02350": 2004,
##     "OG_02353": 2005,
##     "OG_02354": 2006,
##     "OG_02366": 2007,
##     "OG_02355": 2008,
##     "OG_02356": 2009,
##     "OG_02357": 2010,
##     "OG_02358": 2011,
##     "OG_02367": 2012,
##     "OG_02359": 2013,
##     "OG_02360": 2014,
##     "OG_02361": 2015,
##     "OG_02362": 2016,
##     "OG_02363": 2017,
##     "OG_02364": 2018,
##     "OG_02382": 2019,
##     "OG_02368": 2020,
##     "OG_02369": 2021,
##     "OG_02370": 2022,
##     "OG_02371": 2023,
##     "OG_02372": 2024,
##     "OG_02373": 2025,
##     "OG_02374": 2026,
##     "OG_02375": 2027,
##     "OG_02376": 2028,
##     "OG_02377": 2029,
##     "OG_02378": 2030,
##     "OG_02379": 2031,
##     "OG_02380": 2032,
##     "OG_02381": 2033,
##     "OG_02383": 2034,
##     "OG_02395": 2035,
##     "OG_02399": 2036,
##     "OG_02396": 2037,
##     "OG_02400": 2038,
##     "OG_02384": 2039,
##     "OG_02385": 2040,
##     "OG_02386": 2041,
##     "OG_02388": 2042,
##     "OG_02390": 2043,
##     "OG_02392": 2044,
##     "OG_02393": 2045,
##     "OG_02401": 2046,
##     "OG_02402": 2047,
##     "OG_02403": 2048,
##     "OG_02405": 2049,
##     "OG_02404": 2050,
##     "OG_02406": 2051,
##     "OG_02409": 2052,
##     "OG_02410": 2053,
##     "OG_02413": 2054,
##     "OG_02411": 2055,
##     "OG_02414": 2056,
##     "OG_02415": 2057,
##     "OG_02416": 2058,
##     "OG_02407": 2059,
##     "OG_02417": 2060,
##     "OG_02418": 2061,
##     "OG_02419": 2062,
##     "OG_02420": 2063,
##     "OG_02422": 2064,
##     "OG_02423": 2065,
##     "OG_02424": 2066,
##     "OG_02425": 2067,
##     "OG_02427": 2068,
##     "OG_02428": 2069,
##     "OG_02429": 2070,
##     "OG_02430": 2071,
##     "OG_02431": 2072,
##     "OG_02432": 2073,
##     "OG_02433": 2074,
##     "OG_02434": 2075,
##     "OG_02435": 2076,
##     "OG_02436": 2077,
##     "OG_02440": 2078,
##     "OG_02441": 2079,
##     "OG_02437": 2080,
##     "OG_02438": 2081,
##     "OG_02442": 2082,
##     "OG_02443": 2083,
##     "OG_02445": 2084,
##     "OG_02446": 2085,
##     "OG_02447": 2086,
##     "OG_02448": 2087,
##     "OG_02450": 2088,
##     "OG_02451": 2089,
##     "OG_02452": 2090,
##     "OG_02453": 2091,
##     "OG_02454": 2092,
##     "OG_02455": 2093,
##     "OG_02456": 2094,
##     "OG_02458": 2095,
##     "OG_02459": 2096,
##     "OG_02460": 2097,
##     "OG_02464": 2098,
##     "OG_02461": 2099,
##     "OG_02462": 2100,
##     "OG_02463": 2101,
##     "OG_02466": 2102,
##     "OG_02467": 2103,
##     "OG_02468": 2104,
##     "OG_02469": 2105,
##     "OG_02470": 2106,
##     "OG_02471": 2107,
##     "OG_02472": 2108,
##     "OG_02473": 2109,
##     "OG_02474": 2110,
##     "OG_02475": 2111,
##     "OG_02476": 2112,
##     "OG_02477": 2113,
##     "OG_02478": 2114,
##     "OG_02479": 2115,
##     "OG_02480": 2116,
##     "OG_02481": 2117,
##     "OG_02482": 2118,
##     "OG_02483": 2119,
##     "OG_02484": 2120,
##     "OG_02485": 2121,
##     "OG_02486": 2122,
##     "OG_02487": 2123,
##     "OG_02491": 2124,
##     "OG_02492": 2125,
##     "OG_02488": 2126,
##     "OG_02489": 2127,
##     "OG_02490": 2128,
##     "OG_02493": 2129,
##     "OG_02494": 2130,
##     "OG_02495": 2131,
##     "OG_02497": 2132,
##     "OG_02498": 2133,
##     "OG_02499": 2134,
##     "OG_02500": 2135,
##     "OG_02501": 2136,
##     "OG_02503": 2137,
##     "OG_02504": 2138,
##     "OG_02505": 2139,
##     "OG_02506": 2140,
##     "OG_02507": 2141,
##     "OG_02508": 2142,
##     "OG_02512": 2143,
##     "OG_02513": 2144,
##     "OG_02511": 2145,
##     "OG_02515": 2146,
##     "OG_02518": 2147,
##     "OG_02517": 2148,
##     "OG_02516": 2149,
##     "OG_02519": 2150,
##     "OG_02523": 2151,
##     "OG_02520": 2152,
##     "OG_02521": 2153,
##     "OG_02522": 2154,
##     "OG_02525": 2155,
##     "OG_02526": 2156,
##     "OG_02527": 2157,
##     "OG_02528": 2158,
##     "OG_02529": 2159,
##     "OG_02531": 2160,
##     "OG_02532": 2161,
##     "OG_02537": 2162,
##     "OG_02533": 2163,
##     "OG_02534": 2164,
##     "OG_02535": 2165,
##     "OG_02539": 2166,
##     "OG_02538": 2167,
##     "OG_02540": 2168,
##     "OG_02542": 2169,
##     "OG_02543": 2170,
##     "OG_02541": 2171,
##     "OG_02544": 2172,
##     "OG_02545": 2173,
##     "OG_02546": 2174,
##     "OG_02547": 2175,
##     "OG_02548": 2176,
##     "OG_02549": 2177,
##     "OG_02550": 2178,
##     "OG_02551": 2179,
##     "OG_02552": 2180,
##     "OG_02553": 2181,
##     "OG_02554": 2182,
##     "OG_02563": 2183,
##     "OG_02564": 2184,
##     "OG_02565": 2185,
##     "OG_02566": 2186,
##     "OG_02557": 2187,
##     "OG_02560": 2188,
##     "OG_02562": 2189,
##     "OG_02568": 2190,
##     "OG_02567": 2191,
##     "OG_02569": 2192,
##     "OG_02570": 2193,
##     "OG_02573": 2194,
##     "OG_02574": 2195,
##     "OG_02575": 2196,
##     "OG_02572": 2197,
##     "OG_02576": 2198,
##     "OG_02577": 2199,
##     "OG_02578": 2200,
##     "OG_02579": 2201,
##     "OG_02580": 2202,
##     "OG_02585": 2203,
##     "OG_02581": 2204,
##     "OG_02583": 2205,
##     "OG_02584": 2206,
##     "OG_02586": 2207,
##     "OG_02587": 2208,
##     "OG_02588": 2209,
##     "OG_02590": 2210,
##     "OG_02589": 2211,
##     "OG_02591": 2212,
##     "OG_02592": 2213,
##     "OG_02593": 2214,
##     "OG_02594": 2215,
##     "OG_02595": 2216,
##     "OG_02596": 2217,
##     "OG_02598": 2218,
##     "OG_02610": 2219,
##     "OG_02609": 2220,
##     "OG_02599": 2221,
##     "OG_02601": 2222,
##     "OG_02602": 2223,
##     "OG_02603": 2224,
##     "OG_02605": 2225,
##     "OG_02606": 2226,
##     "OG_02607": 2227,
##     "OG_02608": 2228,
##     "OG_02614": 2229,
##     "OG_02611": 2230,
##     "OG_02612": 2231,
##     "OG_02618": 2232,
##     "OG_02617": 2233,
##     "OG_02619": 2234,
##     "OG_02616": 2235,
##     "OG_02620": 2236,
##     "OG_02621": 2237,
##     "OG_02622": 2238,
##     "OG_02623": 2239,
##     "OG_02624": 2240,
##     "OG_02625": 2241,
##     "OG_02634": 2242,
##     "OG_02635": 2243,
##     "OG_02636": 2244,
##     "OG_02637": 2245,
##     "OG_02627": 2246,
##     "OG_02628": 2247,
##     "OG_02629": 2248,
##     "OG_02630": 2249,
##     "OG_02631": 2250,
##     "OG_02632": 2251,
##     "OG_02633": 2252,
##     "OG_02639": 2253,
##     "OG_02640": 2254,
##     "OG_02641": 2255,
##     "OG_02642": 2256,
##     "OG_02643": 2257,
##     "OG_02644": 2258,
##     "OG_02645": 2259,
##     "OG_02646": 2260,
##     "OG_02647": 2261,
##     "OG_02648": 2262,
##     "OG_02649": 2263,
##     "OG_02650": 2264,
##     "OG_02651": 2265,
##     "OG_02658": 2266,
##     "OG_02659": 2267,
##     "OG_02652": 2268,
##     "OG_02653": 2269,
##     "OG_02655": 2270,
##     "OG_02656": 2271,
##     "OG_02660": 2272,
##     "OG_02661": 2273,
##     "OG_02662": 2274,
##     "OG_02663": 2275,
##     "OG_02665": 2276,
##     "OG_02664": 2277,
##     "OG_02666": 2278,
##     "OG_02667": 2279,
##     "OG_02668": 2280,
##     "OG_02674": 2281,
##     "OG_02670": 2282,
##     "OG_02671": 2283,
##     "OG_02672": 2284,
##     "OG_02673": 2285,
##     "OG_02676": 2286,
##     "OG_02678": 2287,
##     "OG_02675": 2288,
##     "OG_02682": 2289,
##     "OG_02679": 2290,
##     "OG_02680": 2291,
##     "OG_02681": 2292,
##     "OG_02683": 2293,
##     "OG_02685": 2294,
##     "OG_02686": 2295,
##     "OG_02687": 2296,
##     "OG_02691": 2297,
##     "OG_02689": 2298,
##     "OG_02690": 2299,
##     "OG_02692": 2300,
##     "OG_02693": 2301,
##     "OG_02694": 2302,
##     "OG_02695": 2303,
##     "OG_02696": 2304,
##     "OG_02697": 2305,
##     "OG_02698": 2306,
##     "OG_02699": 2307,
##     "OG_02701": 2308,
##     "OG_02702": 2309,
##     "OG_02703": 2310,
##     "OG_02705": 2311,
##     "OG_02706": 2312,
##     "OG_02707": 2313,
##     "OG_02708": 2314,
##     "OG_02709": 2315,
##     "OG_02711": 2316,
##     "OG_02712": 2317,
##     "OG_02714": 2318,
##     "OG_02717": 2319,
##     "OG_02718": 2320,
##     "OG_02719": 2321,
##     "OG_02720": 2322,
##     "OG_02721": 2323,
##     "OG_02722": 2324,
##     "OG_02724": 2325,
##     "OG_02727": 2326,
##     "OG_02728": 2327,
##     "OG_02730": 2328,
##     "OG_02729": 2329,
##     "OG_02733": 2330,
##     "OG_02734": 2331,
##     "OG_02739": 2332,
##     "OG_02738": 2333,
##     "OG_02735": 2334,
##     "OG_02736": 2335,
##     "OG_02740": 2336,
##     "OG_02741": 2337,
##     "OG_02743": 2338,
##     "OG_02744": 2339,
##     "OG_02747": 2340,
##     "OG_02748": 2341,
##     "OG_02749": 2342,
##     "OG_02750": 2343,
##     "OG_02754": 2344,
##     "OG_02751": 2345,
##     "OG_02752": 2346,
##     "OG_02753": 2347,
##     "OG_02756": 2348,
##     "OG_02757": 2349,
##     "OG_02758": 2350,
##     "OG_02763": 2351,
##     "OG_02764": 2352,
##     "OG_02765": 2353,
##     "OG_02766": 2354,
##     "OG_02759": 2355,
##     "OG_02760": 2356,
##     "OG_02761": 2357,
##     "OG_02762": 2358,
##     "OG_02768": 2359,
##     "OG_02770": 2360,
##     "OG_02772": 2361,
##     "OG_02774": 2362,
##     "OG_02773": 2363,
##     "OG_02771": 2364,
##     "OG_02775": 2365,
##     "OG_02776": 2366,
##     "OG_02777": 2367,
##     "OG_02779": 2368,
##     "OG_02780": 2369,
##     "OG_02781": 2370,
##     "OG_02783": 2371,
##     "OG_02784": 2372,
##     "OG_02788": 2373,
##     "OG_02786": 2374,
##     "OG_02787": 2375,
##     "OG_02785": 2376,
##     "OG_02789": 2377,
##     "OG_02790": 2378,
##     "OG_02791": 2379,
##     "OG_02792": 2380,
##     "OG_02793": 2381,
##     "OG_02794": 2382,
##     "OG_02796": 2383,
##     "OG_02795": 2384,
##     "OG_02797": 2385,
##     "OG_02798": 2386,
##     "OG_02799": 2387,
##     "OG_02812": 2388,
##     "OG_02811": 2389,
##     "OG_02813": 2390,
##     "OG_02808": 2391,
##     "OG_02809": 2392,
##     "OG_02810": 2393,
##     "OG_02800": 2394,
##     "OG_02803": 2395,
##     "OG_02804": 2396,
##     "OG_02805": 2397,
##     "OG_02806": 2398,
##     "OG_02807": 2399,
##     "OG_02834": 2400,
##     "OG_02835": 2401,
##     "OG_02836": 2402,
##     "OG_02837": 2403,
##     "OG_02838": 2404,
##     "OG_02814": 2405,
##     "OG_02815": 2406,
##     "OG_02816": 2407,
##     "OG_02817": 2408,
##     "OG_02818": 2409,
##     "OG_02819": 2410,
##     "OG_02820": 2411,
##     "OG_02821": 2412,
##     "OG_02822": 2413,
##     "OG_02823": 2414,
##     "OG_02825": 2415,
##     "OG_02826": 2416,
##     "OG_02828": 2417,
##     "OG_02829": 2418,
##     "OG_02830": 2419,
##     "OG_02831": 2420,
##     "OG_02833": 2421,
##     "OG_02839": 2422,
##     "OG_02840": 2423,
##     "OG_02841": 2424,
##     "OG_02842": 2425,
##     "OG_02843": 2426,
##     "OG_02844": 2427,
##     "OG_02845": 2428,
##     "OG_02846": 2429,
##     "OG_02847": 2430,
##     "OG_02848": 2431,
##     "OG_02849": 2432,
##     "OG_02850": 2433,
##     "OG_02851": 2434,
##     "OG_02853": 2435,
##     "OG_02857": 2436,
##     "OG_02858": 2437,
##     "OG_02854": 2438,
##     "OG_02855": 2439,
##     "OG_02864": 2440,
##     "OG_02865": 2441,
##     "OG_02866": 2442,
##     "OG_02859": 2443,
##     "OG_02860": 2444,
##     "OG_02862": 2445,
##     "OG_02871": 2446,
##     "OG_02867": 2447,
##     "OG_02868": 2448,
##     "OG_02869": 2449,
##     "OG_02870": 2450,
##     "OG_02874": 2451,
##     "OG_02875": 2452,
##     "OG_02876": 2453,
##     "OG_02872": 2454,
##     "OG_02877": 2455,
##     "OG_02878": 2456,
##     "OG_02879": 2457,
##     "OG_02881": 2458,
##     "OG_02883": 2459,
##     "OG_02884": 2460,
##     "OG_02886": 2461,
##     "OG_02892": 2462,
##     "OG_02887": 2463,
##     "OG_02888": 2464,
##     "OG_02889": 2465,
##     "OG_02891": 2466,
##     "OG_02893": 2467,
##     "OG_02894": 2468,
##     "OG_02896": 2469,
##     "OG_02895": 2470,
##     "OG_02899": 2471,
##     "OG_02900": 2472,
##     "OG_02901": 2473,
##     "OG_02902": 2474,
##     "OG_02904": 2475,
##     "OG_02905": 2476,
##     "OG_02906": 2477,
##     "OG_02907": 2478,
##     "OG_02908": 2479,
##     "OG_02909": 2480,
##     "OG_02910": 2481,
##     "OG_02922": 2482,
##     "OG_02923": 2483,
##     "OG_02926": 2484,
##     "OG_02925": 2485,
##     "OG_02914": 2486,
##     "OG_02911": 2487,
##     "OG_02912": 2488,
##     "OG_02913": 2489,
##     "OG_02915": 2490,
##     "OG_02916": 2491,
##     "OG_02917": 2492,
##     "OG_02918": 2493,
##     "OG_02919": 2494,
##     "OG_02920": 2495,
##     "OG_02921": 2496,
##     "OG_02927": 2497,
##     "OG_02928": 2498,
##     "OG_02933": 2499,
##     "OG_02931": 2500,
##     "OG_02932": 2501,
##     "OG_02929": 2502,
##     "OG_02930": 2503,
##     "OG_02935": 2504,
##     "OG_02934": 2505,
##     "OG_02938": 2506,
##     "OG_02939": 2507,
##     "OG_02940": 2508,
##     "OG_02943": 2509,
##     "OG_02944": 2510,
##     "OG_02946": 2511,
##     "OG_02945": 2512,
##     "OG_02947": 2513,
##     "OG_02948": 2514,
##     "OG_02949": 2515,
##     "OG_02951": 2516,
##     "OG_02952": 2517,
##     "OG_02953": 2518,
##     "OG_02954": 2519,
##     "OG_02955": 2520,
##     "OG_02956": 2521,
##     "OG_02957": 2522,
##     "OG_02959": 2523,
##     "OG_02960": 2524,
##     "OG_02962": 2525,
##     "OG_02964": 2526,
##     "OG_02966": 2527,
##     "OG_02967": 2528,
##     "OG_02968": 2529,
##     "OG_02975": 2530,
##     "OG_02976": 2531,
##     "OG_02977": 2532,
##     "OG_02969": 2533,
##     "OG_02971": 2534,
##     "OG_02972": 2535,
##     "OG_02973": 2536,
##     "OG_02974": 2537,
##     "OG_02978": 2538,
##     "OG_02979": 2539,
##     "OG_02982": 2540,
##     "OG_02983": 2541,
##     "OG_02984": 2542,
##     "OG_02985": 2543,
##     "OG_02986": 2544,
##     "OG_02987": 2545,
##     "OG_02988": 2546,
##     "OG_02990": 2547,
##     "OG_02991": 2548,
##     "OG_02992": 2549,
##     "OG_02993": 2550,
##     "OG_02996": 2551,
##     "OG_02994": 2552,
##     "OG_02995": 2553,
##     "OG_02997": 2554,
##     "OG_03002": 2555,
##     "OG_03004": 2556,
##     "OG_03005": 2557,
##     "OG_03006": 2558,
##     "OG_03007": 2559,
##     "OG_02998": 2560,
##     "OG_02999": 2561,
##     "OG_03000": 2562,
##     "OG_03001": 2563,
##     "OG_03008": 2564,
##     "OG_03009": 2565,
##     "OG_03010": 2566,
##     "OG_03018": 2567,
##     "OG_03019": 2568,
##     "OG_03012": 2569,
##     "OG_03013": 2570,
##     "OG_03014": 2571,
##     "OG_03016": 2572,
##     "OG_03017": 2573,
##     "OG_03020": 2574,
##     "OG_03021": 2575,
##     "OG_03023": 2576,
##     "OG_03039": 2577,
##     "OG_03041": 2578,
##     "OG_03042": 2579,
##     "OG_03027": 2580,
##     "OG_03024": 2581,
##     "OG_03026": 2582,
##     "OG_03028": 2583,
##     "OG_03030": 2584,
##     "OG_03031": 2585,
##     "OG_03032": 2586,
##     "OG_03033": 2587,
##     "OG_03034": 2588,
##     "OG_03035": 2589,
##     "OG_03036": 2590,
##     "OG_03037": 2591,
##     "OG_03038": 2592,
##     "OG_03043": 2593,
##     "OG_03044": 2594,
##     "OG_03045": 2595,
##     "OG_03046": 2596,
##     "OG_03052": 2597,
##     "OG_03048": 2598,
##     "OG_03049": 2599,
##     "OG_03050": 2600,
##     "OG_03051": 2601,
##     "OG_03053": 2602,
##     "OG_03054": 2603,
##     "OG_03055": 2604,
##     "OG_03056": 2605,
##     "OG_03059": 2606,
##     "OG_03060": 2607,
##     "OG_03057": 2608,
##     "OG_03058": 2609,
##     "OG_03061": 2610,
##     "OG_03062": 2611,
##     "OG_03063": 2612,
##     "OG_03064": 2613,
##     "OG_03065": 2614,
##     "OG_03066": 2615,
##     "OG_03067": 2616,
##     "OG_03068": 2617,
##     "OG_03069": 2618,
##     "OG_03070": 2619,
##     "OG_03071": 2620,
##     "OG_03072": 2621,
##     "OG_03094": 2622,
##     "OG_03095": 2623,
##     "OG_03096": 2624,
##     "OG_03093": 2625,
##     "OG_03097": 2626,
##     "OG_03099": 2627,
##     "OG_03102": 2628,
##     "OG_03100": 2629,
##     "OG_03101": 2630,
##     "OG_03103": 2631,
##     "OG_03104": 2632,
##     "OG_03105": 2633,
##     "OG_03107": 2634,
##     "OG_03089": 2635,
##     "OG_03074": 2636,
##     "OG_03075": 2637,
##     "OG_03076": 2638,
##     "OG_03077": 2639,
##     "OG_03078": 2640,
##     "OG_03079": 2641,
##     "OG_03080": 2642,
##     "OG_03081": 2643,
##     "OG_03083": 2644,
##     "OG_03084": 2645,
##     "OG_03085": 2646,
##     "OG_03086": 2647,
##     "OG_03087": 2648,
##     "OG_03088": 2649,
##     "OG_03091": 2650,
##     "OG_03092": 2651,
##     "OG_03108": 2652,
##     "OG_03111": 2653,
##     "OG_03109": 2654,
##     "OG_03112": 2655,
##     "OG_03113": 2656,
##     "OG_03114": 2657,
##     "OG_03116": 2658,
##     "OG_03115": 2659,
##     "OG_03117": 2660,
##     "OG_03118": 2661,
##     "OG_03119": 2662,
##     "OG_03120": 2663,
##     "OG_03121": 2664,
##     "OG_03122": 2665,
##     "OG_03123": 2666,
##     "OG_03124": 2667,
##     "OG_03131": 2668,
##     "OG_03130": 2669,
##     "OG_03132": 2670,
##     "OG_03125": 2671,
##     "OG_03126": 2672,
##     "OG_03128": 2673,
##     "OG_03129": 2674,
##     "OG_03133": 2675,
##     "OG_03136": 2676,
##     "OG_03135": 2677,
##     "OG_03137": 2678,
##     "OG_03138": 2679,
##     "OG_03139": 2680,
##     "OG_03141": 2681,
##     "OG_03142": 2682,
##     "OG_03143": 2683,
##     "OG_03144": 2684,
##     "OG_03145": 2685,
##     "OG_03151": 2686,
##     "OG_03147": 2687,
##     "OG_03148": 2688,
##     "OG_03149": 2689,
##     "OG_03150": 2690,
##     "OG_03152": 2691,
##     "OG_03153": 2692,
##     "OG_03154": 2693,
##     "OG_03155": 2694,
##     "OG_03156": 2695,
##     "OG_03157": 2696,
##     "OG_03158": 2697,
##     "OG_03162": 2698,
##     "OG_03159": 2699,
##     "OG_03160": 2700,
##     "OG_03161": 2701,
##     "OG_03163": 2702,
##     "OG_03164": 2703,
##     "OG_03165": 2704,
##     "OG_03175": 2705,
##     "OG_03176": 2706,
##     "OG_03177": 2707,
##     "OG_03178": 2708,
##     "OG_03180": 2709,
##     "OG_03170": 2710,
##     "OG_03166": 2711,
##     "OG_03167": 2712,
##     "OG_03168": 2713,
##     "OG_03169": 2714,
##     "OG_03171": 2715,
##     "OG_03172": 2716,
##     "OG_03173": 2717,
##     "OG_03181": 2718,
##     "OG_03184": 2719,
##     "OG_03186": 2720,
##     "OG_03190": 2721,
##     "OG_03191": 2722,
##     "OG_03187": 2723,
##     "OG_03188": 2724,
##     "OG_03189": 2725,
##     "OG_03193": 2726,
##     "OG_03194": 2727,
##     "OG_03195": 2728,
##     "OG_03196": 2729,
##     "OG_03198": 2730,
##     "OG_03202": 2731,
##     "OG_03199": 2732,
##     "OG_03200": 2733,
##     "OG_03201": 2734,
##     "OG_03203": 2735,
##     "OG_03204": 2736,
##     "OG_03205": 2737,
##     "OG_03208": 2738,
##     "OG_03206": 2739,
##     "OG_03207": 2740,
##     "OG_03209": 2741,
##     "OG_03215": 2742,
##     "OG_03214": 2743,
##     "OG_03211": 2744,
##     "OG_03212": 2745,
##     "OG_03213": 2746,
##     "OG_03218": 2747,
##     "OG_03216": 2748,
##     "OG_03217": 2749,
##     "OG_03219": 2750,
##     "OG_03220": 2751,
##     "OG_03221": 2752,
##     "OG_03222": 2753,
##     "OG_03223": 2754,
##     "OG_03225": 2755,
##     "OG_03226": 2756,
##     "OG_03227": 2757,
##     "OG_03228": 2758,
##     "OG_03229": 2759,
##     "OG_03232": 2760,
##     "OG_03230": 2761,
##     "OG_03231": 2762,
##     "OG_03233": 2763,
##     "OG_03234": 2764,
##     "OG_03235": 2765,
##     "OG_03236": 2766,
##     "OG_03237": 2767,
##     "OG_03238": 2768,
##     "OG_03239": 2769,
##     "OG_03240": 2770,
##     "OG_03241": 2771,
##     "OG_03243": 2772,
##     "OG_03244": 2773,
##     "OG_03245": 2774,
##     "OG_03246": 2775,
##     "OG_03247": 2776,
##     "OG_03248": 2777,
##     "OG_03249": 2778,
##     "OG_03250": 2779,
##     "OG_03252": 2780,
##     "OG_03251": 2781,
##     "OG_03254": 2782,
##     "OG_03255": 2783,
##     "OG_03258": 2784,
##     "OG_03263": 2785,
##     "OG_03260": 2786,
##     "OG_03261": 2787,
##     "OG_03264": 2788,
##     "OG_03266": 2789,
##     "OG_03267": 2790,
##     "OG_03268": 2791,
##     "OG_03269": 2792,
##     "OG_03270": 2793,
##     "OG_03275": 2794,
##     "OG_03276": 2795,
##     "OG_03277": 2796,
##     "OG_03278": 2797,
##     "OG_03271": 2798,
##     "OG_03273": 2799,
##     "OG_03274": 2800,
##     "OG_03281": 2801,
##     "OG_03283": 2802,
##     "OG_03282": 2803,
##     "OG_03284": 2804,
##     "OG_03285": 2805,
##     "OG_03286": 2806,
##     "OG_03287": 2807,
##     "OG_03288": 2808,
##     "OG_03289": 2809,
##     "OG_03290": 2810,
##     "OG_03291": 2811,
##     "OG_03306": 2812,
##     "OG_03307": 2813,
##     "OG_03303": 2814,
##     "OG_03302": 2815,
##     "OG_03304": 2816,
##     "OG_03305": 2817,
##     "OG_03293": 2818,
##     "OG_03294": 2819,
##     "OG_03295": 2820,
##     "OG_03296": 2821,
##     "OG_03297": 2822,
##     "OG_03298": 2823,
##     "OG_03299": 2824,
##     "OG_03300": 2825,
##     "OG_03301": 2826,
##     "OG_03311": 2827,
##     "OG_03310": 2828,
##     "OG_03308": 2829,
##     "OG_03309": 2830,
##     "OG_03316": 2831,
##     "OG_03312": 2832,
##     "OG_03313": 2833,
##     "OG_03314": 2834,
##     "OG_03317": 2835,
##     "OG_03318": 2836,
##     "OG_03322": 2837,
##     "OG_03319": 2838,
##     "OG_03320": 2839,
##     "OG_03321": 2840,
##     "OG_03323": 2841,
##     "OG_03324": 2842,
##     "OG_03325": 2843,
##     "OG_03326": 2844,
##     "OG_03338": 2845,
##     "OG_03357": 2846,
##     "OG_03358": 2847,
##     "OG_03361": 2848,
##     "OG_03359": 2849,
##     "OG_03360": 2850,
##     "OG_03362": 2851,
##     "OG_03364": 2852,
##     "OG_03340": 2853,
##     "OG_03341": 2854,
##     "OG_03342": 2855,
##     "OG_03343": 2856,
##     "OG_03344": 2857,
##     "OG_03346": 2858,
##     "OG_03347": 2859,
##     "OG_03348": 2860,
##     "OG_03349": 2861,
##     "OG_03350": 2862,
##     "OG_03351": 2863,
##     "OG_03352": 2864,
##     "OG_03353": 2865,
##     "OG_03354": 2866,
##     "OG_03355": 2867,
##     "OG_03356": 2868,
##     "OG_03365": 2869,
##     "OG_03366": 2870,
##     "OG_03367": 2871,
##     "OG_03327": 2872,
##     "OG_03328": 2873,
##     "OG_03330": 2874,
##     "OG_03331": 2875,
##     "OG_03332": 2876,
##     "OG_03333": 2877,
##     "OG_03334": 2878,
##     "OG_03335": 2879,
##     "OG_03336": 2880,
##     "OG_03337": 2881,
##     "OG_03368": 2882,
##     "OG_03373": 2883,
##     "OG_03371": 2884,
##     "OG_03369": 2885,
##     "OG_03379": 2886,
##     "OG_03380": 2887,
##     "OG_03378": 2888,
##     "OG_03381": 2889,
##     "OG_03374": 2890,
##     "OG_03375": 2891,
##     "OG_03376": 2892,
##     "OG_03377": 2893,
##     "OG_03382": 2894,
##     "OG_03383": 2895,
##     "OG_03384": 2896,
##     "OG_03385": 2897,
##     "OG_03387": 2898,
##     "OG_03386": 2899,
##     "OG_03388": 2900,
##     "OG_03389": 2901,
##     "OG_03390": 2902,
##     "OG_03391": 2903,
##     "OG_03392": 2904,
##     "OG_03394": 2905,
##     "OG_03397": 2906,
##     "OG_03398": 2907,
##     "OG_03403": 2908,
##     "OG_03399": 2909,
##     "OG_03400": 2910,
##     "OG_03401": 2911,
##     "OG_03402": 2912,
##     "OG_03404": 2913,
##     "OG_03405": 2914,
##     "OG_03406": 2915,
##     "OG_03416": 2916,
##     "OG_03418": 2917,
##     "OG_03419": 2918,
##     "OG_03410": 2919,
##     "OG_03407": 2920,
##     "OG_03408": 2921,
##     "OG_03409": 2922,
##     "OG_03412": 2923,
##     "OG_03413": 2924,
##     "OG_03414": 2925,
##     "OG_03429": 2926,
##     "OG_03431": 2927,
##     "OG_03421": 2928,
##     "OG_03422": 2929,
##     "OG_03423": 2930,
##     "OG_03424": 2931,
##     "OG_03425": 2932,
##     "OG_03426": 2933,
##     "OG_03427": 2934,
##     "OG_03428": 2935,
##     "OG_03432": 2936,
##     "OG_03433": 2937,
##     "OG_03434": 2938,
##     "OG_03435": 2939,
##     "OG_03436": 2940,
##     "OG_03437": 2941,
##     "OG_03438": 2942,
##     "OG_03440": 2943,
##     "OG_03441": 2944,
##     "OG_03442": 2945,
##     "OG_03443": 2946,
##     "OG_03445": 2947,
##     "OG_03446": 2948,
##     "OG_03447": 2949,
##     "OG_03460": 2950,
##     "OG_03448": 2951,
##     "OG_03449": 2952,
##     "OG_03450": 2953,
##     "OG_03451": 2954,
##     "OG_03452": 2955,
##     "OG_03453": 2956,
##     "OG_03454": 2957,
##     "OG_03455": 2958,
##     "OG_03456": 2959,
##     "OG_03457": 2960,
##     "OG_03458": 2961,
##     "OG_03459": 2962,
##     "OG_03461": 2963,
##     "OG_03462": 2964,
##     "OG_03463": 2965,
##     "OG_03464": 2966,
##     "OG_03465": 2967,
##     "OG_03466": 2968,
##     "OG_03467": 2969,
##     "OG_03482": 2970,
##     "OG_03483": 2971,
##     "OG_03468": 2972,
##     "OG_03469": 2973,
##     "OG_03470": 2974,
##     "OG_03471": 2975,
##     "OG_03472": 2976,
##     "OG_03473": 2977,
##     "OG_03474": 2978,
##     "OG_03475": 2979,
##     "OG_03477": 2980,
##     "OG_03478": 2981,
##     "OG_03480": 2982,
##     "OG_03481": 2983,
##     "OG_03491": 2984,
##     "OG_03492": 2985,
##     "OG_03493": 2986,
##     "OG_03494": 2987,
##     "OG_03495": 2988,
##     "OG_03484": 2989,
##     "OG_03485": 2990,
##     "OG_03486": 2991,
##     "OG_03488": 2992,
##     "OG_03489": 2993,
##     "OG_03490": 2994,
##     "OG_03496": 2995,
##     "OG_03498": 2996,
##     "OG_03499": 2997,
##     "OG_03500": 2998,
##     "OG_03501": 2999,
##     "OG_03502": 3000,
##     "OG_03517": 3001,
##     "OG_03518": 3002,
##     "OG_03519": 3003,
##     "OG_03520": 3004,
##     "OG_03504": 3005,
##     "OG_03505": 3006,
##     "OG_03508": 3007,
##     "OG_03509": 3008,
##     "OG_03510": 3009,
##     "OG_03511": 3010,
##     "OG_03512": 3011,
##     "OG_03513": 3012,
##     "OG_03514": 3013,
##     "OG_03515": 3014,
##     "OG_03516": 3015,
##     "OG_03521": 3016,
##     "OG_03522": 3017,
##     "OG_03523": 3018,
##     "OG_03524": 3019,
##     "OG_03525": 3020,
##     "OG_03526": 3021,
##     "OG_03527": 3022,
##     "OG_03528": 3023,
##     "OG_03530": 3024,
##     "OG_03531": 3025,
##     "OG_03532": 3026,
##     "OG_03533": 3027,
##     "OG_03534": 3028,
##     "OG_03535": 3029,
##     "OG_03536": 3030,
##     "OG_03537": 3031,
##     "OG_03538": 3032,
##     "OG_03539": 3033,
##     "OG_03540": 3034,
##     "OG_03541": 3035,
##     "OG_03546": 3036,
##     "OG_03543": 3037,
##     "OG_03544": 3038,
##     "OG_03545": 3039,
##     "OG_03548": 3040,
##     "OG_03547": 3041,
##     "OG_03549": 3042,
##     "OG_03552": 3043,
##     "OG_03553": 3044,
##     "OG_03554": 3045,
##     "OG_03556": 3046,
##     "OG_03557": 3047,
##     "OG_03568": 3048,
##     "OG_03569": 3049,
##     "OG_03570": 3050,
##     "OG_03571": 3051,
##     "OG_03573": 3052,
##     "OG_03574": 3053,
##     "OG_03558": 3054,
##     "OG_03559": 3055,
##     "OG_03560": 3056,
##     "OG_03561": 3057,
##     "OG_03562": 3058,
##     "OG_03563": 3059,
##     "OG_03564": 3060,
##     "OG_03565": 3061,
##     "OG_03566": 3062,
##     "OG_03577": 3063,
##     "OG_03575": 3064,
##     "OG_03576": 3065,
##     "OG_03578": 3066,
##     "OG_03579": 3067,
##     "OG_03580": 3068,
##     "OG_03581": 3069,
##     "OG_03582": 3070,
##     "OG_03583": 3071,
##     "OG_03587": 3072,
##     "OG_03584": 3073,
##     "OG_03585": 3074,
##     "OG_03586": 3075,
##     "OG_03589": 3076,
##     "OG_03590": 3077,
##     "OG_03591": 3078,
##     "OG_03592": 3079,
##     "OG_03593": 3080,
##     "OG_03594": 3081,
##     "OG_03595": 3082,
##     "OG_03596": 3083,
##     "OG_03597": 3084,
##     "OG_03607": 3085,
##     "OG_03599": 3086,
##     "OG_03600": 3087,
##     "OG_03601": 3088,
##     "OG_03602": 3089,
##     "OG_03603": 3090,
##     "OG_03605": 3091,
##     "OG_03606": 3092,
##     "OG_03609": 3093,
##     "OG_03610": 3094,
##     "OG_03612": 3095,
##     "OG_03613": 3096,
##     "OG_03614": 3097,
##     "OG_03617": 3098,
##     "OG_03619": 3099,
##     "OG_03620": 3100,
##     "OG_03615": 3101,
##     "OG_03616": 3102,
##     "OG_03622": 3103,
##     "OG_03624": 3104,
##     "OG_03623": 3105,
##     "OG_03625": 3106,
##     "OG_03626": 3107,
##     "OG_03627": 3108,
##     "OG_03630": 3109,
##     "OG_03631": 3110,
##     "OG_03632": 3111,
##     "OG_03628": 3112,
##     "OG_03629": 3113,
##     "OG_03633": 3114,
##     "OG_03634": 3115,
##     "OG_03636": 3116,
##     "OG_03638": 3117,
##     "OG_03639": 3118,
##     "OG_03640": 3119,
##     "OG_03642": 3120,
##     "OG_03643": 3121,
##     "OG_03644": 3122,
##     "OG_03645": 3123,
##     "OG_03646": 3124,
##     "OG_03647": 3125,
##     "OG_03648": 3126,
##     "OG_03649": 3127,
##     "OG_03650": 3128,
##     "OG_03651": 3129,
##     "OG_03652": 3130,
##     "OG_03653": 3131,
##     "OG_03654": 3132,
##     "OG_03655": 3133,
##     "OG_03656": 3134,
##     "OG_03657": 3135,
##     "OG_03658": 3136,
##     "OG_03659": 3137,
##     "OG_03660": 3138,
##     "OG_03661": 3139,
##     "OG_03663": 3140,
##     "OG_03664": 3141,
##     "OG_03665": 3142,
##     "OG_03666": 3143,
##     "OG_03667": 3144,
##     "OG_03668": 3145,
##     "OG_03669": 3146,
##     "OG_03672": 3147,
##     "OG_03670": 3148,
##     "OG_03671": 3149,
##     "OG_03673": 3150,
##     "OG_03674": 3151,
##     "OG_03675": 3152,
##     "OG_03676": 3153,
##     "OG_03677": 3154,
##     "OG_03678": 3155,
##     "OG_03679": 3156,
##     "OG_03680": 3157,
##     "OG_03681": 3158,
##     "OG_03684": 3159,
##     "OG_03685": 3160,
##     "OG_03686": 3161,
##     "OG_03688": 3162,
##     "OG_03689": 3163,
##     "OG_03690": 3164,
##     "OG_03693": 3165,
##     "OG_03691": 3166,
##     "OG_03692": 3167,
##     "OG_03694": 3168,
##     "OG_03695": 3169,
##     "OG_03696": 3170,
##     "OG_03697": 3171,
##     "OG_03699": 3172,
##     "OG_03698": 3173,
##     "OG_03701": 3174,
##     "OG_03702": 3175,
##     "OG_03703": 3176,
##     "OG_03706": 3177,
##     "OG_03705": 3178,
##     "OG_03704": 3179,
##     "OG_03708": 3180,
##     "OG_03711": 3181,
##     "OG_03709": 3182,
##     "OG_03710": 3183,
##     "OG_03712": 3184,
##     "OG_03713": 3185,
##     "OG_03714": 3186,
##     "OG_03715": 3187,
##     "OG_03716": 3188,
##     "OG_03717": 3189,
##     "OG_03718": 3190,
##     "OG_03719": 3191,
##     "OG_03720": 3192,
##     "OG_03721": 3193,
##     "OG_03722": 3194,
##     "OG_03723": 3195,
##     "OG_03724": 3196,
##     "OG_03725": 3197,
##     "OG_03726": 3198,
##     "OG_03729": 3199,
##     "OG_03730": 3200,
##     "OG_03734": 3201,
##     "OG_03731": 3202,
##     "OG_03732": 3203,
##     "OG_03736": 3204,
##     "OG_03737": 3205,
##     "OG_03740": 3206,
##     "OG_03738": 3207,
##     "OG_03741": 3208,
##     "OG_03752": 3209,
##     "OG_03753": 3210,
##     "OG_03754": 3211,
##     "OG_03743": 3212,
##     "OG_03744": 3213,
##     "OG_03745": 3214,
##     "OG_03746": 3215,
##     "OG_03747": 3216,
##     "OG_03748": 3217,
##     "OG_03749": 3218,
##     "OG_03750": 3219,
##     "OG_03751": 3220,
##     "OG_03760": 3221,
##     "OG_03755": 3222,
##     "OG_03756": 3223,
##     "OG_03758": 3224,
##     "OG_03759": 3225,
##     "OG_03761": 3226,
##     "OG_03762": 3227,
##     "OG_03764": 3228,
##     "OG_03765": 3229,
##     "OG_03766": 3230,
##     "OG_03767": 3231,
##     "OG_03768": 3232,
##     "OG_03769": 3233,
##     "OG_03770": 3234,
##     "OG_03771": 3235,
##     "OG_03772": 3236,
##     "OG_03776": 3237,
##     "OG_03774": 3238,
##     "OG_03775": 3239,
##     "OG_03777": 3240,
##     "OG_03781": 3241,
##     "OG_03783": 3242,
##     "OG_03784": 3243,
##     "OG_03779": 3244,
##     "OG_03780": 3245,
##     "OG_03787": 3246,
##     "OG_03785": 3247,
##     "OG_03786": 3248,
##     "OG_03788": 3249,
##     "OG_03794": 3250,
##     "OG_03789": 3251,
##     "OG_03790": 3252,
##     "OG_03792": 3253,
##     "OG_03795": 3254,
##     "OG_03793": 3255,
##     "OG_03797": 3256,
##     "OG_03799": 3257,
##     "OG_03800": 3258,
##     "OG_03801": 3259,
##     "OG_03802": 3260,
##     "OG_03803": 3261,
##     "OG_03805": 3262,
##     "OG_03813": 3263,
##     "OG_03807": 3264,
##     "OG_03808": 3265,
##     "OG_03809": 3266,
##     "OG_03810": 3267,
##     "OG_03811": 3268,
##     "OG_03816": 3269,
##     "OG_03814": 3270,
##     "OG_03821": 3271,
##     "OG_03817": 3272,
##     "OG_03818": 3273,
##     "OG_03819": 3274,
##     "OG_03820": 3275,
##     "OG_03823": 3276,
##     "OG_03824": 3277,
##     "OG_03825": 3278,
##     "OG_03826": 3279,
##     "OG_03827": 3280,
##     "OG_03828": 3281,
##     "OG_03829": 3282,
##     "OG_03830": 3283,
##     "OG_03831": 3284,
##     "OG_03832": 3285,
##     "OG_03833": 3286,
##     "OG_03837": 3287,
##     "OG_03834": 3288,
##     "OG_03835": 3289,
##     "OG_03836": 3290,
##     "OG_03838": 3291,
##     "OG_03839": 3292,
##     "OG_03840": 3293,
##     "OG_03841": 3294,
##     "OG_03842": 3295,
##     "OG_03843": 3296,
##     "OG_03844": 3297,
##     "OG_03845": 3298,
##     "OG_03856": 3299,
##     "OG_03858": 3300,
##     "OG_03859": 3301,
##     "OG_03860": 3302,
##     "OG_03861": 3303,
##     "OG_03862": 3304,
##     "OG_03850": 3305,
##     "OG_03848": 3306,
##     "OG_03849": 3307,
##     "OG_03852": 3308,
##     "OG_03853": 3309,
##     "OG_03854": 3310,
##     "OG_03855": 3311,
##     "OG_03863": 3312,
##     "OG_03864": 3313,
##     "OG_03866": 3314,
##     "OG_03865": 3315,
##     "OG_03868": 3316,
##     "OG_03869": 3317,
##     "OG_03871": 3318,
##     "OG_03872": 3319,
##     "OG_03873": 3320,
##     "OG_03875": 3321,
##     "OG_03876": 3322,
##     "OG_03879": 3323,
##     "OG_03877": 3324,
##     "OG_03878": 3325,
##     "OG_03880": 3326,
##     "OG_03883": 3327,
##     "OG_03881": 3328,
##     "OG_03889": 3329,
##     "OG_03890": 3330,
##     "OG_03886": 3331,
##     "OG_03887": 3332,
##     "OG_03892": 3333,
##     "OG_03893": 3334,
##     "OG_03895": 3335,
##     "OG_03898": 3336,
##     "OG_03896": 3337,
##     "OG_03897": 3338,
##     "OG_03899": 3339,
##     "OG_03902": 3340,
##     "OG_03903": 3341,
##     "OG_03904": 3342,
##     "OG_03910": 3343,
##     "OG_03909": 3344,
##     "OG_03906": 3345,
##     "OG_03908": 3346,
##     "OG_03914": 3347,
##     "OG_03911": 3348,
##     "OG_03912": 3349,
##     "OG_03913": 3350,
##     "OG_03918": 3351,
##     "OG_03915": 3352,
##     "OG_03916": 3353,
##     "OG_03917": 3354,
##     "OG_03920": 3355,
##     "OG_03919": 3356,
##     "OG_03921": 3357,
##     "OG_03924": 3358,
##     "OG_03923": 3359,
##     "OG_03922": 3360,
##     "OG_03926": 3361,
##     "OG_03925": 3362,
##     "OG_03928": 3363,
##     "OG_03929": 3364,
##     "OG_03932": 3365,
##     "OG_03933": 3366,
##     "OG_03934": 3367,
##     "OG_03935": 3368,
##     "OG_03936": 3369,
##     "OG_03937": 3370,
##     "OG_03938": 3371,
##     "OG_03939": 3372,
##     "OG_03948": 3373,
##     "OG_03949": 3374,
##     "OG_03950": 3375,
##     "OG_03951": 3376,
##     "OG_03952": 3377,
##     "OG_03954": 3378,
##     "OG_03955": 3379,
##     "OG_03956": 3380,
##     "OG_03957": 3381,
##     "OG_03958": 3382,
##     "OG_03959": 3383,
##     "OG_03960": 3384,
##     "OG_03940": 3385,
##     "OG_03942": 3386,
##     "OG_03944": 3387,
##     "OG_03945": 3388,
##     "OG_03946": 3389,
##     "OG_03947": 3390,
##     "OG_03962": 3391,
##     "OG_03963": 3392,
##     "OG_03964": 3393,
##     "OG_03961": 3394,
##     "OG_03967": 3395,
##     "OG_03965": 3396,
##     "OG_03966": 3397,
##     "OG_03970": 3398,
##     "OG_03969": 3399,
##     "OG_03971": 3400,
##     "OG_03974": 3401,
##     "OG_03972": 3402,
##     "OG_03973": 3403,
##     "OG_03975": 3404,
##     "OG_03976": 3405,
##     "OG_03977": 3406,
##     "OG_03978": 3407,
##     "OG_03979": 3408,
##     "OG_03980": 3409,
##     "OG_03981": 3410,
##     "OG_03983": 3411,
##     "OG_03984": 3412,
##     "OG_03985": 3413,
##     "OG_03987": 3414,
##     "OG_03988": 3415,
##     "OG_03989": 3416,
##     "OG_03990": 3417,
##     "OG_03991": 3418,
##     "OG_03992": 3419,
##     "OG_03993": 3420,
##     "OG_03994": 3421,
##     "OG_03997": 3422,
##     "OG_03995": 3423,
##     "OG_03998": 3424,
##     "OG_03999": 3425,
##     "OG_04000": 3426,
##     "OG_04005": 3427,
##     "OG_04006": 3428,
##     "OG_04007": 3429,
##     "OG_04008": 3430,
##     "OG_04001": 3431,
##     "OG_04002": 3432,
##     "OG_04003": 3433,
##     "OG_04004": 3434,
##     "OG_04009": 3435,
##     "OG_04010": 3436,
##     "OG_04012": 3437,
##     "OG_04013": 3438,
##     "OG_04014": 3439,
##     "OG_04017": 3440,
##     "OG_04018": 3441,
##     "OG_04019": 3442,
##     "OG_04020": 3443,
##     "OG_04021": 3444,
##     "OG_04022": 3445,
##     "OG_04024": 3446,
##     "OG_04023": 3447,
##     "OG_04025": 3448,
##     "OG_04028": 3449,
##     "OG_04027": 3450,
##     "OG_04029": 3451,
##     "OG_04036": 3452,
##     "OG_04037": 3453,
##     "OG_04033": 3454,
##     "OG_04034": 3455,
##     "OG_04035": 3456,
##     "OG_04030": 3457,
##     "OG_04031": 3458,
##     "OG_04032": 3459,
##     "OG_04043": 3460,
##     "OG_04044": 3461,
##     "OG_04039": 3462,
##     "OG_04040": 3463,
##     "OG_04041": 3464,
##     "OG_04045": 3465,
##     "OG_04046": 3466,
##     "OG_04049": 3467,
##     "OG_04047": 3468,
##     "OG_04048": 3469,
##     "OG_04052": 3470,
##     "OG_04053": 3471,
##     "OG_04054": 3472,
##     "OG_04055": 3473,
##     "OG_04056": 3474,
##     "OG_04058": 3475,
##     "OG_04059": 3476,
##     "OG_04057": 3477,
##     "OG_04051": 3478,
##     "OG_04060": 3479,
##     "OG_04069": 3480,
##     "OG_04070": 3481,
##     "OG_04071": 3482,
##     "OG_04061": 3483,
##     "OG_04062": 3484,
##     "OG_04063": 3485,
##     "OG_04064": 3486,
##     "OG_04065": 3487,
##     "OG_04067": 3488,
##     "OG_04068": 3489,
##     "OG_04072": 3490,
##     "OG_04076": 3491,
##     "OG_04073": 3492,
##     "OG_04077": 3493,
##     "OG_04100": 3494,
##     "OG_04098": 3495,
##     "OG_04099": 3496,
##     "OG_04095": 3497,
##     "OG_04078": 3498,
##     "OG_04079": 3499,
##     "OG_04080": 3500,
##     "OG_04081": 3501,
##     "OG_04082": 3502,
##     "OG_04083": 3503,
##     "OG_04084": 3504,
##     "OG_04085": 3505,
##     "OG_04086": 3506,
##     "OG_04087": 3507,
##     "OG_04088": 3508,
##     "OG_04089": 3509,
##     "OG_04090": 3510,
##     "OG_04091": 3511,
##     "OG_04092": 3512,
##     "OG_04096": 3513,
##     "OG_04097": 3514,
##     "OG_04101": 3515,
##     "OG_04102": 3516,
##     "OG_04103": 3517,
##     "OG_04108": 3518,
##     "OG_04104": 3519,
##     "OG_04105": 3520,
##     "OG_04107": 3521,
##     "OG_04109": 3522,
##     "OG_04111": 3523,
##     "OG_04114": 3524,
##     "OG_04115": 3525,
##     "OG_04116": 3526,
##     "OG_04112": 3527,
##     "OG_04117": 3528,
##     "OG_04118": 3529,
##     "OG_04119": 3530,
##     "OG_04121": 3531,
##     "OG_04122": 3532,
##     "OG_04123": 3533,
##     "OG_04125": 3534,
##     "OG_04127": 3535,
##     "OG_04128": 3536,
##     "OG_04129": 3537,
##     "OG_04130": 3538,
##     "OG_04131": 3539,
##     "OG_04134": 3540,
##     "OG_04135": 3541,
##     "OG_04132": 3542,
##     "OG_04140": 3543,
##     "OG_04136": 3544,
##     "OG_04137": 3545,
##     "OG_04141": 3546,
##     "OG_04142": 3547,
##     "OG_04143": 3548,
##     "OG_04145": 3549,
##     "OG_04146": 3550,
##     "OG_04156": 3551,
##     "OG_04157": 3552,
##     "OG_04158": 3553,
##     "OG_04160": 3554,
##     "OG_04161": 3555,
##     "OG_04148": 3556,
##     "OG_04149": 3557,
##     "OG_04150": 3558,
##     "OG_04152": 3559,
##     "OG_04153": 3560,
##     "OG_04154": 3561,
##     "OG_04155": 3562,
##     "OG_04162": 3563,
##     "OG_04169": 3564,
##     "OG_04163": 3565,
##     "OG_04165": 3566,
##     "OG_04167": 3567,
##     "OG_04170": 3568,
##     "OG_04171": 3569,
##     "OG_04172": 3570,
##     "OG_04174": 3571,
##     "OG_04173": 3572,
##     "OG_04177": 3573,
##     "OG_04176": 3574,
##     "OG_04178": 3575,
##     "OG_04179": 3576,
##     "OG_04180": 3577,
##     "OG_04193": 3578,
##     "OG_04195": 3579,
##     "OG_04182": 3580,
##     "OG_04183": 3581,
##     "OG_04184": 3582,
##     "OG_04185": 3583,
##     "OG_04186": 3584,
##     "OG_04187": 3585,
##     "OG_04188": 3586,
##     "OG_04189": 3587,
##     "OG_04190": 3588,
##     "OG_04191": 3589,
##     "OG_04192": 3590,
##     "OG_04196": 3591,
##     "OG_04197": 3592,
##     "OG_04198": 3593,
##     "OG_04200": 3594,
##     "OG_04199": 3595,
##     "OG_04201": 3596,
##     "OG_04202": 3597,
##     "OG_04203": 3598,
##     "OG_04204": 3599,
##     "OG_04205": 3600,
##     "OG_04212": 3601,
##     "OG_04206": 3602,
##     "OG_04207": 3603,
##     "OG_04209": 3604,
##     "OG_04210": 3605,
##     "OG_04211": 3606,
##     "OG_04213": 3607,
##     "OG_04214": 3608,
##     "OG_04215": 3609,
##     "OG_04216": 3610,
##     "OG_04217": 3611,
##     "OG_04218": 3612,
##     "OG_04219": 3613,
##     "OG_04220": 3614,
##     "OG_04221": 3615,
##     "OG_04223": 3616,
##     "OG_04224": 3617,
##     "OG_04225": 3618,
##     "OG_04226": 3619,
##     "OG_04227": 3620,
##     "OG_04230": 3621,
##     "OG_04231": 3622,
##     "OG_04232": 3623,
##     "OG_04233": 3624,
##     "OG_04234": 3625,
##     "OG_04235": 3626,
##     "OG_04236": 3627,
##     "OG_04237": 3628,
##     "OG_04238": 3629,
##     "OG_04239": 3630,
##     "OG_04240": 3631,
##     "OG_04241": 3632,
##     "OG_04242": 3633,
##     "OG_04243": 3634,
##     "OG_04244": 3635,
##     "OG_04245": 3636,
##     "OG_04246": 3637,
##     "OG_04247": 3638,
##     "OG_04250": 3639,
##     "OG_04249": 3640,
##     "OG_04255": 3641,
##     "OG_04251": 3642,
##     "OG_04252": 3643,
##     "OG_04253": 3644,
##     "OG_04254": 3645,
##     "OG_04256": 3646,
##     "OG_04257": 3647,
##     "OG_04259": 3648,
##     "OG_04260": 3649,
##     "OG_04263": 3650,
##     "OG_04262": 3651,
##     "OG_04264": 3652,
##     "OG_04265": 3653,
##     "OG_04261": 3654,
##     "OG_04266": 3655,
##     "OG_04272": 3656,
##     "OG_04267": 3657,
##     "OG_04268": 3658,
##     "OG_04269": 3659,
##     "OG_04270": 3660,
##     "OG_04271": 3661,
##     "OG_04294": 3662,
##     "OG_04295": 3663,
##     "OG_04296": 3664,
##     "OG_04297": 3665,
##     "OG_04284": 3666,
##     "OG_04274": 3667,
##     "OG_04275": 3668,
##     "OG_04276": 3669,
##     "OG_04277": 3670,
##     "OG_04278": 3671,
##     "OG_04279": 3672,
##     "OG_04280": 3673,
##     "OG_04282": 3674,
##     "OG_04283": 3675,
##     "OG_04286": 3676,
##     "OG_04287": 3677,
##     "OG_04288": 3678,
##     "OG_04289": 3679,
##     "OG_04290": 3680,
##     "OG_04291": 3681,
##     "OG_04292": 3682,
##     "OG_04293": 3683,
##     "OG_04298": 3684,
##     "OG_04299": 3685,
##     "OG_04300": 3686,
##     "OG_04302": 3687,
##     "OG_04303": 3688,
##     "OG_04304": 3689,
##     "OG_04306": 3690,
##     "OG_04308": 3691,
##     "OG_04309": 3692,
##     "OG_04311": 3693,
##     "OG_04313": 3694,
##     "OG_04314": 3695,
##     "OG_04317": 3696,
##     "OG_04315": 3697,
##     "OG_04320": 3698,
##     "OG_04318": 3699,
##     "OG_04319": 3700,
##     "OG_04321": 3701,
##     "OG_04322": 3702,
##     "OG_04323": 3703,
##     "OG_04326": 3704,
##     "OG_04328": 3705,
##     "OG_04329": 3706,
##     "OG_04334": 3707,
##     "OG_04335": 3708,
##     "OG_04336": 3709,
##     "OG_04330": 3710,
##     "OG_04331": 3711,
##     "OG_04332": 3712,
##     "OG_04333": 3713,
##     "OG_04337": 3714,
##     "OG_04338": 3715,
##     "OG_04341": 3716,
##     "OG_04342": 3717,
##     "OG_04344": 3718,
##     "OG_04345": 3719,
##     "OG_04346": 3720,
##     "OG_04347": 3721,
##     "OG_04348": 3722,
##     "OG_04350": 3723,
##     "OG_04351": 3724,
##     "OG_04353": 3725,
##     "OG_04354": 3726,
##     "OG_04362": 3727,
##     "OG_04363": 3728,
##     "OG_04356": 3729,
##     "OG_04357": 3730,
##     "OG_04358": 3731,
##     "OG_04359": 3732,
##     "OG_04360": 3733,
##     "OG_04361": 3734,
##     "OG_04364": 3735,
##     "OG_04366": 3736,
##     "OG_04371": 3737,
##     "OG_04367": 3738,
##     "OG_04368": 3739,
##     "OG_04369": 3740,
##     "OG_04370": 3741,
##     "OG_04372": 3742,
##     "OG_04375": 3743,
##     "OG_04373": 3744,
##     "OG_04376": 3745,
##     "OG_04377": 3746,
##     "OG_04378": 3747,
##     "OG_04379": 3748,
##     "OG_04380": 3749,
##     "OG_04382": 3750,
##     "OG_04383": 3751,
##     "OG_04384": 3752,
##     "OG_04385": 3753,
##     "OG_04381": 3754,
##     "OG_04388": 3755,
##     "OG_04389": 3756,
##     "OG_04390": 3757,
##     "OG_04391": 3758,
##     "OG_04393": 3759,
##     "OG_04394": 3760,
##     "OG_04392": 3761,
##     "OG_04395": 3762,
##     "OG_04396": 3763,
##     "OG_04397": 3764,
##     "OG_04398": 3765,
##     "OG_04399": 3766,
##     "OG_04400": 3767,
##     "OG_04401": 3768,
##     "OG_04402": 3769,
##     "OG_04403": 3770,
##     "OG_04408": 3771,
##     "OG_04405": 3772,
##     "OG_04406": 3773,
##     "OG_04407": 3774,
##     "OG_04409": 3775,
##     "OG_04410": 3776,
##     "OG_04422": 3777,
##     "OG_04423": 3778,
##     "OG_04425": 3779,
##     "OG_04426": 3780,
##     "OG_04429": 3781,
##     "OG_04430": 3782,
##     "OG_04431": 3783,
##     "OG_04412": 3784,
##     "OG_04413": 3785,
##     "OG_04414": 3786,
##     "OG_04415": 3787,
##     "OG_04416": 3788,
##     "OG_04417": 3789,
##     "OG_04418": 3790,
##     "OG_04419": 3791,
##     "OG_04432": 3792,
##     "OG_04427": 3793,
##     "OG_04428": 3794,
##     "OG_04433": 3795,
##     "OG_04435": 3796,
##     "OG_04437": 3797,
##     "OG_04436": 3798,
##     "OG_04440": 3799,
##     "OG_04446": 3800,
##     "OG_04444": 3801,
##     "OG_04445": 3802,
##     "OG_04447": 3803,
##     "OG_04449": 3804,
##     "OG_04450": 3805,
##     "OG_04451": 3806,
##     "OG_04452": 3807,
##     "OG_04455": 3808,
##     "OG_04454": 3809,
##     "OG_04456": 3810,
##     "OG_04457": 3811,
##     "OG_04458": 3812,
##     "OG_04459": 3813,
##     "OG_04463": 3814,
##     "OG_04460": 3815,
##     "OG_04461": 3816,
##     "OG_04462": 3817,
##     "OG_04464": 3818,
##     "OG_04465": 3819,
##     "OG_04466": 3820,
##     "OG_04468": 3821,
##     "OG_04469": 3822,
##     "OG_04470": 3823,
##     "OG_04471": 3824,
##     "OG_04474": 3825,
##     "OG_04473": 3826,
##     "OG_04472": 3827,
##     "OG_04475": 3828,
##     "OG_04476": 3829,
##     "OG_04477": 3830,
##     "OG_04478": 3831,
##     "OG_04479": 3832,
##     "OG_04480": 3833,
##     "OG_04483": 3834,
##     "OG_04484": 3835,
##     "OG_04485": 3836,
##     "OG_04486": 3837,
##     "OG_04487": 3838,
##     "OG_04488": 3839,
##     "OG_04489": 3840,
##     "OG_04491": 3841,
##     "OG_04494": 3842,
##     "OG_04495": 3843,
##     "OG_04496": 3844,
##     "OG_04498": 3845,
##     "OG_04499": 3846,
##     "OG_04500": 3847,
##     "OG_04501": 3848,
##     "OG_04503": 3849,
##     "OG_04504": 3850,
##     "OG_04505": 3851,
##     "OG_04506": 3852,
##     "OG_04509": 3853,
##     "OG_04507": 3854,
##     "OG_04508": 3855,
##     "OG_04510": 3856,
##     "OG_04511": 3857,
##     "OG_04512": 3858,
##     "OG_04513": 3859,
##     "OG_04514": 3860,
##     "OG_04524": 3861,
##     "OG_04525": 3862,
##     "OG_04526": 3863,
##     "OG_04530": 3864,
##     "OG_04529": 3865,
##     "OG_04527": 3866,
##     "OG_04528": 3867,
##     "OG_04515": 3868,
##     "OG_04516": 3869,
##     "OG_04517": 3870,
##     "OG_04518": 3871,
##     "OG_04519": 3872,
##     "OG_04520": 3873,
##     "OG_04521": 3874,
##     "OG_04522": 3875,
##     "OG_04523": 3876,
##     "OG_04531": 3877,
##     "OG_04532": 3878,
##     "OG_04533": 3879,
##     "OG_04534": 3880,
##     "OG_04541": 3881,
##     "OG_04536": 3882,
##     "OG_04537": 3883,
##     "OG_04538": 3884,
##     "OG_04540": 3885,
##     "OG_04542": 3886,
##     "OG_04544": 3887,
##     "OG_04546": 3888,
##     "OG_04550": 3889,
##     "OG_04547": 3890,
##     "OG_04548": 3891,
##     "OG_04549": 3892,
##     "OG_04551": 3893,
##     "OG_04552": 3894,
##     "OG_04553": 3895,
##     "OG_04555": 3896,
##     "OG_04556": 3897,
##     "OG_04562": 3898,
##     "OG_04561": 3899,
##     "OG_04564": 3900,
##     "OG_04565": 3901,
##     "OG_04566": 3902,
##     "OG_04567": 3903,
##     "OG_04563": 3904,
##     "OG_04569": 3905,
##     "OG_04570": 3906,
##     "OG_04568": 3907,
##     "OG_04557": 3908,
##     "OG_04558": 3909,
##     "OG_04559": 3910,
##     "OG_04560": 3911,
##     "OG_04574": 3912,
##     "OG_04573": 3913,
##     "OG_04571": 3914,
##     "OG_04572": 3915,
##     "OG_04575": 3916,
##     "OG_04581": 3917,
##     "OG_04582": 3918,
##     "OG_04583": 3919,
##     "OG_04584": 3920,
##     "OG_04585": 3921,
##     "OG_04578": 3922,
##     "OG_04579": 3923,
##     "OG_04592": 3924,
##     "OG_04593": 3925,
##     "OG_04586": 3926,
##     "OG_04587": 3927,
##     "OG_04588": 3928,
##     "OG_04589": 3929,
##     "OG_04590": 3930,
##     "OG_04591": 3931,
##     "OG_04594": 3932,
##     "OG_04599": 3933,
##     "OG_04600": 3934,
##     "OG_04595": 3935,
##     "OG_04596": 3936,
##     "OG_04597": 3937,
##     "OG_04601": 3938,
##     "OG_04603": 3939,
##     "OG_04604": 3940,
##     "OG_04602": 3941,
##     "OG_04606": 3942,
##     "OG_04607": 3943,
##     "OG_04605": 3944,
##     "OG_04608": 3945,
##     "OG_04612": 3946,
##     "OG_04613": 3947,
##     "OG_04609": 3948,
##     "OG_04610": 3949,
##     "OG_04611": 3950,
##     "OG_04618": 3951,
##     "OG_04619": 3952,
##     "OG_04614": 3953,
##     "OG_04615": 3954,
##     "OG_04616": 3955,
##     "OG_04617": 3956,
##     "OG_04620": 3957,
##     "OG_04621": 3958,
##     "OG_04622": 3959,
##     "OG_04623": 3960,
##     "OG_04624": 3961,
##     "OG_04625": 3962,
##     "OG_04629": 3963,
##     "OG_04630": 3964,
##     "OG_04627": 3965,
##     "OG_04631": 3966,
##     "OG_04632": 3967,
##     "OG_04633": 3968,
##     "OG_04636": 3969,
##     "OG_04637": 3970,
##     "OG_04634": 3971,
##     "OG_04635": 3972,
##     "OG_04639": 3973,
##     "OG_04643": 3974,
##     "OG_04644": 3975,
##     "OG_04645": 3976,
##     "OG_04648": 3977,
##     "OG_04649": 3978,
##     "OG_04646": 3979,
##     "OG_04647": 3980,
##     "OG_04650": 3981,
##     "OG_04653": 3982,
##     "OG_04654": 3983,
##     "OG_04652": 3984,
##     "OG_04655": 3985,
##     "OG_04656": 3986,
##     "OG_04657": 3987,
##     "OG_04658": 3988,
##     "OG_04659": 3989,
##     "OG_04661": 3990,
##     "OG_04662": 3991,
##     "OG_04664": 3992,
##     "OG_04665": 3993,
##     "OG_04666": 3994,
##     "OG_04672": 3995,
##     "OG_04667": 3996,
##     "OG_04669": 3997,
##     "OG_04670": 3998,
##     "OG_04671": 3999,
##     "OG_04673": 4000,
##     "OG_04674": 4001,
##     "OG_04675": 4002,
##     "OG_04676": 4003,
##     "OG_04677": 4004,
##     "OG_04678": 4005,
##     "OG_04679": 4006,
##     "OG_04680": 4007,
##     "OG_04681": 4008,
##     "OG_04683": 4009,
##     "OG_04684": 4010,
##     "OG_04685": 4011,
##     "OG_04686": 4012,
##     "OG_04688": 4013,
##     "OG_04690": 4014,
##     "OG_04691": 4015,
##     "OG_04697": 4016,
##     "OG_04692": 4017,
##     "OG_04693": 4018,
##     "OG_04694": 4019,
##     "OG_04695": 4020,
##     "OG_04706": 4021,
##     "OG_04707": 4022,
##     "OG_04698": 4023,
##     "OG_04699": 4024,
##     "OG_04700": 4025,
##     "OG_04701": 4026,
##     "OG_04702": 4027,
##     "OG_04703": 4028,
##     "OG_04704": 4029,
##     "OG_04705": 4030,
##     "OG_04709": 4031,
##     "OG_04710": 4032,
##     "OG_04711": 4033,
##     "OG_04712": 4034,
##     "OG_04713": 4035,
##     "OG_04714": 4036,
##     "OG_04715": 4037,
##     "OG_04716": 4038,
##     "OG_04718": 4039,
##     "OG_04719": 4040,
##     "OG_04720": 4041,
##     "OG_04721": 4042,
##     "OG_04722": 4043,
##     "OG_04724": 4044,
##     "OG_04723": 4045,
##     "OG_04726": 4046,
##     "OG_04727": 4047,
##     "OG_04736": 4048,
##     "OG_04737": 4049,
##     "OG_04738": 4050,
##     "OG_04728": 4051,
##     "OG_04729": 4052,
##     "OG_04730": 4053,
##     "OG_04731": 4054,
##     "OG_04733": 4055,
##     "OG_04734": 4056,
##     "OG_04735": 4057,
##     "OG_04745": 4058,
##     "OG_04746": 4059,
##     "OG_04739": 4060,
##     "OG_04740": 4061,
##     "OG_04741": 4062,
##     "OG_04742": 4063,
##     "OG_04743": 4064,
##     "OG_04748": 4065,
##     "OG_04752": 4066,
##     "OG_04751": 4067,
##     "OG_04747": 4068,
##     "OG_04749": 4069,
##     "OG_04750": 4070,
##     "OG_04753": 4071,
##     "OG_04754": 4072,
##     "OG_04755": 4073,
##     "OG_04756": 4074,
##     "OG_04758": 4075,
##     "OG_04759": 4076,
##     "OG_04760": 4077,
##     "OG_04761": 4078,
##     "OG_04768": 4079,
##     "OG_04769": 4080,
##     "OG_04771": 4081,
##     "OG_04766": 4082,
##     "OG_04762": 4083,
##     "OG_04763": 4084,
##     "OG_04765": 4085,
##     "OG_04773": 4086,
##     "OG_04775": 4087,
##     "OG_04772": 4088,
##     "OG_04776": 4089,
##     "OG_04777": 4090,
##     "OG_04778": 4091,
##     "OG_04779": 4092,
##     "OG_04783": 4093,
##     "OG_04781": 4094,
##     "OG_04782": 4095,
##     "OG_04784": 4096,
##     "OG_04785": 4097,
##     "OG_04786": 4098,
##     "OG_04787": 4099,
##     "OG_04788": 4100,
##     "OG_04789": 4101,
##     "OG_04790": 4102,
##     "OG_04791": 4103,
##     "OG_04792": 4104,
##     "OG_04793": 4105,
##     "OG_04795": 4106,
##     "OG_04796": 4107,
##     "OG_04797": 4108,
##     "OG_04800": 4109,
##     "OG_04802": 4110,
##     "OG_04803": 4111,
##     "OG_04804": 4112,
##     "OG_04805": 4113,
##     "OG_04801": 4114,
##     "OG_04806": 4115,
##     "OG_04808": 4116,
##     "OG_04809": 4117,
##     "OG_04810": 4118,
##     "OG_04811": 4119,
##     "OG_04812": 4120,
##     "OG_04813": 4121,
##     "OG_04814": 4122,
##     "OG_04815": 4123,
##     "OG_04819": 4124,
##     "OG_04820": 4125,
##     "OG_04821": 4126,
##     "OG_04816": 4127,
##     "OG_04817": 4128,
##     "OG_04818": 4129,
##     "OG_04826": 4130,
##     "OG_04825": 4131,
##     "OG_04822": 4132,
##     "OG_04823": 4133,
##     "OG_04824": 4134,
##     "OG_04834": 4135,
##     "OG_04835": 4136,
##     "OG_04836": 4137,
##     "OG_04837": 4138,
##     "OG_04838": 4139,
##     "OG_04839": 4140,
##     "OG_04827": 4141,
##     "OG_04828": 4142,
##     "OG_04829": 4143,
##     "OG_04830": 4144,
##     "OG_04831": 4145,
##     "OG_04832": 4146,
##     "OG_04833": 4147,
##     "OG_04846": 4148,
##     "OG_04840": 4149,
##     "OG_04842": 4150,
##     "OG_04843": 4151,
##     "OG_04844": 4152,
##     "OG_04852": 4153,
##     "OG_04853": 4154,
##     "OG_04854": 4155,
##     "OG_04847": 4156,
##     "OG_04848": 4157,
##     "OG_04849": 4158,
##     "OG_04850": 4159,
##     "OG_04851": 4160,
##     "OG_04856": 4161,
##     "OG_04857": 4162,
##     "OG_04858": 4163,
##     "OG_04860": 4164,
##     "OG_04861": 4165,
##     "OG_04862": 4166,
##     "OG_04863": 4167,
##     "OG_04864": 4168,
##     "OG_04866": 4169,
##     "OG_04867": 4170,
##     "OG_04868": 4171,
##     "OG_04869": 4172,
##     "OG_04870": 4173,
##     "OG_04871": 4174,
##     "OG_04872": 4175,
##     "OG_04873": 4176,
##     "OG_04874": 4177,
##     "OG_04875": 4178,
##     "OG_04876": 4179,
##     "OG_04877": 4180,
##     "OG_04886": 4181,
##     "OG_04879": 4182,
##     "OG_04880": 4183,
##     "OG_04882": 4184,
##     "OG_04883": 4185,
##     "OG_04884": 4186,
##     "OG_04885": 4187,
##     "OG_04899": 4188,
##     "OG_04900": 4189,
##     "OG_04905": 4190,
##     "OG_04901": 4191,
##     "OG_04902": 4192,
##     "OG_04903": 4193,
##     "OG_04906": 4194,
##     "OG_04889": 4195,
##     "OG_04890": 4196,
##     "OG_04891": 4197,
##     "OG_04894": 4198,
##     "OG_04895": 4199,
##     "OG_04896": 4200,
##     "OG_04897": 4201,
##     "OG_04910": 4202,
##     "OG_04907": 4203,
##     "OG_04908": 4204,
##     "OG_04909": 4205,
##     "OG_04911": 4206,
##     "OG_04912": 4207,
##     "OG_04913": 4208,
##     "OG_04915": 4209,
##     "OG_04916": 4210,
##     "OG_04914": 4211,
##     "OG_04917": 4212,
##     "OG_04920": 4213,
##     "OG_04918": 4214,
##     "OG_04919": 4215,
##     "OG_04921": 4216,
##     "OG_04922": 4217,
##     "OG_04923": 4218,
##     "OG_04925": 4219,
##     "OG_04926": 4220,
##     "OG_04927": 4221,
##     "OG_04928": 4222,
##     "OG_04930": 4223,
##     "OG_04932": 4224,
##     "OG_04934": 4225,
##     "OG_04935": 4226,
##     "OG_04936": 4227,
##     "OG_04937": 4228,
##     "OG_04938": 4229,
##     "OG_04939": 4230,
##     "OG_04940": 4231,
##     "OG_04941": 4232,
##     "OG_04942": 4233,
##     "OG_04943": 4234,
##     "OG_04944": 4235,
##     "OG_04945": 4236,
##     "OG_04947": 4237,
##     "OG_04946": 4238,
##     "OG_04948": 4239,
##     "OG_04949": 4240,
##     "OG_04950": 4241,
##     "OG_04951": 4242,
##     "OG_04952": 4243,
##     "OG_04953": 4244,
##     "OG_04954": 4245,
##     "OG_04956": 4246,
##     "OG_04958": 4247,
##     "OG_04961": 4248,
##     "OG_04960": 4249,
##     "OG_04964": 4250,
##     "OG_04971": 4251,
##     "OG_04972": 4252,
##     "OG_04973": 4253,
##     "OG_04975": 4254,
##     "OG_04976": 4255,
##     "OG_04977": 4256,
##     "OG_04978": 4257,
##     "OG_04979": 4258,
##     "OG_04980": 4259,
##     "OG_04966": 4260,
##     "OG_04967": 4261,
##     "OG_04968": 4262,
##     "OG_04969": 4263,
##     "OG_04970": 4264,
##     "OG_04981": 4265,
##     "OG_04982": 4266,
##     "OG_04983": 4267,
##     "OG_04984": 4268,
##     "OG_04985": 4269,
##     "OG_04993": 4270,
##     "OG_04988": 4271,
##     "OG_04989": 4272,
##     "OG_04990": 4273,
##     "OG_04992": 4274,
##     "OG_05001": 4275,
##     "OG_05005": 4276,
##     "OG_05002": 4277,
##     "OG_05003": 4278,
##     "OG_05004": 4279,
##     "OG_05006": 4280,
##     "OG_05007": 4281,
##     "OG_04994": 4282,
##     "OG_04995": 4283,
##     "OG_04996": 4284,
##     "OG_04997": 4285,
##     "OG_04998": 4286,
##     "OG_04999": 4287,
##     "OG_05000": 4288,
##     "OG_05008": 4289,
##     "OG_05010": 4290,
##     "OG_05011": 4291,
##     "OG_05012": 4292,
##     "OG_05013": 4293,
##     "OG_05015": 4294,
##     "OG_05014": 4295,
##     "OG_05016": 4296,
##     "OG_05017": 4297,
##     "OG_05018": 4298,
##     "OG_05020": 4299,
##     "OG_05028": 4300,
##     "OG_05029": 4301,
##     "OG_05021": 4302,
##     "OG_05022": 4303,
##     "OG_05023": 4304,
##     "OG_05025": 4305,
##     "OG_05026": 4306,
##     "OG_05027": 4307,
##     "OG_05032": 4308,
##     "OG_05034": 4309,
##     "OG_05033": 4310,
##     "OG_05035": 4311,
##     "OG_05037": 4312,
##     "OG_05036": 4313,
##     "OG_05030": 4314,
##     "OG_05031": 4315,
##     "OG_05038": 4316,
##     "OG_05039": 4317,
##     "OG_05040": 4318,
##     "OG_05041": 4319,
##     "OG_05042": 4320,
##     "OG_05043": 4321,
##     "OG_05044": 4322,
##     "OG_05045": 4323,
##     "OG_05046": 4324,
##     "OG_05047": 4325,
##     "OG_05048": 4326,
##     "OG_05049": 4327,
##     "OG_05057": 4328,
##     "OG_05050": 4329,
##     "OG_05051": 4330,
##     "OG_05053": 4331,
##     "OG_05054": 4332,
##     "OG_05056": 4333,
##     "OG_05058": 4334,
##     "OG_05059": 4335,
##     "OG_05060": 4336,
##     "OG_05061": 4337,
##     "OG_05062": 4338,
##     "OG_05063": 4339,
##     "OG_05067": 4340,
##     "OG_05066": 4341,
##     "OG_05065": 4342,
##     "OG_05082": 4343,
##     "OG_05084": 4344,
##     "OG_05085": 4345,
##     "OG_05086": 4346,
##     "OG_05090": 4347,
##     "OG_05069": 4348,
##     "OG_05070": 4349,
##     "OG_05071": 4350,
##     "OG_05072": 4351,
##     "OG_05074": 4352,
##     "OG_05076": 4353,
##     "OG_05077": 4354,
##     "OG_05078": 4355,
##     "OG_05079": 4356,
##     "OG_05080": 4357,
##     "OG_05081": 4358,
##     "OG_05091": 4359,
##     "OG_05092": 4360,
##     "OG_05100": 4361,
##     "OG_05104": 4362,
##     "OG_05101": 4363,
##     "OG_05102": 4364,
##     "OG_05097": 4365,
##     "OG_05093": 4366,
##     "OG_05094": 4367,
##     "OG_05095": 4368,
##     "OG_05096": 4369,
##     "OG_05098": 4370,
##     "OG_05099": 4371,
##     "OG_05112": 4372,
##     "OG_05114": 4373,
##     "OG_05115": 4374,
##     "OG_05113": 4375,
##     "OG_05105": 4376,
##     "OG_05107": 4377,
##     "OG_05108": 4378,
##     "OG_05109": 4379,
##     "OG_05116": 4380,
##     "OG_05117": 4381,
##     "OG_05119": 4382,
##     "OG_05120": 4383,
##     "OG_05118": 4384,
##     "OG_05125": 4385,
##     "OG_05126": 4386,
##     "OG_05127": 4387,
##     "OG_05123": 4388,
##     "OG_05124": 4389,
##     "OG_05139": 4390,
##     "OG_05142": 4391,
##     "OG_05130": 4392,
##     "OG_05132": 4393,
##     "OG_05133": 4394,
##     "OG_05134": 4395,
##     "OG_05135": 4396,
##     "OG_05136": 4397,
##     "OG_05137": 4398,
##     "OG_05138": 4399,
##     "OG_05140": 4400,
##     "OG_05141": 4401,
##     "OG_05147": 4402,
##     "OG_05149": 4403,
##     "OG_05144": 4404,
##     "OG_05145": 4405,
##     "OG_05146": 4406,
##     "OG_05150": 4407,
##     "OG_05157": 4408,
##     "OG_05158": 4409,
##     "OG_05151": 4410,
##     "OG_05152": 4411,
##     "OG_05153": 4412,
##     "OG_05154": 4413,
##     "OG_05155": 4414,
##     "OG_05156": 4415,
##     "OG_05159": 4416,
##     "OG_05160": 4417,
##     "OG_05163": 4418,
##     "OG_05164": 4419,
##     "OG_05161": 4420,
##     "OG_05165": 4421,
##     "OG_05166": 4422,
##     "OG_05167": 4423,
##     "OG_05168": 4424,
##     "OG_05169": 4425,
##     "OG_05171": 4426,
##     "OG_05172": 4427,
##     "OG_05173": 4428,
##     "OG_05174": 4429,
##     "OG_05175": 4430,
##     "OG_05176": 4431,
##     "OG_05179": 4432,
##     "OG_05178": 4433,
##     "OG_05177": 4434,
##     "OG_05182": 4435,
##     "OG_05184": 4436,
##     "OG_05183": 4437,
##     "OG_05186": 4438,
##     "OG_05187": 4439,
##     "OG_05189": 4440,
##     "OG_05191": 4441,
##     "OG_05185": 4442,
##     "OG_05192": 4443,
##     "OG_05193": 4444,
##     "OG_05197": 4445,
##     "OG_05195": 4446,
##     "OG_05196": 4447,
##     "OG_05198": 4448,
##     "OG_05201": 4449,
##     "OG_05199": 4450,
##     "OG_05205": 4451,
##     "OG_05204": 4452,
##     "OG_05206": 4453,
##     "OG_05203": 4454,
##     "OG_05207": 4455,
##     "OG_05208": 4456,
##     "OG_05209": 4457,
##     "OG_05210": 4458,
##     "OG_05211": 4459,
##     "OG_05212": 4460,
##     "OG_05213": 4461,
##     "OG_05214": 4462,
##     "OG_05215": 4463,
##     "OG_05216": 4464,
##     "OG_05218": 4465,
##     "OG_05229": 4466,
##     "OG_05230": 4467,
##     "OG_05231": 4468,
##     "OG_05232": 4469,
##     "OG_05233": 4470,
##     "OG_05234": 4471,
##     "OG_05228": 4472,
##     "OG_05219": 4473,
##     "OG_05220": 4474,
##     "OG_05221": 4475,
##     "OG_05222": 4476,
##     "OG_05223": 4477,
##     "OG_05224": 4478,
##     "OG_05225": 4479,
##     "OG_05226": 4480,
##     "OG_05227": 4481,
##     "OG_05237": 4482,
##     "OG_05238": 4483,
##     "OG_05240": 4484,
##     "OG_05239": 4485,
##     "OG_05235": 4486,
##     "OG_05236": 4487,
##     "OG_05241": 4488,
##     "OG_05249": 4489,
##     "OG_05250": 4490,
##     "OG_05251": 4491,
##     "OG_05243": 4492,
##     "OG_05244": 4493,
##     "OG_05245": 4494,
##     "OG_05246": 4495,
##     "OG_05247": 4496,
##     "OG_05248": 4497,
##     "OG_05252": 4498,
##     "OG_05253": 4499,
##     "OG_05254": 4500,
##     "OG_05255": 4501,
##     "OG_05256": 4502,
##     "OG_05257": 4503,
##     "OG_05258": 4504,
##     "OG_05259": 4505,
##     "OG_05262": 4506,
##     "OG_05263": 4507,
##     "OG_05264": 4508,
##     "OG_05265": 4509,
##     "OG_05266": 4510,
##     "OG_05267": 4511,
##     "OG_05277": 4512,
##     "OG_05278": 4513,
##     "OG_05282": 4514,
##     "OG_05279": 4515,
##     "OG_05280": 4516,
##     "OG_05268": 4517,
##     "OG_05269": 4518,
##     "OG_05270": 4519,
##     "OG_05271": 4520,
##     "OG_05272": 4521,
##     "OG_05273": 4522,
##     "OG_05274": 4523,
##     "OG_05275": 4524,
##     "OG_05276": 4525,
##     "OG_05288": 4526,
##     "OG_05284": 4527,
##     "OG_05285": 4528,
##     "OG_05286": 4529,
##     "OG_05287": 4530,
##     "OG_05289": 4531,
##     "OG_05290": 4532,
##     "OG_05291": 4533,
##     "OG_05292": 4534,
##     "OG_05298": 4535,
##     "OG_05293": 4536,
##     "OG_05294": 4537,
##     "OG_05295": 4538,
##     "OG_05297": 4539,
##     "OG_05299": 4540,
##     "OG_05300": 4541,
##     "OG_05301": 4542,
##     "OG_05302": 4543,
##     "OG_05304": 4544,
##     "OG_05305": 4545,
##     "OG_05310": 4546,
##     "OG_05311": 4547,
##     "OG_05306": 4548,
##     "OG_05307": 4549,
##     "OG_05308": 4550,
##     "OG_05309": 4551,
##     "OG_05318": 4552,
##     "OG_05314": 4553,
##     "OG_05315": 4554,
##     "OG_05316": 4555,
##     "OG_05317": 4556,
##     "OG_05320": 4557,
##     "OG_05321": 4558,
##     "OG_05326": 4559,
##     "OG_05323": 4560,
##     "OG_05324": 4561,
##     "OG_05325": 4562,
##     "OG_05327": 4563,
##     "OG_05328": 4564,
##     "OG_05331": 4565,
##     "OG_05333": 4566,
##     "OG_05335": 4567,
##     "OG_05336": 4568,
##     "OG_05341": 4569,
##     "OG_05338": 4570,
##     "OG_05339": 4571,
##     "OG_05340": 4572,
##     "OG_05345": 4573,
##     "OG_05342": 4574,
##     "OG_05344": 4575,
##     "OG_05346": 4576,
##     "OG_05347": 4577,
##     "OG_05348": 4578,
##     "OG_05354": 4579,
##     "OG_05355": 4580,
##     "OG_05356": 4581,
##     "OG_05357": 4582,
##     "OG_05350": 4583,
##     "OG_05351": 4584,
##     "OG_05352": 4585,
##     "OG_05353": 4586,
##     "OG_05358": 4587,
##     "OG_05359": 4588,
##     "OG_05360": 4589,
##     "OG_05361": 4590,
##     "OG_05362": 4591,
##     "OG_05363": 4592,
##     "OG_05364": 4593,
##     "OG_05365": 4594,
##     "OG_05366": 4595,
##     "OG_05367": 4596,
##     "OG_05368": 4597,
##     "OG_05369": 4598,
##     "OG_05370": 4599,
##     "OG_05371": 4600,
##     "OG_05372": 4601,
##     "OG_05373": 4602,
##     "OG_05379": 4603,
##     "OG_05374": 4604,
##     "OG_05375": 4605,
##     "OG_05376": 4606,
##     "OG_05377": 4607,
##     "OG_05378": 4608,
##     "OG_05384": 4609,
##     "OG_05380": 4610,
##     "OG_05381": 4611,
##     "OG_05382": 4612,
##     "OG_05383": 4613,
##     "OG_05385": 4614,
##     "OG_05386": 4615,
##     "OG_05387": 4616,
##     "OG_05388": 4617,
##     "OG_05389": 4618,
##     "OG_05390": 4619,
##     "OG_05391": 4620,
##     "OG_05392": 4621,
##     "OG_05394": 4622,
##     "OG_05395": 4623,
##     "OG_05396": 4624,
##     "OG_05397": 4625,
##     "OG_05399": 4626,
##     "OG_05410": 4627,
##     "OG_05400": 4628,
##     "OG_05402": 4629,
##     "OG_05403": 4630,
##     "OG_05404": 4631,
##     "OG_05405": 4632,
##     "OG_05407": 4633,
##     "OG_05408": 4634,
##     "OG_05409": 4635,
##     "OG_05414": 4636,
##     "OG_05415": 4637,
##     "OG_05416": 4638,
##     "OG_05417": 4639,
##     "OG_05411": 4640,
##     "OG_05413": 4641,
##     "OG_05436": 4642,
##     "OG_05438": 4643,
##     "OG_05418": 4644,
##     "OG_05419": 4645,
##     "OG_05420": 4646,
##     "OG_05423": 4647,
##     "OG_05424": 4648,
##     "OG_05425": 4649,
##     "OG_05426": 4650,
##     "OG_05427": 4651,
##     "OG_05428": 4652,
##     "OG_05429": 4653,
##     "OG_05430": 4654,
##     "OG_05431": 4655,
##     "OG_05432": 4656,
##     "OG_05433": 4657,
##     "OG_05434": 4658,
##     "OG_05435": 4659,
##     "OG_05440": 4660,
##     "OG_05441": 4661,
##     "OG_05442": 4662,
##     "OG_05457": 4663,
##     "OG_05458": 4664,
##     "OG_05444": 4665,
##     "OG_05445": 4666,
##     "OG_05446": 4667,
##     "OG_05447": 4668,
##     "OG_05448": 4669,
##     "OG_05449": 4670,
##     "OG_05450": 4671,
##     "OG_05451": 4672,
##     "OG_05452": 4673,
##     "OG_05453": 4674,
##     "OG_05454": 4675,
##     "OG_05455": 4676,
##     "OG_05456": 4677,
##     "OG_05463": 4678,
##     "OG_05464": 4679,
##     "OG_05465": 4680,
##     "OG_05459": 4681,
##     "OG_05460": 4682,
##     "OG_05462": 4683,
##     "OG_05472": 4684,
##     "OG_05473": 4685,
##     "OG_05474": 4686,
##     "OG_05466": 4687,
##     "OG_05467": 4688,
##     "OG_05468": 4689,
##     "OG_05469": 4690,
##     "OG_05470": 4691,
##     "OG_05471": 4692,
##     "OG_05477": 4693,
##     "OG_05478": 4694,
##     "OG_05475": 4695,
##     "OG_05476": 4696,
##     "OG_05479": 4697,
##     "OG_05480": 4698,
##     "OG_05481": 4699,
##     "OG_05483": 4700,
##     "OG_05484": 4701,
##     "OG_05485": 4702,
##     "OG_05486": 4703,
##     "OG_05489": 4704,
##     "OG_05487": 4705,
##     "OG_05494": 4706,
##     "OG_05495": 4707,
##     "OG_05492": 4708,
##     "OG_05493": 4709,
##     "OG_05500": 4710,
##     "OG_05497": 4711,
##     "OG_05498": 4712,
##     "OG_05499": 4713,
##     "OG_05501": 4714,
##     "OG_05504": 4715,
##     "OG_05502": 4716,
##     "OG_05505": 4717,
##     "OG_05507": 4718,
##     "OG_05508": 4719,
##     "OG_05506": 4720,
##     "OG_05509": 4721,
##     "OG_05511": 4722,
##     "OG_05512": 4723,
##     "OG_05514": 4724,
##     "OG_05516": 4725,
##     "OG_05517": 4726,
##     "OG_05519": 4727,
##     "OG_05518": 4728,
##     "OG_05520": 4729,
##     "OG_05521": 4730,
##     "OG_05522": 4731,
##     "OG_05525": 4732,
##     "OG_05523": 4733,
##     "OG_05524": 4734,
##     "OG_05526": 4735,
##     "OG_05527": 4736,
##     "OG_05528": 4737,
##     "OG_05529": 4738,
##     "OG_05530": 4739,
##     "OG_05531": 4740,
##     "OG_05533": 4741,
##     "OG_05534": 4742,
##     "OG_05536": 4743,
##     "OG_05537": 4744,
##     "OG_05535": 4745,
##     "OG_05539": 4746,
##     "OG_05566": 4747,
##     "OG_05565": 4748,
##     "OG_05569": 4749,
##     "OG_05570": 4750,
##     "OG_05567": 4751,
##     "OG_05568": 4752,
##     "OG_05555": 4753,
##     "OG_05540": 4754,
##     "OG_05541": 4755,
##     "OG_05542": 4756,
##     "OG_05543": 4757,
##     "OG_05545": 4758,
##     "OG_05546": 4759,
##     "OG_05547": 4760,
##     "OG_05548": 4761,
##     "OG_05549": 4762,
##     "OG_05550": 4763,
##     "OG_05551": 4764,
##     "OG_05552": 4765,
##     "OG_05553": 4766,
##     "OG_05554": 4767,
##     "OG_05556": 4768,
##     "OG_05557": 4769,
##     "OG_05558": 4770,
##     "OG_05559": 4771,
##     "OG_05560": 4772,
##     "OG_05561": 4773,
##     "OG_05562": 4774,
##     "OG_05563": 4775,
##     "OG_05564": 4776,
##     "OG_05571": 4777,
##     "OG_05572": 4778,
##     "OG_05575": 4779,
##     "OG_05573": 4780,
##     "OG_05576": 4781,
##     "OG_05577": 4782,
##     "OG_05578": 4783,
##     "OG_05579": 4784,
##     "OG_05581": 4785,
##     "OG_05582": 4786,
##     "OG_05583": 4787,
##     "OG_05584": 4788,
##     "OG_05585": 4789,
##     "OG_05586": 4790,
##     "OG_05587": 4791,
##     "OG_05588": 4792,
##     "OG_05589": 4793,
##     "OG_05591": 4794,
##     "OG_05595": 4795,
##     "OG_05601": 4796,
##     "OG_05604": 4797,
##     "OG_05602": 4798,
##     "OG_05605": 4799,
##     "OG_05606": 4800,
##     "OG_05626": 4801,
##     "OG_05624": 4802,
##     "OG_05625": 4803,
##     "OG_05629": 4804,
##     "OG_05627": 4805,
##     "OG_05628": 4806,
##     "OG_05630": 4807,
##     "OG_05631": 4808,
##     "OG_05607": 4809,
##     "OG_05609": 4810,
##     "OG_05610": 4811,
##     "OG_05611": 4812,
##     "OG_05612": 4813,
##     "OG_05613": 4814,
##     "OG_05614": 4815,
##     "OG_05615": 4816,
##     "OG_05616": 4817,
##     "OG_05617": 4818,
##     "OG_05618": 4819,
##     "OG_05619": 4820,
##     "OG_05622": 4821,
##     "OG_05636": 4822,
##     "OG_05641": 4823,
##     "OG_05638": 4824,
##     "OG_05639": 4825,
##     "OG_05651": 4826,
##     "OG_05652": 4827,
##     "OG_05653": 4828,
##     "OG_05654": 4829,
##     "OG_05655": 4830,
##     "OG_05656": 4831,
##     "OG_05657": 4832,
##     "OG_05658": 4833,
##     "OG_05659": 4834,
##     "OG_05643": 4835,
##     "OG_05644": 4836,
##     "OG_05645": 4837,
##     "OG_05646": 4838,
##     "OG_05647": 4839,
##     "OG_05648": 4840,
##     "OG_05649": 4841,
##     "OG_05650": 4842,
##     "OG_05660": 4843,
##     "OG_05663": 4844,
##     "OG_05662": 4845,
##     "OG_05664": 4846,
##     "OG_05665": 4847,
##     "OG_05666": 4848,
##     "OG_05667": 4849,
##     "OG_05668": 4850,
##     "OG_05669": 4851,
##     "OG_05670": 4852,
##     "OG_05671": 4853,
##     "OG_05672": 4854,
##     "OG_05675": 4855,
##     "OG_05674": 4856,
##     "OG_05673": 4857,
##     "OG_05677": 4858,
##     "OG_05679": 4859,
##     "OG_05680": 4860,
##     "OG_05681": 4861,
##     "OG_05683": 4862,
##     "OG_05684": 4863,
##     "OG_05685": 4864,
##     "OG_05686": 4865,
##     "OG_05704": 4866,
##     "OG_05701": 4867,
##     "OG_05702": 4868,
##     "OG_05703": 4869,
##     "OG_05705": 4870,
##     "OG_05707": 4871,
##     "OG_05692": 4872,
##     "OG_05687": 4873,
##     "OG_05688": 4874,
##     "OG_05689": 4875,
##     "OG_05690": 4876,
##     "OG_05691": 4877,
##     "OG_05693": 4878,
##     "OG_05695": 4879,
##     "OG_05696": 4880,
##     "OG_05698": 4881,
##     "OG_05711": 4882,
##     "OG_05712": 4883,
##     "OG_05716": 4884,
##     "OG_05717": 4885,
##     "OG_05708": 4886,
##     "OG_05710": 4887,
##     "OG_05714": 4888,
##     "OG_05718": 4889,
##     "OG_05719": 4890,
##     "OG_05720": 4891,
##     "OG_05721": 4892,
##     "OG_05722": 4893,
##     "OG_05723": 4894,
##     "OG_05724": 4895,
##     "OG_05725": 4896,
##     "OG_05726": 4897,
##     "OG_05727": 4898,
##     "OG_05728": 4899,
##     "OG_05729": 4900,
##     "OG_05730": 4901,
##     "OG_05731": 4902,
##     "OG_05732": 4903,
##     "OG_05738": 4904,
##     "OG_05733": 4905,
##     "OG_05734": 4906,
##     "OG_05735": 4907,
##     "OG_05736": 4908,
##     "OG_05737": 4909,
##     "OG_05739": 4910,
##     "OG_05741": 4911,
##     "OG_05744": 4912,
##     "OG_05742": 4913,
##     "OG_05743": 4914,
##     "OG_05745": 4915,
##     "OG_05746": 4916,
##     "OG_05747": 4917,
##     "OG_05748": 4918,
##     "OG_05750": 4919,
##     "OG_05749": 4920,
##     "OG_05753": 4921,
##     "OG_05752": 4922,
##     "OG_05754": 4923,
##     "OG_05755": 4924,
##     "OG_05757": 4925,
##     "OG_05758": 4926,
##     "OG_05759": 4927,
##     "OG_05760": 4928,
##     "OG_05761": 4929,
##     "OG_05779": 4930,
##     "OG_05780": 4931,
##     "OG_05763": 4932,
##     "OG_05762": 4933,
##     "OG_05764": 4934,
##     "OG_05765": 4935,
##     "OG_05766": 4936,
##     "OG_05767": 4937,
##     "OG_05768": 4938,
##     "OG_05769": 4939,
##     "OG_05770": 4940,
##     "OG_05771": 4941,
##     "OG_05772": 4942,
##     "OG_05773": 4943,
##     "OG_05774": 4944,
##     "OG_05775": 4945,
##     "OG_05776": 4946,
##     "OG_05777": 4947,
##     "OG_05778": 4948,
##     "OG_05784": 4949,
##     "OG_05781": 4950,
##     "OG_05782": 4951,
##     "OG_05783": 4952,
##     "OG_05785": 4953,
##     "OG_05786": 4954,
##     "OG_05787": 4955,
##     "OG_05788": 4956,
##     "OG_05789": 4957,
##     "OG_05790": 4958,
##     "OG_05791": 4959,
##     "OG_05792": 4960,
##     "OG_05793": 4961,
##     "OG_05794": 4962,
##     "OG_05795": 4963,
##     "OG_05796": 4964,
##     "OG_05819": 4965,
##     "OG_05817": 4966,
##     "OG_05820": 4967,
##     "OG_05797": 4968,
##     "OG_05798": 4969,
##     "OG_05799": 4970,
##     "OG_05800": 4971,
##     "OG_05801": 4972,
##     "OG_05802": 4973,
##     "OG_05803": 4974,
##     "OG_05804": 4975,
##     "OG_05805": 4976,
##     "OG_05807": 4977,
##     "OG_05808": 4978,
##     "OG_05810": 4979,
##     "OG_05811": 4980,
##     "OG_05812": 4981,
##     "OG_05813": 4982,
##     "OG_05815": 4983,
##     "OG_05827": 4984,
##     "OG_05828": 4985,
##     "OG_05829": 4986,
##     "OG_05822": 4987,
##     "OG_05823": 4988,
##     "OG_05824": 4989,
##     "OG_05825": 4990,
##     "OG_05826": 4991,
##     "OG_05843": 4992,
##     "OG_05844": 4993,
##     "OG_05831": 4994,
##     "OG_05833": 4995,
##     "OG_05834": 4996,
##     "OG_05836": 4997,
##     "OG_05837": 4998,
##     "OG_05838": 4999,
##     "OG_05839": 5000,
##     "OG_05840": 5001,
##     "OG_05841": 5002,
##     "OG_05845": 5003,
##     "OG_05846": 5004,
##     "OG_05847": 5005,
##     "OG_05853": 5006,
##     "OG_05852": 5007,
##     "OG_05855": 5008,
##     "OG_05854": 5009,
##     "OG_05859": 5010,
##     "OG_05860": 5011,
##     "OG_05861": 5012,
##     "OG_05858": 5013,
##     "OG_05863": 5014,
##     "OG_05864": 5015,
##     "OG_05865": 5016,
##     "OG_05866": 5017,
##     "OG_05867": 5018,
##     "OG_05868": 5019,
##     "OG_05869": 5020,
##     "OG_05870": 5021,
##     "OG_05871": 5022,
##     "OG_05872": 5023,
##     "OG_05873": 5024,
##     "OG_05874": 5025,
##     "OG_05877": 5026,
##     "OG_05878": 5027,
##     "OG_05876": 5028,
##     "OG_05875": 5029,
##     "OG_05900": 5030,
##     "OG_05886": 5031,
##     "OG_05879": 5032,
##     "OG_05880": 5033,
##     "OG_05881": 5034,
##     "OG_05882": 5035,
##     "OG_05883": 5036,
##     "OG_05884": 5037,
##     "OG_05885": 5038,
##     "OG_05887": 5039,
##     "OG_05888": 5040,
##     "OG_05890": 5041,
##     "OG_05891": 5042,
##     "OG_05892": 5043,
##     "OG_05894": 5044,
##     "OG_05895": 5045,
##     "OG_05896": 5046,
##     "OG_05897": 5047,
##     "OG_05898": 5048,
##     "OG_05899": 5049,
##     "OG_05901": 5050,
##     "OG_05902": 5051,
##     "OG_05903": 5052,
##     "OG_05904": 5053,
##     "OG_05905": 5054,
##     "OG_05906": 5055,
##     "OG_05907": 5056,
##     "OG_05908": 5057,
##     "OG_05909": 5058,
##     "OG_05911": 5059,
##     "OG_05915": 5060,
##     "OG_05918": 5061,
##     "OG_05916": 5062,
##     "OG_05917": 5063,
##     "OG_05919": 5064,
##     "OG_05947": 5065,
##     "OG_05945": 5066,
##     "OG_05946": 5067,
##     "OG_05920": 5068,
##     "OG_05922": 5069,
##     "OG_05924": 5070,
##     "OG_05925": 5071,
##     "OG_05926": 5072,
##     "OG_05927": 5073,
##     "OG_05928": 5074,
##     "OG_05929": 5075,
##     "OG_05930": 5076,
##     "OG_05932": 5077,
##     "OG_05933": 5078,
##     "OG_05934": 5079,
##     "OG_05935": 5080,
##     "OG_05936": 5081,
##     "OG_05937": 5082,
##     "OG_05938": 5083,
##     "OG_05942": 5084,
##     "OG_05943": 5085,
##     "OG_05944": 5086,
##     "OG_05950": 5087,
##     "OG_05948": 5088,
##     "OG_05949": 5089,
##     "OG_05951": 5090,
##     "OG_05952": 5091,
##     "OG_05954": 5092,
##     "OG_05955": 5093,
##     "OG_05956": 5094,
##     "OG_05957": 5095,
##     "OG_05958": 5096,
##     "OG_05960": 5097,
##     "OG_05959": 5098,
##     "OG_05963": 5099,
##     "OG_05961": 5100,
##     "OG_05962": 5101,
##     "OG_05953": 5102,
##     "OG_05964": 5103,
##     "OG_05965": 5104,
##     "OG_05973": 5105,
##     "OG_05967": 5106,
##     "OG_05968": 5107,
##     "OG_05969": 5108,
##     "OG_05971": 5109,
##     "OG_05972": 5110,
##     "OG_05976": 5111,
##     "OG_05974": 5112,
##     "OG_05975": 5113,
##     "OG_05977": 5114,
##     "OG_05978": 5115,
##     "OG_05979": 5116,
##     "OG_05980": 5117,
##     "OG_05981": 5118,
##     "OG_05982": 5119,
##     "OG_05983": 5120,
##     "OG_05985": 5121,
##     "OG_05984": 5122,
##     "OG_05986": 5123,
##     "OG_05991": 5124,
##     "OG_05992": 5125,
##     "OG_05993": 5126,
##     "OG_05987": 5127,
##     "OG_05988": 5128,
##     "OG_05990": 5129,
##     "OG_05994": 5130,
##     "OG_05995": 5131,
##     "OG_05996": 5132,
##     "OG_05997": 5133,
##     "OG_05998": 5134,
##     "OG_05999": 5135,
##     "OG_06000": 5136,
##     "OG_06001": 5137,
##     "OG_06007": 5138,
##     "OG_06008": 5139,
##     "OG_06009": 5140,
##     "OG_06010": 5141,
##     "OG_06011": 5142,
##     "OG_06002": 5143,
##     "OG_06003": 5144,
##     "OG_06004": 5145,
##     "OG_06005": 5146,
##     "OG_06006": 5147,
##     "OG_06022": 5148,
##     "OG_06023": 5149,
##     "OG_06024": 5150,
##     "OG_06012": 5151,
##     "OG_06013": 5152,
##     "OG_06014": 5153,
##     "OG_06015": 5154,
##     "OG_06016": 5155,
##     "OG_06017": 5156,
##     "OG_06018": 5157,
##     "OG_06019": 5158,
##     "OG_06020": 5159,
##     "OG_06031": 5160,
##     "OG_06032": 5161,
##     "OG_06026": 5162,
##     "OG_06027": 5163,
##     "OG_06028": 5164,
##     "OG_06029": 5165,
##     "OG_06030": 5166,
##     "OG_06033": 5167,
##     "OG_06034": 5168,
##     "OG_06035": 5169,
##     "OG_06037": 5170,
##     "OG_06038": 5171,
##     "OG_06039": 5172,
##     "OG_06040": 5173,
##     "OG_06041": 5174,
##     "OG_06042": 5175,
##     "OG_06043": 5176,
##     "OG_06044": 5177,
##     "OG_06045": 5178,
##     "OG_06046": 5179,
##     "OG_06047": 5180,
##     "OG_06049": 5181,
##     "OG_06050": 5182,
##     "OG_06048": 5183,
##     "OG_06055": 5184,
##     "OG_06052": 5185,
##     "OG_06054": 5186,
##     "OG_06059": 5187,
##     "OG_06060": 5188,
##     "OG_06063": 5189,
##     "OG_06064": 5190,
##     "OG_06065": 5191,
##     "OG_06066": 5192,
##     "OG_06067": 5193,
##     "OG_06068": 5194,
##     "OG_06069": 5195,
##     "OG_06070": 5196,
##     "OG_06071": 5197,
##     "OG_06072": 5198,
##     "OG_06073": 5199,
##     "OG_06074": 5200,
##     "OG_06077": 5201,
##     "OG_06078": 5202,
##     "OG_06083": 5203,
##     "OG_06084": 5204,
##     "OG_06080": 5205,
##     "OG_06081": 5206,
##     "OG_06085": 5207,
##     "OG_06088": 5208,
##     "OG_06086": 5209,
##     "OG_06087": 5210,
##     "OG_06089": 5211,
##     "OG_06090": 5212,
##     "OG_06091": 5213,
##     "OG_06092": 5214,
##     "OG_06093": 5215,
##     "OG_06094": 5216,
##     "OG_06096": 5217,
##     "OG_06099": 5218,
##     "OG_06098": 5219,
##     "OG_06100": 5220,
##     "OG_06101": 5221,
##     "OG_06102": 5222,
##     "OG_06111": 5223,
##     "OG_06104": 5224,
##     "OG_06105": 5225,
##     "OG_06107": 5226,
##     "OG_06108": 5227,
##     "OG_06109": 5228,
##     "OG_06110": 5229,
##     "OG_06112": 5230,
##     "OG_06113": 5231,
##     "OG_06114": 5232,
##     "OG_06115": 5233,
##     "OG_06116": 5234,
##     "OG_06117": 5235,
##     "OG_06119": 5236,
##     "OG_06121": 5237,
##     "OG_06122": 5238,
##     "OG_06123": 5239,
##     "OG_06126": 5240,
##     "OG_06128": 5241,
##     "OG_06124": 5242,
##     "OG_06125": 5243,
##     "OG_06130": 5244,
##     "OG_06131": 5245,
##     "OG_06133": 5246,
##     "OG_06140": 5247,
##     "OG_06141": 5248,
##     "OG_06144": 5249,
##     "OG_06145": 5250,
##     "OG_06146": 5251,
##     "OG_06147": 5252,
##     "OG_06148": 5253,
##     "OG_06149": 5254,
##     "OG_06150": 5255,
##     "OG_06151": 5256,
##     "OG_06135": 5257,
##     "OG_06136": 5258,
##     "OG_06137": 5259,
##     "OG_06138": 5260,
##     "OG_06139": 5261,
##     "OG_06158": 5262,
##     "OG_06159": 5263,
##     "OG_06160": 5264,
##     "OG_06161": 5265,
##     "OG_06153": 5266,
##     "OG_06154": 5267,
##     "OG_06155": 5268,
##     "OG_06157": 5269,
##     "OG_06162": 5270,
##     "OG_06163": 5271,
##     "OG_06165": 5272,
##     "OG_06164": 5273,
##     "OG_06167": 5274,
##     "OG_06166": 5275,
##     "OG_06168": 5276,
##     "OG_06169": 5277,
##     "OG_06170": 5278,
##     "OG_06172": 5279,
##     "OG_06171": 5280,
##     "OG_06173": 5281,
##     "OG_06174": 5282,
##     "OG_06175": 5283,
##     "OG_06176": 5284,
##     "OG_06177": 5285,
##     "OG_06178": 5286,
##     "OG_06179": 5287,
##     "OG_06180": 5288,
##     "OG_06181": 5289,
##     "OG_06182": 5290,
##     "OG_06183": 5291,
##     "OG_06184": 5292,
##     "OG_06185": 5293,
##     "OG_06186": 5294,
##     "OG_06188": 5295,
##     "OG_06189": 5296,
##     "OG_06198": 5297,
##     "OG_06200": 5298,
##     "OG_06199": 5299,
##     "OG_06190": 5300,
##     "OG_06191": 5301,
##     "OG_06192": 5302,
##     "OG_06193": 5303,
##     "OG_06194": 5304,
##     "OG_06195": 5305,
##     "OG_06197": 5306,
##     "OG_06201": 5307,
##     "OG_06202": 5308,
##     "OG_06203": 5309,
##     "OG_06204": 5310,
##     "OG_06205": 5311,
##     "OG_06206": 5312,
##     "OG_06207": 5313,
##     "OG_06208": 5314,
##     "OG_06212": 5315,
##     "OG_06211": 5316,
##     "OG_06209": 5317,
##     "OG_06210": 5318,
##     "OG_06213": 5319,
##     "OG_06215": 5320,
##     "OG_06216": 5321,
##     "OG_06217": 5322,
##     "OG_06218": 5323,
##     "OG_06224": 5324,
##     "OG_06219": 5325,
##     "OG_06220": 5326,
##     "OG_06221": 5327,
##     "OG_06222": 5328,
##     "OG_06225": 5329,
##     "OG_06226": 5330,
##     "OG_06227": 5331,
##     "OG_06228": 5332,
##     "OG_06230": 5333,
##     "OG_06231": 5334,
##     "OG_06236": 5335,
##     "OG_06237": 5336,
##     "OG_06239": 5337,
##     "OG_06238": 5338,
##     "OG_06240": 5339,
##     "OG_06232": 5340,
##     "OG_06234": 5341,
##     "OG_06235": 5342,
##     "OG_06241": 5343,
##     "OG_06242": 5344,
##     "OG_06247": 5345,
##     "OG_06249": 5346,
##     "OG_06250": 5347,
##     "OG_06244": 5348,
##     "OG_06245": 5349,
##     "OG_06253": 5350,
##     "OG_06254": 5351,
##     "OG_06255": 5352,
##     "OG_06256": 5353,
##     "OG_06258": 5354,
##     "OG_06257": 5355,
##     "OG_06260": 5356,
##     "OG_06259": 5357,
##     "OG_06261": 5358,
##     "OG_06262": 5359,
##     "OG_06263": 5360,
##     "OG_06264": 5361,
##     "OG_06265": 5362,
##     "OG_06266": 5363,
##     "OG_06267": 5364,
##     "OG_06268": 5365,
##     "OG_06269": 5366,
##     "OG_06270": 5367,
##     "OG_06271": 5368,
##     "OG_06272": 5369,
##     "OG_06273": 5370,
##     "OG_06275": 5371,
##     "OG_06276": 5372,
##     "OG_06277": 5373,
##     "OG_06279": 5374,
##     "OG_06280": 5375,
##     "OG_06281": 5376,
##     "OG_06283": 5377,
##     "OG_06282": 5378,
##     "OG_06284": 5379,
##     "OG_06286": 5380,
##     "OG_06288": 5381,
##     "OG_06289": 5382,
##     "OG_06287": 5383,
##     "OG_06290": 5384,
##     "OG_06291": 5385,
##     "OG_06292": 5386,
##     "OG_06293": 5387,
##     "OG_06294": 5388,
##     "OG_06295": 5389,
##     "OG_06296": 5390,
##     "OG_06297": 5391,
##     "OG_06299": 5392,
##     "OG_06300": 5393,
##     "OG_06301": 5394,
##     "OG_06302": 5395,
##     "OG_06303": 5396,
##     "OG_06304": 5397,
##     "OG_06305": 5398,
##     "OG_06306": 5399,
##     "OG_06307": 5400,
##     "OG_06311": 5401,
##     "OG_06310": 5402,
##     "OG_06308": 5403,
##     "OG_06309": 5404,
##     "OG_06312": 5405,
##     "OG_06313": 5406,
##     "OG_06314": 5407,
##     "OG_06316": 5408,
##     "OG_06315": 5409,
##     "OG_06317": 5410,
##     "OG_06323": 5411,
##     "OG_06324": 5412,
##     "OG_06325": 5413,
##     "OG_06319": 5414,
##     "OG_06320": 5415,
##     "OG_06322": 5416,
##     "OG_06327": 5417,
##     "OG_06333": 5418,
##     "OG_06336": 5419,
##     "OG_06337": 5420,
##     "OG_06339": 5421,
##     "OG_06338": 5422,
##     "OG_06340": 5423,
##     "OG_06329": 5424,
##     "OG_06330": 5425,
##     "OG_06331": 5426,
##     "OG_06342": 5427,
##     "OG_06341": 5428,
##     "OG_06343": 5429,
##     "OG_06344": 5430,
##     "OG_06345": 5431,
##     "OG_06346": 5432,
##     "OG_06347": 5433,
##     "OG_06348": 5434,
##     "OG_06349": 5435,
##     "OG_06350": 5436,
##     "OG_06352": 5437,
##     "OG_06353": 5438,
##     "OG_06354": 5439,
##     "OG_06355": 5440,
##     "OG_06356": 5441,
##     "OG_06357": 5442,
##     "OG_06358": 5443,
##     "OG_06360": 5444,
##     "OG_06359": 5445,
##     "OG_06361": 5446,
##     "OG_06362": 5447,
##     "OG_06363": 5448,
##     "OG_06364": 5449,
##     "OG_06366": 5450,
##     "OG_06368": 5451,
##     "OG_06367": 5452,
##     "OG_06369": 5453,
##     "OG_06370": 5454,
##     "OG_06371": 5455,
##     "OG_06376": 5456,
##     "OG_06372": 5457,
##     "OG_06373": 5458,
##     "OG_06375": 5459,
##     "OG_06377": 5460,
##     "OG_06378": 5461,
##     "OG_06379": 5462,
##     "OG_06381": 5463,
##     "OG_06383": 5464,
##     "OG_06382": 5465,
##     "OG_06387": 5466,
##     "OG_06385": 5467,
##     "OG_06386": 5468,
##     "OG_06388": 5469,
##     "OG_06384": 5470,
##     "OG_06391": 5471,
##     "OG_06390": 5472,
##     "OG_06392": 5473,
##     "OG_06393": 5474,
##     "OG_06394": 5475,
##     "OG_06395": 5476,
##     "OG_06397": 5477,
##     "OG_06399": 5478,
##     "OG_06396": 5479,
##     "OG_06400": 5480,
##     "OG_06402": 5481,
##     "OG_06401": 5482,
##     "OG_06403": 5483,
##     "OG_06407": 5484,
##     "OG_06404": 5485,
##     "OG_06405": 5486,
##     "OG_06406": 5487,
##     "OG_06408": 5488,
##     "OG_06446": 5489,
##     "OG_06443": 5490,
##     "OG_06444": 5491,
##     "OG_06445": 5492,
##     "OG_06447": 5493,
##     "OG_06425": 5494,
##     "OG_06409": 5495,
##     "OG_06410": 5496,
##     "OG_06411": 5497,
##     "OG_06412": 5498,
##     "OG_06413": 5499,
##     "OG_06414": 5500,
##     "OG_06415": 5501,
##     "OG_06416": 5502,
##     "OG_06417": 5503,
##     "OG_06419": 5504,
##     "OG_06420": 5505,
##     "OG_06421": 5506,
##     "OG_06422": 5507,
##     "OG_06423": 5508,
##     "OG_06424": 5509,
##     "OG_06426": 5510,
##     "OG_06427": 5511,
##     "OG_06428": 5512,
##     "OG_06429": 5513,
##     "OG_06430": 5514,
##     "OG_06431": 5515,
##     "OG_06432": 5516,
##     "OG_06433": 5517,
##     "OG_06434": 5518,
##     "OG_06435": 5519,
##     "OG_06436": 5520,
##     "OG_06437": 5521,
##     "OG_06438": 5522,
##     "OG_06439": 5523,
##     "OG_06441": 5524,
##     "OG_06442": 5525,
##     "OG_06448": 5526,
##     "OG_06449": 5527,
##     "OG_06450": 5528,
##     "OG_06451": 5529,
##     "OG_06452": 5530,
##     "OG_06453": 5531,
##     "OG_06454": 5532,
##     "OG_06455": 5533,
##     "OG_06457": 5534,
##     "OG_06458": 5535,
##     "OG_06461": 5536,
##     "OG_06462": 5537,
##     "OG_06469": 5538,
##     "OG_06471": 5539,
##     "OG_06463": 5540,
##     "OG_06464": 5541,
##     "OG_06465": 5542,
##     "OG_06466": 5543,
##     "OG_06467": 5544,
##     "OG_06468": 5545,
##     "OG_06472": 5546,
##     "OG_06470": 5547,
##     "OG_06474": 5548,
##     "OG_06475": 5549,
##     "OG_06476": 5550,
##     "OG_06480": 5551,
##     "OG_06481": 5552,
##     "OG_06482": 5553,
##     "OG_06483": 5554,
##     "OG_06477": 5555,
##     "OG_06478": 5556,
##     "OG_06479": 5557,
##     "OG_06484": 5558,
##     "OG_06485": 5559,
##     "OG_06486": 5560,
##     "OG_06487": 5561,
##     "OG_06488": 5562,
##     "OG_06489": 5563,
##     "OG_06490": 5564,
##     "OG_06491": 5565,
##     "OG_06497": 5566,
##     "OG_06498": 5567,
##     "OG_06493": 5568,
##     "OG_06494": 5569,
##     "OG_06495": 5570,
##     "OG_06496": 5571,
##     "OG_06501": 5572,
##     "OG_06502": 5573,
##     "OG_06503": 5574,
##     "OG_06500": 5575,
##     "OG_06507": 5576,
##     "OG_06504": 5577,
##     "OG_06505": 5578,
##     "OG_06508": 5579,
##     "OG_06514": 5580,
##     "OG_06515": 5581,
##     "OG_06513": 5582,
##     "OG_06516": 5583,
##     "OG_06510": 5584,
##     "OG_06511": 5585,
##     "OG_06512": 5586,
##     "OG_06517": 5587,
##     "OG_06520": 5588,
##     "OG_06521": 5589,
##     "OG_06522": 5590,
##     "OG_06523": 5591,
##     "OG_06524": 5592,
##     "OG_06525": 5593,
##     "OG_06526": 5594,
##     "OG_06527": 5595,
##     "OG_06528": 5596,
##     "OG_06529": 5597,
##     "OG_06530": 5598,
##     "OG_06532": 5599,
##     "OG_06546": 5600,
##     "OG_06547": 5601,
##     "OG_06548": 5602,
##     "OG_06550": 5603,
##     "OG_06553": 5604,
##     "OG_06554": 5605,
##     "OG_06552": 5606,
##     "OG_06534": 5607,
##     "OG_06533": 5608,
##     "OG_06536": 5609,
##     "OG_06538": 5610,
##     "OG_06539": 5611,
##     "OG_06541": 5612,
##     "OG_06542": 5613,
##     "OG_06543": 5614,
##     "OG_06544": 5615,
##     "OG_06555": 5616,
##     "OG_06567": 5617,
##     "OG_06569": 5618,
##     "OG_06560": 5619,
##     "OG_06556": 5620,
##     "OG_06557": 5621,
##     "OG_06558": 5622,
##     "OG_06559": 5623,
##     "OG_06561": 5624,
##     "OG_06562": 5625,
##     "OG_06563": 5626,
##     "OG_06564": 5627,
##     "OG_06565": 5628,
##     "OG_06566": 5629,
##     "OG_06572": 5630,
##     "OG_06571": 5631,
##     "OG_06573": 5632,
##     "OG_06575": 5633,
##     "OG_06574": 5634,
##     "OG_06578": 5635,
##     "OG_06577": 5636,
##     "OG_06581": 5637,
##     "OG_06580": 5638,
##     "OG_06582": 5639,
##     "OG_06584": 5640,
##     "OG_06585": 5641,
##     "OG_06589": 5642,
##     "OG_06586": 5643,
##     "OG_06587": 5644,
##     "OG_06590": 5645,
##     "OG_06593": 5646,
##     "OG_06592": 5647,
##     "OG_06594": 5648,
##     "OG_06591": 5649,
##     "OG_06595": 5650,
##     "OG_06596": 5651,
##     "OG_06597": 5652,
##     "OG_06599": 5653,
##     "OG_06600": 5654,
##     "OG_06601": 5655,
##     "OG_06602": 5656,
##     "OG_06603": 5657,
##     "OG_06606": 5658,
##     "OG_06604": 5659,
##     "OG_06607": 5660,
##     "OG_06608": 5661,
##     "OG_06609": 5662,
##     "OG_06610": 5663,
##     "OG_06611": 5664,
##     "OG_06613": 5665,
##     "OG_06614": 5666,
##     "OG_06612": 5667,
##     "OG_06615": 5668,
##     "OG_06616": 5669,
##     "OG_06618": 5670,
##     "OG_06619": 5671,
##     "OG_06620": 5672,
##     "OG_06621": 5673,
##     "OG_06622": 5674,
##     "OG_06623": 5675,
##     "OG_06624": 5676,
##     "OG_06625": 5677,
##     "OG_06626": 5678,
##     "OG_06627": 5679,
##     "OG_06628": 5680,
##     "OG_06631": 5681,
##     "OG_06634": 5682,
##     "OG_06637": 5683,
##     "OG_06635": 5684,
##     "OG_06639": 5685,
##     "OG_06640": 5686,
##     "OG_06641": 5687,
##     "OG_06643": 5688,
##     "OG_06644": 5689,
##     "OG_06645": 5690,
##     "OG_06646": 5691,
##     "OG_06647": 5692,
##     "OG_06648": 5693,
##     "OG_06649": 5694,
##     "OG_06650": 5695,
##     "OG_06651": 5696,
##     "OG_06652": 5697,
##     "OG_06653": 5698,
##     "OG_06654": 5699,
##     "OG_06655": 5700,
##     "OG_06656": 5701,
##     "OG_06661": 5702,
##     "OG_06662": 5703,
##     "OG_06657": 5704,
##     "OG_06658": 5705,
##     "OG_06659": 5706,
##     "OG_06660": 5707,
##     "OG_06663": 5708,
##     "OG_06665": 5709,
##     "OG_06666": 5710,
##     "OG_06667": 5711,
##     "OG_06668": 5712,
##     "OG_06670": 5713,
##     "OG_06669": 5714,
##     "OG_06677": 5715,
##     "OG_06678": 5716,
##     "OG_06672": 5717,
##     "OG_06673": 5718,
##     "OG_06675": 5719,
##     "OG_06679": 5720,
##     "OG_06680": 5721,
##     "OG_06681": 5722,
##     "OG_06682": 5723,
##     "OG_06683": 5724,
##     "OG_06685": 5725,
##     "OG_06686": 5726,
##     "OG_06687": 5727,
##     "OG_06688": 5728,
##     "OG_06689": 5729,
##     "OG_06691": 5730,
##     "OG_06690": 5731,
##     "OG_06692": 5732,
##     "OG_06693": 5733,
##     "OG_06694": 5734,
##     "OG_06696": 5735,
##     "OG_06697": 5736,
##     "OG_06699": 5737,
##     "OG_06698": 5738,
##     "OG_06701": 5739,
##     "OG_06703": 5740,
##     "OG_06704": 5741,
##     "OG_06702": 5742,
##     "OG_06707": 5743,
##     "OG_06708": 5744,
##     "OG_06709": 5745,
##     "OG_06710": 5746,
##     "OG_06711": 5747,
##     "OG_06713": 5748,
##     "OG_06712": 5749,
##     "OG_06719": 5750,
##     "OG_06720": 5751,
##     "OG_06721": 5752,
##     "OG_06722": 5753,
##     "OG_06723": 5754,
##     "OG_06724": 5755,
##     "OG_06725": 5756,
##     "OG_06726": 5757,
##     "OG_06727": 5758,
##     "OG_06728": 5759,
##     "OG_06729": 5760,
##     "OG_06730": 5761,
##     "OG_06731": 5762,
##     "OG_06732": 5763,
##     "OG_06714": 5764,
##     "OG_06716": 5765,
##     "OG_06717": 5766,
##     "OG_06718": 5767,
##     "OG_06734": 5768,
##     "OG_06735": 5769,
##     "OG_06736": 5770,
##     "OG_06737": 5771,
##     "OG_06738": 5772,
##     "OG_06739": 5773,
##     "OG_06744": 5774,
##     "OG_06741": 5775,
##     "OG_06742": 5776,
##     "OG_06743": 5777,
##     "OG_06748": 5778,
##     "OG_06747": 5779,
##     "OG_06745": 5780,
##     "OG_06746": 5781,
##     "OG_06750": 5782,
##     "OG_06751": 5783,
##     "OG_06752": 5784,
##     "OG_06754": 5785,
##     "OG_06757": 5786,
##     "OG_06755": 5787,
##     "OG_06756": 5788,
##     "OG_06758": 5789,
##     "OG_06759": 5790,
##     "OG_06760": 5791,
##     "OG_06761": 5792,
##     "OG_06762": 5793,
##     "OG_06763": 5794,
##     "OG_06764": 5795,
##     "OG_06765": 5796,
##     "OG_06766": 5797,
##     "OG_06767": 5798,
##     "OG_06768": 5799,
##     "OG_06769": 5800,
##     "OG_06770": 5801,
##     "OG_06771": 5802,
##     "OG_06772": 5803,
##     "OG_06774": 5804,
##     "OG_06775": 5805,
##     "OG_06776": 5806,
##     "OG_06777": 5807,
##     "OG_06778": 5808,
##     "OG_06779": 5809,
##     "OG_06780": 5810,
##     "OG_06781": 5811,
##     "OG_06782": 5812,
##     "OG_06783": 5813,
##     "OG_06784": 5814,
##     "OG_06785": 5815,
##     "OG_06788": 5816,
##     "OG_06789": 5817,
##     "OG_06790": 5818,
##     "OG_06791": 5819,
##     "OG_06792": 5820,
##     "OG_06793": 5821,
##     "OG_06794": 5822,
##     "OG_06795": 5823,
##     "OG_06796": 5824,
##     "OG_06797": 5825,
##     "OG_06800": 5826,
##     "OG_06801": 5827,
##     "OG_06802": 5828,
##     "OG_06803": 5829,
##     "OG_06804": 5830,
##     "OG_06806": 5831,
##     "OG_06805": 5832,
##     "OG_06807": 5833,
##     "OG_06811": 5834,
##     "OG_06812": 5835,
##     "OG_06813": 5836,
##     "OG_06814": 5837,
##     "OG_06810": 5838,
##     "OG_06815": 5839,
##     "OG_06816": 5840,
##     "OG_06817": 5841,
##     "OG_06818": 5842,
##     "OG_06819": 5843,
##     "OG_06831": 5844,
##     "OG_06820": 5845,
##     "OG_06821": 5846,
##     "OG_06822": 5847,
##     "OG_06823": 5848,
##     "OG_06824": 5849,
##     "OG_06826": 5850,
##     "OG_06827": 5851,
##     "OG_06828": 5852,
##     "OG_06830": 5853,
##     "OG_06837": 5854,
##     "OG_06832": 5855,
##     "OG_06833": 5856,
##     "OG_06834": 5857,
##     "OG_06835": 5858,
##     "OG_06836": 5859,
##     "OG_06848": 5860,
##     "OG_06839": 5861,
##     "OG_06838": 5862,
##     "OG_06840": 5863,
##     "OG_06841": 5864,
##     "OG_06842": 5865,
##     "OG_06843": 5866,
##     "OG_06844": 5867,
##     "OG_06845": 5868,
##     "OG_06854": 5869,
##     "OG_06849": 5870,
##     "OG_06850": 5871,
##     "OG_06852": 5872,
##     "OG_06853": 5873,
##     "OG_06860": 5874,
##     "OG_06855": 5875,
##     "OG_06856": 5876,
##     "OG_06857": 5877,
##     "OG_06858": 5878,
##     "OG_06859": 5879,
##     "OG_06865": 5880,
##     "OG_06866": 5881,
##     "OG_06867": 5882,
##     "OG_06862": 5883,
##     "OG_06863": 5884,
##     "OG_06879": 5885,
##     "OG_06880": 5886,
##     "OG_06881": 5887,
##     "OG_06868": 5888,
##     "OG_06869": 5889,
##     "OG_06870": 5890,
##     "OG_06871": 5891,
##     "OG_06872": 5892,
##     "OG_06873": 5893,
##     "OG_06874": 5894,
##     "OG_06875": 5895,
##     "OG_06877": 5896,
##     "OG_06884": 5897,
##     "OG_06882": 5898,
##     "OG_06883": 5899,
##     "OG_06885": 5900,
##     "OG_06886": 5901,
##     "OG_06887": 5902,
##     "OG_06888": 5903,
##     "OG_06906": 5904,
##     "OG_06889": 5905,
##     "OG_06891": 5906,
##     "OG_06892": 5907,
##     "OG_06893": 5908,
##     "OG_06894": 5909,
##     "OG_06895": 5910,
##     "OG_06896": 5911,
##     "OG_06897": 5912,
##     "OG_06898": 5913,
##     "OG_06899": 5914,
##     "OG_06900": 5915,
##     "OG_06901": 5916,
##     "OG_06902": 5917,
##     "OG_06905": 5918,
##     "OG_06903": 5919,
##     "OG_06904": 5920,
##     "OG_06908": 5921,
##     "OG_06909": 5922,
##     "OG_06918": 5923,
##     "OG_06919": 5924,
##     "OG_06910": 5925,
##     "OG_06911": 5926,
##     "OG_06912": 5927,
##     "OG_06914": 5928,
##     "OG_06915": 5929,
##     "OG_06916": 5930,
##     "OG_06925": 5931,
##     "OG_06920": 5932,
##     "OG_06921": 5933,
##     "OG_06922": 5934,
##     "OG_06923": 5935,
##     "OG_06924": 5936,
##     "OG_06927": 5937,
##     "OG_06928": 5938,
##     "OG_06929": 5939,
##     "OG_06930": 5940,
##     "OG_06931": 5941,
##     "OG_06933": 5942,
##     "OG_06936": 5943,
##     "OG_06937": 5944,
##     "OG_06938": 5945,
##     "OG_06934": 5946,
##     "OG_06939": 5947,
##     "OG_06944": 5948,
##     "OG_06940": 5949,
##     "OG_06941": 5950,
##     "OG_06942": 5951,
##     "OG_06943": 5952,
##     "OG_06946": 5953,
##     "OG_06947": 5954,
##     "OG_06949": 5955,
##     "OG_06950": 5956,
##     "OG_06951": 5957,
##     "OG_06952": 5958,
##     "OG_06953": 5959,
##     "OG_06955": 5960,
##     "OG_06956": 5961,
##     "OG_06967": 5962,
##     "OG_06957": 5963,
##     "OG_06958": 5964,
##     "OG_06959": 5965,
##     "OG_06960": 5966,
##     "OG_06961": 5967,
##     "OG_06962": 5968,
##     "OG_06964": 5969,
##     "OG_06965": 5970,
##     "OG_06966": 5971,
##     "OG_06968": 5972,
##     "OG_06969": 5973,
##     "OG_06970": 5974,
##     "OG_06988": 5975,
##     "OG_06989": 5976,
##     "OG_06990": 5977,
##     "OG_06991": 5978,
##     "OG_06972": 5979,
##     "OG_06973": 5980,
##     "OG_06974": 5981,
##     "OG_06975": 5982,
##     "OG_06976": 5983,
##     "OG_06977": 5984,
##     "OG_06978": 5985,
##     "OG_06979": 5986,
##     "OG_06980": 5987,
##     "OG_06981": 5988,
##     "OG_06982": 5989,
##     "OG_06983": 5990,
##     "OG_06984": 5991,
##     "OG_06985": 5992,
##     "OG_06986": 5993,
##     "OG_06987": 5994,
##     "OG_06992": 5995,
##     "OG_06993": 5996,
##     "OG_06994": 5997,
##     "OG_06995": 5998,
##     "OG_06996": 5999,
##     "OG_06997": 6000,
##     "OG_06998": 6001,
##     "OG_06999": 6002,
##     "OG_07000": 6003,
##     "OG_07001": 6004,
##     "OG_07002": 6005,
##     "OG_07003": 6006,
##     "OG_07004": 6007,
##     "OG_07005": 6008,
##     "OG_07006": 6009,
##     "OG_07007": 6010,
##     "OG_07009": 6011,
##     "OG_07010": 6012,
##     "OG_07011": 6013,
##     "OG_07012": 6014,
##     "OG_07013": 6015,
##     "OG_07014": 6016,
##     "OG_07019": 6017,
##     "OG_07020": 6018,
##     "OG_07022": 6019,
##     "OG_07015": 6020,
##     "OG_07016": 6021,
##     "OG_07017": 6022,
##     "OG_07018": 6023,
##     "OG_07023": 6024,
##     "OG_07025": 6025,
##     "OG_07027": 6026,
##     "OG_07028": 6027,
##     "OG_07029": 6028,
##     "OG_07030": 6029,
##     "OG_07031": 6030,
##     "OG_07032": 6031,
##     "OG_07033": 6032,
##     "OG_07034": 6033,
##     "OG_07035": 6034,
##     "OG_07036": 6035,
##     "OG_07037": 6036,
##     "OG_07038": 6037,
##     "OG_07040": 6038,
##     "OG_07039": 6039,
##     "OG_07041": 6040,
##     "OG_07047": 6041,
##     "OG_07048": 6042,
##     "OG_07049": 6043,
##     "OG_07043": 6044,
##     "OG_07044": 6045,
##     "OG_07045": 6046,
##     "OG_07046": 6047,
##     "OG_07052": 6048,
##     "OG_07050": 6049,
##     "OG_07053": 6050,
##     "OG_07054": 6051,
##     "OG_07055": 6052,
##     "OG_07056": 6053,
##     "OG_07057": 6054,
##     "OG_07058": 6055,
##     "OG_07059": 6056,
##     "OG_07061": 6057,
##     "OG_07062": 6058,
##     "OG_07063": 6059,
##     "OG_07064": 6060,
##     "OG_07065": 6061,
##     "OG_07066": 6062,
##     "OG_07067": 6063,
##     "OG_07068": 6064,
##     "OG_07069": 6065,
##     "OG_07070": 6066,
##     "OG_07079": 6067,
##     "OG_07071": 6068,
##     "OG_07072": 6069,
##     "OG_07073": 6070,
##     "OG_07075": 6071,
##     "OG_07076": 6072,
##     "OG_07077": 6073,
##     "OG_07078": 6074,
##     "OG_07080": 6075,
##     "OG_07081": 6076,
##     "OG_07082": 6077,
##     "OG_07083": 6078,
##     "OG_07084": 6079,
##     "OG_07085": 6080,
##     "OG_07094": 6081,
##     "OG_07095": 6082,
##     "OG_07096": 6083,
##     "OG_07097": 6084,
##     "OG_07098": 6085,
##     "OG_07086": 6086,
##     "OG_07087": 6087,
##     "OG_07088": 6088,
##     "OG_07089": 6089,
##     "OG_07090": 6090,
##     "OG_07091": 6091,
##     "OG_07092": 6092,
##     "OG_07093": 6093,
##     "OG_07101": 6094,
##     "OG_07100": 6095,
##     "OG_07102": 6096,
##     "OG_07105": 6097,
##     "OG_07106": 6098,
##     "OG_07103": 6099,
##     "OG_07104": 6100,
##     "OG_07107": 6101,
##     "OG_07108": 6102,
##     "OG_07109": 6103,
##     "OG_07110": 6104,
##     "OG_07111": 6105,
##     "OG_07112": 6106,
##     "OG_07114": 6107,
##     "OG_07115": 6108,
##     "OG_07116": 6109,
##     "OG_07117": 6110,
##     "OG_07118": 6111,
##     "OG_07119": 6112,
##     "OG_07120": 6113,
##     "OG_07121": 6114,
##     "OG_07129": 6115,
##     "OG_07130": 6116,
##     "OG_07131": 6117,
##     "OG_07132": 6118,
##     "OG_07122": 6119,
##     "OG_07123": 6120,
##     "OG_07124": 6121,
##     "OG_07125": 6122,
##     "OG_07126": 6123,
##     "OG_07127": 6124,
##     "OG_07128": 6125,
##     "OG_07138": 6126,
##     "OG_07140": 6127,
##     "OG_07141": 6128,
##     "OG_07139": 6129,
##     "OG_07142": 6130,
##     "OG_07144": 6131,
##     "OG_07146": 6132,
##     "OG_07134": 6133,
##     "OG_07135": 6134,
##     "OG_07136": 6135,
##     "OG_07147": 6136,
##     "OG_07150": 6137,
##     "OG_07151": 6138,
##     "OG_07152": 6139,
##     "OG_07153": 6140,
##     "OG_07154": 6141,
##     "OG_07155": 6142,
##     "OG_07157": 6143,
##     "OG_07163": 6144,
##     "OG_07158": 6145,
##     "OG_07159": 6146,
##     "OG_07160": 6147,
##     "OG_07161": 6148,
##     "OG_07162": 6149,
##     "OG_07169": 6150,
##     "OG_07168": 6151,
##     "OG_07170": 6152,
##     "OG_07171": 6153,
##     "OG_07172": 6154,
##     "OG_07173": 6155,
##     "OG_07174": 6156,
##     "OG_07164": 6157,
##     "OG_07165": 6158,
##     "OG_07166": 6159,
##     "OG_07175": 6160,
##     "OG_07177": 6161,
##     "OG_07178": 6162,
##     "OG_07184": 6163,
##     "OG_07183": 6164,
##     "OG_07179": 6165,
##     "OG_07180": 6166,
##     "OG_07181": 6167,
##     "OG_07182": 6168,
##     "OG_07191": 6169,
##     "OG_07185": 6170,
##     "OG_07186": 6171,
##     "OG_07187": 6172,
##     "OG_07188": 6173,
##     "OG_07190": 6174,
##     "OG_07192": 6175,
##     "OG_07193": 6176,
##     "OG_07194": 6177,
##     "OG_07198": 6178,
##     "OG_07195": 6179,
##     "OG_07196": 6180,
##     "OG_07197": 6181,
##     "OG_07204": 6182,
##     "OG_07205": 6183,
##     "OG_07201": 6184,
##     "OG_07202": 6185,
##     "OG_07203": 6186,
##     "OG_07208": 6187,
##     "OG_07207": 6188,
##     "OG_07206": 6189,
##     "OG_07211": 6190,
##     "OG_07212": 6191,
##     "OG_07213": 6192,
##     "OG_07214": 6193,
##     "OG_07215": 6194,
##     "OG_07216": 6195,
##     "OG_07217": 6196,
##     "OG_07218": 6197,
##     "OG_07219": 6198,
##     "OG_07220": 6199,
##     "OG_07221": 6200,
##     "OG_07222": 6201,
##     "OG_07224": 6202,
##     "OG_07223": 6203,
##     "OG_07225": 6204,
##     "OG_07226": 6205,
##     "OG_07227": 6206,
##     "OG_07228": 6207,
##     "OG_07229": 6208,
##     "OG_07235": 6209,
##     "OG_07237": 6210,
##     "OG_07236": 6211,
##     "OG_07230": 6212,
##     "OG_07232": 6213,
##     "OG_07233": 6214,
##     "OG_07234": 6215,
##     "OG_07238": 6216,
##     "OG_07239": 6217,
##     "OG_07241": 6218,
##     "OG_07242": 6219,
##     "OG_07244": 6220,
##     "OG_07243": 6221,
##     "OG_07245": 6222,
##     "OG_07252": 6223,
##     "OG_07254": 6224,
##     "OG_07250": 6225,
##     "OG_07251": 6226,
##     "OG_07256": 6227,
##     "OG_07255": 6228,
##     "OG_07257": 6229,
##     "OG_07258": 6230,
##     "OG_07259": 6231,
##     "OG_07260": 6232,
##     "OG_07261": 6233,
##     "OG_07262": 6234,
##     "OG_07263": 6235,
##     "OG_07264": 6236,
##     "OG_07265": 6237,
##     "OG_07267": 6238,
##     "OG_07268": 6239,
##     "OG_07266": 6240,
##     "OG_07271": 6241,
##     "OG_07270": 6242,
##     "OG_07274": 6243,
##     "OG_07272": 6244,
##     "OG_07278": 6245,
##     "OG_07275": 6246,
##     "OG_07276": 6247,
##     "OG_07280": 6248,
##     "OG_07281": 6249,
##     "OG_07282": 6250,
##     "OG_07283": 6251,
##     "OG_07284": 6252,
##     "OG_07285": 6253,
##     "OG_07286": 6254,
##     "OG_07287": 6255,
##     "OG_07288": 6256,
##     "OG_07291": 6257,
##     "OG_07289": 6258,
##     "OG_07290": 6259,
##     "OG_07300": 6260,
##     "OG_07298": 6261,
##     "OG_07299": 6262,
##     "OG_07303": 6263,
##     "OG_07304": 6264,
##     "OG_07296": 6265,
##     "OG_07297": 6266,
##     "OG_07302": 6267,
##     "OG_07305": 6268,
##     "OG_07306": 6269,
##     "OG_07307": 6270,
##     "OG_07308": 6271,
##     "OG_07313": 6272,
##     "OG_07310": 6273,
##     "OG_07311": 6274,
##     "OG_07312": 6275,
##     "OG_07314": 6276,
##     "OG_07315": 6277,
##     "OG_07316": 6278,
##     "OG_07317": 6279,
##     "OG_07319": 6280,
##     "OG_07321": 6281,
##     "OG_07322": 6282,
##     "OG_07323": 6283,
##     "OG_07324": 6284,
##     "OG_07325": 6285,
##     "OG_07326": 6286,
##     "OG_07327": 6287,
##     "OG_07328": 6288,
##     "OG_07329": 6289,
##     "OG_07330": 6290,
##     "OG_07331": 6291,
##     "OG_07335": 6292,
##     "OG_07332": 6293,
##     "OG_07333": 6294,
##     "OG_07334": 6295,
##     "OG_07336": 6296,
##     "OG_07337": 6297,
##     "OG_07338": 6298,
##     "OG_07339": 6299,
##     "OG_07340": 6300,
##     "OG_07341": 6301,
##     "OG_07342": 6302,
##     "OG_07343": 6303,
##     "OG_07344": 6304,
##     "OG_07348": 6305,
##     "OG_07346": 6306,
##     "OG_07347": 6307,
##     "OG_07349": 6308,
##     "OG_07351": 6309,
##     "OG_07359": 6310,
##     "OG_07360": 6311,
##     "OG_07355": 6312,
##     "OG_07356": 6313,
##     "OG_07357": 6314,
##     "OG_07366": 6315,
##     "OG_07361": 6316,
##     "OG_07362": 6317,
##     "OG_07365": 6318,
##     "OG_07371": 6319,
##     "OG_07367": 6320,
##     "OG_07368": 6321,
##     "OG_07369": 6322,
##     "OG_07370": 6323,
##     "OG_07378": 6324,
##     "OG_07372": 6325,
##     "OG_07374": 6326,
##     "OG_07375": 6327,
##     "OG_07376": 6328,
##     "OG_07408": 6329,
##     "OG_07409": 6330,
##     "OG_07410": 6331,
##     "OG_07411": 6332,
##     "OG_07412": 6333,
##     "OG_07413": 6334,
##     "OG_07414": 6335,
##     "OG_07416": 6336,
##     "OG_07417": 6337,
##     "OG_07418": 6338,
##     "OG_07379": 6339,
##     "OG_07380": 6340,
##     "OG_07381": 6341,
##     "OG_07383": 6342,
##     "OG_07384": 6343,
##     "OG_07385": 6344,
##     "OG_07386": 6345,
##     "OG_07387": 6346,
##     "OG_07388": 6347,
##     "OG_07389": 6348,
##     "OG_07390": 6349,
##     "OG_07391": 6350,
##     "OG_07392": 6351,
##     "OG_07393": 6352,
##     "OG_07394": 6353,
##     "OG_07395": 6354,
##     "OG_07396": 6355,
##     "OG_07397": 6356,
##     "OG_07398": 6357,
##     "OG_07400": 6358,
##     "OG_07401": 6359,
##     "OG_07402": 6360,
##     "OG_07403": 6361,
##     "OG_07404": 6362,
##     "OG_07406": 6363,
##     "OG_07407": 6364,
##     "OG_07419": 6365,
##     "OG_07420": 6366,
##     "OG_07421": 6367,
##     "OG_07422": 6368,
##     "OG_07423": 6369,
##     "OG_07424": 6370,
##     "OG_07426": 6371,
##     "OG_07428": 6372,
##     "OG_07430": 6373,
##     "OG_07429": 6374,
##     "OG_07432": 6375,
##     "OG_07427": 6376,
##     "OG_07433": 6377,
##     "OG_07435": 6378,
##     "OG_07436": 6379,
##     "OG_07437": 6380,
##     "OG_07438": 6381,
##     "OG_07439": 6382,
##     "OG_07440": 6383,
##     "OG_07442": 6384,
##     "OG_07443": 6385,
##     "OG_07444": 6386,
##     "OG_07448": 6387,
##     "OG_07445": 6388,
##     "OG_07446": 6389,
##     "OG_07447": 6390,
##     "OG_07450": 6391,
##     "OG_07451": 6392,
##     "OG_07449": 6393,
##     "OG_07452": 6394,
##     "OG_07457": 6395,
##     "OG_07458": 6396,
##     "OG_07456": 6397,
##     "OG_07454": 6398,
##     "OG_07455": 6399,
##     "OG_07460": 6400,
##     "OG_07461": 6401,
##     "OG_07463": 6402,
##     "OG_07464": 6403,
##     "OG_07465": 6404,
##     "OG_07468": 6405,
##     "OG_07469": 6406,
##     "OG_07470": 6407,
##     "OG_07471": 6408,
##     "OG_07472": 6409,
##     "OG_07475": 6410,
##     "OG_07473": 6411,
##     "OG_07474": 6412,
##     "OG_07479": 6413,
##     "OG_07478": 6414,
##     "OG_07477": 6415,
##     "OG_07483": 6416,
##     "OG_07481": 6417,
##     "OG_07484": 6418,
##     "OG_07485": 6419,
##     "OG_07486": 6420,
##     "OG_07487": 6421,
##     "OG_07488": 6422,
##     "OG_07492": 6423,
##     "OG_07489": 6424,
##     "OG_07490": 6425,
##     "OG_07491": 6426,
##     "OG_07496": 6427,
##     "OG_07495": 6428,
##     "OG_07494": 6429,
##     "OG_07497": 6430,
##     "OG_07498": 6431,
##     "OG_07499": 6432,
##     "OG_07500": 6433,
##     "OG_07501": 6434,
##     "OG_07503": 6435,
##     "OG_07502": 6436,
##     "OG_07506": 6437,
##     "OG_07507": 6438,
##     "OG_07521": 6439,
##     "OG_07522": 6440,
##     "OG_07524": 6441,
##     "OG_07525": 6442,
##     "OG_07523": 6443,
##     "OG_07527": 6444,
##     "OG_07528": 6445,
##     "OG_07526": 6446,
##     "OG_07529": 6447,
##     "OG_07530": 6448,
##     "OG_07531": 6449,
##     "OG_07532": 6450,
##     "OG_07533": 6451,
##     "OG_07510": 6452,
##     "OG_07518": 6453,
##     "OG_07509": 6454,
##     "OG_07511": 6455,
##     "OG_07512": 6456,
##     "OG_07513": 6457,
##     "OG_07514": 6458,
##     "OG_07515": 6459,
##     "OG_07516": 6460,
##     "OG_07517": 6461,
##     "OG_07519": 6462,
##     "OG_07520": 6463,
##     "OG_07534": 6464,
##     "OG_07535": 6465,
##     "OG_07536": 6466,
##     "OG_07537": 6467,
##     "OG_07539": 6468,
##     "OG_07542": 6469,
##     "OG_07540": 6470,
##     "OG_07543": 6471,
##     "OG_07544": 6472,
##     "OG_07545": 6473,
##     "OG_07550": 6474,
##     "OG_07546": 6475,
##     "OG_07547": 6476,
##     "OG_07548": 6477,
##     "OG_07551": 6478,
##     "OG_07552": 6479,
##     "OG_07553": 6480,
##     "OG_07554": 6481,
##     "OG_07556": 6482,
##     "OG_07557": 6483,
##     "OG_07558": 6484,
##     "OG_07559": 6485,
##     "OG_07560": 6486,
##     "OG_07562": 6487,
##     "OG_07564": 6488,
##     "OG_07561": 6489,
##     "OG_07565": 6490,
##     "OG_07566": 6491,
##     "OG_07567": 6492,
##     "OG_07568": 6493,
##     "OG_07569": 6494,
##     "OG_07570": 6495,
##     "OG_07571": 6496,
##     "OG_07574": 6497,
##     "OG_07575": 6498,
##     "OG_07572": 6499,
##     "OG_07573": 6500,
##     "OG_07577": 6501,
##     "OG_07579": 6502,
##     "OG_07580": 6503,
##     "OG_07582": 6504,
##     "OG_07583": 6505,
##     "OG_07586": 6506,
##     "OG_07588": 6507,
##     "OG_07589": 6508,
##     "OG_07590": 6509,
##     "OG_07591": 6510,
##     "OG_07593": 6511,
##     "OG_07594": 6512,
##     "OG_07595": 6513,
##     "OG_07596": 6514,
##     "OG_07598": 6515,
##     "OG_07599": 6516,
##     "OG_07602": 6517,
##     "OG_07603": 6518,
##     "OG_07601": 6519,
##     "OG_07604": 6520,
##     "OG_07607": 6521,
##     "OG_07606": 6522,
##     "OG_07608": 6523,
##     "OG_07609": 6524,
##     "OG_07610": 6525,
##     "OG_07611": 6526,
##     "OG_07612": 6527,
##     "OG_07615": 6528,
##     "OG_07616": 6529,
##     "OG_07617": 6530,
##     "OG_07613": 6531,
##     "OG_07618": 6532,
##     "OG_07623": 6533,
##     "OG_07626": 6534,
##     "OG_07625": 6535,
##     "OG_07620": 6536,
##     "OG_07621": 6537,
##     "OG_07622": 6538,
##     "OG_07627": 6539,
##     "OG_07628": 6540,
##     "OG_07630": 6541,
##     "OG_07633": 6542,
##     "OG_07634": 6543,
##     "OG_07635": 6544,
##     "OG_07631": 6545,
##     "OG_07632": 6546,
##     "OG_07636": 6547,
##     "OG_07637": 6548,
##     "OG_07639": 6549,
##     "OG_07641": 6550,
##     "OG_07642": 6551,
##     "OG_07643": 6552,
##     "OG_07644": 6553,
##     "OG_07645": 6554,
##     "OG_07646": 6555,
##     "OG_07647": 6556,
##     "OG_07648": 6557,
##     "OG_07650": 6558,
##     "OG_07649": 6559,
##     "OG_07656": 6560,
##     "OG_07651": 6561,
##     "OG_07652": 6562,
##     "OG_07653": 6563,
##     "OG_07654": 6564,
##     "OG_07655": 6565,
##     "OG_07657": 6566,
##     "OG_07658": 6567,
##     "OG_07659": 6568,
##     "OG_07660": 6569,
##     "OG_07662": 6570,
##     "OG_07663": 6571,
##     "OG_07664": 6572,
##     "OG_07666": 6573,
##     "OG_07667": 6574,
##     "OG_07668": 6575,
##     "OG_07669": 6576,
##     "OG_07671": 6577,
##     "OG_07677": 6578,
##     "OG_07672": 6579,
##     "OG_07675": 6580,
##     "OG_07676": 6581,
##     "OG_07678": 6582,
##     "OG_07679": 6583,
##     "OG_07681": 6584,
##     "OG_07692": 6585,
##     "OG_07693": 6586,
##     "OG_07683": 6587,
##     "OG_07684": 6588,
##     "OG_07685": 6589,
##     "OG_07686": 6590,
##     "OG_07687": 6591,
##     "OG_07688": 6592,
##     "OG_07689": 6593,
##     "OG_07690": 6594,
##     "OG_07691": 6595,
##     "OG_07695": 6596,
##     "OG_07697": 6597,
##     "OG_07699": 6598,
##     "OG_07700": 6599,
##     "OG_07701": 6600,
##     "OG_07703": 6601,
##     "OG_07707": 6602,
##     "OG_07704": 6603,
##     "OG_07705": 6604,
##     "OG_07706": 6605,
##     "OG_07709": 6606,
##     "OG_07711": 6607,
##     "OG_07712": 6608,
##     "OG_07710": 6609,
##     "OG_07713": 6610,
##     "OG_07714": 6611,
##     "OG_07715": 6612,
##     "OG_07716": 6613,
##     "OG_07717": 6614,
##     "OG_07718": 6615,
##     "OG_07734": 6616,
##     "OG_07735": 6617,
##     "OG_07736": 6618,
##     "OG_07719": 6619,
##     "OG_07720": 6620,
##     "OG_07723": 6621,
##     "OG_07724": 6622,
##     "OG_07725": 6623,
##     "OG_07726": 6624,
##     "OG_07727": 6625,
##     "OG_07728": 6626,
##     "OG_07729": 6627,
##     "OG_07730": 6628,
##     "OG_07731": 6629,
##     "OG_07732": 6630,
##     "OG_07733": 6631,
##     "OG_07737": 6632,
##     "OG_07738": 6633,
##     "OG_07739": 6634,
##     "OG_07740": 6635,
##     "OG_07741": 6636,
##     "OG_07742": 6637,
##     "OG_07745": 6638,
##     "OG_07744": 6639,
##     "OG_07748": 6640,
##     "OG_07747": 6641,
##     "OG_07755": 6642,
##     "OG_07756": 6643,
##     "OG_07754": 6644,
##     "OG_07760": 6645,
##     "OG_07757": 6646,
##     "OG_07758": 6647,
##     "OG_07759": 6648,
##     "OG_07749": 6649,
##     "OG_07750": 6650,
##     "OG_07751": 6651,
##     "OG_07752": 6652,
##     "OG_07753": 6653,
##     "OG_07761": 6654,
##     "OG_07769": 6655,
##     "OG_07770": 6656,
##     "OG_07771": 6657,
##     "OG_07762": 6658,
##     "OG_07763": 6659,
##     "OG_07764": 6660,
##     "OG_07766": 6661,
##     "OG_07767": 6662,
##     "OG_07768": 6663,
##     "OG_07772": 6664,
##     "OG_07773": 6665,
##     "OG_07776": 6666,
##     "OG_07777": 6667,
##     "OG_07778": 6668,
##     "OG_07779": 6669,
##     "OG_07780": 6670,
##     "OG_07781": 6671,
##     "OG_07793": 6672,
##     "OG_07794": 6673,
##     "OG_07795": 6674,
##     "OG_07796": 6675,
##     "OG_07797": 6676,
##     "OG_07783": 6677,
##     "OG_07782": 6678,
##     "OG_07785": 6679,
##     "OG_07786": 6680,
##     "OG_07787": 6681,
##     "OG_07788": 6682,
##     "OG_07789": 6683,
##     "OG_07790": 6684,
##     "OG_07792": 6685,
##     "OG_07798": 6686,
##     "OG_07799": 6687,
##     "OG_07800": 6688,
##     "OG_07801": 6689,
##     "OG_07803": 6690,
##     "OG_07804": 6691,
##     "OG_07805": 6692,
##     "OG_07807": 6693,
##     "OG_07808": 6694,
##     "OG_07810": 6695,
##     "OG_07811": 6696,
##     "OG_07812": 6697,
##     "OG_07813": 6698,
##     "OG_07814": 6699,
##     "OG_07817": 6700,
##     "OG_07818": 6701,
##     "OG_07819": 6702,
##     "OG_07820": 6703,
##     "OG_07823": 6704,
##     "OG_07824": 6705,
##     "OG_07825": 6706,
##     "OG_07826": 6707,
##     "OG_07827": 6708,
##     "OG_07834": 6709,
##     "OG_07835": 6710,
##     "OG_07832": 6711,
##     "OG_07833": 6712,
##     "OG_07846": 6713,
##     "OG_07847": 6714,
##     "OG_07848": 6715,
##     "OG_07849": 6716,
##     "OG_07850": 6717,
##     "OG_07851": 6718,
##     "OG_07853": 6719,
##     "OG_07854": 6720,
##     "OG_07836": 6721,
##     "OG_07837": 6722,
##     "OG_07838": 6723,
##     "OG_07839": 6724,
##     "OG_07840": 6725,
##     "OG_07841": 6726,
##     "OG_07842": 6727,
##     "OG_07843": 6728,
##     "OG_07844": 6729,
##     "OG_07845": 6730,
##     "OG_07855": 6731,
##     "OG_07856": 6732,
##     "OG_07858": 6733,
##     "OG_07859": 6734,
##     "OG_07860": 6735,
##     "OG_07865": 6736,
##     "OG_07864": 6737,
##     "OG_07862": 6738,
##     "OG_07863": 6739,
##     "OG_07872": 6740,
##     "OG_07873": 6741,
##     "OG_07866": 6742,
##     "OG_07868": 6743,
##     "OG_07869": 6744,
##     "OG_07870": 6745,
##     "OG_07871": 6746,
##     "OG_07874": 6747,
##     "OG_07878": 6748,
##     "OG_07879": 6749,
##     "OG_07876": 6750,
##     "OG_07880": 6751,
##     "OG_07881": 6752,
##     "OG_07882": 6753,
##     "OG_07883": 6754,
##     "OG_07889": 6755,
##     "OG_07884": 6756,
##     "OG_07885": 6757,
##     "OG_07886": 6758,
##     "OG_07887": 6759,
##     "OG_07890": 6760,
##     "OG_07891": 6761,
##     "OG_07892": 6762,
##     "OG_07893": 6763,
##     "OG_07905": 6764,
##     "OG_07895": 6765,
##     "OG_07896": 6766,
##     "OG_07898": 6767,
##     "OG_07899": 6768,
##     "OG_07900": 6769,
##     "OG_07901": 6770,
##     "OG_07902": 6771,
##     "OG_07903": 6772,
##     "OG_07904": 6773,
##     "OG_07906": 6774,
##     "OG_07907": 6775,
##     "OG_07908": 6776,
##     "OG_07909": 6777,
##     "OG_07910": 6778,
##     "OG_07911": 6779,
##     "OG_07912": 6780,
##     "OG_07913": 6781,
##     "OG_07915": 6782,
##     "OG_07914": 6783,
##     "OG_07916": 6784,
##     "OG_07917": 6785,
##     "OG_07918": 6786,
##     "OG_07919": 6787,
##     "OG_07920": 6788,
##     "OG_07924": 6789,
##     "OG_07922": 6790,
##     "OG_07923": 6791,
##     "OG_07925": 6792,
##     "OG_07926": 6793,
##     "OG_07927": 6794,
##     "OG_07928": 6795,
##     "OG_07929": 6796,
##     "OG_07930": 6797,
##     "OG_07931": 6798,
##     "OG_07932": 6799,
##     "OG_07933": 6800,
##     "OG_07934": 6801,
##     "OG_07936": 6802,
##     "OG_07937": 6803,
##     "OG_07935": 6804,
##     "OG_07943": 6805,
##     "OG_07944": 6806,
##     "OG_07946": 6807,
##     "OG_07938": 6808,
##     "OG_07939": 6809,
##     "OG_07940": 6810,
##     "OG_07942": 6811,
##     "OG_07947": 6812,
##     "OG_07948": 6813,
##     "OG_07949": 6814,
##     "OG_07950": 6815,
##     "OG_07952": 6816,
##     "OG_07953": 6817,
##     "OG_07954": 6818,
##     "OG_07955": 6819,
##     "OG_07956": 6820,
##     "OG_07957": 6821,
##     "OG_07958": 6822,
##     "OG_07959": 6823,
##     "OG_07960": 6824,
##     "OG_07971": 6825,
##     "OG_07972": 6826,
##     "OG_07973": 6827,
##     "OG_07961": 6828,
##     "OG_07962": 6829,
##     "OG_07963": 6830,
##     "OG_07964": 6831,
##     "OG_07965": 6832,
##     "OG_07966": 6833,
##     "OG_07967": 6834,
##     "OG_07968": 6835,
##     "OG_07978": 6836,
##     "OG_07980": 6837,
##     "OG_07983": 6838,
##     "OG_07984": 6839,
##     "OG_07975": 6840,
##     "OG_07985": 6841,
##     "OG_07986": 6842,
##     "OG_07987": 6843,
##     "OG_07989": 6844,
##     "OG_07991": 6845,
##     "OG_07992": 6846,
##     "OG_07993": 6847,
##     "OG_07994": 6848,
##     "OG_07999": 6849,
##     "OG_07997": 6850,
##     "OG_07998": 6851,
##     "OG_08000": 6852,
##     "OG_08001": 6853,
##     "OG_08002": 6854,
##     "OG_08003": 6855,
##     "OG_08004": 6856,
##     "OG_08005": 6857,
##     "OG_08006": 6858,
##     "OG_08007": 6859,
##     "OG_08008": 6860,
##     "OG_08009": 6861,
##     "OG_08010": 6862,
##     "OG_08012": 6863,
##     "OG_08013": 6864,
##     "OG_08014": 6865,
##     "OG_08015": 6866,
##     "OG_08016": 6867,
##     "OG_08017": 6868,
##     "OG_08018": 6869,
##     "OG_08019": 6870,
##     "OG_08020": 6871,
##     "OG_08021": 6872,
##     "OG_08022": 6873,
##     "OG_08023": 6874,
##     "OG_08026": 6875,
##     "OG_08024": 6876,
##     "OG_08035": 6877,
##     "OG_08036": 6878,
##     "OG_08027": 6879,
##     "OG_08028": 6880,
##     "OG_08029": 6881,
##     "OG_08030": 6882,
##     "OG_08031": 6883,
##     "OG_08033": 6884,
##     "OG_08034": 6885,
##     "OG_08037": 6886,
##     "OG_08038": 6887,
##     "OG_08039": 6888,
##     "OG_08040": 6889,
##     "OG_08041": 6890,
##     "OG_08042": 6891,
##     "OG_08043": 6892,
##     "OG_08044": 6893,
##     "OG_08045": 6894,
##     "OG_08046": 6895,
##     "OG_08047": 6896,
##     "OG_08048": 6897,
##     "OG_08049": 6898,
##     "OG_08050": 6899,
##     "OG_08051": 6900,
##     "OG_08052": 6901,
##     "OG_08054": 6902,
##     "OG_08055": 6903,
##     "OG_08060": 6904,
##     "OG_08056": 6905,
##     "OG_08057": 6906,
##     "OG_08058": 6907,
##     "OG_08059": 6908,
##     "OG_08061": 6909,
##     "OG_08063": 6910,
##     "OG_08064": 6911,
##     "OG_08083": 6912,
##     "OG_08081": 6913,
##     "OG_08082": 6914,
##     "OG_08065": 6915,
##     "OG_08066": 6916,
##     "OG_08067": 6917,
##     "OG_08068": 6918,
##     "OG_08069": 6919,
##     "OG_08070": 6920,
##     "OG_08072": 6921,
##     "OG_08074": 6922,
##     "OG_08075": 6923,
##     "OG_08076": 6924,
##     "OG_08077": 6925,
##     "OG_08078": 6926,
##     "OG_08079": 6927,
##     "OG_08080": 6928,
##     "OG_08084": 6929,
##     "OG_08085": 6930,
##     "OG_08086": 6931,
##     "OG_08087": 6932,
##     "OG_08092": 6933,
##     "OG_08093": 6934,
##     "OG_08094": 6935,
##     "OG_08088": 6936,
##     "OG_08089": 6937,
##     "OG_08090": 6938,
##     "OG_08091": 6939,
##     "OG_08095": 6940,
##     "OG_08113": 6941,
##     "OG_08114": 6942,
##     "OG_08115": 6943,
##     "OG_08117": 6944,
##     "OG_08118": 6945,
##     "OG_08119": 6946,
##     "OG_08120": 6947,
##     "OG_08121": 6948,
##     "OG_08123": 6949,
##     "OG_08124": 6950,
##     "OG_08096": 6951,
##     "OG_08097": 6952,
##     "OG_08098": 6953,
##     "OG_08099": 6954,
##     "OG_08100": 6955,
##     "OG_08101": 6956,
##     "OG_08102": 6957,
##     "OG_08103": 6958,
##     "OG_08105": 6959,
##     "OG_08106": 6960,
##     "OG_08107": 6961,
##     "OG_08109": 6962,
##     "OG_08110": 6963,
##     "OG_08111": 6964,
##     "OG_08112": 6965,
##     "OG_08125": 6966,
##     "OG_08126": 6967,
##     "OG_08127": 6968,
##     "OG_08128": 6969,
##     "OG_08129": 6970,
##     "OG_08131": 6971,
##     "OG_08132": 6972,
##     "OG_08133": 6973,
##     "OG_08135": 6974,
##     "OG_08136": 6975,
##     "OG_08137": 6976,
##     "OG_08138": 6977,
##     "OG_08139": 6978,
##     "OG_08140": 6979,
##     "OG_08141": 6980,
##     "OG_08142": 6981,
##     "OG_08143": 6982,
##     "OG_08150": 6983,
##     "OG_08144": 6984,
##     "OG_08145": 6985,
##     "OG_08146": 6986,
##     "OG_08147": 6987,
##     "OG_08148": 6988,
##     "OG_08151": 6989,
##     "OG_08152": 6990,
##     "OG_08154": 6991,
##     "OG_08153": 6992,
##     "OG_08155": 6993,
##     "OG_08157": 6994,
##     "OG_08158": 6995,
##     "OG_08159": 6996,
##     "OG_08160": 6997,
##     "OG_08161": 6998,
##     "OG_08163": 6999,
##     "OG_08164": 7000,
##     "OG_08166": 7001,
##     "OG_08167": 7002,
##     "OG_08165": 7003,
##     "OG_08168": 7004,
##     "OG_08169": 7005,
##     "OG_08170": 7006,
##     "OG_08172": 7007,
##     "OG_08171": 7008,
##     "OG_08174": 7009,
##     "OG_08173": 7010,
##     "OG_08175": 7011,
##     "OG_08178": 7012,
##     "OG_08179": 7013,
##     "OG_08180": 7014,
##     "OG_08181": 7015,
##     "OG_08192": 7016,
##     "OG_08193": 7017,
##     "OG_08194": 7018,
##     "OG_08195": 7019,
##     "OG_08185": 7020,
##     "OG_08186": 7021,
##     "OG_08187": 7022,
##     "OG_08188": 7023,
##     "OG_08189": 7024,
##     "OG_08190": 7025,
##     "OG_08191": 7026,
##     "OG_08205": 7027,
##     "OG_08206": 7028,
##     "OG_08207": 7029,
##     "OG_08208": 7030,
##     "OG_08210": 7031,
##     "OG_08196": 7032,
##     "OG_08197": 7033,
##     "OG_08199": 7034,
##     "OG_08200": 7035,
##     "OG_08201": 7036,
##     "OG_08202": 7037,
##     "OG_08203": 7038,
##     "OG_08211": 7039,
##     "OG_08214": 7040,
##     "OG_08215": 7041,
##     "OG_08218": 7042,
##     "OG_08217": 7043,
##     "OG_08219": 7044,
##     "OG_08227": 7045,
##     "OG_08228": 7046,
##     "OG_08222": 7047,
##     "OG_08223": 7048,
##     "OG_08224": 7049,
##     "OG_08225": 7050,
##     "OG_08234": 7051,
##     "OG_08231": 7052,
##     "OG_08229": 7053,
##     "OG_08230": 7054,
##     "OG_08235": 7055,
##     "OG_08236": 7056,
##     "OG_08238": 7057,
##     "OG_08237": 7058,
##     "OG_08241": 7059,
##     "OG_08239": 7060,
##     "OG_08240": 7061,
##     "OG_08246": 7062,
##     "OG_08251": 7063,
##     "OG_08249": 7064,
##     "OG_08250": 7065,
##     "OG_08242": 7066,
##     "OG_08255": 7067,
##     "OG_08253": 7068,
##     "OG_08257": 7069,
##     "OG_08262": 7070,
##     "OG_08261": 7071,
##     "OG_08260": 7072,
##     "OG_08263": 7073,
##     "OG_08264": 7074,
##     "OG_08265": 7075,
##     "OG_08266": 7076,
##     "OG_08267": 7077,
##     "OG_08268": 7078,
##     "OG_08269": 7079,
##     "OG_08270": 7080,
##     "OG_08274": 7081,
##     "OG_08275": 7082,
##     "OG_08271": 7083,
##     "OG_08272": 7084,
##     "OG_08273": 7085,
##     "OG_08278": 7086,
##     "OG_08279": 7087,
##     "OG_08276": 7088,
##     "OG_08280": 7089,
##     "OG_08281": 7090,
##     "OG_08286": 7091,
##     "OG_08288": 7092,
##     "OG_08282": 7093,
##     "OG_08284": 7094,
##     "OG_08285": 7095,
##     "OG_08291": 7096,
##     "OG_08289": 7097,
##     "OG_08290": 7098,
##     "OG_08292": 7099,
##     "OG_08293": 7100,
##     "OG_08294": 7101,
##     "OG_08296": 7102,
##     "OG_08298": 7103,
##     "OG_08297": 7104,
##     "OG_08299": 7105,
##     "OG_08302": 7106,
##     "OG_08300": 7107,
##     "OG_08301": 7108,
##     "OG_08304": 7109,
##     "OG_08305": 7110,
##     "OG_08306": 7111,
##     "OG_08307": 7112,
##     "OG_08308": 7113,
##     "OG_08309": 7114,
##     "OG_08310": 7115,
##     "OG_08311": 7116,
##     "OG_08312": 7117,
##     "OG_08313": 7118,
##     "OG_08317": 7119,
##     "OG_08314": 7120,
##     "OG_08318": 7121,
##     "OG_08319": 7122,
##     "OG_08323": 7123,
##     "OG_08320": 7124,
##     "OG_08321": 7125,
##     "OG_08324": 7126,
##     "OG_08325": 7127,
##     "OG_08326": 7128,
##     "OG_08327": 7129,
##     "OG_08328": 7130,
##     "OG_08329": 7131,
##     "OG_08331": 7132,
##     "OG_08330": 7133,
##     "OG_08336": 7134,
##     "OG_08332": 7135,
##     "OG_08334": 7136,
##     "OG_08335": 7137,
##     "OG_08338": 7138,
##     "OG_08339": 7139,
##     "OG_08340": 7140,
##     "OG_08337": 7141,
##     "OG_08342": 7142,
##     "OG_08343": 7143,
##     "OG_08344": 7144,
##     "OG_08341": 7145,
##     "OG_08345": 7146,
##     "OG_08346": 7147,
##     "OG_08347": 7148,
##     "OG_08348": 7149,
##     "OG_08356": 7150,
##     "OG_08349": 7151,
##     "OG_08350": 7152,
##     "OG_08351": 7153,
##     "OG_08352": 7154,
##     "OG_08353": 7155,
##     "OG_08354": 7156,
##     "OG_08355": 7157,
##     "OG_08358": 7158,
##     "OG_08360": 7159,
##     "OG_08361": 7160,
##     "OG_08364": 7161,
##     "OG_08363": 7162,
##     "OG_08365": 7163,
##     "OG_08366": 7164,
##     "OG_08367": 7165,
##     "OG_08368": 7166,
##     "OG_08369": 7167,
##     "OG_08371": 7168,
##     "OG_08372": 7169,
##     "OG_08373": 7170,
##     "OG_08380": 7171,
##     "OG_08381": 7172,
##     "OG_08382": 7173,
##     "OG_08374": 7174,
##     "OG_08377": 7175,
##     "OG_08375": 7176,
##     "OG_08376": 7177,
##     "OG_08378": 7178,
##     "OG_08379": 7179,
##     "OG_08383": 7180,
##     "OG_08385": 7181,
##     "OG_08387": 7182,
##     "OG_08386": 7183,
##     "OG_08394": 7184,
##     "OG_08395": 7185,
##     "OG_08388": 7186,
##     "OG_08389": 7187,
##     "OG_08390": 7188,
##     "OG_08391": 7189,
##     "OG_08392": 7190,
##     "OG_08396": 7191,
##     "OG_08397": 7192,
##     "OG_08398": 7193,
##     "OG_08399": 7194,
##     "OG_08400": 7195,
##     "OG_08401": 7196,
##     "OG_08402": 7197,
##     "OG_08403": 7198,
##     "OG_08405": 7199,
##     "OG_08407": 7200,
##     "OG_08408": 7201,
##     "OG_08409": 7202,
##     "OG_08410": 7203,
##     "OG_08411": 7204,
##     "OG_08412": 7205,
##     "OG_08413": 7206,
##     "OG_08414": 7207,
##     "OG_08417": 7208,
##     "OG_08418": 7209,
##     "OG_08415": 7210,
##     "OG_08422": 7211,
##     "OG_08419": 7212,
##     "OG_08420": 7213,
##     "OG_08423": 7214,
##     "OG_08424": 7215,
##     "OG_08425": 7216,
##     "OG_08426": 7217,
##     "OG_08427": 7218,
##     "OG_08428": 7219,
##     "OG_08431": 7220,
##     "OG_08429": 7221,
##     "OG_08430": 7222,
##     "OG_08437": 7223,
##     "OG_08432": 7224,
##     "OG_08433": 7225,
##     "OG_08434": 7226,
##     "OG_08435": 7227,
##     "OG_08436": 7228,
##     "OG_08446": 7229,
##     "OG_08447": 7230,
##     "OG_08448": 7231,
##     "OG_08439": 7232,
##     "OG_08440": 7233,
##     "OG_08441": 7234,
##     "OG_08442": 7235,
##     "OG_08443": 7236,
##     "OG_08444": 7237,
##     "OG_08449": 7238,
##     "OG_08450": 7239,
##     "OG_08451": 7240,
##     "OG_08453": 7241,
##     "OG_08454": 7242,
##     "OG_08455": 7243,
##     "OG_08456": 7244,
##     "OG_08459": 7245,
##     "OG_08460": 7246,
##     "OG_08461": 7247,
##     "OG_08462": 7248,
##     "OG_08464": 7249,
##     "OG_08465": 7250,
##     "OG_08468": 7251,
##     "OG_08467": 7252,
##     "OG_08466": 7253,
##     "OG_08469": 7254,
##     "OG_08471": 7255,
##     "OG_08470": 7256,
##     "OG_08472": 7257,
##     "OG_08476": 7258,
##     "OG_08478": 7259,
##     "OG_08477": 7260,
##     "OG_08479": 7261,
##     "OG_08473": 7262,
##     "OG_08474": 7263,
##     "OG_08481": 7264,
##     "OG_08482": 7265,
##     "OG_08483": 7266,
##     "OG_08486": 7267,
##     "OG_08484": 7268,
##     "OG_08485": 7269,
##     "OG_08487": 7270,
##     "OG_08488": 7271,
##     "OG_08489": 7272,
##     "OG_08490": 7273,
##     "OG_08495": 7274,
##     "OG_08496": 7275,
##     "OG_08498": 7276,
##     "OG_08497": 7277,
##     "OG_08501": 7278,
##     "OG_08503": 7279,
##     "OG_08505": 7280,
##     "OG_08491": 7281,
##     "OG_08492": 7282,
##     "OG_08493": 7283,
##     "OG_08494": 7284,
##     "OG_08504": 7285,
##     "OG_08506": 7286,
##     "OG_08507": 7287,
##     "OG_08510": 7288,
##     "OG_08509": 7289,
##     "OG_08516": 7290,
##     "OG_08519": 7291,
##     "OG_08520": 7292,
##     "OG_08517": 7293,
##     "OG_08518": 7294,
##     "OG_08521": 7295,
##     "OG_08523": 7296,
##     "OG_08524": 7297,
##     "OG_08529": 7298,
##     "OG_08530": 7299,
##     "OG_08526": 7300,
##     "OG_08527": 7301,
##     "OG_08528": 7302,
##     "OG_08531": 7303,
##     "OG_08532": 7304,
##     "OG_08533": 7305,
##     "OG_08546": 7306,
##     "OG_08545": 7307,
##     "OG_08547": 7308,
##     "OG_08548": 7309,
##     "OG_08549": 7310,
##     "OG_08550": 7311,
##     "OG_08551": 7312,
##     "OG_08553": 7313,
##     "OG_08552": 7314,
##     "OG_08554": 7315,
##     "OG_08534": 7316,
##     "OG_08536": 7317,
##     "OG_08537": 7318,
##     "OG_08538": 7319,
##     "OG_08539": 7320,
##     "OG_08540": 7321,
##     "OG_08542": 7322,
##     "OG_08543": 7323,
##     "OG_08556": 7324,
##     "OG_08557": 7325,
##     "OG_08558": 7326,
##     "OG_08559": 7327,
##     "OG_08560": 7328,
##     "OG_08561": 7329,
##     "OG_08572": 7330,
##     "OG_08573": 7331,
##     "OG_08574": 7332,
##     "OG_08575": 7333,
##     "OG_08576": 7334,
##     "OG_08577": 7335,
##     "OG_08563": 7336,
##     "OG_08564": 7337,
##     "OG_08565": 7338,
##     "OG_08566": 7339,
##     "OG_08567": 7340,
##     "OG_08568": 7341,
##     "OG_08571": 7342,
##     "OG_08594": 7343,
##     "OG_08595": 7344,
##     "OG_08578": 7345,
##     "OG_08579": 7346,
##     "OG_08580": 7347,
##     "OG_08581": 7348,
##     "OG_08582": 7349,
##     "OG_08583": 7350,
##     "OG_08584": 7351,
##     "OG_08586": 7352,
##     "OG_08587": 7353,
##     "OG_08588": 7354,
##     "OG_08589": 7355,
##     "OG_08590": 7356,
##     "OG_08591": 7357,
##     "OG_08592": 7358,
##     "OG_08593": 7359,
##     "OG_08596": 7360,
##     "OG_08597": 7361,
##     "OG_08598": 7362,
##     "OG_08599": 7363,
##     "OG_08600": 7364,
##     "OG_08602": 7365,
##     "OG_08604": 7366,
##     "OG_08605": 7367,
##     "OG_08606": 7368,
##     "OG_08607": 7369,
##     "OG_08608": 7370,
##     "OG_08609": 7371,
##     "OG_08612": 7372,
##     "OG_08610": 7373,
##     "OG_08611": 7374,
##     "OG_08613": 7375,
##     "OG_08614": 7376,
##     "OG_08615": 7377,
##     "OG_08616": 7378,
##     "OG_08617": 7379,
##     "OG_08618": 7380,
##     "OG_08619": 7381,
##     "OG_08620": 7382,
##     "OG_08621": 7383,
##     "OG_08622": 7384,
##     "OG_08623": 7385,
##     "OG_08627": 7386,
##     "OG_08631": 7387,
##     "OG_08632": 7388,
##     "OG_08628": 7389,
##     "OG_08629": 7390,
##     "OG_08630": 7391,
##     "OG_08624": 7392,
##     "OG_08625": 7393,
##     "OG_08626": 7394,
##     "OG_08633": 7395,
##     "OG_08635": 7396,
##     "OG_08636": 7397,
##     "OG_08637": 7398,
##     "OG_08638": 7399,
##     "OG_08639": 7400,
##     "OG_08640": 7401,
##     "OG_08641": 7402,
##     "OG_08642": 7403,
##     "OG_08643": 7404,
##     "OG_08644": 7405,
##     "OG_08645": 7406,
##     "OG_08646": 7407,
##     "OG_08647": 7408,
##     "OG_08648": 7409,
##     "OG_08649": 7410,
##     "OG_08654": 7411,
##     "OG_08650": 7412,
##     "OG_08651": 7413,
##     "OG_08652": 7414,
##     "OG_08653": 7415,
##     "OG_08656": 7416,
##     "OG_08659": 7417,
##     "OG_08658": 7418,
##     "OG_08661": 7419,
##     "OG_08662": 7420,
##     "OG_08664": 7421,
##     "OG_08663": 7422,
##     "OG_08666": 7423,
##     "OG_08667": 7424,
##     "OG_08668": 7425,
##     "OG_08670": 7426,
##     "OG_08671": 7427,
##     "OG_08672": 7428,
##     "OG_08673": 7429,
##     "OG_08674": 7430,
##     "OG_08675": 7431,
##     "OG_08676": 7432,
##     "OG_08677": 7433,
##     "OG_08678": 7434,
##     "OG_08679": 7435,
##     "OG_08680": 7436,
##     "OG_08684": 7437,
##     "OG_08681": 7438,
##     "OG_08682": 7439,
##     "OG_08686": 7440,
##     "OG_08687": 7441,
##     "OG_08705": 7442,
##     "OG_08706": 7443,
##     "OG_08708": 7444,
##     "OG_08700": 7445,
##     "OG_08688": 7446,
##     "OG_08689": 7447,
##     "OG_08690": 7448,
##     "OG_08691": 7449,
##     "OG_08693": 7450,
##     "OG_08695": 7451,
##     "OG_08696": 7452,
##     "OG_08698": 7453,
##     "OG_08699": 7454,
##     "OG_08701": 7455,
##     "OG_08702": 7456,
##     "OG_08703": 7457,
##     "OG_08709": 7458,
##     "OG_08713": 7459,
##     "OG_08714": 7460,
##     "OG_08715": 7461,
##     "OG_08710": 7462,
##     "OG_08711": 7463,
##     "OG_08712": 7464,
##     "OG_08716": 7465,
##     "OG_08718": 7466,
##     "OG_08717": 7467,
##     "OG_08720": 7468,
##     "OG_08721": 7469,
##     "OG_08722": 7470,
##     "OG_08723": 7471,
##     "OG_08724": 7472,
##     "OG_08725": 7473,
##     "OG_08726": 7474,
##     "OG_08728": 7475,
##     "OG_08727": 7476,
##     "OG_08729": 7477,
##     "OG_08730": 7478,
##     "OG_08731": 7479,
##     "OG_08733": 7480,
##     "OG_08735": 7481,
##     "OG_08737": 7482,
##     "OG_08738": 7483,
##     "OG_08739": 7484,
##     "OG_08740": 7485,
##     "OG_08741": 7486,
##     "OG_08742": 7487,
##     "OG_08743": 7488,
##     "OG_08745": 7489,
##     "OG_08746": 7490,
##     "OG_08747": 7491,
##     "OG_08749": 7492,
##     "OG_08748": 7493,
##     "OG_08751": 7494,
##     "OG_08752": 7495,
##     "OG_08754": 7496,
##     "OG_08756": 7497,
##     "OG_08755": 7498,
##     "OG_08759": 7499,
##     "OG_08760": 7500,
##     "OG_08761": 7501,
##     "OG_08762": 7502,
##     "OG_08763": 7503,
##     "OG_08768": 7504,
##     "OG_08765": 7505,
##     "OG_08766": 7506,
##     "OG_08771": 7507,
##     "OG_08772": 7508,
##     "OG_08769": 7509,
##     "OG_08770": 7510,
##     "OG_08773": 7511,
##     "OG_08775": 7512,
##     "OG_08774": 7513,
##     "OG_08776": 7514,
##     "OG_08780": 7515,
##     "OG_08777": 7516,
##     "OG_08778": 7517,
##     "OG_08779": 7518,
##     "OG_08786": 7519,
##     "OG_08781": 7520,
##     "OG_08782": 7521,
##     "OG_08783": 7522,
##     "OG_08784": 7523,
##     "OG_08785": 7524,
##     "OG_08800": 7525,
##     "OG_08787": 7526,
##     "OG_08788": 7527,
##     "OG_08789": 7528,
##     "OG_08790": 7529,
##     "OG_08791": 7530,
##     "OG_08792": 7531,
##     "OG_08793": 7532,
##     "OG_08794": 7533,
##     "OG_08795": 7534,
##     "OG_08796": 7535,
##     "OG_08797": 7536,
##     "OG_08798": 7537,
##     "OG_08815": 7538,
##     "OG_08816": 7539,
##     "OG_08820": 7540,
##     "OG_08818": 7541,
##     "OG_08802": 7542,
##     "OG_08803": 7543,
##     "OG_08804": 7544,
##     "OG_08805": 7545,
##     "OG_08806": 7546,
##     "OG_08807": 7547,
##     "OG_08808": 7548,
##     "OG_08809": 7549,
##     "OG_08810": 7550,
##     "OG_08811": 7551,
##     "OG_08812": 7552,
##     "OG_08813": 7553,
##     "OG_08814": 7554,
##     "OG_08821": 7555,
##     "OG_08822": 7556,
##     "OG_08823": 7557,
##     "OG_08824": 7558,
##     "OG_08825": 7559,
##     "OG_08832": 7560,
##     "OG_08827": 7561,
##     "OG_08828": 7562,
##     "OG_08829": 7563,
##     "OG_08830": 7564,
##     "OG_08831": 7565,
##     "OG_08835": 7566,
##     "OG_08834": 7567,
##     "OG_08836": 7568,
##     "OG_08837": 7569,
##     "OG_08839": 7570,
##     "OG_08843": 7571,
##     "OG_08844": 7572,
##     "OG_08840": 7573,
##     "OG_08841": 7574,
##     "OG_08842": 7575,
##     "OG_08845": 7576,
##     "OG_08846": 7577,
##     "OG_08849": 7578,
##     "OG_08850": 7579,
##     "OG_08851": 7580,
##     "OG_08853": 7581,
##     "OG_08852": 7582,
##     "OG_08854": 7583,
##     "OG_08855": 7584,
##     "OG_08857": 7585,
##     "OG_08856": 7586,
##     "OG_08861": 7587,
##     "OG_08859": 7588,
##     "OG_08868": 7589,
##     "OG_08864": 7590,
##     "OG_08865": 7591,
##     "OG_08866": 7592,
##     "OG_08867": 7593,
##     "OG_08869": 7594,
##     "OG_08870": 7595,
##     "OG_08871": 7596,
##     "OG_08873": 7597,
##     "OG_08874": 7598,
##     "OG_08875": 7599,
##     "OG_08876": 7600,
##     "OG_08877": 7601,
##     "OG_08881": 7602,
##     "OG_08878": 7603,
##     "OG_08879": 7604,
##     "OG_08880": 7605,
##     "OG_08882": 7606,
##     "OG_08883": 7607,
##     "OG_08884": 7608,
##     "OG_08887": 7609,
##     "OG_08886": 7610,
##     "OG_08889": 7611,
##     "OG_08890": 7612,
##     "OG_08891": 7613,
##     "OG_08892": 7614,
##     "OG_08893": 7615,
##     "OG_08894": 7616,
##     "OG_08895": 7617,
##     "OG_08896": 7618,
##     "OG_08897": 7619,
##     "OG_08898": 7620,
##     "OG_08899": 7621,
##     "OG_08901": 7622,
##     "OG_08911": 7623,
##     "OG_08902": 7624,
##     "OG_08903": 7625,
##     "OG_08904": 7626,
##     "OG_08905": 7627,
##     "OG_08906": 7628,
##     "OG_08907": 7629,
##     "OG_08909": 7630,
##     "OG_08915": 7631,
##     "OG_08916": 7632,
##     "OG_08913": 7633,
##     "OG_08914": 7634,
##     "OG_08917": 7635,
##     "OG_08918": 7636,
##     "OG_08920": 7637,
##     "OG_08921": 7638,
##     "OG_08922": 7639,
##     "OG_08923": 7640,
##     "OG_08925": 7641,
##     "OG_08928": 7642,
##     "OG_08929": 7643,
##     "OG_08935": 7644,
##     "OG_08930": 7645,
##     "OG_08931": 7646,
##     "OG_08932": 7647,
##     "OG_08933": 7648,
##     "OG_08934": 7649,
##     "OG_08939": 7650,
##     "OG_08940": 7651,
##     "OG_08936": 7652,
##     "OG_08937": 7653,
##     "OG_08941": 7654,
##     "OG_08942": 7655,
##     "OG_08943": 7656,
##     "OG_08944": 7657,
##     "OG_08946": 7658,
##     "OG_08945": 7659,
##     "OG_08947": 7660,
##     "OG_08948": 7661,
##     "OG_08949": 7662,
##     "OG_08951": 7663,
##     "OG_08953": 7664,
##     "OG_08952": 7665,
##     "OG_08954": 7666,
##     "OG_08956": 7667,
##     "OG_08957": 7668,
##     "OG_08958": 7669,
##     "OG_08960": 7670,
##     "OG_08961": 7671,
##     "OG_08962": 7672,
##     "OG_08965": 7673,
##     "OG_08964": 7674,
##     "OG_08966": 7675,
##     "OG_08976": 7676,
##     "OG_08967": 7677,
##     "OG_08968": 7678,
##     "OG_08970": 7679,
##     "OG_08971": 7680,
##     "OG_08972": 7681,
##     "OG_08975": 7682,
##     "OG_08978": 7683,
##     "OG_09003": 7684,
##     "OG_09004": 7685,
##     "OG_09005": 7686,
##     "OG_09007": 7687,
##     "OG_09008": 7688,
##     "OG_09009": 7689,
##     "OG_09010": 7690,
##     "OG_09012": 7691,
##     "OG_08980": 7692,
##     "OG_08981": 7693,
##     "OG_08982": 7694,
##     "OG_08983": 7695,
##     "OG_08984": 7696,
##     "OG_08985": 7697,
##     "OG_08986": 7698,
##     "OG_08988": 7699,
##     "OG_08989": 7700,
##     "OG_08990": 7701,
##     "OG_08991": 7702,
##     "OG_08993": 7703,
##     "OG_08994": 7704,
##     "OG_08995": 7705,
##     "OG_08996": 7706,
##     "OG_08997": 7707,
##     "OG_08998": 7708,
##     "OG_08999": 7709,
##     "OG_09000": 7710,
##     "OG_09001": 7711,
##     "OG_09002": 7712,
##     "OG_09020": 7713,
##     "OG_09019": 7714,
##     "OG_09016": 7715,
##     "OG_09013": 7716,
##     "OG_09014": 7717,
##     "OG_09015": 7718,
##     "OG_09017": 7719,
##     "OG_09018": 7720,
##     "OG_09022": 7721,
##     "OG_09021": 7722,
##     "OG_09023": 7723,
##     "OG_09024": 7724,
##     "OG_09025": 7725,
##     "OG_09026": 7726,
##     "OG_09027": 7727,
##     "OG_09028": 7728,
##     "OG_09029": 7729,
##     "OG_09031": 7730,
##     "OG_09033": 7731,
##     "OG_09032": 7732,
##     "OG_09034": 7733,
##     "OG_09035": 7734,
##     "OG_09036": 7735,
##     "OG_09041": 7736,
##     "OG_09043": 7737,
##     "OG_09037": 7738,
##     "OG_09038": 7739,
##     "OG_09039": 7740,
##     "OG_09044": 7741,
##     "OG_09045": 7742,
##     "OG_09046": 7743,
##     "OG_09047": 7744,
##     "OG_09050": 7745,
##     "OG_09051": 7746,
##     "OG_09052": 7747,
##     "OG_09053": 7748,
##     "OG_09059": 7749,
##     "OG_09055": 7750,
##     "OG_09056": 7751,
##     "OG_09057": 7752,
##     "OG_09060": 7753,
##     "OG_09061": 7754,
##     "OG_09062": 7755,
##     "OG_09063": 7756,
##     "OG_09064": 7757,
##     "OG_09065": 7758,
##     "OG_09066": 7759,
##     "OG_09071": 7760,
##     "OG_09072": 7761,
##     "OG_09073": 7762,
##     "OG_09067": 7763,
##     "OG_09068": 7764,
##     "OG_09069": 7765,
##     "OG_09070": 7766,
##     "OG_09075": 7767,
##     "OG_09076": 7768,
##     "OG_09077": 7769,
##     "OG_09078": 7770,
##     "OG_09079": 7771,
##     "OG_09080": 7772,
##     "OG_09081": 7773,
##     "OG_09082": 7774,
##     "OG_09083": 7775,
##     "OG_09086": 7776,
##     "OG_09089": 7777,
##     "OG_09091": 7778,
##     "OG_09087": 7779,
##     "OG_09093": 7780,
##     "OG_09095": 7781,
##     "OG_09096": 7782,
##     "OG_09098": 7783,
##     "OG_09099": 7784,
##     "OG_09101": 7785,
##     "OG_09105": 7786,
##     "OG_09106": 7787,
##     "OG_09107": 7788,
##     "OG_09111": 7789,
##     "OG_09109": 7790,
##     "OG_09110": 7791,
##     "OG_09113": 7792,
##     "OG_09114": 7793,
##     "OG_09115": 7794,
##     "OG_09116": 7795,
##     "OG_09117": 7796,
##     "OG_09118": 7797,
##     "OG_09119": 7798,
##     "OG_09120": 7799,
##     "OG_09121": 7800,
##     "OG_09124": 7801,
##     "OG_09123": 7802,
##     "OG_09122": 7803,
##     "OG_09125": 7804,
##     "OG_09128": 7805,
##     "OG_09129": 7806,
##     "OG_09130": 7807,
##     "OG_09133": 7808,
##     "OG_09134": 7809,
##     "OG_09135": 7810,
##     "OG_09136": 7811,
##     "OG_09137": 7812,
##     "OG_09138": 7813,
##     "OG_09139": 7814,
##     "OG_09140": 7815,
##     "OG_09142": 7816,
##     "OG_09144": 7817,
##     "OG_09145": 7818,
##     "OG_09146": 7819,
##     "OG_09147": 7820,
##     "OG_09148": 7821,
##     "OG_09149": 7822,
##     "OG_09150": 7823,
##     "OG_09152": 7824,
##     "OG_09153": 7825,
##     "OG_09154": 7826,
##     "OG_09156": 7827,
##     "OG_09158": 7828,
##     "OG_09159": 7829,
##     "OG_09160": 7830,
##     "OG_09161": 7831,
##     "OG_09162": 7832,
##     "OG_09163": 7833,
##     "OG_09167": 7834,
##     "OG_09165": 7835,
##     "OG_09166": 7836,
##     "OG_09168": 7837,
##     "OG_09173": 7838,
##     "OG_09174": 7839,
##     "OG_09169": 7840,
##     "OG_09170": 7841,
##     "OG_09172": 7842,
##     "OG_09181": 7843,
##     "OG_09182": 7844,
##     "OG_09180": 7845,
##     "OG_09183": 7846,
##     "OG_09184": 7847,
##     "OG_09185": 7848,
##     "OG_09175": 7849,
##     "OG_09176": 7850,
##     "OG_09177": 7851,
##     "OG_09178": 7852,
##     "OG_09179": 7853,
##     "OG_09197": 7854,
##     "OG_09188": 7855,
##     "OG_09191": 7856,
##     "OG_09192": 7857,
##     "OG_09193": 7858,
##     "OG_09195": 7859,
##     "OG_09196": 7860,
##     "OG_09198": 7861,
##     "OG_09199": 7862,
##     "OG_09200": 7863,
##     "OG_09201": 7864,
##     "OG_09202": 7865,
##     "OG_09203": 7866,
##     "OG_09206": 7867,
##     "OG_09204": 7868,
##     "OG_09205": 7869,
##     "OG_09207": 7870,
##     "OG_09214": 7871,
##     "OG_09215": 7872,
##     "OG_09216": 7873,
##     "OG_09217": 7874,
##     "OG_09209": 7875,
##     "OG_09210": 7876,
##     "OG_09211": 7877,
##     "OG_09212": 7878,
##     "OG_09218": 7879,
##     "OG_09220": 7880,
##     "OG_09219": 7881,
##     "OG_09223": 7882,
##     "OG_09224": 7883,
##     "OG_09225": 7884,
##     "OG_09227": 7885,
##     "OG_09226": 7886,
##     "OG_09228": 7887,
##     "OG_09229": 7888,
##     "OG_09230": 7889,
##     "OG_09231": 7890,
##     "OG_09232": 7891,
##     "OG_09233": 7892,
##     "OG_09234": 7893,
##     "OG_09238": 7894,
##     "OG_09235": 7895,
##     "OG_09237": 7896,
##     "OG_09240": 7897,
##     "OG_09241": 7898,
##     "OG_09243": 7899,
##     "OG_09245": 7900,
##     "OG_09246": 7901,
##     "OG_09247": 7902,
##     "OG_09249": 7903,
##     "OG_09250": 7904,
##     "OG_09251": 7905,
##     "OG_09252": 7906,
##     "OG_09254": 7907,
##     "OG_09256": 7908,
##     "OG_09257": 7909,
##     "OG_09258": 7910,
##     "OG_09260": 7911,
##     "OG_09261": 7912,
##     "OG_09262": 7913,
##     "OG_09263": 7914,
##     "OG_09265": 7915,
##     "OG_09266": 7916,
##     "OG_09267": 7917,
##     "OG_09269": 7918,
##     "OG_09272": 7919,
##     "OG_09270": 7920,
##     "OG_09271": 7921,
##     "OG_09273": 7922,
##     "OG_09274": 7923,
##     "OG_09276": 7924,
##     "OG_09275": 7925,
##     "OG_09277": 7926,
##     "OG_09279": 7927,
##     "OG_09282": 7928,
##     "OG_09288": 7929,
##     "OG_09289": 7930,
##     "OG_09283": 7931,
##     "OG_09284": 7932,
##     "OG_09285": 7933,
##     "OG_09286": 7934,
##     "OG_09291": 7935,
##     "OG_09290": 7936,
##     "OG_09292": 7937,
##     "OG_09293": 7938,
##     "OG_09301": 7939,
##     "OG_09302": 7940,
##     "OG_09294": 7941,
##     "OG_09295": 7942,
##     "OG_09297": 7943,
##     "OG_09298": 7944,
##     "OG_09299": 7945,
##     "OG_09300": 7946,
##     "OG_09303": 7947,
##     "OG_09304": 7948,
##     "OG_09305": 7949,
##     "OG_09306": 7950,
##     "OG_09310": 7951,
##     "OG_09307": 7952,
##     "OG_09308": 7953,
##     "OG_09309": 7954,
##     "OG_09311": 7955,
##     "OG_09312": 7956,
##     "OG_09313": 7957,
##     "OG_09314": 7958,
##     "OG_09315": 7959,
##     "OG_09316": 7960,
##     "OG_09318": 7961,
##     "OG_09319": 7962,
##     "OG_09321": 7963,
##     "OG_09323": 7964,
##     "OG_09324": 7965,
##     "OG_09326": 7966,
##     "OG_09327": 7967,
##     "OG_09328": 7968,
##     "OG_09329": 7969,
##     "OG_09330": 7970,
##     "OG_09332": 7971,
##     "OG_09333": 7972,
##     "OG_09334": 7973,
##     "OG_09336": 7974,
##     "OG_09337": 7975,
##     "OG_09344": 7976,
##     "OG_09338": 7977,
##     "OG_09339": 7978,
##     "OG_09340": 7979,
##     "OG_09341": 7980,
##     "OG_09342": 7981,
##     "OG_09343": 7982,
##     "OG_09345": 7983,
##     "OG_09346": 7984,
##     "OG_09348": 7985,
##     "OG_09347": 7986,
##     "OG_09349": 7987,
##     "OG_09350": 7988,
##     "OG_09351": 7989,
##     "OG_09352": 7990,
##     "OG_09353": 7991,
##     "OG_09355": 7992,
##     "OG_09356": 7993,
##     "OG_09358": 7994,
##     "OG_09359": 7995,
##     "OG_09361": 7996,
##     "OG_09363": 7997,
##     "OG_09364": 7998,
##     "OG_09362": 7999,
##     "OG_09365": 8000,
##     "OG_09367": 8001,
##     "OG_09368": 8002,
##     "OG_09369": 8003,
##     "OG_09372": 8004,
##     "OG_09374": 8005,
##     "OG_09375": 8006,
##     "OG_09377": 8007,
##     "OG_09378": 8008,
##     "OG_09379": 8009,
##     "OG_09380": 8010,
##     "OG_09381": 8011,
##     "OG_09383": 8012,
##     "OG_09384": 8013,
##     "OG_09387": 8014,
##     "OG_09385": 8015,
##     "OG_09388": 8016,
##     "OG_09393": 8017,
##     "OG_09389": 8018,
##     "OG_09390": 8019,
##     "OG_09391": 8020,
##     "OG_09392": 8021,
##     "OG_09394": 8022,
##     "OG_09395": 8023,
##     "OG_09396": 8024,
##     "OG_09397": 8025,
##     "OG_09398": 8026,
##     "OG_09399": 8027,
##     "OG_09400": 8028,
##     "OG_09401": 8029,
##     "OG_09402": 8030,
##     "OG_09403": 8031,
##     "OG_09404": 8032,
##     "OG_09407": 8033,
##     "OG_09408": 8034,
##     "OG_09409": 8035,
##     "OG_09411": 8036,
##     "OG_09412": 8037,
##     "OG_09413": 8038,
##     "OG_09414": 8039,
##     "OG_09415": 8040,
##     "OG_09416": 8041,
##     "OG_09418": 8042,
##     "OG_09419": 8043,
##     "OG_09420": 8044,
##     "OG_09422": 8045,
##     "OG_09423": 8046,
##     "OG_09424": 8047,
##     "OG_09425": 8048,
##     "OG_09427": 8049,
##     "OG_09426": 8050,
##     "OG_09428": 8051,
##     "OG_09429": 8052,
##     "OG_09430": 8053,
##     "OG_09431": 8054,
##     "OG_09433": 8055,
##     "OG_09434": 8056,
##     "OG_09435": 8057,
##     "OG_09436": 8058,
##     "OG_09437": 8059,
##     "OG_09438": 8060,
##     "OG_09439": 8061,
##     "OG_09440": 8062,
##     "OG_09453": 8063,
##     "OG_09451": 8064,
##     "OG_09442": 8065,
##     "OG_09444": 8066,
##     "OG_09445": 8067,
##     "OG_09446": 8068,
##     "OG_09447": 8069,
##     "OG_09448": 8070,
##     "OG_09449": 8071,
##     "OG_09450": 8072,
##     "OG_09456": 8073,
##     "OG_09459": 8074,
##     "OG_09458": 8075,
##     "OG_09455": 8076,
##     "OG_09460": 8077,
##     "OG_09462": 8078,
##     "OG_09465": 8079,
##     "OG_09463": 8080,
##     "OG_09464": 8081,
##     "OG_09466": 8082,
##     "OG_09468": 8083,
##     "OG_09470": 8084,
##     "OG_09471": 8085,
##     "OG_09475": 8086,
##     "OG_09472": 8087,
##     "OG_09473": 8088,
##     "OG_09474": 8089,
##     "OG_09477": 8090,
##     "OG_09478": 8091,
##     "OG_09479": 8092,
##     "OG_09480": 8093,
##     "OG_09481": 8094,
##     "OG_09482": 8095,
##     "OG_09483": 8096,
##     "OG_09488": 8097,
##     "OG_09489": 8098,
##     "OG_09490": 8099,
##     "OG_09484": 8100,
##     "OG_09485": 8101,
##     "OG_09486": 8102,
##     "OG_09493": 8103,
##     "OG_09494": 8104,
##     "OG_09498": 8105,
##     "OG_09499": 8106,
##     "OG_09495": 8107,
##     "OG_09496": 8108,
##     "OG_09497": 8109,
##     "OG_09502": 8110,
##     "OG_09503": 8111,
##     "OG_09505": 8112,
##     "OG_09507": 8113,
##     "OG_09508": 8114,
##     "OG_09509": 8115,
##     "OG_09510": 8116,
##     "OG_09511": 8117,
##     "OG_09512": 8118,
##     "OG_09513": 8119,
##     "OG_09514": 8120,
##     "OG_09515": 8121,
##     "OG_09516": 8122,
##     "OG_09517": 8123,
##     "OG_09524": 8124,
##     "OG_09525": 8125,
##     "OG_09518": 8126,
##     "OG_09519": 8127,
##     "OG_09521": 8128,
##     "OG_09522": 8129,
##     "OG_09523": 8130,
##     "OG_09526": 8131,
##     "OG_09527": 8132,
##     "OG_09528": 8133,
##     "OG_09531": 8134,
##     "OG_09530": 8135,
##     "OG_09533": 8136,
##     "OG_09535": 8137,
##     "OG_09541": 8138,
##     "OG_09542": 8139,
##     "OG_09543": 8140,
##     "OG_09544": 8141,
##     "OG_09545": 8142,
##     "OG_09536": 8143,
##     "OG_09537": 8144,
##     "OG_09539": 8145,
##     "OG_09540": 8146,
##     "OG_09546": 8147,
##     "OG_09547": 8148,
##     "OG_09552": 8149,
##     "OG_09549": 8150,
##     "OG_09550": 8151,
##     "OG_09551": 8152,
##     "OG_09567": 8153,
##     "OG_09557": 8154,
##     "OG_09553": 8155,
##     "OG_09554": 8156,
##     "OG_09555": 8157,
##     "OG_09556": 8158,
##     "OG_09558": 8159,
##     "OG_09559": 8160,
##     "OG_09560": 8161,
##     "OG_09561": 8162,
##     "OG_09563": 8163,
##     "OG_09564": 8164,
##     "OG_09565": 8165,
##     "OG_09566": 8166,
##     "OG_09591": 8167,
##     "OG_09593": 8168,
##     "OG_09568": 8169,
##     "OG_09569": 8170,
##     "OG_09570": 8171,
##     "OG_09572": 8172,
##     "OG_09575": 8173,
##     "OG_09576": 8174,
##     "OG_09577": 8175,
##     "OG_09578": 8176,
##     "OG_09579": 8177,
##     "OG_09580": 8178,
##     "OG_09581": 8179,
##     "OG_09582": 8180,
##     "OG_09583": 8181,
##     "OG_09584": 8182,
##     "OG_09585": 8183,
##     "OG_09586": 8184,
##     "OG_09588": 8185,
##     "OG_09589": 8186,
##     "OG_09621": 8187,
##     "OG_09622": 8188,
##     "OG_09623": 8189,
##     "OG_09624": 8190,
##     "OG_09625": 8191,
##     "OG_09626": 8192,
##     "OG_09629": 8193,
##     "OG_09627": 8194,
##     "OG_09628": 8195,
##     "OG_09594": 8196,
##     "OG_09596": 8197,
##     "OG_09597": 8198,
##     "OG_09598": 8199,
##     "OG_09599": 8200,
##     "OG_09600": 8201,
##     "OG_09601": 8202,
##     "OG_09603": 8203,
##     "OG_09604": 8204,
##     "OG_09605": 8205,
##     "OG_09606": 8206,
##     "OG_09607": 8207,
##     "OG_09608": 8208,
##     "OG_09609": 8209,
##     "OG_09611": 8210,
##     "OG_09612": 8211,
##     "OG_09613": 8212,
##     "OG_09614": 8213,
##     "OG_09615": 8214,
##     "OG_09616": 8215,
##     "OG_09617": 8216,
##     "OG_09618": 8217,
##     "OG_09619": 8218,
##     "OG_09620": 8219,
##     "OG_09630": 8220,
##     "OG_09631": 8221,
##     "OG_09633": 8222,
##     "OG_09637": 8223,
##     "OG_09638": 8224,
##     "OG_09639": 8225,
##     "OG_09634": 8226,
##     "OG_09636": 8227,
##     "OG_09654": 8228,
##     "OG_09655": 8229,
##     "OG_09640": 8230,
##     "OG_09641": 8231,
##     "OG_09642": 8232,
##     "OG_09643": 8233,
##     "OG_09644": 8234,
##     "OG_09645": 8235,
##     "OG_09646": 8236,
##     "OG_09647": 8237,
##     "OG_09648": 8238,
##     "OG_09649": 8239,
##     "OG_09650": 8240,
##     "OG_09651": 8241,
##     "OG_09652": 8242,
##     "OG_09653": 8243,
##     "OG_09656": 8244,
##     "OG_09661": 8245,
##     "OG_09658": 8246,
##     "OG_09659": 8247,
##     "OG_09662": 8248,
##     "OG_09664": 8249,
##     "OG_09666": 8250,
##     "OG_09669": 8251,
##     "OG_09667": 8252,
##     "OG_09668": 8253,
##     "OG_09670": 8254,
##     "OG_09673": 8255,
##     "OG_09672": 8256,
##     "OG_09674": 8257,
##     "OG_09675": 8258,
##     "OG_09676": 8259,
##     "OG_09677": 8260,
##     "OG_09681": 8261,
##     "OG_09678": 8262,
##     "OG_09679": 8263,
##     "OG_09680": 8264,
##     "OG_09686": 8265,
##     "OG_09683": 8266,
##     "OG_09684": 8267,
##     "OG_09685": 8268,
##     "OG_09700": 8269,
##     "OG_09696": 8270,
##     "OG_09698": 8271,
##     "OG_09699": 8272,
##     "OG_09701": 8273,
##     "OG_09688": 8274,
##     "OG_09689": 8275,
##     "OG_09690": 8276,
##     "OG_09691": 8277,
##     "OG_09693": 8278,
##     "OG_09694": 8279,
##     "OG_09704": 8280,
##     "OG_09705": 8281,
##     "OG_09706": 8282,
##     "OG_09709": 8283,
##     "OG_09707": 8284,
##     "OG_09712": 8285,
##     "OG_09710": 8286,
##     "OG_09711": 8287,
##     "OG_09720": 8288,
##     "OG_09721": 8289,
##     "OG_09723": 8290,
##     "OG_09724": 8291,
##     "OG_09725": 8292,
##     "OG_09726": 8293,
##     "OG_09727": 8294,
##     "OG_09729": 8295,
##     "OG_09714": 8296,
##     "OG_09715": 8297,
##     "OG_09716": 8298,
##     "OG_09718": 8299,
##     "OG_09719": 8300,
##     "OG_09728": 8301,
##     "OG_09730": 8302,
##     "OG_09731": 8303,
##     "OG_09732": 8304,
##     "OG_09733": 8305,
##     "OG_09734": 8306,
##     "OG_09735": 8307,
##     "OG_09736": 8308,
##     "OG_09739": 8309,
##     "OG_09740": 8310,
##     "OG_09741": 8311,
##     "OG_09742": 8312,
##     "OG_09743": 8313,
##     "OG_09744": 8314,
##     "OG_09745": 8315,
##     "OG_09746": 8316,
##     "OG_09747": 8317,
##     "OG_09759": 8318,
##     "OG_09760": 8319,
##     "OG_09761": 8320,
##     "OG_09748": 8321,
##     "OG_09749": 8322,
##     "OG_09750": 8323,
##     "OG_09751": 8324,
##     "OG_09752": 8325,
##     "OG_09753": 8326,
##     "OG_09754": 8327,
##     "OG_09755": 8328,
##     "OG_09756": 8329,
##     "OG_09757": 8330,
##     "OG_09758": 8331,
##     "OG_09769": 8332,
##     "OG_09768": 8333,
##     "OG_09762": 8334,
##     "OG_09763": 8335,
##     "OG_09764": 8336,
##     "OG_09765": 8337,
##     "OG_09766": 8338,
##     "OG_09767": 8339,
##     "OG_09770": 8340,
##     "OG_09771": 8341,
##     "OG_09772": 8342,
##     "OG_09774": 8343,
##     "OG_09775": 8344,
##     "OG_09776": 8345,
##     "OG_09777": 8346,
##     "OG_09778": 8347,
##     "OG_09779": 8348,
##     "OG_09782": 8349,
##     "OG_09783": 8350,
##     "OG_09785": 8351,
##     "OG_09786": 8352,
##     "OG_09787": 8353,
##     "OG_09784": 8354,
##     "OG_09788": 8355,
##     "OG_09794": 8356,
##     "OG_09789": 8357,
##     "OG_09790": 8358,
##     "OG_09791": 8359,
##     "OG_09792": 8360,
##     "OG_09793": 8361,
##     "OG_09801": 8362,
##     "OG_09802": 8363,
##     "OG_09800": 8364,
##     "OG_09803": 8365,
##     "OG_09795": 8366,
##     "OG_09796": 8367,
##     "OG_09797": 8368,
##     "OG_09798": 8369,
##     "OG_09799": 8370,
##     "OG_09807": 8371,
##     "OG_09808": 8372,
##     "OG_09810": 8373,
##     "OG_09804": 8374,
##     "OG_09805": 8375,
##     "OG_09806": 8376,
##     "OG_09815": 8377,
##     "OG_09811": 8378,
##     "OG_09812": 8379,
##     "OG_09816": 8380,
##     "OG_09813": 8381,
##     "OG_09814": 8382,
##     "OG_09818": 8383,
##     "OG_09819": 8384,
##     "OG_09820": 8385,
##     "OG_09821": 8386,
##     "OG_09822": 8387,
##     "OG_09823": 8388,
##     "OG_09824": 8389,
##     "OG_09826": 8390,
##     "OG_09827": 8391,
##     "OG_09828": 8392,
##     "OG_09829": 8393,
##     "OG_09831": 8394,
##     "OG_09832": 8395,
##     "OG_09830": 8396,
##     "OG_09833": 8397,
##     "OG_09834": 8398,
##     "OG_09835": 8399,
##     "OG_09842": 8400,
##     "OG_09837": 8401,
##     "OG_09838": 8402,
##     "OG_09839": 8403,
##     "OG_09840": 8404,
##     "OG_09843": 8405,
##     "OG_09844": 8406,
##     "OG_09845": 8407,
##     "OG_09846": 8408,
##     "OG_09847": 8409,
##     "OG_09848": 8410,
##     "OG_09849": 8411,
##     "OG_09850": 8412,
##     "OG_09851": 8413,
##     "OG_09852": 8414,
##     "OG_09853": 8415,
##     "OG_09854": 8416,
##     "OG_09856": 8417,
##     "OG_09860": 8418,
##     "OG_09855": 8419,
##     "OG_09858": 8420,
##     "OG_09859": 8421,
##     "OG_09861": 8422,
##     "OG_09862": 8423,
##     "OG_09863": 8424,
##     "OG_09864": 8425,
##     "OG_09865": 8426,
##     "OG_09866": 8427,
##     "OG_09867": 8428,
##     "OG_09868": 8429,
##     "OG_09869": 8430,
##     "OG_09870": 8431,
##     "OG_09871": 8432,
##     "OG_09872": 8433,
##     "OG_09873": 8434,
##     "OG_09874": 8435,
##     "OG_09875": 8436,
##     "OG_09876": 8437,
##     "OG_09877": 8438,
##     "OG_09878": 8439,
##     "OG_09880": 8440,
##     "OG_09881": 8441,
##     "OG_09883": 8442,
##     "OG_09884": 8443,
##     "OG_09885": 8444,
##     "OG_09886": 8445,
##     "OG_09887": 8446,
##     "OG_09888": 8447,
##     "OG_09892": 8448,
##     "OG_09889": 8449,
##     "OG_09890": 8450,
##     "OG_09891": 8451,
##     "OG_09914": 8452,
##     "OG_09915": 8453,
##     "OG_09916": 8454,
##     "OG_09919": 8455,
##     "OG_09920": 8456,
##     "OG_09922": 8457,
##     "OG_09923": 8458,
##     "OG_09924": 8459,
##     "OG_09925": 8460,
##     "OG_09926": 8461,
##     "OG_09893": 8462,
##     "OG_09894": 8463,
##     "OG_09896": 8464,
##     "OG_09897": 8465,
##     "OG_09899": 8466,
##     "OG_09901": 8467,
##     "OG_09902": 8468,
##     "OG_09903": 8469,
##     "OG_09904": 8470,
##     "OG_09905": 8471,
##     "OG_09906": 8472,
##     "OG_09907": 8473,
##     "OG_09908": 8474,
##     "OG_09909": 8475,
##     "OG_09910": 8476,
##     "OG_09911": 8477,
##     "OG_09912": 8478,
##     "OG_09913": 8479,
##     "OG_09929": 8480,
##     "OG_09932": 8481,
##     "OG_09933": 8482,
##     "OG_09935": 8483,
##     "OG_09928": 8484,
##     "OG_09938": 8485,
##     "OG_09940": 8486,
##     "OG_09939": 8487,
##     "OG_09943": 8488,
##     "OG_09941": 8489,
##     "OG_09942": 8490,
##     "OG_09946": 8491,
##     "OG_09947": 8492,
##     "OG_09944": 8493,
##     "OG_09945": 8494,
##     "OG_09953": 8495,
##     "OG_09954": 8496,
##     "OG_09956": 8497,
##     "OG_09955": 8498,
##     "OG_09949": 8499,
##     "OG_09950": 8500,
##     "OG_09951": 8501,
##     "OG_09952": 8502,
##     "OG_09957": 8503,
##     "OG_09961": 8504,
##     "OG_09958": 8505,
##     "OG_09959": 8506,
##     "OG_09960": 8507,
##     "OG_09962": 8508,
##     "OG_09963": 8509,
##     "OG_09964": 8510,
##     "OG_09965": 8511,
##     "OG_09966": 8512,
##     "OG_09967": 8513,
##     "OG_09970": 8514,
##     "OG_09971": 8515,
##     "OG_09972": 8516,
##     "OG_09968": 8517,
##     "OG_09969": 8518,
##     "OG_09980": 8519,
##     "OG_09979": 8520,
##     "OG_09973": 8521,
##     "OG_09974": 8522,
##     "OG_09975": 8523,
##     "OG_09976": 8524,
##     "OG_09977": 8525,
##     "OG_09978": 8526,
##     "OG_09989": 8527,
##     "OG_09990": 8528,
##     "OG_09992": 8529,
##     "OG_09982": 8530,
##     "OG_09983": 8531,
##     "OG_09984": 8532,
##     "OG_09985": 8533,
##     "OG_09986": 8534,
##     "OG_09987": 8535,
##     "OG_09988": 8536,
##     "OG_09997": 8537,
##     "OG_09995": 8538,
##     "OG_09993": 8539,
##     "OG_09999": 8540,
##     "OG_10000": 8541,
##     "OG_10011": 8542,
##     "OG_10012": 8543,
##     "OG_10016": 8544,
##     "OG_10017": 8545,
##     "OG_10013": 8546,
##     "OG_10014": 8547,
##     "OG_10018": 8548,
##     "OG_10002": 8549,
##     "OG_10003": 8550,
##     "OG_10004": 8551,
##     "OG_10005": 8552,
##     "OG_10006": 8553,
##     "OG_10007": 8554,
##     "OG_10008": 8555,
##     "OG_10009": 8556,
##     "OG_10010": 8557,
##     "OG_10021": 8558,
##     "OG_10023": 8559,
##     "OG_10022": 8560,
##     "OG_10019": 8561,
##     "OG_10020": 8562,
##     "OG_10024": 8563,
##     "OG_10025": 8564,
##     "OG_10026": 8565,
##     "OG_10027": 8566,
##     "OG_10028": 8567,
##     "OG_10036": 8568,
##     "OG_10037": 8569,
##     "OG_10038": 8570,
##     "OG_10030": 8571,
##     "OG_10031": 8572,
##     "OG_10032": 8573,
##     "OG_10033": 8574,
##     "OG_10034": 8575,
##     "OG_10035": 8576,
##     "OG_10039": 8577,
##     "OG_10040": 8578,
##     "OG_10042": 8579,
##     "OG_10047": 8580,
##     "OG_10043": 8581,
##     "OG_10044": 8582,
##     "OG_10045": 8583,
##     "OG_10046": 8584,
##     "OG_10049": 8585,
##     "OG_10050": 8586,
##     "OG_10051": 8587,
##     "OG_10052": 8588,
##     "OG_10053": 8589,
##     "OG_10054": 8590,
##     "OG_10059": 8591,
##     "OG_10060": 8592,
##     "OG_10056": 8593,
##     "OG_10055": 8594,
##     "OG_10057": 8595,
##     "OG_10061": 8596,
##     "OG_10062": 8597,
##     "OG_10064": 8598,
##     "OG_10065": 8599,
##     "OG_10067": 8600,
##     "OG_10068": 8601,
##     "OG_10069": 8602,
##     "OG_10070": 8603,
##     "OG_10073": 8604,
##     "OG_10075": 8605,
##     "OG_10074": 8606,
##     "OG_10077": 8607,
##     "OG_10078": 8608,
##     "OG_10079": 8609,
##     "OG_10080": 8610,
##     "OG_10081": 8611,
##     "OG_10082": 8612,
##     "OG_10083": 8613,
##     "OG_10084": 8614,
##     "OG_10085": 8615,
##     "OG_10086": 8616,
##     "OG_10087": 8617,
##     "OG_10088": 8618,
##     "OG_10089": 8619,
##     "OG_10092": 8620,
##     "OG_10097": 8621,
##     "OG_10098": 8622,
##     "OG_10093": 8623,
##     "OG_10094": 8624,
##     "OG_10095": 8625,
##     "OG_10100": 8626,
##     "OG_10099": 8627,
##     "OG_10104": 8628,
##     "OG_10101": 8629,
##     "OG_10102": 8630,
##     "OG_10103": 8631,
##     "OG_10105": 8632,
##     "OG_10106": 8633,
##     "OG_10107": 8634,
##     "OG_10118": 8635,
##     "OG_10119": 8636,
##     "OG_10120": 8637,
##     "OG_10121": 8638,
##     "OG_10122": 8639,
##     "OG_10123": 8640,
##     "OG_10124": 8641,
##     "OG_10109": 8642,
##     "OG_10110": 8643,
##     "OG_10111": 8644,
##     "OG_10112": 8645,
##     "OG_10113": 8646,
##     "OG_10114": 8647,
##     "OG_10115": 8648,
##     "OG_10116": 8649,
##     "OG_10117": 8650,
##     "OG_10126": 8651,
##     "OG_10127": 8652,
##     "OG_10128": 8653,
##     "OG_10129": 8654,
##     "OG_10130": 8655,
##     "OG_10131": 8656,
##     "OG_10132": 8657,
##     "OG_10133": 8658,
##     "OG_10148": 8659,
##     "OG_10149": 8660,
##     "OG_10138": 8661,
##     "OG_10134": 8662,
##     "OG_10135": 8663,
##     "OG_10136": 8664,
##     "OG_10137": 8665,
##     "OG_10139": 8666,
##     "OG_10140": 8667,
##     "OG_10141": 8668,
##     "OG_10143": 8669,
##     "OG_10144": 8670,
##     "OG_10145": 8671,
##     "OG_10147": 8672,
##     "OG_10151": 8673,
##     "OG_10152": 8674,
##     "OG_10153": 8675,
##     "OG_10154": 8676,
##     "OG_10157": 8677,
##     "OG_10158": 8678,
##     "OG_10159": 8679,
##     "OG_10160": 8680,
##     "OG_10161": 8681,
##     "OG_10167": 8682,
##     "OG_10162": 8683,
##     "OG_10164": 8684,
##     "OG_10165": 8685,
##     "OG_10166": 8686,
##     "OG_10168": 8687,
##     "OG_10169": 8688,
##     "OG_10170": 8689,
##     "OG_10171": 8690,
##     "OG_10172": 8691,
##     "OG_10173": 8692,
##     "OG_10174": 8693,
##     "OG_10175": 8694,
##     "OG_10176": 8695,
##     "OG_10177": 8696,
##     "OG_10178": 8697,
##     "OG_10179": 8698,
##     "OG_10180": 8699,
##     "OG_10181": 8700,
##     "OG_10182": 8701,
##     "OG_10183": 8702,
##     "OG_10184": 8703,
##     "OG_10185": 8704,
##     "OG_10186": 8705,
##     "OG_10192": 8706,
##     "OG_10187": 8707,
##     "OG_10189": 8708,
##     "OG_10190": 8709,
##     "OG_10191": 8710,
##     "OG_10193": 8711,
##     "OG_10196": 8712,
##     "OG_10197": 8713,
##     "OG_10198": 8714,
##     "OG_10200": 8715,
##     "OG_10201": 8716,
##     "OG_10202": 8717,
##     "OG_10203": 8718,
##     "OG_10204": 8719,
##     "OG_10205": 8720,
##     "OG_10206": 8721,
##     "OG_10207": 8722,
##     "OG_10208": 8723,
##     "OG_10209": 8724,
##     "OG_10210": 8725,
##     "OG_10211": 8726,
##     "OG_10212": 8727,
##     "OG_10213": 8728,
##     "OG_10214": 8729,
##     "OG_10215": 8730,
##     "OG_10216": 8731,
##     "OG_10217": 8732,
##     "OG_10219": 8733,
##     "OG_10220": 8734,
##     "OG_10223": 8735,
##     "OG_00101": 8736,
##     "OG_00111": 8737,
##     "OG_00125": 8738,
##     "OG_00128": 8739,
##     "OG_00151": 8740,
##     "OG_00186": 8741,
##     "OG_00268": 8742,
##     "OG_00416": 8743,
##     "OG_00553": 8744,
##     "OG_00823": 8745,
##     "OG_01119": 8746,
##     "OG_01304": 8747,
##     "OG_01327": 8748,
##     "OG_01432": 8749,
##     "OG_01457": 8750,
##     "OG_01500": 8751,
##     "OG_01563": 8752,
##     "OG_01625": 8753,
##     "OG_01681": 8754,
##     "OG_01976": 8755,
##     "OG_02101": 8756,
##     "OG_02177": 8757,
##     "OG_02213": 8758,
##     "OG_02252": 8759,
##     "OG_02398": 8760,
##     "OG_02556": 8761,
##     "OG_02677": 8762,
##     "OG_02715": 8763,
##     "OG_02745": 8764,
##     "OG_02856": 8765,
##     "OG_02873": 8766,
##     "OG_03073": 8767,
##     "OG_03106": 8768,
##     "OG_03588": 8769,
##     "OG_03700": 8770,
##     "OG_03796": 8771,
##     "OG_03885": 8772,
##     "OG_04139": 8773,
##     "OG_04229": 8774,
##     "OG_04434": 8775,
##     "OG_04442": 8776,
##     "OG_05019": 8777,
##     "OG_05068": 8778,
##     "OG_05148": 8779,
##     "OG_05597": 8780,
##     "OG_05676": 8781,
##     "OG_06142": 8782,
##     "OG_06229": 8783,
##     "OG_06243": 8784,
##     "OG_06248": 8785,
##     "OG_06326": 8786,
##     "OG_06549": 8787,
##     "OG_06617": 8788,
##     "OG_06630": 8789,
##     "OG_06847": 8790,
##     "OG_06907": 8791,
##     "OG_07133": 8792,
##     "OG_07743": 8793,
##     "OG_07821": 8794,
##     "OG_07990": 8795,
##     "OG_07996": 8796,
##     "OG_08122": 8797,
##     "OG_08162": 8798,
##     "OG_08177": 8799,
##     "OG_08213": 8800,
##     "OG_08245": 8801,
##     "OG_08247": 8802,
##     "OG_08252": 8803,
##     "OG_08362": 8804,
##     "OG_08753": 8805,
##     "OG_08758": 8806,
##     "OG_09090": 8807,
##     "OG_09092": 8808,
##     "OG_09097": 8809,
##     "OG_09221": 8810,
##     "OG_09317": 8811,
##     "OG_09320": 8812,
##     "OG_09360": 8813,
##     "OG_09476": 8814,
##     "OG_09529": 8815,
##     "OG_09781": 8816,
##     "OG_09817": 8817,
##     "OG_09996": 8818,
##     "OG_10218": 8819
##   },
##   "species_mapping": {
##     "ACR": 0,
##     "POC": 1,
##     "POR": 2
##   },
##   "timepoint_mapping": {
##     "1": 0,
##     "2": 1,
##     "3": 2,
##     "4": 3
##   },
##   "n_components": 18
## }
## 
## 
## Gene Factors Shape: (8820, 19)
## 
## First few gene factors:
##     gene_id         0    1    2    3    4  ...   12   13        14   15   16   17
## 0  OG_00686  0.007298  0.0  0.0  0.0  0.0  ...  0.0  0.0  0.007298  0.0  0.0  0.0
## 1  OG_00683  0.011736  0.0  0.0  0.0  0.0  ...  0.0  0.0  0.011736  0.0  0.0  0.0
## 2  OG_00685  0.012364  0.0  0.0  0.0  0.0  ...  0.0  0.0  0.012364  0.0  0.0  0.0
## 3  OG_00688  0.005907  0.0  0.0  0.0  0.0  ...  0.0  0.0  0.005907  0.0  0.0  0.0
## 4  OG_00689  0.009439  0.0  0.0  0.0  0.0  ...  0.0  0.0  0.009439  0.0  0.0  0.0
## 
## [5 rows x 19 columns]
## 
## 
## Species Factors Shape: (3, 19)
## 
## Species factors:
##   species         0    1    2    3    4  ...   12   13        14   15   16   17
## 0     ACR  0.585372  0.0  0.0  0.0  0.0  ...  0.0  0.0  0.585372  0.0  0.0  0.0
## 1     POC  0.577115  0.0  0.0  0.0  0.0  ...  0.0  0.0  0.577115  0.0  0.0  0.0
## 2     POR  0.569455  0.0  0.0  0.0  0.0  ...  0.0  0.0  0.569455  0.0  0.0  0.0
## 
## [3 rows x 19 columns]
## 
## 
## Time Factors Shape: (4, 19)
## 
## Time factors:
##    timepoint         0    1    2    3    4  ...   12   13        14   15   16   17
## 0          1  6.220515  0.0  0.0  0.0  0.0  ...  0.0  0.0  6.220514  0.0  0.0  0.0
## 1          2  6.258044  0.0  0.0  0.0  0.0  ...  0.0  0.0  6.258044  0.0  0.0  0.0
## 2          3  6.223633  0.0  0.0  0.0  0.0  ...  0.0  0.0  6.223633  0.0  0.0  0.0
## 3          4  6.210393  0.0  0.0  0.0  0.0  ...  0.0  0.0  6.210392  0.0  0.0  0.0
## 
## [4 rows x 19 columns]</code></pre>


</section>
</section>

 ]]></description>
  <category>2025</category>
  <category>Acropora pulchra</category>
  <category>Porites evermanni</category>
  <category>Pocillopora tuahiniensis</category>
  <category>E5</category>
  <category>coral</category>
  <category>timeseries_molecular</category>
  <category>workflow-stdm-02</category>
  <guid>https://robertslab.github.io/sams-notebook/posts/2025/2025-10-16-Method-Testing---E5-Timeseries-Multi-species-Multi-omics-Using-workflow-stdm-02/</guid>
  <pubDate>Thu, 16 Oct 2025 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Exploration - E5 Timeseries Multi-species Multi-omics Using workflow-stdm</title>
  <dc:creator>Sam White</dc:creator>
  <link>https://robertslab.github.io/sams-notebook/posts/2025/2025-10-15-Data-Exploration---E5-Timeseries-Multi-species-Multi-omics-Using-workflow-stdm/</link>
  <description><![CDATA[ 





<section id="intro" class="level1">
<h1>INTRO</h1>
<p>This notebook is an introductory exploration of the E5 coral <a href="https://github.com/urol-e5/timeseries_molecular"><code>urol-e5/timeseries_molecular</code></a> (GitHub repo) multi-species data using a tensor decomposition approach, using <a href="https://github.com/sr320/workflow-stdm"><code>workflow-stdm</code></a> (GitHub Repo), a tensor decomposition package Steven created using an AI agent.</p>
<p>I misunderstood what the goal was, until well after I went through the trouble of running this.</p>
<p>The primary goal was simply to run the package and see what types of files/visualizations it generated. It successfully generates the expected output files; primarily numpy binary files for each factor:</p>
<ul>
<li><code>gene_factors.npy</code></li>
<li><code>recontstructed_tensory.npy</code></li>
<li><code>species_factorys.npy</code></li>
<li><code>summary.json</code></li>
<li><code>time_factors.npy</code></li>
</ul>
<p>I think Steven would’ve liked if this package had also output some simple tables of the results that were human-readable and could be used to easy glance at the results, instead of all these numpy binary files.</p>
<p>Not realizing this at the time, I ran the package and worked heavily to assess/process the output data into something understandable. In the notebook below, I added steps to improve the input data formatting, process a range of ranks, compare those ranks, and select the “best” rank. Additionally, I added a number of visualizations to help better understand the results. However, like the default settings of the package, I did <em>not</em> add any steps to output results in any sort of table formats.</p>
<p>Overall, this analysis is likely similar to that of using <a href="https://github.com/blasks/barnacle">barnacle</a> (GitHub Repo) for this multi-omics analysis <a href="../../../posts/2025/2025-10-08-Data-Exploration---E5-Timeseries-A.pulchra-Multi-species-Multi-omics-Using-Barnacle/index.html">that I ran on 20251008</a> (notebook entry). Both greatly differ than <a href="../../../posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/index.html">the analysis I messed around with using MOFA2</a> (notebook entry).</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>The contents below are from knitted markdown <a href="https://github.com/urol-e5/timeseries_molecular/blob/84515d3db6e8d3a3459764fb9a81b14e8f8b3426/M-multi-species/scripts/13.00-multiomics-stdm.Rmd"><code>13.00-multiomics-stdm.Rmd</code></a> (commit <code>84515d3</code>).</p>
</div>
</div>
</section>
<section id="background" class="level1">
<h1>1 BACKGROUND</h1>
<p>This notebook performs tensor decomposition analysis on multi-species gene expression timeseries data using Steven’s <a href="https://github.com/sr320/workflow-stdm"><code>workflow-stdm</code></a> (GitHub repo) tensor decomposition project.</p>
<p>The analysis identifies optimal tensor rank through reconstruction error analysis and provides biological interpretations of gene expression patterns across species and time.</p>
<section id="analysis-overview" class="level2">
<h2 class="anchored" data-anchor-id="analysis-overview">1.1 Analysis Overview</h2>
<p>The notebook conducts the following analyses:</p>
<ol type="1">
<li><strong>Data Transformation</strong>: Converts wide-format gene expression data to long format required by the stdm package</li>
<li><strong>Rank Comparison</strong>: Tests tensor decomposition across multiple ranks (2-15) to identify optimal number of components</li>
<li><strong>Tensor Decomposition</strong>: Performs PARAFAC decomposition to identify gene, species, and temporal patterns</li>
<li><strong>Visualization</strong>: Creates comprehensive plots to interpret biological patterns in the decomposition results</li>
</ol>
</section>
<section id="input-files" class="level2">
<h2 class="anchored" data-anchor-id="input-files">1.2 Input Files</h2>
<ul>
<li><strong>Primary Input</strong>: <code>/home/shared/16TB_HDD_01/sam/gitrepos/sr320/workflow-stdm/input-data/vst_counts_matrix.csv</code>
<ul>
<li>Wide-format VST-normalized gene expression data</li>
<li>Columns: gene IDs and sample names (format: ACR-139-TP1, POR-216-TP2, etc.)</li>
<li>Sample names encode: Species (ACR/POR/POC) - Individual ID - Timepoint (TP1-TP4)</li>
</ul></li>
</ul>
</section>
<section id="expected-output-structure" class="level2">
<h2 class="anchored" data-anchor-id="expected-output-structure">1.3 Expected Output Structure</h2>
<pre><code>../output/13.00-multiomics-stdm/
├── vst_counts_matrix_long_format.csv                    # Transformed input data
├── YYYYMMDD_HHMMSS/                                     # Main timestamped results directory
│   ├── rank_analysis.png                               # Rank selection visualization
│   ├── rank_selection_summary.json                     # Optimal rank determination
│   ├── optimal_tensor_decomposition_visualization_rank_X.png  # Comprehensive plots
│   ├── plot_01_component_strengths_optimal_rank_X.png   # Individual visualizations
│   ├── plot_02_temporal_heatmap_optimal_rank_X.png
│   ├── plot_03_species_heatmap_optimal_rank_X.png
│   ├── plot_04_temporal_trajectories_optimal_rank_X.png
│   ├── plot_05_species_clustering_optimal_rank_X.png
│   └── rank_comparison/                                 # Rank comparison results
│       ├── rank_comparison_results.json                # Summary of all ranks tested
│       ├── rank_02/                                    # Results for each rank
│       │   └── YYYYMMDD_HHMMSS/                        # Timestamped stdm output
│       │       ├── summary.json                        # Decomposition metrics
│       │       ├── gene_factors.npy                    # Gene factor matrix
│       │       ├── species_factors.npy                 # Species factor matrix
│       │       ├── time_factors.npy                    # Time factor matrix
│       │       ├── reconstructed_tensor.npy            # Reconstructed data
│       │       └── rank_02_comprehensive_visualization.png
│       ├── rank_03/
│       │   └── YYYYMMDD_HHMMSS/
│       │       └── [same structure as rank_02]
│       └── ...                                         # Additional ranks (up to rank_15)</code></pre>
</section>
</section>
<section id="setup" class="level1">
<h1>2 SETUP</h1>
<section id="libraries" class="level2">
<h2 class="anchored" data-anchor-id="libraries">2.1 Libraries</h2>
</section>
<section id="set-r-variables" class="level2">
<h2 class="anchored" data-anchor-id="set-r-variables">2.2 Set R variables</h2>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># OUTPUT DIRECTORY</span></span>
<span id="cb2-2">output_dir <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../output/13.00-multiomics-stdm"</span></span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#INPUT FILE(S)</span></span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># PYTHON ENVIRONMENT - Use the project's .venv environment</span></span>
<span id="cb2-7">python_path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/shared/16TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/.venv/bin/python"</span></span></code></pre></div>
</section>
<section id="load-project-python-environment" class="level2">
<h2 class="anchored" data-anchor-id="load-project-python-environment">2.3 Load project Python environment</h2>
<p>The project uses a virtual environment (<code>.venv</code>) with all required packages including <code>stdm</code>. If this is successful, the Python path should show the <code>.venv</code> environment.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the project's .venv Python environment directly</span></span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(reticulate)</span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set Python path to the project's .venv</span></span>
<span id="cb3-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use_python</span>(python_path, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">required =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show final configuration</span></span>
<span id="cb3-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">py_config</span>()</span></code></pre></div>
<pre><code>## python:         /home/shared/16TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/.venv/bin/python
## libpython:      /usr/lib/python3.12/config-3.12-x86_64-linux-gnu/libpython3.12.so
## pythonhome:     /home/shared/16TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/.venv:/home/shared/16TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/.venv
## version:        3.12.3 (main, Aug 14 2025, 17:47:21) [GCC 13.3.0]
## numpy:          /home/shared/16TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/.venv/lib/python3.12/site-packages/numpy
## numpy_version:  2.3.3
## 
## NOTE: Python version was forced by use_python() function</code></pre>
</section>
<section id="test-python-environment" class="level2">
<h2 class="anchored" data-anchor-id="test-python-environment">2.4 Test Python Environment</h2>
<p>Let’s verify the Python environment has all required libraries:</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> sys</span>
<span id="cb5-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Python executable: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sys<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>executable<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Test problematic imports</span></span>
<span id="cb5-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb5-6">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> PIL</span>
<span id="cb5-7">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"✓ PIL imported successfully"</span>)</span>
<span id="cb5-8"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ImportError</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb5-9">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"✗ PIL import failed: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb5-10"></span>
<span id="cb5-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb5-12">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb5-13">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"✓ matplotlib.pyplot imported successfully"</span>)</span>
<span id="cb5-14"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ImportError</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb5-15">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"✗ matplotlib.pyplot import failed: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb5-16"></span>
<span id="cb5-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb5-18">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb5-19">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb5-20">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"✓ pandas and numpy imported successfully"</span>)</span>
<span id="cb5-21"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">ImportError</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb5-22">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"✗ pandas/numpy import failed: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb5-23"></span>
<span id="cb5-24"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Environment test completed."</span>)</span></code></pre></div>
<pre><code>## Python executable: /home/shared/16TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/.venv/bin/python
## ✓ PIL imported successfully
## ✓ matplotlib.pyplot imported successfully
## ✓ pandas and numpy imported successfully
## Environment test completed.</code></pre>
</section>
</section>
<section id="stdm-analysis" class="level1">
<h1>3 STDM ANALYSIS</h1>
<section id="transform-data-to-stdm-format" class="level2">
<h2 class="anchored" data-anchor-id="transform-data-to-stdm-format">3.1 Transform data to stdm format</h2>
<p>The stdm package expects data in long format with columns: <code>gene</code>, <code>species</code>, <code>timepoint</code>, <code>expression</code>. Our current data is in wide format, so we need to transform it first.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb7-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb7-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb7-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> re</span>
<span id="cb7-5"></span>
<span id="cb7-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get output directory from R environment</span></span>
<span id="cb7-7">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.output_dir</span>
<span id="cb7-8"></span>
<span id="cb7-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create output directory if it doesn't exist</span></span>
<span id="cb7-10">os.makedirs(output_dir, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb7-11"></span>
<span id="cb7-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read the wide-format data</span></span>
<span id="cb7-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Reading wide-format data..."</span>)</span>
<span id="cb7-14">input_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/shared/16TB_HDD_01/sam/gitrepos/sr320/workflow-stdm/input-data/vst_counts_matrix.csv"</span></span>
<span id="cb7-15">df_wide <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(input_file)</span>
<span id="cb7-16"></span>
<span id="cb7-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Original data shape: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>df_wide<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb7-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Columns: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(df_wide.columns[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">... (showing first 5)"</span>)</span>
<span id="cb7-19"></span>
<span id="cb7-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create long-format data</span></span>
<span id="cb7-21"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Transforming to long format..."</span>)</span>
<span id="cb7-22">data_long <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb7-23"></span>
<span id="cb7-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get gene column (first column)</span></span>
<span id="cb7-25">gene_col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_wide.columns[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Should be 'group_id'</span></span>
<span id="cb7-26">sample_cols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_wide.columns[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># All sample columns</span></span>
<span id="cb7-27"></span>
<span id="cb7-28"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _, row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> df_wide.iterrows():</span>
<span id="cb7-29">    gene <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row[gene_col]</span>
<span id="cb7-30">    </span>
<span id="cb7-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> sample_col <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sample_cols:</span>
<span id="cb7-32">        expression_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row[sample_col]</span>
<span id="cb7-33">        </span>
<span id="cb7-34">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Parse sample name to extract species and timepoint</span></span>
<span id="cb7-35">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Expected format: ACR-139-TP1, POR-216-TP2, POC-201-TP3, etc.</span></span>
<span id="cb7-36">        match <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> re.match(<span class="vs" style="color: #20794D;
background-color: null;
font-style: inherit;">r'([A-Z]+)-(\d+)-(TP\d+)'</span>, sample_col)</span>
<span id="cb7-37">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> match:</span>
<span id="cb7-38">            species_prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> match.group(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ACR, POR, POC (species designation)</span></span>
<span id="cb7-39">            individual_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> match.group(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 139, 216, 201 (individual/sample ID)</span></span>
<span id="cb7-40">            timepoint <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> match.group(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># TP1, TP2, TP3, TP4</span></span>
<span id="cb7-41">            </span>
<span id="cb7-42">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create individual identifier (species-individual combination)</span></span>
<span id="cb7-43">            species <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>species_prefix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>individual_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb7-44">            </span>
<span id="cb7-45">            data_long.append({</span>
<span id="cb7-46">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene'</span>: gene,</span>
<span id="cb7-47">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'species'</span>: species,</span>
<span id="cb7-48">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'timepoint'</span>: timepoint,</span>
<span id="cb7-49">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'expression'</span>: expression_value</span>
<span id="cb7-50">            })</span>
<span id="cb7-51">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb7-52">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Warning: Could not parse sample name: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sample_col<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb7-53"></span>
<span id="cb7-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create DataFrame</span></span>
<span id="cb7-55">df_long <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(data_long)</span>
<span id="cb7-56"></span>
<span id="cb7-57"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Transformed data shape: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>df_long<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb7-58"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Number of unique genes: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>df_long[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>nunique()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb7-59"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Number of unique species: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>df_long[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'species'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>nunique()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb7-60"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Number of unique timepoints: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>df_long[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'timepoint'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>nunique()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb7-61"></span>
<span id="cb7-62"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show sample of transformed data</span></span>
<span id="cb7-63"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Sample of transformed data:"</span>)</span>
<span id="cb7-64"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(df_long.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb7-65"></span>
<span id="cb7-66"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save transformed data</span></span>
<span id="cb7-67">output_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vst_counts_matrix_long_format.csv"</span>)</span>
<span id="cb7-68">df_long.to_csv(output_file, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb7-69"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Transformed data saved to: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>output_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>## Reading wide-format data...
## Original data shape: (9800, 118)
## Columns: ['group_id', 'ACR-139-TP1', 'ACR-139-TP2', 'ACR-139-TP3', 'ACR-139-TP4']... (showing first 5)
## Transforming to long format...
## Transformed data shape: (1146600, 4)
## Number of unique genes: 9800
## Number of unique species: 30
## Number of unique timepoints: 4
## 
## Sample of transformed data:
##        gene  species timepoint  expression
## 0  OG_00686  ACR-139       TP1    5.971679
## 1  OG_00686  ACR-139       TP2    6.206077
## 2  OG_00686  ACR-139       TP3    6.379771
## 3  OG_00686  ACR-139       TP4    5.882078
## 4  OG_00686  ACR-145       TP1    5.414779
## 5  OG_00686  ACR-145       TP2    7.260837
## 6  OG_00686  ACR-145       TP3    6.630233
## 7  OG_00686  ACR-145       TP4    5.533403
## 8  OG_00686  ACR-150       TP1    5.922190
## 9  OG_00686  ACR-150       TP2    6.834550
## 
## Transformed data saved to: ../output/13.00-multiomics-stdm/vst_counts_matrix_long_format.csv</code></pre>
</section>
<section id="rank-comparison-analysis" class="level2">
<h2 class="anchored" data-anchor-id="rank-comparison-analysis">3.2 Rank comparison analysis</h2>
<p>First, let’s run tensor decomposition across multiple ranks to find the optimal number of components.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> subprocess</span>
<span id="cb9-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb9-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb9-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb9-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb9-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb9-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb9-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> datetime <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> datetime</span>
<span id="cb9-9"></span>
<span id="cb9-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get output directory from R environment</span></span>
<span id="cb9-11">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.output_dir</span>
<span id="cb9-12"></span>
<span id="cb9-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define ranks to test (2-15 should cover the useful range)</span></span>
<span id="cb9-14">ranks_to_test <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>))</span>
<span id="cb9-15"></span>
<span id="cb9-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the transformed data file</span></span>
<span id="cb9-17">input_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vst_counts_matrix_long_format.csv"</span>)</span>
<span id="cb9-18"></span>
<span id="cb9-19"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Running stdm decomposition across </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(ranks_to_test)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> different ranks..."</span>)</span>
<span id="cb9-20"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Ranks to test: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>ranks_to_test<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-21"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Input file: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>input_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-22"></span>
<span id="cb9-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create main timestamped directory for all results</span></span>
<span id="cb9-24">main_timestamp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> datetime.now().strftime(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%Y%m</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%d</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">_%H%M%S"</span>)</span>
<span id="cb9-25">main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(output_dir, main_timestamp)</span>
<span id="cb9-26">os.makedirs(main_results_dir, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb9-27"></span>
<span id="cb9-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a subdirectory for rank comparison within main results</span></span>
<span id="cb9-29">comparison_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_comparison"</span>)</span>
<span id="cb9-30">os.makedirs(comparison_dir, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb9-31"></span>
<span id="cb9-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Dictionary to store results</span></span>
<span id="cb9-33">rank_results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb9-34"></span>
<span id="cb9-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run decomposition for each rank</span></span>
<span id="cb9-36"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> rank <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ranks_to_test:</span>
<span id="cb9-37">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'='</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-38">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Processing rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">..."</span>)</span>
<span id="cb9-39">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'='</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-40">    </span>
<span id="cb9-41">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create rank-specific subdirectory</span></span>
<span id="cb9-42">    rank_subdir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(comparison_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-43">    os.makedirs(rank_subdir, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb9-44">    </span>
<span id="cb9-45">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run stdm decomposition</span></span>
<span id="cb9-46">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb9-47">        result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> subprocess.run([</span>
<span id="cb9-48">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"stdm"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"run"</span>,</span>
<span id="cb9-49">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--input"</span>, input_file,</span>
<span id="cb9-50">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--output"</span>, rank_subdir,</span>
<span id="cb9-51">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--rank"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(rank),</span>
<span id="cb9-52">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--method"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"parafac"</span>,</span>
<span id="cb9-53">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--sparsity-threshold"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0.01"</span>,</span>
<span id="cb9-54">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--no-log-transform"</span>,</span>
<span id="cb9-55">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--standardize"</span>,</span>
<span id="cb9-56">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"--verbose"</span></span>
<span id="cb9-57">        ], capture_output<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, check<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb9-58">        </span>
<span id="cb9-59">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the results directory (should be timestamped)</span></span>
<span id="cb9-60">        result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(rank_subdir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb9-61">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result_dirs:</span>
<span id="cb9-62">            latest_result_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(result_dirs)</span>
<span id="cb9-63">            </span>
<span id="cb9-64">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load summary statistics</span></span>
<span id="cb9-65">            summary_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(latest_result_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"summary.json"</span>)</span>
<span id="cb9-66">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(summary_file):</span>
<span id="cb9-67">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(summary_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb9-68">                    summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb9-69">                </span>
<span id="cb9-70">                rank_results[rank] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb9-71">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reconstruction_error'</span>: summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reconstruction_error'</span>],</span>
<span id="cb9-72">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rank'</span>: summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rank'</span>],</span>
<span id="cb9-73">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'method'</span>: summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'method'</span>],</span>
<span id="cb9-74">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'result_dir'</span>: latest_result_dir</span>
<span id="cb9-75">                }</span>
<span id="cb9-76">                </span>
<span id="cb9-77">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: Reconstruction error = </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reconstruction_error'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.6f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-78">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb9-79">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  Warning: No summary file found for rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-80">                rank_results[rank] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reconstruction_error'</span>: np.nan, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rank'</span>: rank, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'result_dir'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>}</span>
<span id="cb9-81">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb9-82">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  Warning: No results directory found for rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-83">            rank_results[rank] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reconstruction_error'</span>: np.nan, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rank'</span>: rank, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'result_dir'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>}</span>
<span id="cb9-84">            </span>
<span id="cb9-85">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> subprocess.CalledProcessError <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb9-86">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  Error running decomposition for rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-87">        rank_results[rank] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reconstruction_error'</span>: np.nan, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rank'</span>: rank, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'result_dir'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>}</span>
<span id="cb9-88"></span>
<span id="cb9-89"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save rank comparison results</span></span>
<span id="cb9-90">comparison_results_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(comparison_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_comparison_results.json"</span>)</span>
<span id="cb9-91"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(comparison_results_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb9-92">    json.dump(rank_results, f, indent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb9-93"></span>
<span id="cb9-94"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'='</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-95"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RANK COMPARISON COMPLETED"</span>)</span>
<span id="cb9-96"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'='</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-97"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Main results directory: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>main_results_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-98"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Rank comparison data: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>comparison_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-99"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Comparison results file: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>comparison_results_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-100"></span>
<span id="cb9-101"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display summary table</span></span>
<span id="cb9-102"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">SUMMARY TABLE:"</span>)</span>
<span id="cb9-103"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Rank'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:&lt;6}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reconstruction Error'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:&lt;20}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Status'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-104"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-105"></span>
<span id="cb9-106">valid_results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb9-107"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> rank <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> ranks_to_test:</span>
<span id="cb9-108">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> rank <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> rank_results <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> np.isnan(rank_results[rank][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reconstruction_error'</span>]):</span>
<span id="cb9-109">        error <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rank_results[rank][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reconstruction_error'</span>]</span>
<span id="cb9-110">        valid_results[rank] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> error</span>
<span id="cb9-111">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:&lt;6}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>error<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:&lt;20.6f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Success'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-112">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb9-113">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:&lt;6}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'N/A'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:&lt;20}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Failed'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb9-114"></span>
<span id="cb9-115"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> valid_results:</span>
<span id="cb9-116">    best_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(valid_results.keys(), key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> k: valid_results[k])</span>
<span id="cb9-117">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Best rank by reconstruction error: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>best_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (error: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>valid_results[best_rank]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.6f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span>)</span>
<span id="cb9-118"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb9-119">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">No successful decompositions found!"</span>)</span></code></pre></div>
<pre><code>## Running stdm decomposition across 14 different ranks...
## Ranks to test: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
## Input file: ../output/13.00-multiomics-stdm/vst_counts_matrix_long_format.csv
## 
## ==================================================
## Processing rank 2...
## ==================================================
##   Rank 2: Reconstruction error = 0.643202
## 
## ==================================================
## Processing rank 3...
## ==================================================
##   Rank 3: Reconstruction error = 0.544191
## 
## ==================================================
## Processing rank 4...
## ==================================================
##   Rank 4: Reconstruction error = 0.470061
## 
## ==================================================
## Processing rank 5...
## ==================================================
##   Rank 5: Reconstruction error = 0.451016
## 
## ==================================================
## Processing rank 6...
## ==================================================
##   Rank 6: Reconstruction error = 0.434595
## 
## ==================================================
## Processing rank 7...
## ==================================================
##   Rank 7: Reconstruction error = 0.423404
## 
## ==================================================
## Processing rank 8...
## ==================================================
##   Rank 8: Reconstruction error = 0.410814
## 
## ==================================================
## Processing rank 9...
## ==================================================
##   Rank 9: Reconstruction error = 0.408422
## 
## ==================================================
## Processing rank 10...
## ==================================================
##   Rank 10: Reconstruction error = 0.395594
## 
## ==================================================
## Processing rank 11...
## ==================================================
##   Rank 11: Reconstruction error = 0.385213
## 
## ==================================================
## Processing rank 12...
## ==================================================
##   Rank 12: Reconstruction error = 0.384416
## 
## ==================================================
## Processing rank 13...
## ==================================================
##   Rank 13: Reconstruction error = 0.372751
## 
## ==================================================
## Processing rank 14...
## ==================================================
##   Rank 14: Reconstruction error = 0.364498
## 
## ==================================================
## Processing rank 15...
## ==================================================
##   Rank 15: Reconstruction error = 0.360396
## 
## ============================================================
## RANK COMPARISON COMPLETED
## ============================================================
## Main results directory: ../output/13.00-multiomics-stdm/20251015_190157
## Rank comparison data: ../output/13.00-multiomics-stdm/20251015_190157/rank_comparison
## Comparison results file: ../output/13.00-multiomics-stdm/20251015_190157/rank_comparison/rank_comparison_results.json
## 
## SUMMARY TABLE:
## Rank   Reconstruction Error Status
## ----------------------------------------
## 2      0.643202             Success
## 3      0.544191             Success
## 4      0.470061             Success
## 5      0.451016             Success
## 6      0.434595             Success
## 7      0.423404             Success
## 8      0.410814             Success
## 9      0.408422             Success
## 10     0.395594             Success
## 11     0.385213             Success
## 12     0.384416             Success
## 13     0.372751             Success
## 14     0.364498             Success
## 15     0.360396             Success
## 
## Best rank by reconstruction error: 15 (error: 0.360396)</code></pre>
</section>
<section id="analyze-rank-comparison-results" class="level2">
<h2 class="anchored" data-anchor-id="analyze-rank-comparison-results">3.3 Analyze rank comparison results</h2>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb11-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb11-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib</span>
<span id="cb11-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb11-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb11-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb11-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb11-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb11-9"></span>
<span id="cb11-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up plotting</span></span>
<span id="cb11-11">matplotlib.use(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Agg'</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use non-interactive backend</span></span>
<span id="cb11-12">plt.ioff()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Turn off interactive mode</span></span>
<span id="cb11-13"></span>
<span id="cb11-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get output directory and find the main results directory</span></span>
<span id="cb11-15">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.output_dir</span>
<span id="cb11-16"></span>
<span id="cb11-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the most recent main results directory (timestamped)</span></span>
<span id="cb11-18">main_result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb11-19"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_result_dirs:</span>
<span id="cb11-20">    main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(main_result_dirs)</span>
<span id="cb11-21">    comparison_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_comparison"</span>)</span>
<span id="cb11-22"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb11-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fallback to old structure if new structure doesn't exist yet</span></span>
<span id="cb11-24">    comparison_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_comparison"</span>)</span>
<span id="cb11-25">    main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output_dir</span>
<span id="cb11-26"></span>
<span id="cb11-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load rank comparison results</span></span>
<span id="cb11-28">comparison_results_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(comparison_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_comparison_results.json"</span>)</span>
<span id="cb11-29"></span>
<span id="cb11-30"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(comparison_results_file):</span>
<span id="cb11-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(comparison_results_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb11-32">        rank_results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb11-33">    </span>
<span id="cb11-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert to DataFrame for easier analysis</span></span>
<span id="cb11-35">    results_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb11-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> rank_str, data <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> rank_results.items():</span>
<span id="cb11-37">        rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(rank_str)</span>
<span id="cb11-38">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> np.isnan(data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reconstruction_error'</span>]):</span>
<span id="cb11-39">            results_data.append({</span>
<span id="cb11-40">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rank'</span>: rank,</span>
<span id="cb11-41">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reconstruction_error'</span>: data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reconstruction_error'</span>],</span>
<span id="cb11-42">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'result_dir'</span>: data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'result_dir'</span>]</span>
<span id="cb11-43">            })</span>
<span id="cb11-44">    </span>
<span id="cb11-45">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> results_data:</span>
<span id="cb11-46">        df_results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(results_data)</span>
<span id="cb11-47">        df_results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_results.sort_values(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rank'</span>)</span>
<span id="cb11-48">        </span>
<span id="cb11-49">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb11-50">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RANK SELECTION ANALYSIS"</span>)</span>
<span id="cb11-51">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb11-52">        </span>
<span id="cb11-53">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate additional metrics</span></span>
<span id="cb11-54">        df_results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'error_change'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reconstruction_error'</span>].diff()</span>
<span id="cb11-55">        df_results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'error_change_pct'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reconstruction_error'</span>].pct_change() <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb11-56">        </span>
<span id="cb11-57">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find elbow point using second derivative</span></span>
<span id="cb11-58">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(df_results) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:</span>
<span id="cb11-59">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate second derivative (acceleration of error decrease)</span></span>
<span id="cb11-60">            df_results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'second_derivative'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'error_change'</span>].diff()</span>
<span id="cb11-61">            </span>
<span id="cb11-62">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find elbow (where second derivative is maximum - greatest change in slope)</span></span>
<span id="cb11-63">            elbow_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'second_derivative'</span>].idxmax()</span>
<span id="cb11-64">            elbow_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_results.loc[elbow_idx, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rank'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> pd.isna(elbow_idx) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb11-65">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb11-66">            elbow_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb11-67">        </span>
<span id="cb11-68">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create comprehensive visualization</span></span>
<span id="cb11-69">        fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>))</span>
<span id="cb11-70">        </span>
<span id="cb11-71">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. Scree plot - Reconstruction error vs rank</span></span>
<span id="cb11-72">        axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].plot(df_results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rank'</span>], df_results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reconstruction_error'</span>], </span>
<span id="cb11-73">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bo-'</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb11-74">        axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Rank (Number of Components)'</span>)</span>
<span id="cb11-75">        axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reconstruction Error'</span>)</span>
<span id="cb11-76">        axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Scree Plot: Reconstruction Error vs Rank'</span>)</span>
<span id="cb11-77">        axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb11-78">        </span>
<span id="cb11-79">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Highlight elbow point</span></span>
<span id="cb11-80">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> elbow_rank:</span>
<span id="cb11-81">            elbow_error <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_results[df_results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rank'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> elbow_rank][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reconstruction_error'</span>].iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb11-82">            axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].plot(elbow_rank, elbow_error, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ro'</span>, markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, </span>
<span id="cb11-83">                           label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Elbow Point (Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>elbow_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>)</span>
<span id="cb11-84">            axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].legend()</span>
<span id="cb11-85">        </span>
<span id="cb11-86">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. Error reduction rate</span></span>
<span id="cb11-87">        axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].plot(df_results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rank'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:], df_results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'error_change'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:], </span>
<span id="cb11-88">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'go-'</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb11-89">        axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Rank'</span>)</span>
<span id="cb11-90">        axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Error Change from Previous Rank'</span>)</span>
<span id="cb11-91">        axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Error Reduction Rate'</span>)</span>
<span id="cb11-92">        axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb11-93">        axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].axhline(y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb11-94">        </span>
<span id="cb11-95">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3. Percentage change in error</span></span>
<span id="cb11-96">        axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].plot(df_results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rank'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:], df_results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'error_change_pct'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:], </span>
<span id="cb11-97">                        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'mo-'</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb11-98">        axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Rank'</span>)</span>
<span id="cb11-99">        axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Error Change (%)'</span>)</span>
<span id="cb11-100">        axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Percentage Error Reduction'</span>)</span>
<span id="cb11-101">        axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb11-102">        axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].axhline(y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb11-103">        </span>
<span id="cb11-104">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4. Second derivative (elbow detection)</span></span>
<span id="cb11-105">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(df_results) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:</span>
<span id="cb11-106">            axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].plot(df_results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rank'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:], df_results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'second_derivative'</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:], </span>
<span id="cb11-107">                            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'co-'</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb11-108">            axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Rank'</span>)</span>
<span id="cb11-109">            axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Second Derivative'</span>)</span>
<span id="cb11-110">            axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Elbow Detection (Second Derivative)'</span>)</span>
<span id="cb11-111">            axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb11-112">            axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].axhline(y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb11-113">            </span>
<span id="cb11-114">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> elbow_rank <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> elbow_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:</span>
<span id="cb11-115">                elbow_second_deriv <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_results[df_results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rank'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> elbow_rank][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'second_derivative'</span>].iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb11-116">                axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].plot(elbow_rank, elbow_second_deriv, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ro'</span>, markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,</span>
<span id="cb11-117">                               label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Elbow Point (Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>elbow_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>)</span>
<span id="cb11-118">                axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].legend()</span>
<span id="cb11-119">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb11-120">            axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].text(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Not enough data points</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">for elbow detection'</span>, </span>
<span id="cb11-121">                           transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].transAxes, ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center'</span>, va<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center'</span>)</span>
<span id="cb11-122">            axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Elbow Detection (Insufficient Data)'</span>)</span>
<span id="cb11-123">        </span>
<span id="cb11-124">        plt.tight_layout()</span>
<span id="cb11-125">        </span>
<span id="cb11-126">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save rank analysis plot</span></span>
<span id="cb11-127">        rank_analysis_plot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_analysis.png"</span>)</span>
<span id="cb11-128">        plt.savefig(rank_analysis_plot, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>)</span>
<span id="cb11-129">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Rank analysis plot saved to: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rank_analysis_plot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-130">        </span>
<span id="cb11-131">        plt.show()</span>
<span id="cb11-132">        </span>
<span id="cb11-133">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print detailed analysis</span></span>
<span id="cb11-134">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">DETAILED RANK ANALYSIS:"</span>)</span>
<span id="cb11-135">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Rank'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:&lt;6}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Error'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:&lt;12}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Change'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:&lt;12}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Change %'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:&lt;12}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'2nd Deriv'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:&lt;12}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-136">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-137">        </span>
<span id="cb11-138">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _, row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> df_results.iterrows():</span>
<span id="cb11-139">            rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rank'</span>])</span>
<span id="cb11-140">            error <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reconstruction_error'</span>]</span>
<span id="cb11-141">            change <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'error_change'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> pd.isna(row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'error_change'</span>]) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb11-142">            change_pct <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'error_change_pct'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> pd.isna(row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'error_change_pct'</span>]) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb11-143">            second_deriv <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'second_derivative'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> pd.isna(row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'second_derivative'</span>]) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb11-144">            </span>
<span id="cb11-145">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:&lt;6}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>error<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:&lt;12.6f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>change<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:&lt;12.6f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>change_pct<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:&lt;12.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>second_deriv<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:&lt;12.6f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-146">        </span>
<span id="cb11-147">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Recommendations</span></span>
<span id="cb11-148">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">RECOMMENDATIONS:"</span>)</span>
<span id="cb11-149">        </span>
<span id="cb11-150">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Best by reconstruction error</span></span>
<span id="cb11-151">        best_error_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_results.loc[df_results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reconstruction_error'</span>].idxmin(), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rank'</span>]</span>
<span id="cb11-152">        best_error <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reconstruction_error'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>()</span>
<span id="cb11-153">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  Best reconstruction error: Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(best_error_rank)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (error: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>best_error<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.6f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span>)</span>
<span id="cb11-154">        </span>
<span id="cb11-155">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Elbow point recommendation</span></span>
<span id="cb11-156">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> elbow_rank:</span>
<span id="cb11-157">            elbow_error <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_results[df_results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rank'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> elbow_rank][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reconstruction_error'</span>].iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb11-158">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  Elbow point (best trade-off): Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(elbow_rank)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (error: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>elbow_error<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.6f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span>)</span>
<span id="cb11-159">        </span>
<span id="cb11-160">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Conservative recommendation (where improvement becomes marginal)</span></span>
<span id="cb11-161">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find where error reduction becomes &lt; 5% of previous rank</span></span>
<span id="cb11-162">        marginal_ranks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_results[df_results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'error_change_pct'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rank'</span>]</span>
<span id="cb11-163">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(marginal_ranks) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb11-164">            conservative_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> marginal_ranks.iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb11-165">            conservative_error <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_results[df_results[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rank'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> conservative_rank][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reconstruction_error'</span>].iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb11-166">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  Conservative choice (&lt; 5% improvement): Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(conservative_rank)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (error: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>conservative_error<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.6f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span>)</span>
<span id="cb11-167">        </span>
<span id="cb11-168">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">  SUGGESTED RANK: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(elbow_rank) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> elbow_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(best_error_rank)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-169">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  RATIONALE: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Elbow point provides best complexity/accuracy trade-off'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> elbow_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Best reconstruction error'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-170">        </span>
<span id="cb11-171">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save summary</span></span>
<span id="cb11-172">        summary_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb11-173">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'best_rank_by_error'</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(best_error_rank),</span>
<span id="cb11-174">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'best_error'</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(best_error),</span>
<span id="cb11-175">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'elbow_rank'</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(elbow_rank) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> elbow_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>,</span>
<span id="cb11-176">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'suggested_rank'</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(elbow_rank) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> elbow_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(best_error_rank),</span>
<span id="cb11-177">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'total_ranks_tested'</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(df_results),</span>
<span id="cb11-178">            <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'analysis_date'</span>: datetime.now().isoformat()</span>
<span id="cb11-179">        }</span>
<span id="cb11-180">        </span>
<span id="cb11-181">        summary_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_selection_summary.json"</span>)</span>
<span id="cb11-182">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(summary_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb11-183">            json.dump(summary_data, f, indent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb11-184">        </span>
<span id="cb11-185">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Rank selection summary saved to: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>summary_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-186">        </span>
<span id="cb11-187">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Store main results directory for subsequent analyses</span></span>
<span id="cb11-188">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> main_results_dir</span>
<span id="cb11-189">        </span>
<span id="cb11-190">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb11-191">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No valid results found in rank comparison!"</span>)</span>
<span id="cb11-192">        </span>
<span id="cb11-193"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb11-194">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Rank comparison results file not found: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>comparison_results_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-15-Data-Exploration---E5-Timeseries-Multi-species-Multi-omics-Using-workflow-stdm/13.00-multiomics-stdm_files/figure-gfm/analyze-rank-comparison-1.png" width="1440"></p>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"></span>
<span id="cb12-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Suppress output</span></span>
<span id="cb12-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span></code></pre></div>
</section>
<section id="analyze-optimal-decomposition-results" class="level2">
<h2 class="anchored" data-anchor-id="analyze-optimal-decomposition-results">3.4 Analyze optimal decomposition results</h2>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb13-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb13-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb13-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb13-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb13-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb13-7"></span>
<span id="cb13-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get output directory from R environment</span></span>
<span id="cb13-9">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.output_dir</span>
<span id="cb13-10"></span>
<span id="cb13-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the main results directory</span></span>
<span id="cb13-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>():</span>
<span id="cb13-13">    main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span>]</span>
<span id="cb13-14"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb13-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fallback to find the most recent main results directory</span></span>
<span id="cb13-16">    main_result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb13-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_result_dirs:</span>
<span id="cb13-18">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(main_result_dirs)</span>
<span id="cb13-19">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb13-20">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output_dir</span>
<span id="cb13-21"></span>
<span id="cb13-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load rank selection summary to get optimal rank</span></span>
<span id="cb13-23">summary_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_selection_summary.json"</span>)</span>
<span id="cb13-24"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(summary_file):</span>
<span id="cb13-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(summary_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb13-26">        rank_summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb13-27">    </span>
<span id="cb13-28">    optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rank_summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'suggested_rank'</span>]</span>
<span id="cb13-29">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Analyzing optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> results from rank comparison data"</span>)</span>
<span id="cb13-30">    </span>
<span id="cb13-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the optimal rank data in rank_comparison directory</span></span>
<span id="cb13-32">    comparison_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_comparison"</span>)</span>
<span id="cb13-33">    optimal_rank_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(comparison_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb13-34">    </span>
<span id="cb13-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(optimal_rank_dir):</span>
<span id="cb13-36">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the timestamped results within the rank directory</span></span>
<span id="cb13-37">        result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(optimal_rank_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb13-38">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result_dirs:</span>
<span id="cb13-39">            latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(result_dirs)</span>
<span id="cb13-40">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Analyzing optimal results from: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>latest_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb13-41">            </span>
<span id="cb13-42">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load summary</span></span>
<span id="cb13-43">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"summary.json"</span>)) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb13-44">                summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb13-45">            </span>
<span id="cb13-46">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb13-47">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OPTIMAL DECOMPOSITION QUALITY ASSESSMENT"</span>)</span>
<span id="cb13-48">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb13-49">            </span>
<span id="cb13-50">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print key metrics</span></span>
<span id="cb13-51">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Method: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'method'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>upper()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb13-52">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Rank: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rank'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (data-driven selection)"</span>)</span>
<span id="cb13-53">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Reconstruction Error: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reconstruction_error'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.6f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb13-54">            </span>
<span id="cb13-55">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Quality interpretation</span></span>
<span id="cb13-56">            error <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reconstruction_error'</span>]</span>
<span id="cb13-57">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> error <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>:</span>
<span id="cb13-58">                quality <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Excellent (may be overfitting)"</span></span>
<span id="cb13-59">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> error <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>:</span>
<span id="cb13-60">                quality <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Good"</span></span>
<span id="cb13-61">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> error <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>:</span>
<span id="cb13-62">                quality <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Acceptable"</span></span>
<span id="cb13-63">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb13-64">                quality <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Poor - consider increasing rank"</span></span>
<span id="cb13-65">            </span>
<span id="cb13-66">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Quality Assessment: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>quality<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb13-67">            </span>
<span id="cb13-68">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load factor matrices</span></span>
<span id="cb13-69">            gene_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_factors.npy"</span>))</span>
<span id="cb13-70">            species_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species_factors.npy"</span>))</span>
<span id="cb13-71">            time_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time_factors.npy"</span>))</span>
<span id="cb13-72">            </span>
<span id="cb13-73">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Factor Matrix Shapes:"</span>)</span>
<span id="cb13-74">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  Gene factors: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_factors<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb13-75">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  Species factors: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>species_factors<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb13-76">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  Time factors: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>time_factors<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb13-77">            </span>
<span id="cb13-78">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Convergence Check:"</span>)</span>
<span id="cb13-79">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  All factors finite: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>(np.isfinite(gene_factors)) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>(np.isfinite(species_factors)) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">all</span>(np.isfinite(time_factors))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb13-80">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  No NaN values: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> (np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">any</span>(np.isnan(gene_factors)) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">any</span>(np.isnan(species_factors)) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">or</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">any</span>(np.isnan(time_factors)))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb13-81">            </span>
<span id="cb13-82">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show component strengths</span></span>
<span id="cb13-83">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Component Analysis:"</span>)</span>
<span id="cb13-84">            component_strengths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb13-85">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rank'</span>]):</span>
<span id="cb13-86">                gene_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(gene_factors[:, i])</span>
<span id="cb13-87">                species_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(species_factors[:, i])</span>
<span id="cb13-88">                time_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(time_factors[:, i])</span>
<span id="cb13-89">                total_strength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> species_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> time_norm</span>
<span id="cb13-90">                component_strengths.append(total_strength)</span>
<span id="cb13-91">            </span>
<span id="cb13-92">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sort components by strength</span></span>
<span id="cb13-93">            sorted_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argsort(component_strengths)[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb13-94">            n_top <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sorted_components))</span>
<span id="cb13-95">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  Top </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>n_top<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> strongest components: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sorted_components[:n_top] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># +1 for 1-based indexing</span></span>
<span id="cb13-96">            </span>
<span id="cb13-97">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find most variable timepoints</span></span>
<span id="cb13-98">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Temporal Patterns:"</span>)</span>
<span id="cb13-99">            time_variance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.var(time_factors, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb13-100">            most_temporal <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argsort(time_variance)[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][:n_top]</span>
<span id="cb13-101">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  Components with strongest temporal patterns: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>most_temporal <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb13-102">            </span>
<span id="cb13-103">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Species diversity</span></span>
<span id="cb13-104">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Species Patterns:"</span>)</span>
<span id="cb13-105">            species_variance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.var(species_factors, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb13-106">            most_species_specific <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argsort(species_variance)[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>][:n_top]</span>
<span id="cb13-107">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  Components with strongest species differences: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>most_species_specific <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb13-108">            </span>
<span id="cb13-109">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb13-110">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CONCLUSION: The optimal decomposition successfully converged!"</span>)</span>
<span id="cb13-111">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Results saved in: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>latest_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb13-112">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb13-113">            </span>
<span id="cb13-114">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Store latest_dir for subsequent analyses (this is now the rank_comparison data)</span></span>
<span id="cb13-115">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'optimal_results_dir'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> latest_dir</span>
<span id="cb13-116">            </span>
<span id="cb13-117">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb13-118">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"No timestamped results found in rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory!"</span>)</span>
<span id="cb13-119">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb13-120">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory not found in rank comparison!"</span>)</span>
<span id="cb13-121"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb13-122">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No rank selection summary found!"</span>)</span></code></pre></div>
<pre><code>## Analyzing optimal rank 5 results from rank comparison data
## Analyzing optimal results from: ../output/13.00-multiomics-stdm/20251015_190157/rank_comparison/rank_05/20251015_190351
## 
## ============================================================
## OPTIMAL DECOMPOSITION QUALITY ASSESSMENT
## ============================================================
## Method: PARAFAC
## Rank: 5 (data-driven selection)
## Reconstruction Error: 0.451016
## Quality Assessment: Acceptable
## 
## Factor Matrix Shapes:
##   Gene factors: (9800, 5)
##   Species factors: (30, 5)
##   Time factors: (4, 5)
## 
## Convergence Check:
##   All factors finite: True
##   No NaN values: True
## 
## Component Analysis:
##   Top 5 strongest components: [3 5 2 1 4]
## 
## Temporal Patterns:
##   Components with strongest temporal patterns: [5 4 3 2 1]
## 
## Species Patterns:
##   Components with strongest species differences: [1 2 3 4 5]
## 
## ============================================================
## CONCLUSION: The optimal decomposition successfully converged!
## Results saved in: ../output/13.00-multiomics-stdm/20251015_190157/rank_comparison/rank_05/20251015_190351
## ============================================================</code></pre>
</section>
</section>
<section id="visualizations" class="level1">
<h1>4 VISUALIZATIONS</h1>
<section id="generate-visualizations-for-all-tested-ranks" class="level2">
<h2 class="anchored" data-anchor-id="generate-visualizations-for-all-tested-ranks">4.1 Generate visualizations for all tested ranks</h2>
<p>This section creates comprehensive visualizations for each rank tested, allowing comparison across different numbers of components.</p>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb15-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb15-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb15-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib</span>
<span id="cb15-4">matplotlib.use(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Agg'</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Must be before importing pyplot</span></span>
<span id="cb15-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb15-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb15-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.decomposition <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> PCA</span>
<span id="cb15-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb15-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb15-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb15-11"></span>
<span id="cb15-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up plotting style  </span></span>
<span id="cb15-13">plt.style.use(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'default'</span>)</span>
<span id="cb15-14">sns.set_palette(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"husl"</span>)</span>
<span id="cb15-15">plt.ioff()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Turn off interactive mode</span></span>
<span id="cb15-16"></span>
<span id="cb15-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get output directory and find the main results directory</span></span>
<span id="cb15-18">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.output_dir</span>
<span id="cb15-19"></span>
<span id="cb15-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the most recent main results directory (timestamped)</span></span>
<span id="cb15-21"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>():</span>
<span id="cb15-22">    main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span>]</span>
<span id="cb15-23"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb15-24">    main_result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb15-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_result_dirs:</span>
<span id="cb15-26">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(main_result_dirs)</span>
<span id="cb15-27">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb15-28">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output_dir</span>
<span id="cb15-29"></span>
<span id="cb15-30">comparison_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_comparison"</span>)</span>
<span id="cb15-31"></span>
<span id="cb15-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load rank comparison results</span></span>
<span id="cb15-33">comparison_results_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(comparison_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_comparison_results.json"</span>)</span>
<span id="cb15-34"></span>
<span id="cb15-35"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(comparison_results_file):</span>
<span id="cb15-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(comparison_results_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb15-37">        rank_results <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb15-38">    </span>
<span id="cb15-39">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the transformed data</span></span>
<span id="cb15-40">    data_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vst_counts_matrix_long_format.csv"</span>)</span>
<span id="cb15-41">    df_long <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(data_file)</span>
<span id="cb15-42">    species_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(df_long[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'species'</span>].unique())</span>
<span id="cb15-43">    timepoint_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(df_long[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'timepoint'</span>].unique())</span>
<span id="cb15-44">    species_types <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [name.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> name <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> species_names]</span>
<span id="cb15-45">    unique_types <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(species_types))</span>
<span id="cb15-46">    </span>
<span id="cb15-47">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb15-48">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GENERATING VISUALIZATIONS FOR ALL TESTED RANKS"</span>)</span>
<span id="cb15-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb15-50">    </span>
<span id="cb15-51">    successful_ranks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb15-52">    </span>
<span id="cb15-53">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Process each rank that completed successfully</span></span>
<span id="cb15-54">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> rank_str, data <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> rank_results.items():</span>
<span id="cb15-55">        rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(rank_str)</span>
<span id="cb15-56">        result_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data.get(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'result_dir'</span>)</span>
<span id="cb15-57">        </span>
<span id="cb15-58">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result_dir <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> np.isnan(data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'reconstruction_error'</span>]):</span>
<span id="cb15-59">            successful_ranks.append(rank)</span>
<span id="cb15-60">            </span>
<span id="cb15-61">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Processing visualizations for rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">..."</span>)</span>
<span id="cb15-62">            </span>
<span id="cb15-63">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb15-64">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load factor matrices</span></span>
<span id="cb15-65">                gene_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(result_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_factors.npy"</span>))</span>
<span id="cb15-66">                species_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(result_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species_factors.npy"</span>))</span>
<span id="cb15-67">                time_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(result_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time_factors.npy"</span>))</span>
<span id="cb15-68">                </span>
<span id="cb15-69">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate component strengths</span></span>
<span id="cb15-70">                component_strengths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb15-71">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(gene_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]):</span>
<span id="cb15-72">                    gene_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(gene_factors[:, i])</span>
<span id="cb15-73">                    species_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(species_factors[:, i])</span>
<span id="cb15-74">                    time_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(time_factors[:, i])</span>
<span id="cb15-75">                    total_strength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> species_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> time_norm</span>
<span id="cb15-76">                    component_strengths.append(total_strength)</span>
<span id="cb15-77">                </span>
<span id="cb15-78">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sort components by strength</span></span>
<span id="cb15-79">                sorted_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argsort(component_strengths)[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb15-80">                n_top_display <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, rank)</span>
<span id="cb15-81">                top_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sorted_components[:n_top_display]</span>
<span id="cb15-82">                </span>
<span id="cb15-83">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create comprehensive visualization for this rank</span></span>
<span id="cb15-84">                fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>))</span>
<span id="cb15-85">                </span>
<span id="cb15-86">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. Component strengths</span></span>
<span id="cb15-87">                plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb15-88">                plt.bar(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(component_strengths) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), </span>
<span id="cb15-89">                        [component_strengths[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sorted_components])</span>
<span id="cb15-90">                plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component (ranked by strength)'</span>)</span>
<span id="cb15-91">                plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component Strength'</span>)</span>
<span id="cb15-92">                plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Component Strengths (Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>)</span>
<span id="cb15-93">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>:</span>
<span id="cb15-94">                    plt.xticks(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb15-95">                </span>
<span id="cb15-96">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. Temporal patterns heatmap</span></span>
<span id="cb15-97">                plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb15-98">                time_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time_factors[:, top_components]</span>
<span id="cb15-99">                sns.heatmap(time_data.T, </span>
<span id="cb15-100">                            xticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>timepoint_names,</span>
<span id="cb15-101">                            yticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'C</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> top_components],</span>
<span id="cb15-102">                            cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RdBu_r'</span>, center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, annot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, fmt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.2f'</span>)</span>
<span id="cb15-103">                plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Top </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>n_top_display<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Components: Temporal'</span>)</span>
<span id="cb15-104">                plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Timepoint'</span>)</span>
<span id="cb15-105">                </span>
<span id="cb15-106">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3. Species clustering PCA</span></span>
<span id="cb15-107">                plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb15-108">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb15-109">                    n_pca_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(rank, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb15-110">                    species_subset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> species_factors[:, sorted_components[:n_pca_components]]</span>
<span id="cb15-111">                    </span>
<span id="cb15-112">                    pca <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PCA(n_components<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb15-113">                    species_pca <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pca.fit_transform(species_subset)</span>
<span id="cb15-114">                    </span>
<span id="cb15-115">                    colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'orange'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'purple'</span>][:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(unique_types)]</span>
<span id="cb15-116">                    species_type_map <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {stype: i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, stype <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(unique_types)}</span>
<span id="cb15-117">                    </span>
<span id="cb15-118">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, (x, y) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(species_pca):</span>
<span id="cb15-119">                        stype <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> species_types[i]</span>
<span id="cb15-120">                        plt.scatter(x, y, c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[species_type_map[stype]], </span>
<span id="cb15-121">                                   alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, </span>
<span id="cb15-122">                                   label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>stype <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> species_types.index(stype) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb15-123">                    </span>
<span id="cb15-124">                    plt.xlabel(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'PC1 (</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pca<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>explained_variance_ratio_[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.1%}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>)</span>
<span id="cb15-125">                    plt.ylabel(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'PC2 (</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pca<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>explained_variance_ratio_[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.1%}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>)</span>
<span id="cb15-126">                    plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Species PCA (Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>)</span>
<span id="cb15-127">                    plt.legend()</span>
<span id="cb15-128">                    plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb15-129">                </span>
<span id="cb15-130">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4. Temporal trajectories</span></span>
<span id="cb15-131">                plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb15-132">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, comp_idx <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(top_components):</span>
<span id="cb15-133">                    plt.plot(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(timepoint_names) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), </span>
<span id="cb15-134">                            time_factors[:, comp_idx], </span>
<span id="cb15-135">                            marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'C</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>comp_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb15-136">                plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Timepoint'</span>)</span>
<span id="cb15-137">                plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Factor Value'</span>)</span>
<span id="cb15-138">                plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Temporal Trajectories (Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>)</span>
<span id="cb15-139">                plt.xticks(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(timepoint_names) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), timepoint_names)</span>
<span id="cb15-140">                plt.legend()</span>
<span id="cb15-141">                plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb15-142">                </span>
<span id="cb15-143">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 5. Component correlations</span></span>
<span id="cb15-144">                plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb15-145">                gene_corr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.corrcoef(gene_factors.T)</span>
<span id="cb15-146">                sns.heatmap(gene_corr, cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RdBu_r'</span>, center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, </span>
<span id="cb15-147">                            xticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb15-148">                            yticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb15-149">                            square<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb15-150">                plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Component Correlations (Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>)</span>
<span id="cb15-151">                </span>
<span id="cb15-152">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 6. Species type comparison</span></span>
<span id="cb15-153">                plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb15-154">                species_by_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb15-155">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, name <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(species_names):</span>
<span id="cb15-156">                    stype <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> name.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb15-157">                    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> stype <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> species_by_type:</span>
<span id="cb15-158">                        species_by_type[stype] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb15-159">                    species_by_type[stype].append(i)</span>
<span id="cb15-160">                </span>
<span id="cb15-161">                type_means <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb15-162">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> stype, indices <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> species_by_type.items():</span>
<span id="cb15-163">                    type_means[stype] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(species_factors[indices, :], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb15-164">                </span>
<span id="cb15-165">                x_pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(top_components))</span>
<span id="cb15-166">                width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(type_means)</span>
<span id="cb15-167">                </span>
<span id="cb15-168">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, (stype, means) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(type_means.items()):</span>
<span id="cb15-169">                    plt.bar(x_pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> width, means[top_components], </span>
<span id="cb15-170">                           width, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>stype, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>)</span>
<span id="cb15-171">                </span>
<span id="cb15-172">                plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component'</span>)</span>
<span id="cb15-173">                plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mean Factor Value'</span>)</span>
<span id="cb15-174">                plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Species Comparison (Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>)</span>
<span id="cb15-175">                plt.xticks(x_pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(type_means) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, </span>
<span id="cb15-176">                           [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'C</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> top_components])</span>
<span id="cb15-177">                plt.legend()</span>
<span id="cb15-178">                </span>
<span id="cb15-179">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 7. Temporal variance</span></span>
<span id="cb15-180">                plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)</span>
<span id="cb15-181">                time_variances <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.var(time_factors, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb15-182">                sorted_time_vars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argsort(time_variances)[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb15-183">                </span>
<span id="cb15-184">                plt.bar(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(time_variances) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), </span>
<span id="cb15-185">                       [time_variances[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sorted_time_vars])</span>
<span id="cb15-186">                plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component (by temporal variance)'</span>)</span>
<span id="cb15-187">                plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Temporal Variance'</span>)</span>
<span id="cb15-188">                plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Temporal Variability (Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>)</span>
<span id="cb15-189">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>:</span>
<span id="cb15-190">                    plt.xticks(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb15-191">                </span>
<span id="cb15-192">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 8. Species variance</span></span>
<span id="cb15-193">                plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb15-194">                species_variances <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.var(species_factors, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb15-195">                sorted_species_vars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argsort(species_variances)[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb15-196">                </span>
<span id="cb15-197">                plt.bar(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(species_variances) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), </span>
<span id="cb15-198">                       [species_variances[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sorted_species_vars])</span>
<span id="cb15-199">                plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component (by species variance)'</span>)</span>
<span id="cb15-200">                plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species Variance'</span>)</span>
<span id="cb15-201">                plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Species Variability (Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>)</span>
<span id="cb15-202">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>:</span>
<span id="cb15-203">                    plt.xticks(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb15-204">                </span>
<span id="cb15-205">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 9. Gene factor distribution</span></span>
<span id="cb15-206">                plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)</span>
<span id="cb15-207">                gene_variances <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.var(gene_factors, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb15-208">                plt.hist(gene_variances, bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, edgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>)</span>
<span id="cb15-209">                plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Gene Factor Variance'</span>)</span>
<span id="cb15-210">                plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Number of Genes'</span>)</span>
<span id="cb15-211">                plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Gene Variability (Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>)</span>
<span id="cb15-212">                plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb15-213">                </span>
<span id="cb15-214">                plt.tight_layout()</span>
<span id="cb15-215">                </span>
<span id="cb15-216">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save rank-specific visualization in the main results directory for easy access</span></span>
<span id="cb15-217">                rank_plot_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_comprehensive_visualization.png"</span>)</span>
<span id="cb15-218">                plt.savefig(rank_plot_file, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>)</span>
<span id="cb15-219">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  Saved: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rank_plot_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb15-220">                </span>
<span id="cb15-221">                <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Also save in the rank-specific subdirectory</span></span>
<span id="cb15-222">                rank_subdir_plot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(result_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_comprehensive_visualization.png"</span>)</span>
<span id="cb15-223">                plt.savefig(rank_subdir_plot, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>)</span>
<span id="cb15-224">                </span>
<span id="cb15-225">                plt.close()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Close the figure to free memory instead of showing all plots</span></span>
<span id="cb15-226">                </span>
<span id="cb15-227">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb15-228">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  Error processing rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb15-229">    </span>
<span id="cb15-230">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Successfully generated visualizations for ranks: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>successful_ranks<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb15-231">    </span>
<span id="cb15-232"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb15-233">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Rank comparison results file not found!"</span>)</span>
<span id="cb15-234"></span>
<span id="cb15-235"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Suppress output</span></span>
<span id="cb15-236"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span></code></pre></div>
</section>
<section id="visualize-optimal-decomposition-results" class="level2">
<h2 class="anchored" data-anchor-id="visualize-optimal-decomposition-results">4.2 Visualize optimal decomposition results</h2>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb16-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb16-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib</span>
<span id="cb16-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb16-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb16-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.cluster <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> KMeans</span>
<span id="cb16-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.decomposition <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> PCA</span>
<span id="cb16-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb16-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb16-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb16-11"></span>
<span id="cb16-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up plotting style</span></span>
<span id="cb16-13">matplotlib.use(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Agg'</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use non-interactive backend</span></span>
<span id="cb16-14">plt.style.use(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'default'</span>)</span>
<span id="cb16-15">sns.set_palette(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"husl"</span>)</span>
<span id="cb16-16">plt.ioff()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Turn off interactive mode</span></span>
<span id="cb16-17"></span>
<span id="cb16-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get output directory from R environment</span></span>
<span id="cb16-19">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.output_dir</span>
<span id="cb16-20"></span>
<span id="cb16-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the main results directory</span></span>
<span id="cb16-22"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>():</span>
<span id="cb16-23">    main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span>]</span>
<span id="cb16-24"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb16-25">    main_result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb16-26">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_result_dirs:</span>
<span id="cb16-27">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(main_result_dirs)</span>
<span id="cb16-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb16-29">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> output_dir</span>
<span id="cb16-30"></span>
<span id="cb16-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load rank selection summary to get optimal rank</span></span>
<span id="cb16-32">summary_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_selection_summary.json"</span>)</span>
<span id="cb16-33"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(summary_file):</span>
<span id="cb16-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(summary_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb16-35">        rank_summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb16-36">    </span>
<span id="cb16-37">    optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rank_summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'suggested_rank'</span>]</span>
<span id="cb16-38">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Visualizing optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> results from rank comparison data"</span>)</span>
<span id="cb16-39">    </span>
<span id="cb16-40">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the optimal rank data in rank_comparison directory</span></span>
<span id="cb16-41">    comparison_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_comparison"</span>)</span>
<span id="cb16-42">    optimal_rank_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(comparison_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb16-43">    </span>
<span id="cb16-44">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(optimal_rank_dir):</span>
<span id="cb16-45">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the timestamped results within the rank directory</span></span>
<span id="cb16-46">        result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(optimal_rank_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb16-47">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result_dirs:</span>
<span id="cb16-48">            latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(result_dirs)</span>
<span id="cb16-49">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal analysis data from: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>latest_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb16-50">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb16-51">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"No timestamped results found in rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory!"</span>)</span>
<span id="cb16-52">            latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb16-53">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb16-54">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory not found in rank comparison!"</span>)</span>
<span id="cb16-55">        latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb16-56"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb16-57">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No rank selection summary found!"</span>)</span>
<span id="cb16-58">    latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb16-59"></span>
<span id="cb16-60"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> latest_dir:</span>
<span id="cb16-61">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Visualizing results from: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>latest_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb16-62">    </span>
<span id="cb16-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load all data</span></span>
<span id="cb16-64">    gene_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_factors.npy"</span>))</span>
<span id="cb16-65">    species_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species_factors.npy"</span>))</span>
<span id="cb16-66">    time_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time_factors.npy"</span>))</span>
<span id="cb16-67">    </span>
<span id="cb16-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the transformed data to get species names</span></span>
<span id="cb16-69">    data_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vst_counts_matrix_long_format.csv"</span>)</span>
<span id="cb16-70">    df_long <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(data_file)</span>
<span id="cb16-71">    </span>
<span id="cb16-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get unique species and timepoint names</span></span>
<span id="cb16-73">    species_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(df_long[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'species'</span>].unique())</span>
<span id="cb16-74">    timepoint_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(df_long[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'timepoint'</span>].unique())</span>
<span id="cb16-75">    </span>
<span id="cb16-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate component strengths</span></span>
<span id="cb16-77">    component_strengths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb16-78">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(gene_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]):</span>
<span id="cb16-79">        gene_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(gene_factors[:, i])</span>
<span id="cb16-80">        species_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(species_factors[:, i])</span>
<span id="cb16-81">        time_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(time_factors[:, i])</span>
<span id="cb16-82">        total_strength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> species_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> time_norm</span>
<span id="cb16-83">        component_strengths.append(total_strength)</span>
<span id="cb16-84">    </span>
<span id="cb16-85">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sort components by strength</span></span>
<span id="cb16-86">    sorted_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argsort(component_strengths)[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb16-87">    </span>
<span id="cb16-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Determine how many top components to show (max 5, or all if fewer)</span></span>
<span id="cb16-89">    n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb16-90">    n_top_display <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, n_components)</span>
<span id="cb16-91">    </span>
<span id="cb16-92">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create figure with multiple subplots</span></span>
<span id="cb16-93">    fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">24</span>))</span>
<span id="cb16-94">    </span>
<span id="cb16-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. Component strengths bar plot</span></span>
<span id="cb16-96">    plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb16-97">    plt.bar(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(component_strengths) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), </span>
<span id="cb16-98">            [component_strengths[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sorted_components])</span>
<span id="cb16-99">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component (ranked by strength)'</span>)</span>
<span id="cb16-100">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component Strength'</span>)</span>
<span id="cb16-101">    plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component Strengths (Gene × Species × Time norms)'</span>)</span>
<span id="cb16-102">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>:</span>
<span id="cb16-103">        plt.xticks(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb16-104">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb16-105">        plt.xticks(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)))</span>
<span id="cb16-106">    </span>
<span id="cb16-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. Time factors heatmap for top components</span></span>
<span id="cb16-108">    plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb16-109">    top_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sorted_components[:n_top_display]</span>
<span id="cb16-110">    time_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time_factors[:, top_components]</span>
<span id="cb16-111">    sns.heatmap(time_data.T, </span>
<span id="cb16-112">                xticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>timepoint_names,</span>
<span id="cb16-113">                yticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Comp </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> top_components],</span>
<span id="cb16-114">                cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RdBu_r'</span>, center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, annot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, fmt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.3f'</span>)</span>
<span id="cb16-115">    plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Top </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>n_top_display<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Components: Temporal Patterns'</span>)</span>
<span id="cb16-116">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Timepoint'</span>)</span>
<span id="cb16-117">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component'</span>)</span>
<span id="cb16-118">    </span>
<span id="cb16-119">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3. Species factors heatmap for top components</span></span>
<span id="cb16-120">    plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb16-121">    species_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> species_factors[:, top_components]</span>
<span id="cb16-122">    </span>
<span id="cb16-123">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create species type labels for better visualization</span></span>
<span id="cb16-124">    species_types <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [name.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> name <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> species_names]</span>
<span id="cb16-125">    unique_types <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(species_types))</span>
<span id="cb16-126">    type_colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.cm.Set3(np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(unique_types)))</span>
<span id="cb16-127">    </span>
<span id="cb16-128">    sns.heatmap(species_data.T,</span>
<span id="cb16-129">                xticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>name[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">..."</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(name) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> name <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> name <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> species_names],</span>
<span id="cb16-130">                yticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Comp </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> top_components],</span>
<span id="cb16-131">                cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RdBu_r'</span>, center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb16-132">    plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Top </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>n_top_display<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Components: Species Patterns'</span>)</span>
<span id="cb16-133">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Individual'</span>)</span>
<span id="cb16-134">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component'</span>)</span>
<span id="cb16-135">    plt.xticks(rotation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb16-136">    </span>
<span id="cb16-137">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4. Temporal patterns for strongest components</span></span>
<span id="cb16-138">    plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb16-139">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, comp_idx <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(top_components):</span>
<span id="cb16-140">        plt.plot(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(timepoint_names) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), </span>
<span id="cb16-141">                time_factors[:, comp_idx], </span>
<span id="cb16-142">                marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Component </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>comp_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb16-143">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Timepoint'</span>)</span>
<span id="cb16-144">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Factor Value'</span>)</span>
<span id="cb16-145">    plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Temporal Trajectories (Top </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>n_top_display<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Components)'</span>)</span>
<span id="cb16-146">    plt.xticks(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(timepoint_names) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), timepoint_names)</span>
<span id="cb16-147">    plt.legend()</span>
<span id="cb16-148">    plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb16-149">    </span>
<span id="cb16-150">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 5. Species clustering based on factor loadings</span></span>
<span id="cb16-151">    plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb16-152">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use all components for clustering if &lt;= 10, otherwise top 10</span></span>
<span id="cb16-153">    n_cluster_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, n_components)</span>
<span id="cb16-154">    species_subset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> species_factors[:, sorted_components[:n_cluster_components]]</span>
<span id="cb16-155">    </span>
<span id="cb16-156">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># PCA for visualization</span></span>
<span id="cb16-157">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> species_subset.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb16-158">        pca <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PCA(n_components<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb16-159">        species_pca <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pca.fit_transform(species_subset)</span>
<span id="cb16-160">        </span>
<span id="cb16-161">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Color by species type</span></span>
<span id="cb16-162">        colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'orange'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'purple'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'brown'</span>][:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(unique_types)]</span>
<span id="cb16-163">        species_type_map <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {stype: i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, stype <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(unique_types)}</span>
<span id="cb16-164">        </span>
<span id="cb16-165">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, (x, y) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(species_pca):</span>
<span id="cb16-166">            stype <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> species_types[i]</span>
<span id="cb16-167">            plt.scatter(x, y, c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[species_type_map[stype]], </span>
<span id="cb16-168">                       alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>stype <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> species_types.index(stype) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb16-169">        </span>
<span id="cb16-170">        plt.xlabel(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'PC1 (</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pca<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>explained_variance_ratio_[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.1%}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> variance)'</span>)</span>
<span id="cb16-171">        plt.ylabel(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'PC2 (</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pca<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>explained_variance_ratio_[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.1%}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> variance)'</span>)</span>
<span id="cb16-172">        plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species Clustering (PCA of Factor Loadings)'</span>)</span>
<span id="cb16-173">        plt.legend()</span>
<span id="cb16-174">        plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb16-175">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb16-176">        plt.text(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Not enough components</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">for PCA visualization'</span>, </span>
<span id="cb16-177">                transform<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>plt.gca().transAxes, ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center'</span>, va<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center'</span>)</span>
<span id="cb16-178">        plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species Clustering (Insufficient Components)'</span>)</span>
<span id="cb16-179">    </span>
<span id="cb16-180">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 6. Gene factor distribution</span></span>
<span id="cb16-181">    plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb16-182">    gene_variances <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.var(gene_factors, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb16-183">    plt.hist(gene_variances, bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, edgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>)</span>
<span id="cb16-184">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Gene Factor Variance'</span>)</span>
<span id="cb16-185">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Number of Genes'</span>)</span>
<span id="cb16-186">    plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Distribution of Gene Factor Variability'</span>)</span>
<span id="cb16-187">    plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb16-188">    </span>
<span id="cb16-189">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 7. Component correlation matrix</span></span>
<span id="cb16-190">    plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">7</span>)</span>
<span id="cb16-191">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate correlations between components across genes</span></span>
<span id="cb16-192">    gene_corr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.corrcoef(gene_factors.T)</span>
<span id="cb16-193">    sns.heatmap(gene_corr, cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RdBu_r'</span>, center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, </span>
<span id="cb16-194">                xticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, gene_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb16-195">                yticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, gene_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb16-196">    plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component Correlations (Gene Space)'</span>)</span>
<span id="cb16-197">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component'</span>)</span>
<span id="cb16-198">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component'</span>)</span>
<span id="cb16-199">    </span>
<span id="cb16-200">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 8. Species type comparison</span></span>
<span id="cb16-201">    plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb16-202">    species_by_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb16-203">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, name <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(species_names):</span>
<span id="cb16-204">        stype <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> name.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb16-205">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> stype <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> species_by_type:</span>
<span id="cb16-206">            species_by_type[stype] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb16-207">        species_by_type[stype].append(i)</span>
<span id="cb16-208">    </span>
<span id="cb16-209">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate mean factor values per species type for top components</span></span>
<span id="cb16-210">    type_means <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb16-211">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> stype, indices <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> species_by_type.items():</span>
<span id="cb16-212">        type_means[stype] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(species_factors[indices, :], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb16-213">    </span>
<span id="cb16-214">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot for top components</span></span>
<span id="cb16-215">    x_pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(top_components))</span>
<span id="cb16-216">    width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(type_means)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjust width based on number of species types</span></span>
<span id="cb16-217">    </span>
<span id="cb16-218">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, (stype, means) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(type_means.items()):</span>
<span id="cb16-219">        plt.bar(x_pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> width, means[top_components], </span>
<span id="cb16-220">               width, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>stype, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>)</span>
<span id="cb16-221">    </span>
<span id="cb16-222">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component'</span>)</span>
<span id="cb16-223">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mean Factor Value'</span>)</span>
<span id="cb16-224">    plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Species Type Comparison (Top </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>n_top_display<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Components)'</span>)</span>
<span id="cb16-225">    plt.xticks(x_pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(type_means) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, </span>
<span id="cb16-226">               [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Comp </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> top_components])</span>
<span id="cb16-227">    plt.legend()</span>
<span id="cb16-228">    plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb16-229">    </span>
<span id="cb16-230">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 9. Temporal variance per component</span></span>
<span id="cb16-231">    plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)</span>
<span id="cb16-232">    time_variances <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.var(time_factors, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb16-233">    sorted_time_vars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argsort(time_variances)[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb16-234">    </span>
<span id="cb16-235">    plt.bar(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(time_variances) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), </span>
<span id="cb16-236">           [time_variances[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sorted_time_vars])</span>
<span id="cb16-237">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component (ranked by temporal variance)'</span>)</span>
<span id="cb16-238">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Temporal Variance'</span>)</span>
<span id="cb16-239">    plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Components by Temporal Variability'</span>)</span>
<span id="cb16-240">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>:</span>
<span id="cb16-241">        plt.xticks(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb16-242">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb16-243">        plt.xticks(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)))</span>
<span id="cb16-244">    </span>
<span id="cb16-245">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 10. Species variance per component</span></span>
<span id="cb16-246">    plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb16-247">    species_variances <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.var(species_factors, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb16-248">    sorted_species_vars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argsort(species_variances)[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb16-249">    </span>
<span id="cb16-250">    plt.bar(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(species_variances) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), </span>
<span id="cb16-251">           [species_variances[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sorted_species_vars])</span>
<span id="cb16-252">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component (ranked by species variance)'</span>)</span>
<span id="cb16-253">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species Variance'</span>)</span>
<span id="cb16-254">    plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Components by Species Variability'</span>)</span>
<span id="cb16-255">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>:</span>
<span id="cb16-256">        plt.xticks(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb16-257">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb16-258">        plt.xticks(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">//</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)))</span>
<span id="cb16-259">    </span>
<span id="cb16-260">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 11. Top genes per component heatmap</span></span>
<span id="cb16-261">    plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>)</span>
<span id="cb16-262">    n_top_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb16-263">    top_gene_indices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb16-264">    </span>
<span id="cb16-265">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get top genes for each of the top components</span></span>
<span id="cb16-266">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> comp_idx <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> top_components:</span>
<span id="cb16-267">        top_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argsort(np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(gene_factors[:, comp_idx]))[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>n_top_genes:]</span>
<span id="cb16-268">        top_gene_indices.extend(top_genes)</span>
<span id="cb16-269">    </span>
<span id="cb16-270">    top_gene_indices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(top_gene_indices))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove duplicates</span></span>
<span id="cb16-271">    top_gene_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_factors[top_gene_indices, :][:, top_components]</span>
<span id="cb16-272">    </span>
<span id="cb16-273">    sns.heatmap(top_gene_data, </span>
<span id="cb16-274">                cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RdBu_r'</span>, center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb16-275">                yticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Gene </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> top_gene_indices],</span>
<span id="cb16-276">                xticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Comp </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> top_components])</span>
<span id="cb16-277">    plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Top </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(top_gene_indices)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Genes × Top </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>n_top_display<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Components'</span>)</span>
<span id="cb16-278">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component'</span>)</span>
<span id="cb16-279">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Gene'</span>)</span>
<span id="cb16-280">    </span>
<span id="cb16-281">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 12. Reconstruction quality assessment</span></span>
<span id="cb16-282">    plt.subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span>
<span id="cb16-283">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load reconstructed tensor</span></span>
<span id="cb16-284">    reconstructed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reconstructed_tensor.npy"</span>))</span>
<span id="cb16-285">    </span>
<span id="cb16-286">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create original tensor from the long format data</span></span>
<span id="cb16-287">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Pivot to get the original tensor structure</span></span>
<span id="cb16-288">    original_pivot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_long.pivot_table(values<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'expression'</span>, </span>
<span id="cb16-289">                                       index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene'</span>, </span>
<span id="cb16-290">                                       columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'species'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'timepoint'</span>], </span>
<span id="cb16-291">                                       fill_value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb16-292">    </span>
<span id="cb16-293">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Debug: Original pivot shape: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>original_pivot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb16-294">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Debug: Reconstructed tensor shape: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>reconstructed<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb16-295">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Debug: Expected shape: (</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene_factors<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>species_factors<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>time_factors<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span>)</span>
<span id="cb16-296">    </span>
<span id="cb16-297">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if we can safely reshape</span></span>
<span id="cb16-298">    expected_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> species_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> time_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb16-299">    actual_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> original_pivot.size</span>
<span id="cb16-300">    </span>
<span id="cb16-301">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> actual_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected_size:</span>
<span id="cb16-302">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reshape the pivot table to match tensor format</span></span>
<span id="cb16-303">        n_genes, n_species, n_timepoints <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], species_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], time_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb16-304">        original_reshaped <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> original_pivot.values.reshape(n_genes, n_species, n_timepoints)</span>
<span id="cb16-305">        </span>
<span id="cb16-306">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate per-gene reconstruction error</span></span>
<span id="cb16-307">        gene_errors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(original_reshaped <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> reconstructed), axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb16-308">        </span>
<span id="cb16-309">        plt.hist(gene_errors, bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, edgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>)</span>
<span id="cb16-310">        plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mean Absolute Error per Gene'</span>)</span>
<span id="cb16-311">        plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Number of Genes'</span>)</span>
<span id="cb16-312">        plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reconstruction Error Distribution'</span>)</span>
<span id="cb16-313">        plt.axvline(np.mean(gene_errors), color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>, </span>
<span id="cb16-314">                   label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Mean: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>mean(gene_errors)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb16-315">        plt.legend()</span>
<span id="cb16-316">        plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb16-317">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb16-318">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If reshape fails, show a simpler quality metric</span></span>
<span id="cb16-319">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate overall reconstruction quality using Frobenius norm</span></span>
<span id="cb16-320">        original_flat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> original_pivot.values.flatten()</span>
<span id="cb16-321">        reconstructed_flat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> reconstructed.flatten()</span>
<span id="cb16-322">        </span>
<span id="cb16-323">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensure both arrays are the same size by taking the minimum</span></span>
<span id="cb16-324">        min_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(original_flat), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(reconstructed_flat))</span>
<span id="cb16-325">        original_flat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> original_flat[:min_size]</span>
<span id="cb16-326">        reconstructed_flat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> reconstructed_flat[:min_size]</span>
<span id="cb16-327">        </span>
<span id="cb16-328">        residuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> original_flat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> reconstructed_flat</span>
<span id="cb16-329">        </span>
<span id="cb16-330">        plt.hist(residuals, bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, edgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>)</span>
<span id="cb16-331">        plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reconstruction Residuals'</span>)</span>
<span id="cb16-332">        plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Frequency'</span>)</span>
<span id="cb16-333">        plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reconstruction Residuals Distribution'</span>)</span>
<span id="cb16-334">        plt.axvline(np.mean(residuals), color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>, </span>
<span id="cb16-335">                   label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Mean: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>mean(residuals)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb16-336">        plt.axvline(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">':'</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Perfect fit'</span>)</span>
<span id="cb16-337">        plt.legend()</span>
<span id="cb16-338">        plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb16-339">    </span>
<span id="cb16-340">    plt.tight_layout()</span>
<span id="cb16-341">    </span>
<span id="cb16-342">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the plot in main results directory</span></span>
<span id="cb16-343">    plot_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"optimal_tensor_decomposition_visualization_rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.png"</span>)</span>
<span id="cb16-344">    plt.savefig(plot_file, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>)</span>
<span id="cb16-345">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Optimal visualization saved to: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>plot_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb16-346">    </span>
<span id="cb16-347">    plt.show()</span>
<span id="cb16-348">    </span>
<span id="cb16-349">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print interpretation guide</span></span>
<span id="cb16-350">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb16-351">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"OPTIMAL VISUALIZATION INTERPRETATION GUIDE"</span>)</span>
<span id="cb16-352">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb16-353">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1. Component Strengths: Shows which components capture most variation"</span>)</span>
<span id="cb16-354">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2. Temporal Patterns: How each component changes over time"</span>)</span>
<span id="cb16-355">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3. Species Patterns: How each individual loads on components"</span>)</span>
<span id="cb16-356">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4. Temporal Trajectories: Line plots of time patterns"</span>)</span>
<span id="cb16-357">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5. Species Clustering: PCA showing individual similarities"</span>)</span>
<span id="cb16-358">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"6. Gene Variability: Distribution of gene response diversity"</span>)</span>
<span id="cb16-359">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"7. Component Correlations: Independence of components"</span>)</span>
<span id="cb16-360">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"8. Species Type Comparison: Average patterns by species type"</span>)</span>
<span id="cb16-361">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"9. Temporal Variance: Which components show most time variation"</span>)</span>
<span id="cb16-362">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"10. Species Variance: Which components show most individual variation"</span>)</span>
<span id="cb16-363">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"11. Top Genes Heatmap: Key genes driving each component"</span>)</span>
<span id="cb16-364">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"12. Reconstruction Quality: How well the optimal model fits the data"</span>)</span>
<span id="cb16-365">    </span>
<span id="cb16-366"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb16-367">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No optimal rank results found!"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-15-Data-Exploration---E5-Timeseries-Multi-species-Multi-omics-Using-workflow-stdm/13.00-multiomics-stdm_files/figure-gfm/visualize-optimal-results-3.png" width="1920"></p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1"></span>
<span id="cb17-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Suppress output</span></span>
<span id="cb17-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span></code></pre></div>
</section>
<section id="individual-plot-1-component-strengths" class="level2">
<h2 class="anchored" data-anchor-id="individual-plot-1-component-strengths">4.3 Individual Plot 1: Component Strengths</h2>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb18-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb18-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib</span>
<span id="cb18-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb18-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb18-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb18-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb18-8"></span>
<span id="cb18-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up plotting</span></span>
<span id="cb18-10">matplotlib.use(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Agg'</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use non-interactive backend</span></span>
<span id="cb18-11">plt.ioff()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Turn off interactive mode</span></span>
<span id="cb18-12"></span>
<span id="cb18-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get output directory from R environment</span></span>
<span id="cb18-14">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.output_dir</span>
<span id="cb18-15"></span>
<span id="cb18-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for main results directory</span></span>
<span id="cb18-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>():</span>
<span id="cb18-18">    main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span>]</span>
<span id="cb18-19"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb18-20">    main_result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb18-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_result_dirs:</span>
<span id="cb18-22">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(main_result_dirs)</span>
<span id="cb18-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb18-24">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb18-25"></span>
<span id="cb18-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the optimal rank from the rank selection summary</span></span>
<span id="cb18-27"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb18-28">    summary_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_selection_summary.json"</span>)</span>
<span id="cb18-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(summary_file):</span>
<span id="cb18-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(summary_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb18-31">            rank_summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb18-32">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rank_summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'suggested_rank'</span>]</span>
<span id="cb18-33">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (from rank selection analysis)"</span>)</span>
<span id="cb18-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb18-35">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No rank selection summary found! Cannot determine optimal rank."</span>)</span>
<span id="cb18-36">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb18-37">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb18-38"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb18-39">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No main results directory found!"</span>)</span>
<span id="cb18-40">    optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb18-41"></span>
<span id="cb18-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for the optimal rank data in rank_comparison directory</span></span>
<span id="cb18-43">latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb18-44"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> optimal_rank:</span>
<span id="cb18-45">    comparison_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_comparison"</span>)</span>
<span id="cb18-46">    optimal_rank_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(comparison_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb18-47">    </span>
<span id="cb18-48">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(optimal_rank_dir):</span>
<span id="cb18-49">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the timestamped results within the rank directory</span></span>
<span id="cb18-50">        result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(optimal_rank_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb18-51">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result_dirs:</span>
<span id="cb18-52">            latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(result_dirs)</span>
<span id="cb18-53">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> data from: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>latest_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb18-54">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb18-55">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"No timestamped results found in rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory!"</span>)</span>
<span id="cb18-56">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb18-57">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory not found!"</span>)</span>
<span id="cb18-58"></span>
<span id="cb18-59"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> latest_dir:</span>
<span id="cb18-60">    </span>
<span id="cb18-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load data</span></span>
<span id="cb18-62">    gene_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_factors.npy"</span>))</span>
<span id="cb18-63">    species_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species_factors.npy"</span>))</span>
<span id="cb18-64">    time_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time_factors.npy"</span>))</span>
<span id="cb18-65">    </span>
<span id="cb18-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate component strengths</span></span>
<span id="cb18-67">    component_strengths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb18-68">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(gene_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]):</span>
<span id="cb18-69">        gene_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(gene_factors[:, i])</span>
<span id="cb18-70">        species_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(species_factors[:, i])</span>
<span id="cb18-71">        time_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(time_factors[:, i])</span>
<span id="cb18-72">        total_strength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> species_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> time_norm</span>
<span id="cb18-73">        component_strengths.append(total_strength)</span>
<span id="cb18-74">    </span>
<span id="cb18-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sort components by strength</span></span>
<span id="cb18-76">    sorted_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argsort(component_strengths)[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb18-77">    </span>
<span id="cb18-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create plot</span></span>
<span id="cb18-79">    plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb18-80">    plt.bar(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(component_strengths) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), </span>
<span id="cb18-81">            [component_strengths[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sorted_components])</span>
<span id="cb18-82">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component (ranked by strength)'</span>)</span>
<span id="cb18-83">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component Strength'</span>)</span>
<span id="cb18-84">    plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Component Strengths (Optimal Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>)</span>
<span id="cb18-85">    </span>
<span id="cb18-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set x-ticks to show all components if &lt;= 10, otherwise show every 2nd or 5th</span></span>
<span id="cb18-87">    n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(component_strengths)</span>
<span id="cb18-88">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>:</span>
<span id="cb18-89">        plt.xticks(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb18-90">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>:</span>
<span id="cb18-91">        plt.xticks(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb18-92">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb18-93">        plt.xticks(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb18-94">    </span>
<span id="cb18-95">    plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb18-96">    </span>
<span id="cb18-97">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save individual plot in main results directory</span></span>
<span id="cb18-98">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb18-99">        plot_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"plot_01_component_strengths_optimal_rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.png"</span>)</span>
<span id="cb18-100">        plt.savefig(plot_file, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>)</span>
<span id="cb18-101">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Component strengths plot saved to: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>plot_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb18-102">    </span>
<span id="cb18-103">    plt.show()</span>
<span id="cb18-104"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb18-105">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Could not load data for optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> optimal_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'unknown'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-15-Data-Exploration---E5-Timeseries-Multi-species-Multi-omics-Using-workflow-stdm/13.00-multiomics-stdm_files/figure-gfm/plot-component-strengths-5.png" width="1152"></p>
<div class="sourceCode" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb19-1"></span>
<span id="cb19-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Suppress output</span></span>
<span id="cb19-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span></code></pre></div>
</section>
<section id="individual-plot-2-temporal-patterns-heatmap" class="level2">
<h2 class="anchored" data-anchor-id="individual-plot-2-temporal-patterns-heatmap">4.4 Individual Plot 2: Temporal Patterns Heatmap</h2>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb20-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb20-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib</span>
<span id="cb20-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb20-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb20-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb20-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb20-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb20-9"></span>
<span id="cb20-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up plotting</span></span>
<span id="cb20-11">matplotlib.use(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Agg'</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use non-interactive backend</span></span>
<span id="cb20-12">plt.ioff()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Turn off interactive mode</span></span>
<span id="cb20-13"></span>
<span id="cb20-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get output directory from R environment</span></span>
<span id="cb20-15">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.output_dir</span>
<span id="cb20-16"></span>
<span id="cb20-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for main results directory</span></span>
<span id="cb20-18"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>():</span>
<span id="cb20-19">    main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span>]</span>
<span id="cb20-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb20-21">    main_result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb20-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_result_dirs:</span>
<span id="cb20-23">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(main_result_dirs)</span>
<span id="cb20-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb20-25">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb20-26"></span>
<span id="cb20-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the optimal rank from the rank selection summary</span></span>
<span id="cb20-28"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb20-29">    summary_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_selection_summary.json"</span>)</span>
<span id="cb20-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(summary_file):</span>
<span id="cb20-31">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(summary_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb20-32">            rank_summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb20-33">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rank_summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'suggested_rank'</span>]</span>
<span id="cb20-34">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (from rank selection analysis)"</span>)</span>
<span id="cb20-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb20-36">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No rank selection summary found! Cannot determine optimal rank."</span>)</span>
<span id="cb20-37">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb20-38">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb20-39"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb20-40">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No main results directory found!"</span>)</span>
<span id="cb20-41">    optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb20-42"></span>
<span id="cb20-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for the optimal rank data in rank_comparison directory</span></span>
<span id="cb20-44">latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb20-45"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> optimal_rank:</span>
<span id="cb20-46">    comparison_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_comparison"</span>)</span>
<span id="cb20-47">    optimal_rank_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(comparison_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb20-48">    </span>
<span id="cb20-49">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(optimal_rank_dir):</span>
<span id="cb20-50">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the timestamped results within the rank directory</span></span>
<span id="cb20-51">        result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(optimal_rank_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb20-52">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result_dirs:</span>
<span id="cb20-53">            latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(result_dirs)</span>
<span id="cb20-54">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> data from: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>latest_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb20-55">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb20-56">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"No timestamped results found in rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory!"</span>)</span>
<span id="cb20-57">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb20-58">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory not found!"</span>)</span>
<span id="cb20-59"></span>
<span id="cb20-60"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> latest_dir:</span>
<span id="cb20-61">    </span>
<span id="cb20-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load data</span></span>
<span id="cb20-63">    gene_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_factors.npy"</span>))</span>
<span id="cb20-64">    species_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species_factors.npy"</span>))</span>
<span id="cb20-65">    time_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time_factors.npy"</span>))</span>
<span id="cb20-66">    </span>
<span id="cb20-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the transformed data to get timepoint names</span></span>
<span id="cb20-68">    data_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vst_counts_matrix_long_format.csv"</span>)</span>
<span id="cb20-69">    df_long <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(data_file)</span>
<span id="cb20-70">    timepoint_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(df_long[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'timepoint'</span>].unique())</span>
<span id="cb20-71">    </span>
<span id="cb20-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate component strengths and get top 5</span></span>
<span id="cb20-73">    component_strengths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb20-74">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(gene_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]):</span>
<span id="cb20-75">        gene_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(gene_factors[:, i])</span>
<span id="cb20-76">        species_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(species_factors[:, i])</span>
<span id="cb20-77">        time_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(time_factors[:, i])</span>
<span id="cb20-78">        total_strength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> species_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> time_norm</span>
<span id="cb20-79">        component_strengths.append(total_strength)</span>
<span id="cb20-80">    </span>
<span id="cb20-81">    sorted_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argsort(component_strengths)[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb20-82">    top_5_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sorted_components[:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, optimal_rank)]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use min to handle ranks &lt; 5</span></span>
<span id="cb20-83">    </span>
<span id="cb20-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create heatmap</span></span>
<span id="cb20-85">    plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb20-86">    time_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> time_factors[:, top_5_components]</span>
<span id="cb20-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add a labeled colorbar so readers know what the colors represent</span></span>
<span id="cb20-88">    sns.heatmap(time_data.T, </span>
<span id="cb20-89">                xticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>timepoint_names,</span>
<span id="cb20-90">                yticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Component </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> top_5_components],</span>
<span id="cb20-91">                cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RdBu_r'</span>, center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, annot<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, fmt<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.3f'</span>,</span>
<span id="cb20-92">                cbar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, cbar_kws<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'label'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Time factor value (loading)'</span>} ,</span>
<span id="cb20-93">                linewidths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb20-94">    plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Top </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(top_5_components)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Components: Temporal Patterns (Optimal Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>)</span>
<span id="cb20-95">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Timepoint'</span>)</span>
<span id="cb20-96">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component'</span>)</span>
<span id="cb20-97">    </span>
<span id="cb20-98">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save individual plot in main results directory</span></span>
<span id="cb20-99">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb20-100">        plot_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"plot_02_temporal_heatmap_optimal_rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.png"</span>)</span>
<span id="cb20-101">        plt.savefig(plot_file, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>)</span>
<span id="cb20-102">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Temporal patterns heatmap saved to: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>plot_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb20-103">    </span>
<span id="cb20-104">    plt.show()</span>
<span id="cb20-105"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb20-106">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Could not load data for optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> optimal_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'unknown'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-15-Data-Exploration---E5-Timeseries-Multi-species-Multi-omics-Using-workflow-stdm/13.00-multiomics-stdm_files/figure-gfm/plot-temporal-heatmap-7.png" width="960"></p>
<div class="sourceCode" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb21-1"></span>
<span id="cb21-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Suppress output</span></span>
<span id="cb21-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span></code></pre></div>
</section>
<section id="individual-plot-3-species-patterns-heatmap" class="level2">
<h2 class="anchored" data-anchor-id="individual-plot-3-species-patterns-heatmap">4.5 Individual Plot 3: Species Patterns Heatmap</h2>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb22-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb22-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib</span>
<span id="cb22-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb22-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb22-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb22-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb22-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb22-9"></span>
<span id="cb22-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up plotting</span></span>
<span id="cb22-11">matplotlib.use(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Agg'</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use non-interactive backend</span></span>
<span id="cb22-12">plt.ioff()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Turn off interactive mode</span></span>
<span id="cb22-13"></span>
<span id="cb22-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get output directory from R environment</span></span>
<span id="cb22-15">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.output_dir</span>
<span id="cb22-16"></span>
<span id="cb22-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for main results directory</span></span>
<span id="cb22-18"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>():</span>
<span id="cb22-19">    main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span>]</span>
<span id="cb22-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb22-21">    main_result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb22-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_result_dirs:</span>
<span id="cb22-23">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(main_result_dirs)</span>
<span id="cb22-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb22-25">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb22-26"></span>
<span id="cb22-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the optimal rank from the rank selection summary</span></span>
<span id="cb22-28"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb22-29">    summary_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_selection_summary.json"</span>)</span>
<span id="cb22-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(summary_file):</span>
<span id="cb22-31">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(summary_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb22-32">            rank_summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb22-33">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rank_summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'suggested_rank'</span>]</span>
<span id="cb22-34">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (from rank selection analysis)"</span>)</span>
<span id="cb22-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb22-36">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No rank selection summary found! Cannot determine optimal rank."</span>)</span>
<span id="cb22-37">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb22-38">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb22-39"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb22-40">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No main results directory found!"</span>)</span>
<span id="cb22-41">    optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb22-42"></span>
<span id="cb22-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for the optimal rank data in rank_comparison directory</span></span>
<span id="cb22-44">latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb22-45"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> optimal_rank:</span>
<span id="cb22-46">    comparison_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_comparison"</span>)</span>
<span id="cb22-47">    optimal_rank_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(comparison_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb22-48">    </span>
<span id="cb22-49">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(optimal_rank_dir):</span>
<span id="cb22-50">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the timestamped results within the rank directory</span></span>
<span id="cb22-51">        result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(optimal_rank_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb22-52">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result_dirs:</span>
<span id="cb22-53">            latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(result_dirs)</span>
<span id="cb22-54">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> data from: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>latest_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb22-55">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb22-56">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"No timestamped results found in rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory!"</span>)</span>
<span id="cb22-57">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb22-58">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory not found!"</span>)</span>
<span id="cb22-59"></span>
<span id="cb22-60"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> latest_dir:</span>
<span id="cb22-61">    </span>
<span id="cb22-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load data</span></span>
<span id="cb22-63">    gene_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_factors.npy"</span>))</span>
<span id="cb22-64">    species_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species_factors.npy"</span>))</span>
<span id="cb22-65">    time_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time_factors.npy"</span>))</span>
<span id="cb22-66">    </span>
<span id="cb22-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the transformed data to get species names</span></span>
<span id="cb22-68">    data_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vst_counts_matrix_long_format.csv"</span>)</span>
<span id="cb22-69">    df_long <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(data_file)</span>
<span id="cb22-70">    species_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(df_long[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'species'</span>].unique())</span>
<span id="cb22-71">    </span>
<span id="cb22-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate component strengths and get top 5</span></span>
<span id="cb22-73">    component_strengths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb22-74">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(gene_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]):</span>
<span id="cb22-75">        gene_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(gene_factors[:, i])</span>
<span id="cb22-76">        species_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(species_factors[:, i])</span>
<span id="cb22-77">        time_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(time_factors[:, i])</span>
<span id="cb22-78">        total_strength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> species_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> time_norm</span>
<span id="cb22-79">        component_strengths.append(total_strength)</span>
<span id="cb22-80">    </span>
<span id="cb22-81">    sorted_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argsort(component_strengths)[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb22-82">    top_5_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sorted_components[:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, optimal_rank)]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use min to handle ranks &lt; 5</span></span>
<span id="cb22-83">    </span>
<span id="cb22-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create heatmap</span></span>
<span id="cb22-85">    plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb22-86">    species_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> species_factors[:, top_5_components]</span>
<span id="cb22-87">    </span>
<span id="cb22-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add a labeled colorbar so readers know what the colors represent</span></span>
<span id="cb22-89">    sns.heatmap(species_data.T,</span>
<span id="cb22-90">                xticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>name[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">..."</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(name) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> name <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> name <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> species_names],</span>
<span id="cb22-91">                yticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Component </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> top_5_components],</span>
<span id="cb22-92">                cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RdBu_r'</span>, center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb22-93">                cbar<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, cbar_kws<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'label'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species factor value (loading)'</span>},</span>
<span id="cb22-94">                linewidths<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb22-95">    plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Top </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(top_5_components)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Components: Species Patterns (Optimal Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>)</span>
<span id="cb22-96">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Individual'</span>)</span>
<span id="cb22-97">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component'</span>)</span>
<span id="cb22-98">    plt.xticks(rotation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb22-99">    </span>
<span id="cb22-100">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save individual plot in main results directory</span></span>
<span id="cb22-101">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb22-102">        plot_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"plot_03_species_heatmap_optimal_rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.png"</span>)</span>
<span id="cb22-103">        plt.savefig(plot_file, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>)</span>
<span id="cb22-104">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Species patterns heatmap saved to: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>plot_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb22-105">    </span>
<span id="cb22-106">    plt.show()</span>
<span id="cb22-107"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb22-108">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Could not load data for optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> optimal_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'unknown'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-15-Data-Exploration---E5-Timeseries-Multi-species-Multi-omics-Using-workflow-stdm/13.00-multiomics-stdm_files/figure-gfm/plot-species-heatmap-9.png" width="1536"></p>
<div class="sourceCode" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb23-1"></span>
<span id="cb23-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Suppress output</span></span>
<span id="cb23-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span></code></pre></div>
</section>
<section id="individual-plot-4-temporal-trajectories" class="level2">
<h2 class="anchored" data-anchor-id="individual-plot-4-temporal-trajectories">4.6 Individual Plot 4: Temporal Trajectories</h2>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb24-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb24-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib</span>
<span id="cb24-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb24-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb24-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb24-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb24-8"></span>
<span id="cb24-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up plotting</span></span>
<span id="cb24-10">matplotlib.use(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Agg'</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use non-interactive backend</span></span>
<span id="cb24-11">plt.ioff()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Turn off interactive mode</span></span>
<span id="cb24-12"></span>
<span id="cb24-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get output directory from R environment</span></span>
<span id="cb24-14">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.output_dir</span>
<span id="cb24-15"></span>
<span id="cb24-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for main results directory</span></span>
<span id="cb24-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>():</span>
<span id="cb24-18">    main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span>]</span>
<span id="cb24-19"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb24-20">    main_result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb24-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_result_dirs:</span>
<span id="cb24-22">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(main_result_dirs)</span>
<span id="cb24-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb24-24">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb24-25"></span>
<span id="cb24-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the optimal rank from the rank selection summary</span></span>
<span id="cb24-27"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb24-28">    summary_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_selection_summary.json"</span>)</span>
<span id="cb24-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(summary_file):</span>
<span id="cb24-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(summary_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb24-31">            rank_summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb24-32">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rank_summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'suggested_rank'</span>]</span>
<span id="cb24-33">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (from rank selection analysis)"</span>)</span>
<span id="cb24-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb24-35">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No rank selection summary found! Cannot determine optimal rank."</span>)</span>
<span id="cb24-36">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb24-37">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb24-38"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb24-39">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No main results directory found!"</span>)</span>
<span id="cb24-40">    optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb24-41"></span>
<span id="cb24-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for the optimal rank data in rank_comparison directory</span></span>
<span id="cb24-43">latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb24-44"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> optimal_rank:</span>
<span id="cb24-45">    comparison_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_comparison"</span>)</span>
<span id="cb24-46">    optimal_rank_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(comparison_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb24-47">    </span>
<span id="cb24-48">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(optimal_rank_dir):</span>
<span id="cb24-49">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the timestamped results within the rank directory</span></span>
<span id="cb24-50">        result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(optimal_rank_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb24-51">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result_dirs:</span>
<span id="cb24-52">            latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(result_dirs)</span>
<span id="cb24-53">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> data from: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>latest_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb24-54">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb24-55">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"No timestamped results found in rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory!"</span>)</span>
<span id="cb24-56">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb24-57">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory not found!"</span>)</span>
<span id="cb24-58"></span>
<span id="cb24-59"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> latest_dir:</span>
<span id="cb24-60">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load data</span></span>
<span id="cb24-61">    gene_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_factors.npy"</span>))</span>
<span id="cb24-62">    species_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species_factors.npy"</span>))</span>
<span id="cb24-63">    time_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time_factors.npy"</span>))</span>
<span id="cb24-64"></span>
<span id="cb24-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the transformed data to get timepoint names</span></span>
<span id="cb24-66">    data_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vst_counts_matrix_long_format.csv"</span>)</span>
<span id="cb24-67">    df_long <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(data_file)</span>
<span id="cb24-68">    timepoint_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(df_long[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'timepoint'</span>].unique())</span>
<span id="cb24-69"></span>
<span id="cb24-70">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate component strengths and get top 5</span></span>
<span id="cb24-71">    component_strengths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb24-72">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(gene_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]):</span>
<span id="cb24-73">        gene_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(gene_factors[:, i])</span>
<span id="cb24-74">        species_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(species_factors[:, i])</span>
<span id="cb24-75">        time_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(time_factors[:, i])</span>
<span id="cb24-76">        total_strength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> species_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> time_norm</span>
<span id="cb24-77">        component_strengths.append(total_strength)</span>
<span id="cb24-78"></span>
<span id="cb24-79">    sorted_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argsort(component_strengths)[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb24-80">    top_5_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sorted_components[:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, optimal_rank)]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use min to handle ranks &lt; 5</span></span>
<span id="cb24-81"></span>
<span id="cb24-82">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create line plot</span></span>
<span id="cb24-83">    plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb24-84">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, comp_idx <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(top_5_components):</span>
<span id="cb24-85">        plt.plot(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(timepoint_names) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), </span>
<span id="cb24-86">                time_factors[:, comp_idx], </span>
<span id="cb24-87">                marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Component </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>comp_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb24-88"></span>
<span id="cb24-89">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Timepoint'</span>)</span>
<span id="cb24-90">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Factor Value'</span>)</span>
<span id="cb24-91">    plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Temporal Trajectories (Top </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(top_5_components)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Components, Optimal Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>)</span>
<span id="cb24-92">    plt.xticks(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(timepoint_names) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), timepoint_names)</span>
<span id="cb24-93">    plt.legend()</span>
<span id="cb24-94">    plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb24-95">    </span>
<span id="cb24-96">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save individual plot in main results directory</span></span>
<span id="cb24-97">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb24-98">        plot_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"plot_04_temporal_trajectories_optimal_rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.png"</span>)</span>
<span id="cb24-99">        plt.savefig(plot_file, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>)</span>
<span id="cb24-100">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Temporal trajectories plot saved to: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>plot_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb24-101">    </span>
<span id="cb24-102">    plt.show()</span>
<span id="cb24-103"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb24-104">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Could not load data for optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> optimal_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'unknown'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-15-Data-Exploration---E5-Timeseries-Multi-species-Multi-omics-Using-workflow-stdm/13.00-multiomics-stdm_files/figure-gfm/plot-temporal-trajectories-11.png" width="1152"></p>
<div class="sourceCode" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb25-1"></span>
<span id="cb25-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Suppress output</span></span>
<span id="cb25-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span></code></pre></div>
</section>
<section id="individual-plot-5-species-clustering-pca" class="level2">
<h2 class="anchored" data-anchor-id="individual-plot-5-species-clustering-pca">4.7 Individual Plot 5: Species Clustering PCA</h2>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb26-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb26-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib</span>
<span id="cb26-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb26-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.cluster <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> KMeans</span>
<span id="cb26-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.decomposition <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> PCA</span>
<span id="cb26-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb26-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb26-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb26-10"></span>
<span id="cb26-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up plotting</span></span>
<span id="cb26-12">matplotlib.use(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Agg'</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use non-interactive backend</span></span>
<span id="cb26-13">plt.ioff()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Turn off interactive mode</span></span>
<span id="cb26-14"></span>
<span id="cb26-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get output directory from R environment</span></span>
<span id="cb26-16">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.output_dir</span>
<span id="cb26-17"></span>
<span id="cb26-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for main results directory</span></span>
<span id="cb26-19"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>():</span>
<span id="cb26-20">    main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span>]</span>
<span id="cb26-21"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb26-22">    main_result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb26-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_result_dirs:</span>
<span id="cb26-24">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(main_result_dirs)</span>
<span id="cb26-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb26-26">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb26-27"></span>
<span id="cb26-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the optimal rank from the rank selection summary</span></span>
<span id="cb26-29"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb26-30">    summary_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_selection_summary.json"</span>)</span>
<span id="cb26-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(summary_file):</span>
<span id="cb26-32">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(summary_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb26-33">            rank_summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb26-34">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rank_summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'suggested_rank'</span>]</span>
<span id="cb26-35">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (from rank selection analysis)"</span>)</span>
<span id="cb26-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb26-37">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No rank selection summary found! Cannot determine optimal rank."</span>)</span>
<span id="cb26-38">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb26-39">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb26-40"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb26-41">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No main results directory found!"</span>)</span>
<span id="cb26-42">    optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb26-43"></span>
<span id="cb26-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for the optimal rank data in rank_comparison directory</span></span>
<span id="cb26-45">latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb26-46"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> optimal_rank:</span>
<span id="cb26-47">    comparison_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_comparison"</span>)</span>
<span id="cb26-48">    optimal_rank_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(comparison_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb26-49">    </span>
<span id="cb26-50">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(optimal_rank_dir):</span>
<span id="cb26-51">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the timestamped results within the rank directory</span></span>
<span id="cb26-52">        result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(optimal_rank_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb26-53">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result_dirs:</span>
<span id="cb26-54">            latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(result_dirs)</span>
<span id="cb26-55">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> data from: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>latest_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb26-56">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb26-57">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"No timestamped results found in rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory!"</span>)</span>
<span id="cb26-58">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb26-59">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory not found!"</span>)</span>
<span id="cb26-60"></span>
<span id="cb26-61"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> latest_dir:</span>
<span id="cb26-62">    </span>
<span id="cb26-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load data</span></span>
<span id="cb26-64">    gene_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_factors.npy"</span>))</span>
<span id="cb26-65">    species_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species_factors.npy"</span>))</span>
<span id="cb26-66">    time_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time_factors.npy"</span>))</span>
<span id="cb26-67">    </span>
<span id="cb26-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the transformed data to get species names</span></span>
<span id="cb26-69">    data_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vst_counts_matrix_long_format.csv"</span>)</span>
<span id="cb26-70">    df_long <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(data_file)</span>
<span id="cb26-71">    species_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(df_long[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'species'</span>].unique())</span>
<span id="cb26-72">    </span>
<span id="cb26-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create species type labels (same as comprehensive visualization)</span></span>
<span id="cb26-74">    species_types <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [name.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> name <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> species_names]</span>
<span id="cb26-75">    unique_types <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(species_types))</span>
<span id="cb26-76">    </span>
<span id="cb26-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate component strengths (same as comprehensive visualization)</span></span>
<span id="cb26-78">    component_strengths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb26-79">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(gene_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]):</span>
<span id="cb26-80">        gene_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(gene_factors[:, i])</span>
<span id="cb26-81">        species_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(species_factors[:, i])</span>
<span id="cb26-82">        time_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(time_factors[:, i])</span>
<span id="cb26-83">        total_strength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> species_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> time_norm</span>
<span id="cb26-84">        component_strengths.append(total_strength)</span>
<span id="cb26-85">    </span>
<span id="cb26-86">    sorted_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argsort(component_strengths)[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb26-87">    </span>
<span id="cb26-88">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the same logic as comprehensive visualization</span></span>
<span id="cb26-89">    rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This is the actual rank (number of components)</span></span>
<span id="cb26-90">    </span>
<span id="cb26-91">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:</span>
<span id="cb26-92">        n_pca_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(rank, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span>
<span id="cb26-93">        species_subset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> species_factors[:, sorted_components[:n_pca_components]]</span>
<span id="cb26-94">        </span>
<span id="cb26-95">        pca <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PCA(n_components<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb26-96">        species_pca <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pca.fit_transform(species_subset)</span>
<span id="cb26-97">        </span>
<span id="cb26-98">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create plot (same styling as comprehensive visualization)</span></span>
<span id="cb26-99">        plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))</span>
<span id="cb26-100">        </span>
<span id="cb26-101">        colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'blue'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'orange'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'purple'</span>][:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(unique_types)]</span>
<span id="cb26-102">        species_type_map <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {stype: i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, stype <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(unique_types)}</span>
<span id="cb26-103">        </span>
<span id="cb26-104">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, (x, y) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(species_pca):</span>
<span id="cb26-105">            stype <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> species_types[i]</span>
<span id="cb26-106">            plt.scatter(x, y, c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>colors[species_type_map[stype]], </span>
<span id="cb26-107">                       alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, </span>
<span id="cb26-108">                       label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>stype <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> species_types.index(stype) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb26-109">        </span>
<span id="cb26-110">        plt.xlabel(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'PC1 (</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pca<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>explained_variance_ratio_[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.1%}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>)</span>
<span id="cb26-111">        plt.ylabel(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'PC2 (</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>pca<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>explained_variance_ratio_[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.1%}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>)</span>
<span id="cb26-112">        plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Species PCA (Optimal Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>)</span>
<span id="cb26-113">        plt.legend()</span>
<span id="cb26-114">        plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb26-115">        </span>
<span id="cb26-116">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save to main results directory for consistency</span></span>
<span id="cb26-117">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb26-118">            plot_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"plot_05_species_clustering_optimal_rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.png"</span>)</span>
<span id="cb26-119">            plt.savefig(plot_file, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>)</span>
<span id="cb26-120">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Species clustering PCA plot saved to: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>plot_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb26-121">        </span>
<span id="cb26-122">        plt.show()</span>
<span id="cb26-123">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb26-124">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> has insufficient components for PCA visualization"</span>)</span>
<span id="cb26-125"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb26-126">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Could not load data for optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> optimal_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'unknown'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-15-Data-Exploration---E5-Timeseries-Multi-species-Multi-omics-Using-workflow-stdm/13.00-multiomics-stdm_files/figure-gfm/plot-species-clustering-13.png" width="960"></p>
<div class="sourceCode" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb27-1"></span>
<span id="cb27-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Suppress output</span></span>
<span id="cb27-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span></code></pre></div>
</section>
<section id="individual-plot-6-gene-factor-distribution" class="level2">
<h2 class="anchored" data-anchor-id="individual-plot-6-gene-factor-distribution">4.8 Individual Plot 6: Gene Factor Distribution</h2>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb28-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib</span>
<span id="cb28-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb28-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb28-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb28-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb28-7"></span>
<span id="cb28-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up plotting</span></span>
<span id="cb28-9">matplotlib.use(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Agg'</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use non-interactive backend</span></span>
<span id="cb28-10">plt.ioff()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Turn off interactive mode</span></span>
<span id="cb28-11"></span>
<span id="cb28-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get output directory from R environment</span></span>
<span id="cb28-13">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.output_dir</span>
<span id="cb28-14"></span>
<span id="cb28-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for main results directory</span></span>
<span id="cb28-16"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>():</span>
<span id="cb28-17">    main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span>]</span>
<span id="cb28-18"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb28-19">    main_result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb28-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_result_dirs:</span>
<span id="cb28-21">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(main_result_dirs)</span>
<span id="cb28-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb28-23">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb28-24"></span>
<span id="cb28-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the optimal rank from the rank selection summary</span></span>
<span id="cb28-26"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb28-27">    summary_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_selection_summary.json"</span>)</span>
<span id="cb28-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(summary_file):</span>
<span id="cb28-29">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(summary_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb28-30">            rank_summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb28-31">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rank_summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'suggested_rank'</span>]</span>
<span id="cb28-32">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (from rank selection analysis)"</span>)</span>
<span id="cb28-33">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb28-34">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No rank selection summary found! Cannot determine optimal rank."</span>)</span>
<span id="cb28-35">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb28-36">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb28-37"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb28-38">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No main results directory found!"</span>)</span>
<span id="cb28-39">    optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb28-40"></span>
<span id="cb28-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for the optimal rank data in rank_comparison directory</span></span>
<span id="cb28-42">latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb28-43"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> optimal_rank:</span>
<span id="cb28-44">    comparison_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_comparison"</span>)</span>
<span id="cb28-45">    optimal_rank_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(comparison_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb28-46">    </span>
<span id="cb28-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(optimal_rank_dir):</span>
<span id="cb28-48">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the timestamped results within the rank directory</span></span>
<span id="cb28-49">        result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(optimal_rank_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb28-50">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result_dirs:</span>
<span id="cb28-51">            latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(result_dirs)</span>
<span id="cb28-52">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> data from: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>latest_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb28-53">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb28-54">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"No timestamped results found in rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory!"</span>)</span>
<span id="cb28-55">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb28-56">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory not found!"</span>)</span>
<span id="cb28-57"></span>
<span id="cb28-58"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> latest_dir:</span>
<span id="cb28-59">    </span>
<span id="cb28-60">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load data</span></span>
<span id="cb28-61">    gene_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_factors.npy"</span>))</span>
<span id="cb28-62">    </span>
<span id="cb28-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate gene variances</span></span>
<span id="cb28-64">    gene_variances <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.var(gene_factors, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb28-65">    </span>
<span id="cb28-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create histogram</span></span>
<span id="cb28-67">    plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb28-68">    plt.hist(gene_variances, bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, edgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>)</span>
<span id="cb28-69">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Gene Factor Variance'</span>)</span>
<span id="cb28-70">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Number of Genes'</span>)</span>
<span id="cb28-71">    plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Distribution of Gene Factor Variability (Optimal Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'</span>)</span>
<span id="cb28-72">    plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb28-73">    </span>
<span id="cb28-74">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add statistics</span></span>
<span id="cb28-75">    plt.axvline(np.mean(gene_variances), color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>, </span>
<span id="cb28-76">               label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Mean: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>mean(gene_variances)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb28-77">    plt.axvline(np.median(gene_variances), color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'orange'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>, </span>
<span id="cb28-78">               label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Median: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>median(gene_variances)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb28-79">    plt.legend()</span>
<span id="cb28-80">    </span>
<span id="cb28-81">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save individual plot in main results directory</span></span>
<span id="cb28-82">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb28-83">        plot_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"plot_06_gene_distribution_optimal_rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.png"</span>)</span>
<span id="cb28-84">        plt.savefig(plot_file, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>)</span>
<span id="cb28-85">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Gene factor distribution plot saved to: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>plot_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb28-86">    </span>
<span id="cb28-87">    plt.show()</span>
<span id="cb28-88"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb28-89">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Could not load data for optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> optimal_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'unknown'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-15-Data-Exploration---E5-Timeseries-Multi-species-Multi-omics-Using-workflow-stdm/13.00-multiomics-stdm_files/figure-gfm/plot-gene-distribution-15.png" width="960"></p>
<div class="sourceCode" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb29-1"></span>
<span id="cb29-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Suppress output</span></span>
<span id="cb29-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span></code></pre></div>
</section>
<section id="individual-plot-7-component-correlations" class="level2">
<h2 class="anchored" data-anchor-id="individual-plot-7-component-correlations">4.9 Individual Plot 7: Component Correlations</h2>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb30-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib</span>
<span id="cb30-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb30-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb30-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb30-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb30-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb30-8"></span>
<span id="cb30-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up plotting</span></span>
<span id="cb30-10">matplotlib.use(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Agg'</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use non-interactive backend</span></span>
<span id="cb30-11">plt.ioff()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Turn off interactive mode</span></span>
<span id="cb30-12"></span>
<span id="cb30-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get output directory from R environment</span></span>
<span id="cb30-14">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.output_dir</span>
<span id="cb30-15"></span>
<span id="cb30-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for main results directory</span></span>
<span id="cb30-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>():</span>
<span id="cb30-18">    main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span>]</span>
<span id="cb30-19"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb30-20">    main_result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb30-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_result_dirs:</span>
<span id="cb30-22">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(main_result_dirs)</span>
<span id="cb30-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb30-24">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb30-25"></span>
<span id="cb30-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the optimal rank from the rank selection summary</span></span>
<span id="cb30-27"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb30-28">    summary_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_selection_summary.json"</span>)</span>
<span id="cb30-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(summary_file):</span>
<span id="cb30-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(summary_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb30-31">            rank_summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb30-32">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rank_summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'suggested_rank'</span>]</span>
<span id="cb30-33">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (from rank selection analysis)"</span>)</span>
<span id="cb30-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb30-35">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No rank selection summary found! Cannot determine optimal rank."</span>)</span>
<span id="cb30-36">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb30-37">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb30-38"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb30-39">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No main results directory found!"</span>)</span>
<span id="cb30-40">    optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb30-41"></span>
<span id="cb30-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for the optimal rank data in rank_comparison directory</span></span>
<span id="cb30-43">latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb30-44"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> optimal_rank:</span>
<span id="cb30-45">    comparison_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_comparison"</span>)</span>
<span id="cb30-46">    optimal_rank_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(comparison_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-47">    </span>
<span id="cb30-48">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(optimal_rank_dir):</span>
<span id="cb30-49">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the timestamped results within the rank directory</span></span>
<span id="cb30-50">        result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(optimal_rank_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb30-51">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result_dirs:</span>
<span id="cb30-52">            latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(result_dirs)</span>
<span id="cb30-53">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> data from: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>latest_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-54">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb30-55">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"No timestamped results found in rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory!"</span>)</span>
<span id="cb30-56">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb30-57">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory not found!"</span>)</span>
<span id="cb30-58"></span>
<span id="cb30-59"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> latest_dir:</span>
<span id="cb30-60">    </span>
<span id="cb30-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load data</span></span>
<span id="cb30-62">    gene_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_factors.npy"</span>))</span>
<span id="cb30-63">    </span>
<span id="cb30-64">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate correlations between components across genes</span></span>
<span id="cb30-65">    gene_corr <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.corrcoef(gene_factors.T)</span>
<span id="cb30-66">    </span>
<span id="cb30-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create heatmap</span></span>
<span id="cb30-68">    plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb30-69">    sns.heatmap(gene_corr, cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RdBu_r'</span>, center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, </span>
<span id="cb30-70">                xticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, gene_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb30-71">                yticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, gene_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),</span>
<span id="cb30-72">                square<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb30-73">                cbar_kws<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'label'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Correlation coefficient'</span>})</span>
<span id="cb30-74">    plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Component Correlations (Gene Space) - Optimal Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb30-75">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component'</span>)</span>
<span id="cb30-76">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component'</span>)</span>
<span id="cb30-77">    </span>
<span id="cb30-78">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save individual plot in main results directory</span></span>
<span id="cb30-79">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb30-80">        plot_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"plot_07_component_correlations_optimal_rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.png"</span>)</span>
<span id="cb30-81">        plt.savefig(plot_file, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>)</span>
<span id="cb30-82">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Component correlations plot saved to: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>plot_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-83">    </span>
<span id="cb30-84">    plt.show()</span>
<span id="cb30-85"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb30-86">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Could not load data for optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> optimal_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'unknown'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-15-Data-Exploration---E5-Timeseries-Multi-species-Multi-omics-Using-workflow-stdm/13.00-multiomics-stdm_files/figure-gfm/plot-component-correlations-17.png" width="1152"></p>
<div class="sourceCode" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb31-1"></span>
<span id="cb31-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Suppress output</span></span>
<span id="cb31-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span></code></pre></div>
</section>
<section id="individual-plot-8-species-type-comparison" class="level2">
<h2 class="anchored" data-anchor-id="individual-plot-8-species-type-comparison">4.10 Individual Plot 8: Species Type Comparison</h2>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb32-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb32-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib</span>
<span id="cb32-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb32-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb32-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb32-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb32-8"></span>
<span id="cb32-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up plotting</span></span>
<span id="cb32-10">matplotlib.use(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Agg'</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use non-interactive backend</span></span>
<span id="cb32-11">plt.ioff()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Turn off interactive mode</span></span>
<span id="cb32-12"></span>
<span id="cb32-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get output directory from R environment</span></span>
<span id="cb32-14">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.output_dir</span>
<span id="cb32-15"></span>
<span id="cb32-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for main results directory</span></span>
<span id="cb32-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>():</span>
<span id="cb32-18">    main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span>]</span>
<span id="cb32-19"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb32-20">    main_result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb32-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_result_dirs:</span>
<span id="cb32-22">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(main_result_dirs)</span>
<span id="cb32-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb32-24">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb32-25"></span>
<span id="cb32-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the optimal rank from the rank selection summary</span></span>
<span id="cb32-27"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb32-28">    summary_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_selection_summary.json"</span>)</span>
<span id="cb32-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(summary_file):</span>
<span id="cb32-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(summary_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb32-31">            rank_summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb32-32">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rank_summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'suggested_rank'</span>]</span>
<span id="cb32-33">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (from rank selection analysis)"</span>)</span>
<span id="cb32-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb32-35">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No rank selection summary found! Cannot determine optimal rank."</span>)</span>
<span id="cb32-36">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb32-37">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb32-38"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb32-39">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No main results directory found!"</span>)</span>
<span id="cb32-40">    optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb32-41"></span>
<span id="cb32-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for the optimal rank data in rank_comparison directory</span></span>
<span id="cb32-43">latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb32-44"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> optimal_rank:</span>
<span id="cb32-45">    comparison_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_comparison"</span>)</span>
<span id="cb32-46">    optimal_rank_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(comparison_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb32-47">    </span>
<span id="cb32-48">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(optimal_rank_dir):</span>
<span id="cb32-49">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the timestamped results within the rank directory</span></span>
<span id="cb32-50">        result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(optimal_rank_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb32-51">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result_dirs:</span>
<span id="cb32-52">            latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(result_dirs)</span>
<span id="cb32-53">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> data from: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>latest_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb32-54">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb32-55">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"No timestamped results found in rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory!"</span>)</span>
<span id="cb32-56">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb32-57">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory not found!"</span>)</span>
<span id="cb32-58"></span>
<span id="cb32-59"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> latest_dir:</span>
<span id="cb32-60">    </span>
<span id="cb32-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load data</span></span>
<span id="cb32-62">    gene_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_factors.npy"</span>))</span>
<span id="cb32-63">    species_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species_factors.npy"</span>))</span>
<span id="cb32-64">    time_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time_factors.npy"</span>))</span>
<span id="cb32-65">    </span>
<span id="cb32-66">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the transformed data to get species names</span></span>
<span id="cb32-67">    data_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vst_counts_matrix_long_format.csv"</span>)</span>
<span id="cb32-68">    df_long <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(data_file)</span>
<span id="cb32-69">    species_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(df_long[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'species'</span>].unique())</span>
<span id="cb32-70">    </span>
<span id="cb32-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate component strengths and get top 5</span></span>
<span id="cb32-72">    component_strengths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb32-73">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(gene_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]):</span>
<span id="cb32-74">        gene_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(gene_factors[:, i])</span>
<span id="cb32-75">        species_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(species_factors[:, i])</span>
<span id="cb32-76">        time_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(time_factors[:, i])</span>
<span id="cb32-77">        total_strength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> species_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> time_norm</span>
<span id="cb32-78">        component_strengths.append(total_strength)</span>
<span id="cb32-79">    </span>
<span id="cb32-80">    sorted_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argsort(component_strengths)[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb32-81">    top_5_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sorted_components[:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, optimal_rank)]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use min to handle ranks &lt; 5</span></span>
<span id="cb32-82">    </span>
<span id="cb32-83">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Group species by type</span></span>
<span id="cb32-84">    species_by_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb32-85">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, name <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(species_names):</span>
<span id="cb32-86">        stype <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> name.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb32-87">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> stype <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> species_by_type:</span>
<span id="cb32-88">            species_by_type[stype] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb32-89">        species_by_type[stype].append(i)</span>
<span id="cb32-90">    </span>
<span id="cb32-91">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate mean factor values per species type for top components</span></span>
<span id="cb32-92">    type_means <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb32-93">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> stype, indices <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> species_by_type.items():</span>
<span id="cb32-94">        type_means[stype] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(species_factors[indices, :], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb32-95">    </span>
<span id="cb32-96">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create bar plot</span></span>
<span id="cb32-97">    plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb32-98">    x_pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.arange(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(top_5_components))</span>
<span id="cb32-99">    width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(type_means)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjust width based on number of species types</span></span>
<span id="cb32-100">    </span>
<span id="cb32-101">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, (stype, means) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(type_means.items()):</span>
<span id="cb32-102">        plt.bar(x_pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> width, means[top_5_components], </span>
<span id="cb32-103">               width, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>stype, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>)</span>
<span id="cb32-104">    </span>
<span id="cb32-105">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component'</span>)</span>
<span id="cb32-106">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mean Factor Value'</span>)</span>
<span id="cb32-107">    plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Species Type Comparison (Top </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(top_5_components)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Components) - Optimal Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb32-108">    plt.xticks(x_pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> width <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(type_means) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, </span>
<span id="cb32-109">               [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Comp </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> top_5_components])</span>
<span id="cb32-110">    plt.legend()</span>
<span id="cb32-111">    plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb32-112">    </span>
<span id="cb32-113">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save individual plot in main results directory</span></span>
<span id="cb32-114">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb32-115">        plot_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"plot_08_species_comparison_optimal_rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.png"</span>)</span>
<span id="cb32-116">        plt.savefig(plot_file, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>)</span>
<span id="cb32-117">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Species type comparison plot saved to: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>plot_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb32-118">    </span>
<span id="cb32-119">    plt.show()</span>
<span id="cb32-120"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb32-121">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Could not load data for optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> optimal_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'unknown'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-15-Data-Exploration---E5-Timeseries-Multi-species-Multi-omics-Using-workflow-stdm/13.00-multiomics-stdm_files/figure-gfm/plot-species-comparison-19.png" width="1152"></p>
<div class="sourceCode" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb33-1"></span>
<span id="cb33-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Suppress output</span></span>
<span id="cb33-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span></code></pre></div>
</section>
<section id="individual-plot-9-temporal-variance-per-component" class="level2">
<h2 class="anchored" data-anchor-id="individual-plot-9-temporal-variance-per-component">4.11 Individual Plot 9: Temporal Variance per Component</h2>
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb34-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib</span>
<span id="cb34-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb34-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb34-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb34-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb34-7"></span>
<span id="cb34-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up plotting</span></span>
<span id="cb34-9">matplotlib.use(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Agg'</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use non-interactive backend</span></span>
<span id="cb34-10">plt.ioff()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Turn off interactive mode</span></span>
<span id="cb34-11"></span>
<span id="cb34-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get output directory from R environment</span></span>
<span id="cb34-13">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.output_dir</span>
<span id="cb34-14"></span>
<span id="cb34-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for main results directory</span></span>
<span id="cb34-16"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>():</span>
<span id="cb34-17">    main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span>]</span>
<span id="cb34-18"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb34-19">    main_result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb34-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_result_dirs:</span>
<span id="cb34-21">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(main_result_dirs)</span>
<span id="cb34-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb34-23">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb34-24"></span>
<span id="cb34-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the optimal rank from the rank selection summary</span></span>
<span id="cb34-26"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb34-27">    summary_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_selection_summary.json"</span>)</span>
<span id="cb34-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(summary_file):</span>
<span id="cb34-29">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(summary_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb34-30">            rank_summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb34-31">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rank_summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'suggested_rank'</span>]</span>
<span id="cb34-32">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (from rank selection analysis)"</span>)</span>
<span id="cb34-33">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb34-34">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No rank selection summary found! Cannot determine optimal rank."</span>)</span>
<span id="cb34-35">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb34-36">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb34-37"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb34-38">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No main results directory found!"</span>)</span>
<span id="cb34-39">    optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb34-40"></span>
<span id="cb34-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for the optimal rank data in rank_comparison directory</span></span>
<span id="cb34-42">latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb34-43"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> optimal_rank:</span>
<span id="cb34-44">    comparison_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_comparison"</span>)</span>
<span id="cb34-45">    optimal_rank_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(comparison_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb34-46">    </span>
<span id="cb34-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(optimal_rank_dir):</span>
<span id="cb34-48">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the timestamped results within the rank directory</span></span>
<span id="cb34-49">        result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(optimal_rank_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb34-50">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result_dirs:</span>
<span id="cb34-51">            latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(result_dirs)</span>
<span id="cb34-52">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> data from: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>latest_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb34-53">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb34-54">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"No timestamped results found in rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory!"</span>)</span>
<span id="cb34-55">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb34-56">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory not found!"</span>)</span>
<span id="cb34-57"></span>
<span id="cb34-58"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> latest_dir:</span>
<span id="cb34-59">    </span>
<span id="cb34-60">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load data</span></span>
<span id="cb34-61">    time_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time_factors.npy"</span>))</span>
<span id="cb34-62">    </span>
<span id="cb34-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate temporal variances</span></span>
<span id="cb34-64">    time_variances <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.var(time_factors, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb34-65">    sorted_time_vars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argsort(time_variances)[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb34-66">    </span>
<span id="cb34-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create bar plot</span></span>
<span id="cb34-68">    plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb34-69">    plt.bar(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(time_variances) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), </span>
<span id="cb34-70">           [time_variances[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sorted_time_vars])</span>
<span id="cb34-71">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component (ranked by temporal variance)'</span>)</span>
<span id="cb34-72">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Temporal Variance'</span>)</span>
<span id="cb34-73">    plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Components by Temporal Variability - Optimal Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb34-74">    </span>
<span id="cb34-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set x-ticks to show all components if &lt;= 10, otherwise show every 2nd or 5th</span></span>
<span id="cb34-76">    n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(time_variances)</span>
<span id="cb34-77">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>:</span>
<span id="cb34-78">        plt.xticks(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb34-79">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>:</span>
<span id="cb34-80">        plt.xticks(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb34-81">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb34-82">        plt.xticks(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb34-83">    </span>
<span id="cb34-84">    plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb34-85">    </span>
<span id="cb34-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save individual plot in main results directory</span></span>
<span id="cb34-87">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb34-88">        plot_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"plot_09_temporal_variance_optimal_rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.png"</span>)</span>
<span id="cb34-89">        plt.savefig(plot_file, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>)</span>
<span id="cb34-90">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Temporal variance plot saved to: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>plot_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb34-91">    </span>
<span id="cb34-92">    plt.show()</span>
<span id="cb34-93"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb34-94">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Could not load data for optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> optimal_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'unknown'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-15-Data-Exploration---E5-Timeseries-Multi-species-Multi-omics-Using-workflow-stdm/13.00-multiomics-stdm_files/figure-gfm/plot-temporal-variance-21.png" width="1152"></p>
<div class="sourceCode" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb35-1"></span>
<span id="cb35-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Suppress output</span></span>
<span id="cb35-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span></code></pre></div>
</section>
<section id="individual-plot-10-species-variance-per-component" class="level2">
<h2 class="anchored" data-anchor-id="individual-plot-10-species-variance-per-component">4.12 Individual Plot 10: Species Variance per Component</h2>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb36-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib</span>
<span id="cb36-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb36-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb36-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb36-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb36-7"></span>
<span id="cb36-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up plotting</span></span>
<span id="cb36-9">matplotlib.use(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Agg'</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use non-interactive backend</span></span>
<span id="cb36-10">plt.ioff()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Turn off interactive mode</span></span>
<span id="cb36-11"></span>
<span id="cb36-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get output directory from R environment</span></span>
<span id="cb36-13">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.output_dir</span>
<span id="cb36-14"></span>
<span id="cb36-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for main results directory</span></span>
<span id="cb36-16"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>():</span>
<span id="cb36-17">    main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span>]</span>
<span id="cb36-18"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb36-19">    main_result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb36-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_result_dirs:</span>
<span id="cb36-21">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(main_result_dirs)</span>
<span id="cb36-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb36-23">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb36-24"></span>
<span id="cb36-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the optimal rank from the rank selection summary</span></span>
<span id="cb36-26"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb36-27">    summary_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_selection_summary.json"</span>)</span>
<span id="cb36-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(summary_file):</span>
<span id="cb36-29">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(summary_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb36-30">            rank_summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb36-31">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rank_summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'suggested_rank'</span>]</span>
<span id="cb36-32">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (from rank selection analysis)"</span>)</span>
<span id="cb36-33">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb36-34">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No rank selection summary found! Cannot determine optimal rank."</span>)</span>
<span id="cb36-35">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb36-36">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb36-37"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb36-38">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No main results directory found!"</span>)</span>
<span id="cb36-39">    optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb36-40"></span>
<span id="cb36-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for the optimal rank data in rank_comparison directory</span></span>
<span id="cb36-42">latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb36-43"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> optimal_rank:</span>
<span id="cb36-44">    comparison_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_comparison"</span>)</span>
<span id="cb36-45">    optimal_rank_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(comparison_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb36-46">    </span>
<span id="cb36-47">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(optimal_rank_dir):</span>
<span id="cb36-48">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the timestamped results within the rank directory</span></span>
<span id="cb36-49">        result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(optimal_rank_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb36-50">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result_dirs:</span>
<span id="cb36-51">            latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(result_dirs)</span>
<span id="cb36-52">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> data from: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>latest_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb36-53">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb36-54">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"No timestamped results found in rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory!"</span>)</span>
<span id="cb36-55">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb36-56">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory not found!"</span>)</span>
<span id="cb36-57"></span>
<span id="cb36-58"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> latest_dir:</span>
<span id="cb36-59">    </span>
<span id="cb36-60">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load data</span></span>
<span id="cb36-61">    species_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species_factors.npy"</span>))</span>
<span id="cb36-62">    </span>
<span id="cb36-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate species variances</span></span>
<span id="cb36-64">    species_variances <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.var(species_factors, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb36-65">    sorted_species_vars <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argsort(species_variances)[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb36-66">    </span>
<span id="cb36-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create bar plot</span></span>
<span id="cb36-68">    plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb36-69">    plt.bar(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(species_variances) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), </span>
<span id="cb36-70">           [species_variances[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sorted_species_vars])</span>
<span id="cb36-71">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component (ranked by species variance)'</span>)</span>
<span id="cb36-72">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species Variance'</span>)</span>
<span id="cb36-73">    plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Components by Species Variability - Optimal Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb36-74">    </span>
<span id="cb36-75">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set x-ticks to show all components if &lt;= 10, otherwise show every 2nd or 5th</span></span>
<span id="cb36-76">    n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(species_variances)</span>
<span id="cb36-77">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>:</span>
<span id="cb36-78">        plt.xticks(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))</span>
<span id="cb36-79">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>:</span>
<span id="cb36-80">        plt.xticks(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb36-81">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb36-82">        plt.xticks(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, n_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb36-83">    </span>
<span id="cb36-84">    plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb36-85">    </span>
<span id="cb36-86">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save individual plot in main results directory</span></span>
<span id="cb36-87">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb36-88">        plot_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"plot_10_species_variance_optimal_rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.png"</span>)</span>
<span id="cb36-89">        plt.savefig(plot_file, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>)</span>
<span id="cb36-90">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Species variance plot saved to: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>plot_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb36-91">    </span>
<span id="cb36-92">    plt.show()</span>
<span id="cb36-93"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb36-94">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Could not load data for optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> optimal_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'unknown'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-15-Data-Exploration---E5-Timeseries-Multi-species-Multi-omics-Using-workflow-stdm/13.00-multiomics-stdm_files/figure-gfm/plot-species-variance-23.png" width="1152"></p>
<div class="sourceCode" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb37-1"></span>
<span id="cb37-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Suppress output</span></span>
<span id="cb37-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span></code></pre></div>
</section>
<section id="individual-plot-11-top-genes-heatmap" class="level2">
<h2 class="anchored" data-anchor-id="individual-plot-11-top-genes-heatmap">4.13 Individual Plot 11: Top Genes Heatmap</h2>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb38-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb38-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib</span>
<span id="cb38-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb38-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb38-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb38-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb38-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb38-9"></span>
<span id="cb38-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up plotting</span></span>
<span id="cb38-11">matplotlib.use(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Agg'</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use non-interactive backend</span></span>
<span id="cb38-12">plt.ioff()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Turn off interactive mode</span></span>
<span id="cb38-13"></span>
<span id="cb38-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get output directory from R environment</span></span>
<span id="cb38-15">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.output_dir</span>
<span id="cb38-16"></span>
<span id="cb38-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for main results directory</span></span>
<span id="cb38-18"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>():</span>
<span id="cb38-19">    main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span>]</span>
<span id="cb38-20"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb38-21">    main_result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb38-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_result_dirs:</span>
<span id="cb38-23">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(main_result_dirs)</span>
<span id="cb38-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb38-25">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb38-26"></span>
<span id="cb38-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the optimal rank from the rank selection summary</span></span>
<span id="cb38-28"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb38-29">    summary_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_selection_summary.json"</span>)</span>
<span id="cb38-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(summary_file):</span>
<span id="cb38-31">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(summary_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb38-32">            rank_summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb38-33">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rank_summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'suggested_rank'</span>]</span>
<span id="cb38-34">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (from rank selection analysis)"</span>)</span>
<span id="cb38-35">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb38-36">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No rank selection summary found! Cannot determine optimal rank."</span>)</span>
<span id="cb38-37">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb38-38">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb38-39"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb38-40">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No main results directory found!"</span>)</span>
<span id="cb38-41">    optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb38-42"></span>
<span id="cb38-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for the optimal rank data in rank_comparison directory</span></span>
<span id="cb38-44">latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb38-45"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> optimal_rank:</span>
<span id="cb38-46">    comparison_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_comparison"</span>)</span>
<span id="cb38-47">    optimal_rank_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(comparison_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb38-48">    </span>
<span id="cb38-49">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(optimal_rank_dir):</span>
<span id="cb38-50">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the timestamped results within the rank directory</span></span>
<span id="cb38-51">        result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(optimal_rank_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb38-52">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result_dirs:</span>
<span id="cb38-53">            latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(result_dirs)</span>
<span id="cb38-54">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> data from: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>latest_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb38-55">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb38-56">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"No timestamped results found in rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory!"</span>)</span>
<span id="cb38-57">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb38-58">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory not found!"</span>)</span>
<span id="cb38-59"></span>
<span id="cb38-60"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> latest_dir:</span>
<span id="cb38-61">    </span>
<span id="cb38-62">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load data</span></span>
<span id="cb38-63">    gene_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_factors.npy"</span>))</span>
<span id="cb38-64">    species_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species_factors.npy"</span>))</span>
<span id="cb38-65">    time_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time_factors.npy"</span>))</span>
<span id="cb38-66">    </span>
<span id="cb38-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the transformed data to get actual gene names</span></span>
<span id="cb38-68">    data_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vst_counts_matrix_long_format.csv"</span>)</span>
<span id="cb38-69">    df_long <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(data_file)</span>
<span id="cb38-70">    gene_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(df_long[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene'</span>].unique())</span>
<span id="cb38-71">    </span>
<span id="cb38-72">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate component strengths and get top components</span></span>
<span id="cb38-73">    component_strengths <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb38-74">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(gene_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]):</span>
<span id="cb38-75">        gene_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(gene_factors[:, i])</span>
<span id="cb38-76">        species_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(species_factors[:, i])</span>
<span id="cb38-77">        time_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linalg.norm(time_factors[:, i])</span>
<span id="cb38-78">        total_strength <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> species_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> time_norm</span>
<span id="cb38-79">        component_strengths.append(total_strength)</span>
<span id="cb38-80">    </span>
<span id="cb38-81">    sorted_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argsort(component_strengths)[::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb38-82">    top_components <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sorted_components[:<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, optimal_rank)]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use min to handle ranks &lt; 5</span></span>
<span id="cb38-83">    </span>
<span id="cb38-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get top genes for each of the top components</span></span>
<span id="cb38-85">    n_top_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb38-86">    top_gene_indices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb38-87">    </span>
<span id="cb38-88">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> comp_idx <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> top_components:</span>
<span id="cb38-89">        top_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argsort(np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(gene_factors[:, comp_idx]))[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>n_top_genes:]</span>
<span id="cb38-90">        top_gene_indices.extend(top_genes)</span>
<span id="cb38-91">    </span>
<span id="cb38-92">    top_gene_indices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(top_gene_indices))  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove duplicates</span></span>
<span id="cb38-93">    top_gene_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_factors[top_gene_indices, :][:, top_components]</span>
<span id="cb38-94">    </span>
<span id="cb38-95">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get actual gene names for the selected indices</span></span>
<span id="cb38-96">    top_gene_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [gene_names[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> top_gene_indices]</span>
<span id="cb38-97">    </span>
<span id="cb38-98">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create heatmap</span></span>
<span id="cb38-99">    plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>))</span>
<span id="cb38-100">    sns.heatmap(top_gene_data, </span>
<span id="cb38-101">                cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'RdBu_r'</span>, center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb38-102">                yticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>top_gene_names,</span>
<span id="cb38-103">                xticklabels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Comp </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> top_components],</span>
<span id="cb38-104">                cbar_kws<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'label'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Gene factor loading'</span>})</span>
<span id="cb38-105">    plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Top </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(top_gene_indices)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Genes × Top </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(top_components)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> Components - Optimal Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb38-106">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component'</span>)</span>
<span id="cb38-107">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Gene'</span>)</span>
<span id="cb38-108">    </span>
<span id="cb38-109">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save individual plot in main results directory</span></span>
<span id="cb38-110">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb38-111">        plot_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"plot_11_top_genes_optimal_rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.png"</span>)</span>
<span id="cb38-112">        plt.savefig(plot_file, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>)</span>
<span id="cb38-113">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Top genes heatmap saved to: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>plot_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb38-114">    </span>
<span id="cb38-115">    plt.show()</span>
<span id="cb38-116"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb38-117">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Could not load data for optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> optimal_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'unknown'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-15-Data-Exploration---E5-Timeseries-Multi-species-Multi-omics-Using-workflow-stdm/13.00-multiomics-stdm_files/figure-gfm/plot-top-genes-25.png" width="960"></p>
<div class="sourceCode" id="cb39" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb39-1"></span>
<span id="cb39-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Suppress output</span></span>
<span id="cb39-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span></code></pre></div>
</section>
<section id="individual-plot-12-reconstruction-quality" class="level2">
<h2 class="anchored" data-anchor-id="individual-plot-12-reconstruction-quality">4.14 Individual Plot 12: Reconstruction Quality</h2>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb40-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb40-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib</span>
<span id="cb40-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb40-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb40-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb40-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb40-8"></span>
<span id="cb40-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up plotting</span></span>
<span id="cb40-10">matplotlib.use(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Agg'</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use non-interactive backend</span></span>
<span id="cb40-11">plt.ioff()  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Turn off interactive mode</span></span>
<span id="cb40-12"></span>
<span id="cb40-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get output directory from R environment</span></span>
<span id="cb40-14">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.output_dir</span>
<span id="cb40-15"></span>
<span id="cb40-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for main results directory</span></span>
<span id="cb40-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>():</span>
<span id="cb40-18">    main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span>]</span>
<span id="cb40-19"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb40-20">    main_result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb40-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_result_dirs:</span>
<span id="cb40-22">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(main_result_dirs)</span>
<span id="cb40-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb40-24">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb40-25"></span>
<span id="cb40-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the optimal rank from the rank selection summary</span></span>
<span id="cb40-27"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb40-28">    summary_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_selection_summary.json"</span>)</span>
<span id="cb40-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(summary_file):</span>
<span id="cb40-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(summary_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb40-31">            rank_summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb40-32">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rank_summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'suggested_rank'</span>]</span>
<span id="cb40-33">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (from rank selection analysis)"</span>)</span>
<span id="cb40-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb40-35">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No rank selection summary found! Cannot determine optimal rank."</span>)</span>
<span id="cb40-36">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb40-37">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb40-38"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb40-39">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No main results directory found!"</span>)</span>
<span id="cb40-40">    optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb40-41"></span>
<span id="cb40-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for the optimal rank data in rank_comparison directory</span></span>
<span id="cb40-43">latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb40-44"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> optimal_rank:</span>
<span id="cb40-45">    comparison_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_comparison"</span>)</span>
<span id="cb40-46">    optimal_rank_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(comparison_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb40-47">    </span>
<span id="cb40-48">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(optimal_rank_dir):</span>
<span id="cb40-49">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the timestamped results within the rank directory</span></span>
<span id="cb40-50">        result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(optimal_rank_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb40-51">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result_dirs:</span>
<span id="cb40-52">            latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(result_dirs)</span>
<span id="cb40-53">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> data from: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>latest_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb40-54">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb40-55">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"No timestamped results found in rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory!"</span>)</span>
<span id="cb40-56">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb40-57">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory not found!"</span>)</span>
<span id="cb40-58"></span>
<span id="cb40-59"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> latest_dir:</span>
<span id="cb40-60">    </span>
<span id="cb40-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load data</span></span>
<span id="cb40-62">    gene_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_factors.npy"</span>))</span>
<span id="cb40-63">    species_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species_factors.npy"</span>))</span>
<span id="cb40-64">    time_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time_factors.npy"</span>))</span>
<span id="cb40-65">    reconstructed <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"reconstructed_tensor.npy"</span>))</span>
<span id="cb40-66">    </span>
<span id="cb40-67">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the transformed data</span></span>
<span id="cb40-68">    data_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vst_counts_matrix_long_format.csv"</span>)</span>
<span id="cb40-69">    df_long <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(data_file)</span>
<span id="cb40-70">    </span>
<span id="cb40-71">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create original tensor from the long format data</span></span>
<span id="cb40-72">    original_pivot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df_long.pivot_table(values<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'expression'</span>, </span>
<span id="cb40-73">                                       index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene'</span>, </span>
<span id="cb40-74">                                       columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'species'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'timepoint'</span>], </span>
<span id="cb40-75">                                       fill_value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb40-76">    </span>
<span id="cb40-77">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if we can safely reshape</span></span>
<span id="cb40-78">    expected_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> species_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> time_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb40-79">    actual_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> original_pivot.size</span>
<span id="cb40-80">    </span>
<span id="cb40-81">    plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb40-82">    </span>
<span id="cb40-83">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> actual_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> expected_size:</span>
<span id="cb40-84">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reshape the pivot table to match tensor format</span></span>
<span id="cb40-85">        n_genes, n_species, n_timepoints <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], species_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], time_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb40-86">        original_reshaped <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> original_pivot.values.reshape(n_genes, n_species, n_timepoints)</span>
<span id="cb40-87">        </span>
<span id="cb40-88">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate per-gene reconstruction error</span></span>
<span id="cb40-89">        gene_errors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.mean(np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(original_reshaped <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> reconstructed), axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb40-90">        </span>
<span id="cb40-91">        plt.hist(gene_errors, bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, edgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>)</span>
<span id="cb40-92">        plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mean Absolute Error per Gene'</span>)</span>
<span id="cb40-93">        plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Number of Genes'</span>)</span>
<span id="cb40-94">        plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Reconstruction Error Distribution - Optimal Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb40-95">        plt.axvline(np.mean(gene_errors), color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>, </span>
<span id="cb40-96">                   label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Mean: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>mean(gene_errors)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb40-97">        plt.legend()</span>
<span id="cb40-98">        plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb40-99">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb40-100">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If reshape fails, show a simpler quality metric</span></span>
<span id="cb40-101">        original_flat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> original_pivot.values.flatten()</span>
<span id="cb40-102">        reconstructed_flat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> reconstructed.flatten()</span>
<span id="cb40-103">        </span>
<span id="cb40-104">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensure both arrays are the same size by taking the minimum</span></span>
<span id="cb40-105">        min_size <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(original_flat), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(reconstructed_flat))</span>
<span id="cb40-106">        original_flat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> original_flat[:min_size]</span>
<span id="cb40-107">        reconstructed_flat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> reconstructed_flat[:min_size]</span>
<span id="cb40-108">        </span>
<span id="cb40-109">        residuals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> original_flat <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> reconstructed_flat</span>
<span id="cb40-110">        </span>
<span id="cb40-111">        plt.hist(residuals, bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, edgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>)</span>
<span id="cb40-112">        plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Reconstruction Residuals'</span>)</span>
<span id="cb40-113">        plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Frequency'</span>)</span>
<span id="cb40-114">        plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Reconstruction Residuals Distribution - Optimal Rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb40-115">        plt.axvline(np.mean(residuals), color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'--'</span>, </span>
<span id="cb40-116">                   label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Mean: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>mean(residuals)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb40-117">        plt.axvline(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>, linestyle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">':'</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Perfect fit'</span>)</span>
<span id="cb40-118">        plt.legend()</span>
<span id="cb40-119">        plt.grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb40-120">    </span>
<span id="cb40-121">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save individual plot in main results directory</span></span>
<span id="cb40-122">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb40-123">        plot_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"plot_12_reconstruction_quality_optimal_rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.png"</span>)</span>
<span id="cb40-124">        plt.savefig(plot_file, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>)</span>
<span id="cb40-125">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Reconstruction quality plot saved to: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>plot_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb40-126">    </span>
<span id="cb40-127">    plt.show()</span>
<span id="cb40-128"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb40-129">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Could not load data for optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> optimal_rank <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'unknown'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-15-Data-Exploration---E5-Timeseries-Multi-species-Multi-omics-Using-workflow-stdm/13.00-multiomics-stdm_files/figure-gfm/plot-reconstruction-quality-27.png" width="960"></p>
<div class="sourceCode" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb41-1"></span>
<span id="cb41-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Suppress output</span></span>
<span id="cb41-3"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span></code></pre></div>
</section>
<section id="interpret-species-clustering-patterns" class="level2">
<h2 class="anchored" data-anchor-id="interpret-species-clustering-patterns">4.15 Interpret species clustering patterns</h2>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb42-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb42-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb42-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb42-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb42-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> stats</span>
<span id="cb42-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> glob</span>
<span id="cb42-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb42-8"></span>
<span id="cb42-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get output directory from R environment</span></span>
<span id="cb42-10">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.output_dir</span>
<span id="cb42-11"></span>
<span id="cb42-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for main results directory and optimal rank data (consistent with other plots)</span></span>
<span id="cb42-13">latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb42-14"></span>
<span id="cb42-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for main results directory</span></span>
<span id="cb42-16"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>():</span>
<span id="cb42-17">    main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>()[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'main_results_dir'</span>]</span>
<span id="cb42-18"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb42-19">    main_result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb42-20">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_result_dirs:</span>
<span id="cb42-21">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(main_result_dirs)</span>
<span id="cb42-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb42-23">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb42-24"></span>
<span id="cb42-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the optimal rank from the rank selection summary (same as other plots)</span></span>
<span id="cb42-26"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb42-27">    summary_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_selection_summary.json"</span>)</span>
<span id="cb42-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(summary_file):</span>
<span id="cb42-29">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(summary_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'r'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb42-30">            rank_summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> json.load(f)</span>
<span id="cb42-31">        optimal_rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> rank_summary[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'suggested_rank'</span>]</span>
<span id="cb42-32">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (from rank selection analysis)"</span>)</span>
<span id="cb42-33">        </span>
<span id="cb42-34">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look for the optimal rank data in rank_comparison directory</span></span>
<span id="cb42-35">        comparison_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rank_comparison"</span>)</span>
<span id="cb42-36">        optimal_rank_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(comparison_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb42-37">        </span>
<span id="cb42-38">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(optimal_rank_dir):</span>
<span id="cb42-39">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the timestamped results within the rank directory</span></span>
<span id="cb42-40">            result_dirs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> glob.glob(os.path.join(optimal_rank_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"20*"</span>))</span>
<span id="cb42-41">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> result_dirs:</span>
<span id="cb42-42">                latest_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(result_dirs)</span>
<span id="cb42-43">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Using optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> data from: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>latest_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb42-44">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb42-45">                <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"No timestamped results found in rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:02d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory!"</span>)</span>
<span id="cb42-46">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb42-47">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Optimal rank </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> directory not found!"</span>)</span>
<span id="cb42-48">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb42-49">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No rank selection summary found! Cannot determine optimal rank."</span>)</span>
<span id="cb42-50">        main_results_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb42-51"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb42-52">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No main results directory found!"</span>)</span>
<span id="cb42-53"></span>
<span id="cb42-54"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> latest_dir:</span>
<span id="cb42-55">    </span>
<span id="cb42-56">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load data</span></span>
<span id="cb42-57">    gene_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_factors.npy"</span>))</span>
<span id="cb42-58">    species_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species_factors.npy"</span>))</span>
<span id="cb42-59">    time_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.load(os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time_factors.npy"</span>))</span>
<span id="cb42-60">    </span>
<span id="cb42-61">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load the transformed data</span></span>
<span id="cb42-62">    data_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vst_counts_matrix_long_format.csv"</span>)</span>
<span id="cb42-63">    df_long <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(data_file)</span>
<span id="cb42-64">    </span>
<span id="cb42-65">    species_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(df_long[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'species'</span>].unique())</span>
<span id="cb42-66">    species_types <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [name.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> name <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> species_names]</span>
<span id="cb42-67">    unique_types <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(species_types)))</span>
<span id="cb42-68">    </span>
<span id="cb42-69">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb42-70">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SPECIES CLUSTERING INTERPRETATION"</span>)</span>
<span id="cb42-71">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"="</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>)</span>
<span id="cb42-72">    </span>
<span id="cb42-73">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1. Quantify species separation</span></span>
<span id="cb42-74">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">1. SPECIES SEPARATION ANALYSIS:"</span>)</span>
<span id="cb42-75">    </span>
<span id="cb42-76">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Group individuals by species type</span></span>
<span id="cb42-77">    species_groups <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb42-78">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, name <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(species_names):</span>
<span id="cb42-79">        stype <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> name.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb42-80">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> stype <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> species_groups:</span>
<span id="cb42-81">            species_groups[stype] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb42-82">        species_groups[stype].append(i)</span>
<span id="cb42-83">    </span>
<span id="cb42-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate within-species vs between-species distances</span></span>
<span id="cb42-85">    <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> scipy.spatial.distance <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pdist, squareform</span>
<span id="cb42-86">    </span>
<span id="cb42-87">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use all components for distance calculation</span></span>
<span id="cb42-88">    distances <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> squareform(pdist(species_factors, metric<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'euclidean'</span>))</span>
<span id="cb42-89">    </span>
<span id="cb42-90">    within_species_distances <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb42-91">    between_species_distances <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb42-92">    </span>
<span id="cb42-93">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, species_i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(species_names):</span>
<span id="cb42-94">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> j, species_j <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(species_names):</span>
<span id="cb42-95">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> j:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Avoid duplicates</span></span>
<span id="cb42-96">                type_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> species_i.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb42-97">                type_j <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> species_j.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-'</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb42-98">                </span>
<span id="cb42-99">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> type_i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> type_j:</span>
<span id="cb42-100">                    within_species_distances.append(distances[i, j])</span>
<span id="cb42-101">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb42-102">                    between_species_distances.append(distances[i, j])</span>
<span id="cb42-103">    </span>
<span id="cb42-104">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  Within-species distances: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>mean(within_species_distances)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> ± </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>std(within_species_distances)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb42-105">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  Between-species distances: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>mean(between_species_distances)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> ± </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>np<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>std(between_species_distances)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb42-106">    </span>
<span id="cb42-107">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Statistical test</span></span>
<span id="cb42-108">    t_stat, p_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.ttest_ind(between_species_distances, within_species_distances)</span>
<span id="cb42-109">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  T-test p-value: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>p_value<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3e}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb42-110">    </span>
<span id="cb42-111">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> p_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>:</span>
<span id="cb42-112">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"  → Species ARE significantly separated (but effect might be small)"</span>)</span>
<span id="cb42-113">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb42-114">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"  → Species are NOT significantly separated"</span>)</span>
<span id="cb42-115">    </span>
<span id="cb42-116">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2. Variance decomposition</span></span>
<span id="cb42-117">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">2. VARIANCE DECOMPOSITION:"</span>)</span>
<span id="cb42-118">    </span>
<span id="cb42-119">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate total variance and partition it</span></span>
<span id="cb42-120">    total_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.var(species_factors, axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb42-121">    </span>
<span id="cb42-122">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate within-species variance</span></span>
<span id="cb42-123">    within_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.zeros(species_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb42-124">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> stype, indices <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> species_groups.items():</span>
<span id="cb42-125">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(indices) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Need at least 2 individuals</span></span>
<span id="cb42-126">            group_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.var(species_factors[indices, :], axis<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb42-127">            within_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> group_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(indices) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(species_names)</span>
<span id="cb42-128">    </span>
<span id="cb42-129">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Between-species variance</span></span>
<span id="cb42-130">    between_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> total_var <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> within_var</span>
<span id="cb42-131">    </span>
<span id="cb42-132">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate percentages</span></span>
<span id="cb42-133">    within_percent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (np.mean(within_var) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> np.mean(total_var)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb42-134">    between_percent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (np.mean(between_var) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> np.mean(total_var)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb42-135">    </span>
<span id="cb42-136">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  Within-species variance: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>within_percent<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.1f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">%"</span>)</span>
<span id="cb42-137">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  Between-species variance: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>between_percent<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.1f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">%"</span>)</span>
<span id="cb42-138">    </span>
<span id="cb42-139">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3. Components that best separate species</span></span>
<span id="cb42-140">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">3. COMPONENTS WITH STRONGEST SPECIES EFFECTS:"</span>)</span>
<span id="cb42-141">    </span>
<span id="cb42-142">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate F-statistics for each component</span></span>
<span id="cb42-143">    f_stats <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb42-144">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> comp <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(species_factors.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]):</span>
<span id="cb42-145">        groups <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [species_factors[indices, comp] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> indices <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> species_groups.values()]</span>
<span id="cb42-146">        f_stat, p_val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> stats.f_oneway(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>groups)</span>
<span id="cb42-147">        f_stats.append((comp, f_stat, p_val))</span>
<span id="cb42-148">    </span>
<span id="cb42-149">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sort by F-statistic</span></span>
<span id="cb42-150">    f_stats.sort(key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: x[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], reverse<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb42-151">    </span>
<span id="cb42-152">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"  Top 5 components by species separation:"</span>)</span>
<span id="cb42-153">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, (comp, f_stat, p_val) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(f_stats[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]):</span>
<span id="cb42-154">        significance <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"***"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> p_val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.001</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"**"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> p_val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"*"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> p_val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb42-155">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"    Component </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>comp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: F=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>f_stat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, p=</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>p_val<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3e}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>significance<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb42-156">    </span>
<span id="cb42-157">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 4. Create detailed visualization</span></span>
<span id="cb42-158">    fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>))</span>
<span id="cb42-159">    </span>
<span id="cb42-160">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Distance distributions</span></span>
<span id="cb42-161">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].hist(within_species_distances, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Within-species'</span>, bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb42-162">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].hist(between_species_distances, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Between-species'</span>, bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb42-163">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Euclidean Distance'</span>)</span>
<span id="cb42-164">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Frequency'</span>)</span>
<span id="cb42-165">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Distance Distributions'</span>)</span>
<span id="cb42-166">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].legend()</span>
<span id="cb42-167">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb42-168">    </span>
<span id="cb42-169">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Variance decomposition pie chart</span></span>
<span id="cb42-170">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].pie([within_percent, between_percent], </span>
<span id="cb42-171">                   labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Within-species</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">(</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>within_percent<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.1f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">%)'</span>, </span>
<span id="cb42-172">                          <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Between-species</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">(</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>between_percent<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.1f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">%)'</span>],</span>
<span id="cb42-173">                   autopct<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%1.1f%%</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>, startangle<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">90</span>)</span>
<span id="cb42-174">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Variance Decomposition'</span>)</span>
<span id="cb42-175">    </span>
<span id="cb42-176">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Box plots for top separating component</span></span>
<span id="cb42-177">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> f_stats:</span>
<span id="cb42-178">        top_comp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> f_stats[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb42-179">        species_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb42-180">        species_labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb42-181">        </span>
<span id="cb42-182">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> stype, indices <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> species_groups.items():</span>
<span id="cb42-183">            species_data.extend(species_factors[indices, top_comp])</span>
<span id="cb42-184">            species_labels.extend([stype] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(indices))</span>
<span id="cb42-185">        </span>
<span id="cb42-186">        df_comp <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species'</span>: species_labels, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Factor_Value'</span>: species_data})</span>
<span id="cb42-187">        sns.boxplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>df_comp, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species'</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Factor_Value'</span>, ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>])</span>
<span id="cb42-188">        axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].set_title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Component </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>top_comp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> by Species</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">(Best Separating Component)'</span>)</span>
<span id="cb42-189">        axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>].grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb42-190">    </span>
<span id="cb42-191">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Individual count per species</span></span>
<span id="cb42-192">    species_counts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(indices) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> indices <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> species_groups.values()]</span>
<span id="cb42-193">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].bar(species_groups.keys(), species_counts)</span>
<span id="cb42-194">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species'</span>)</span>
<span id="cb42-195">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Number of Individuals'</span>)</span>
<span id="cb42-196">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sample Size per Species'</span>)</span>
<span id="cb42-197">    axes[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].grid(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb42-198">    </span>
<span id="cb42-199">    plt.tight_layout()</span>
<span id="cb42-200">    </span>
<span id="cb42-201">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the interpretation plot in the main results directory (consistent with other plots)</span></span>
<span id="cb42-202">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> main_results_dir:</span>
<span id="cb42-203">        interp_plot_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(main_results_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"species_clustering_interpretation_optimal_rank_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>optimal_rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.png"</span>)</span>
<span id="cb42-204">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb42-205">        interp_plot_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(latest_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"species_clustering_interpretation.png"</span>)</span>
<span id="cb42-206">    plt.savefig(interp_plot_file, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>)</span>
<span id="cb42-207">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Interpretation plot saved to: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>interp_plot_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb42-208">    </span>
<span id="cb42-209">    plt.show()</span>
<span id="cb42-210">    </span>
<span id="cb42-211">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 5. Biological interpretation</span></span>
<span id="cb42-212">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">4. BIOLOGICAL INTERPRETATION:"</span>)</span>
<span id="cb42-213">    </span>
<span id="cb42-214">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> between_percent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>:</span>
<span id="cb42-215">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"  → STRONG INDIVIDUAL VARIATION: Gene expression varies more between"</span>)</span>
<span id="cb42-216">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"    individuals than between species. This suggests:"</span>)</span>
<span id="cb42-217">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"    • Individual phenotypic plasticity is high"</span>)</span>
<span id="cb42-218">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"    • Species have similar fundamental gene regulatory networks"</span>)</span>
<span id="cb42-219">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"    • Environmental or developmental factors affect individuals"</span>)</span>
<span id="cb42-220">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"      more than species identity"</span>)</span>
<span id="cb42-221">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> between_percent <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>:</span>
<span id="cb42-222">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"  → MODERATE SPECIES EFFECTS: Some species differences exist but"</span>)</span>
<span id="cb42-223">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"    individual variation is still dominant. This suggests:"</span>)</span>
<span id="cb42-224">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"    • Species have some distinct expression patterns"</span>)</span>
<span id="cb42-225">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"    • Individual variation remains important"</span>)</span>
<span id="cb42-226">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"    • Mixed evolutionary/ecological pressures"</span>)</span>
<span id="cb42-227">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb42-228">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"  → STRONG SPECIES EFFECTS: Clear species-specific expression"</span>)</span>
<span id="cb42-229">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"    patterns exist. This suggests:"</span>)</span>
<span id="cb42-230">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"    • Species have distinct gene regulatory strategies"</span>)</span>
<span id="cb42-231">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"    • Strong evolutionary divergence"</span>)</span>
<span id="cb42-232">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"    • Species-specific adaptations"</span>)</span>
<span id="cb42-233">    </span>
<span id="cb42-234">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">  Sample sizes: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">dict</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(species_groups.keys(), [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(indices) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> indices <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> species_groups.values()]))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb42-235">    </span>
<span id="cb42-236">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">any</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(indices) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> indices <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> species_groups.values()):</span>
<span id="cb42-237">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"  ⚠️  WARNING: Some species have small sample sizes, which can"</span>)</span>
<span id="cb42-238">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"     affect the ability to detect species-specific patterns."</span>)</span>
<span id="cb42-239">    </span>
<span id="cb42-240"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb42-241">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No results directories found!"</span>)</span></code></pre></div>
<pre><code>## Using optimal rank 5 (from rank selection analysis)
## Using optimal rank 5 data from: ../output/13.00-multiomics-stdm/20251015_190157/rank_comparison/rank_05/20251015_190351
## ============================================================
## SPECIES CLUSTERING INTERPRETATION
## ============================================================
## 
## 1. SPECIES SEPARATION ANALYSIS:
##   Within-species distances: 1.007 ± 1.225
##   Between-species distances: 3.390 ± 0.860
##   T-test p-value: 4.930e-78
##   → Species ARE significantly separated (but effect might be small)
## 
## 2. VARIANCE DECOMPOSITION:
##   Within-species variance: 25.4%
##   Between-species variance: 74.6%
## 
## 3. COMPONENTS WITH STRONGEST SPECIES EFFECTS:
##   Top 5 components by species separation:
##     Component 1: F=2220.60, p=1.113e-30 ***
##     Component 2: F=1124.54, p=1.003e-26 ***
##     Component 4: F=39.46, p=9.691e-09 ***
##     Component 5: F=3.78, p=3.575e-02 *
##     Component 3: F=0.80, p=4.590e-01 
## (array([39., 32., 22., 11.,  5.,  4.,  3.,  1.,  0.,  0.,  0.,  0.,  0.,
##         0.,  7.,  2.,  0.,  0.,  0.,  9.]), array([0.10695279, 0.33056048, 0.55416817, 0.77777586, 1.00138356,
##        1.22499125, 1.44859894, 1.67220664, 1.89581433, 2.11942202,
##        2.34302971, 2.56663741, 2.7902451 , 3.01385279, 3.23746049,
##        3.46106818, 3.68467587, 3.90828356, 4.13189126, 4.35549895,
##        4.57910664]), &lt;BarContainer object of 20 artists&gt;)
## (array([10., 32., 45., 41., 19., 11., 16., 15., 17., 17., 19., 15.,  6.,
##         3.,  3.,  3.,  4., 12.,  7.,  5.]), array([2.21788468, 2.38773948, 2.55759428, 2.72744908, 2.89730388,
##        3.06715869, 3.23701349, 3.40686829, 3.57672309, 3.74657789,
##        3.91643269, 4.08628749, 4.25614229, 4.4259971 , 4.5958519 ,
##        4.7657067 , 4.9355615 , 5.1054163 , 5.2752711 , 5.4451259 ,
##        5.6149807 ]), &lt;BarContainer object of 20 artists&gt;)
## Text(0.5, 0, 'Euclidean Distance')
## Text(0, 0.5, 'Frequency')
## Text(0.5, 1.0, 'Distance Distributions')
## &lt;matplotlib.legend.Legend object at 0x7c874132a690&gt;
## ([&lt;matplotlib.patches.Wedge object at 0x7c874136ab70&gt;, &lt;matplotlib.patches.Wedge object at 0x7c874208a300&gt;], [Text(-0.7877726729698648, 0.7677331670065548, 'Within-species\n(25.4%)'), Text(0.7877729231290416, -0.7677329103175957, 'Between-species\n(74.6%)')], [Text(-0.42969418525628983, 0.41876354563993895, '25.4%'), Text(0.42969432170674987, -0.4187634056277794, '74.6%')])
## Text(0.5, 1.0, 'Variance Decomposition')
## &lt;Axes: xlabel='Species', ylabel='Factor_Value'&gt;
## Text(0.5, 1.0, 'Component 1 by Species\n(Best Separating Component)')
## &lt;BarContainer object of 3 artists&gt;
## Text(0.5, 0, 'Species')
## Text(0, 0.5, 'Number of Individuals')
## Text(0.5, 1.0, 'Sample Size per Species')
## 
## Interpretation plot saved to: ../output/13.00-multiomics-stdm/20251015_190157/species_clustering_interpretation_optimal_rank_5.png
## 
## 4. BIOLOGICAL INTERPRETATION:
##   → STRONG SPECIES EFFECTS: Clear species-specific expression
##     patterns exist. This suggests:
##     • Species have distinct gene regulatory strategies
##     • Strong evolutionary divergence
##     • Species-specific adaptations
## 
##   Sample sizes: {'ACR': 10, 'POC': 10, 'POR': 10}</code></pre>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-15-Data-Exploration---E5-Timeseries-Multi-species-Multi-omics-Using-workflow-stdm/13.00-multiomics-stdm_files/figure-gfm/interpret-clustering-29.png" width="1440"></p>


</section>
</section>

 ]]></description>
  <category>2025</category>
  <category>Acropora pulchra</category>
  <category>Porites evermanni</category>
  <category>Pocillopora tuahiniensis</category>
  <category>E5</category>
  <category>coral</category>
  <category>timeseries_molecular</category>
  <category>workflow-stdm</category>
  <guid>https://robertslab.github.io/sams-notebook/posts/2025/2025-10-15-Data-Exploration---E5-Timeseries-Multi-species-Multi-omics-Using-workflow-stdm/</guid>
  <pubDate>Wed, 15 Oct 2025 07:00:00 GMT</pubDate>
  <media:content url="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-15-Data-Exploration---E5-Timeseries-Multi-species-Multi-omics-Using-workflow-stdm/13.00-multiomics-stdm_files/figure-gfm/visualize-optimal-results-3.png" medium="image" type="image/png" height="173" width="144"/>
</item>
<item>
  <title>Data Exploration - E5 Timeseries Multi-species Multi-omics Using Barnacle</title>
  <dc:creator>Sam White</dc:creator>
  <link>https://robertslab.github.io/sams-notebook/posts/2025/2025-10-08-Data-Exploration---E5-Timeseries-A.pulchra-Multi-species-Multi-omics-Using-Barnacle/</link>
  <description><![CDATA[ 





<section id="intro" class="level1">
<h1>INTRO</h1>
<p>This notebook is an introductory exploration of the E5 coral <a href="https://github.com/urol-e5/timeseries_molecular"><code>urol-e5/timeseries_molecular</code></a> (GitHub repo) multi-species data using a tensor decomposition approach, using <a href="https://github.com/blasks/barnacle">barnacle</a> (GitHub Repo). Of note, using <a href="https://github.com/blasks/barnacle">barnacle</a> (GitHub Repo) for this multi-omics analysis greatly differs than <a href="../../../posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/index.html">the analysis I messed around with using MOFA2</a> (notebook entry).</p>
<p><a href="https://github.com/blasks/barnacle">Barnacle</a> (GitHub Repo) utilizes tensor decomposition. As such, the analysis is constrained, due to the fact that the tensors must have the same dimensions as each other. <a href="https://biofam.github.io/MOFA2/index.html">MOFA2</a> is not limited by data dimensionality. So, for this barnacle analysis, we’re only using gene expression as a metric, with the goal being to identify genes/components (factors) which might be associated with components associated with some characterized physiology. Then, we can potentially look at lncRNA/miRNA/methylation in those contexts.</p>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Warning
</div>
</div>
<div class="callout-body-container callout-body">
<p>The contents below are out of date! Due to lack of convergence (a requirement of tensor decomposition to ensure data stability), I experimented with a variety of parameters (e.g.&nbsp;10,000 iterations, 100 components, reduce lambdas, etc. to attempt to achieve convergence; all failed.) and have not rendered as markdown.</p>
<p>Review the updated R Markdown code for changes, including modifications that fixed <code>sctransform</code>:</p>
<p><a href="https://github.com/urol-e5/timeseries_molecular/blob/d88c40082bb7d2902eb847dd2fcad7476cae2928/M-multi-species/scripts/13.00-multiomics-barnacle.Rmd">https://github.com/urol-e5/timeseries_molecular/blob/d88c40082bb7d2902eb847dd2fcad7476cae2928/M-multi-species/scripts/13.00-multiomics-barnacle.Rmd</a> (commit <code>d88c400</code>)</p>
</div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>The contents below are from knitted markdown <a href="https://github.com/urol-e5/timeseries_molecular/blob/5e572b67dd86c49154d1627993ac01be81b4b368/M-multi-species/scripts/13.00-multiomics-barnacle.md"><code>13.00-multiomics-barnacle.Rmd</code></a> (commit <code>5e572b6</code>).</p>
</div>
</div>
</section>
<section id="background" class="level1">
<h1>1 BACKGROUND</h1>
<p>This analysis prepares three-species ortholog expression matrices, normalizes the data, constructs a multi‑omics tensor (genes × combined species-samples × timepoints), and runs a sparse tensor decomposition using the <a href="https://github.com/blasks/barnacle">barnacle</a> (Blaskowski et al.&nbsp;2024) workflow to discover shared gene/time/species patterns.</p>
<p>Key steps performed by this script:</p>
<ul>
<li>Load annotated ortholog groups and per-species count matrices.</li>
<li>Filter ortholog groups to retain complete three‑way matches with available expression data.</li>
<li>Extract per‑species expression matrices mapped to ortholog group IDs.</li>
<li>Normalize counts (preferred: <code>sctransform</code>; fallback: log2(CPM + 1)).</li>
<li>Build a 3D tensor combining species/sample and timepoint dimensions.</li>
<li>Run <a href="https://github.com/blasks/barnacle">barnacle</a> (Blaskowski et al.&nbsp;2024) sparse CP decomposition and save factor matrices, metadata and figures.</li>
</ul>
<section id="input-files" class="level2">
<h2 class="anchored" data-anchor-id="input-files">1.1 Input files</h2>
<ul>
<li><p><code>../output/12-ortho-annot/ortholog_groups_annotated.csv</code> : annotated ortholog groups with columns for <code>group_id</code>, <code>apul</code>, <code>peve</code>, <code>ptua</code>, <code>type</code>, etc.</p></li>
<li><p><code>../../D-Apul/output/02.20-D-Apul-RNAseq-alignment-HiSat2/apul-gene_count_matrix.csv</code><br>
Apul gene count matrix (contains <code>gene_id</code> plus sample columns).</p></li>
<li><p><code>../../E-Peve/output/02.20-E-Peve-RNAseq-alignment-HiSat2/peve-gene_count_matrix.csv</code><br>
Peve gene count matrix.</p></li>
<li><p><code>../../F-Ptua/output/02.20-F-Ptua-RNAseq-alignment-HiSat2/ptua-gene_count_matrix.csv</code><br>
Ptua gene count matrix.</p></li>
<li><p>(Also referenced) transcript-level matrices: <code>apul-transcript_count_matrix.csv</code>, <code>peve-transcript_count_matrix.csv</code>, <code>ptua-transcript_count_matrix.csv</code> when needed.</p></li>
</ul>
</section>
<section id="output-files" class="level2">
<h2 class="anchored" data-anchor-id="output-files">1.2 Output files</h2>
<ul>
<li><code>apul_ortholog_expression.csv</code>, <code>peve_ortholog_expression.csv</code>, <code>ptua_ortholog_expression.csv</code> : per‑species expression matrices aligned to ortholog <code>group_id</code>.</li>
<li><code>apul_normalized_expression.csv</code>, <code>peve_normalized_expression.csv</code>, <code>ptua_normalized_expression.csv</code> : normalized expression matrices (sctransform or log2(CPM+1)).</li>
<li><code>multiomics_tensor.npy</code> : saved NumPy array of the 3D tensor used for decomposition (genes × combined_samples × timepoints).</li>
<li><code>barnacle_factors/</code> directory containing:
<ul>
<li><code>gene_factors.csv</code> : gene loadings per component (genes × components).</li>
<li><code>sample_factors.csv</code> : combined sample (species_sample) loadings per component with <code>Species</code> and <code>Sample_ID</code> metadata.</li>
<li><code>time_factors.csv</code> : timepoint loadings per component.</li>
<li><code>component_weights.csv</code> : component weights / importance.</li>
<li><code>sample_mapping.csv</code> : mapping of combined sample indices to species and sample IDs.</li>
<li><code>metadata.json</code> : analysis parameters and tensor metadata (shape, rank, lambdas, convergence, etc.).</li>
<li><code>figures/</code> : generated visualizations (component weights, time loadings, sample heatmap, PCA, top ortholog plots).</li>
</ul></li>
</ul>
</section>
<section id="notes-assumptions" class="level2">
<h2 class="anchored" data-anchor-id="notes-assumptions">1.3 Notes / assumptions:</h2>
<ul>
<li>Sample column names are parsed expecting a dot-separated format with a <code>TP#</code> timepoint token (e.g., <code>ACR.139.TP1</code>).</li>
<li>Apul ortholog IDs in the ortholog table include transcript suffixes (e.g., <code>-T1</code>) which are removed for matching to the gene count matrix.</li>
<li>Missing values in the tensor are handled by substitution (current workflow fills NaNs with zeros before decomposition).</li>
</ul>
</section>
</section>
<section id="setup" class="level1">
<h1>2 SETUP</h1>
<section id="libraries" class="level2">
<h2 class="anchored" data-anchor-id="libraries">2.1 Libraries</h2>
</section>
<section id="set-r-variables" class="level2">
<h2 class="anchored" data-anchor-id="set-r-variables">2.2 Set R variables</h2>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># OUTPUT DIRECTORY</span></span>
<span id="cb1-2">output_dir <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../output/13.00-multiomics-barnacle"</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#INPUT FILE(S)</span></span>
<span id="cb1-5">ortholog_groups_file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../output/12-ortho-annot/ortholog_groups_annotated.csv"</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Transcript count matrices for each species</span></span>
<span id="cb1-8">apul_transcript_matrix_file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../D-Apul/output/02.20-D-Apul-RNAseq-alignment-HiSat2/apul-transcript_count_matrix.csv"</span></span>
<span id="cb1-9">peve_transcript_matrix_file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../E-Peve/output/02.20-E-Peve-RNAseq-alignment-HiSat2/peve-transcript_count_matrix.csv"</span></span>
<span id="cb1-10">ptua_transcript_matrix_file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../F-Ptua/output/02.20-F-Ptua-RNAseq-alignment-HiSat2/ptua-transcript_count_matrix.csv"</span></span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># CONDA</span></span>
<span id="cb1-13">conda_env_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/sam/programs/mambaforge/envs/barnacle_py311_env"</span>)</span>
<span id="cb1-14">conda_path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/opt/anaconda/anaconda3/bin/conda"</span>)</span></code></pre></div>
</section>
<section id="load-barnacle-conda-environment" class="level2">
<h2 class="anchored" data-anchor-id="load-barnacle-conda-environment">2.3 Load <a href="https://github.com/blasks/barnacle">barnacle</a> conda environment</h2>
<p>If this is successful, the first line of output should show that the Python being used is the one in your <a href="https://github.com/blasks/barnacle">barnacle</a> (Blaskowski et al.&nbsp;2024) conda environment path.</p>
<p>E.g.</p>
<p><code>python:         /home/sam/programs/mambaforge/envs/barnacle_py311_env/bin/python</code></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use_condaenv</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">condaenv =</span> conda_env_name, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conda =</span> conda_path)</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">py_config</span>()</span></code></pre></div>
<pre><code>## python:         /home/sam/programs/mambaforge/envs/barnacle_py311_env/bin/python
## libpython:      /home/sam/programs/mambaforge/envs/barnacle_py311_env/lib/libpython3.11.so
## pythonhome:     /home/sam/programs/mambaforge/envs/barnacle_py311_env:/home/sam/programs/mambaforge/envs/barnacle_py311_env
## version:        3.11.13 | packaged by conda-forge | (main, Jun  4 2025, 14:48:23) [GCC 13.3.0]
## numpy:          /home/sam/programs/mambaforge/envs/barnacle_py311_env/lib/python3.11/site-packages/numpy
## numpy_version:  1.26.4
## 
## NOTE: Python version was forced by use_python() function</code></pre>
</section>
</section>
<section id="data-prep" class="level1">
<h1>3 DATA PREP</h1>
<section id="load-ortholog-groups-data" class="level2">
<h2 class="anchored" data-anchor-id="load-ortholog-groups-data">3.1 Load ortholog groups data</h2>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read in the ortholog groups data</span></span>
<span id="cb4-2">ortholog_groups <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(ortholog_groups_file)</span>
<span id="cb4-3"></span>
<span id="cb4-4"></span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Display basic info about the data</span></span>
<span id="cb4-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Dimensions of ortholog groups data:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(ortholog_groups), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb4-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Column names:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(ortholog_groups), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb4-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(ortholog_groups)</span>
<span id="cb4-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(ortholog_groups)</span></code></pre></div>
<pre><code>## Dimensions of ortholog groups data: 18372 23 
## 
## Column names: group_id apul peve ptua type avg_identity query accession id reviewed protein_name organism pident length evalue bitscore title go_ids go_bp go_cc go_mf goslim_ids goslim_names 
## 
##   group_id          apul          peve
## 1 OG_00001 FUN_000185-T1 Peve_00037402
## 2 OG_00002 FUN_000189-T1 Peve_00038462
## 3 OG_00003 FUN_000190-T1 Peve_00038463
## 4 OG_00004 FUN_000191-T1 Peve_00038464
## 5 OG_00005 FUN_000192-T1 Peve_00038466
## 6 OG_00006 FUN_000193-T1 Peve_00038467
##                                            ptua      type avg_identity
## 1 Pocillopora_meandrina_HIv1___RNAseq.g28886.t1 three_way     71.05900
## 2 Pocillopora_meandrina_HIv1___RNAseq.g28888.t3 three_way     68.72583
## 3 Pocillopora_meandrina_HIv1___RNAseq.g28889.t1 three_way     55.19750
## 4 Pocillopora_meandrina_HIv1___RNAseq.g28890.t1 three_way     72.04700
## 5 Pocillopora_meandrina_HIv1___RNAseq.g28893.t1 three_way     81.15867
## 6 Pocillopora_meandrina_HIv1___RNAseq.g28894.t1 three_way     70.21933
##           query accession         id reviewed
## 1 FUN_000185-T1    Q32LQ0 AMPE_BOVIN       NA
## 2 FUN_000189-T1    Q9DCT6                  NA
## 3                                          NA
## 4 FUN_000191-T1    Q95108                  NA
## 5 FUN_000192-T1    Q1LWX3                  NA
## 6 FUN_000193-T1    Q5I0K7                  NA
##                                                                               protein_name
## 1 Glutamyl aminopeptidase (EAP) (EC 3.4.11.7) (Aminopeptidase A) (AP-A) (CD antigen CD249)
## 2                                                                                         
## 3                                                                                         
## 4                                                                                         
## 5                                                                                         
## 6                                                                                         
##              organism pident length   evalue bitscore
## 1 Bos taurus (Bovine)   41.5    881 1.4e-197    691.4
## 2                       38.0    171  4.6e-18     92.8
## 3                         NA     NA       NA       NA
## 4                       44.1    136  3.3e-29    129.4
## 5                       54.3    188  3.5e-53    209.5
## 6                       53.2    158  3.4e-41    169.5
##                                                                                                                    title
## 1                                  sp|Q32LQ0|AMPE_BOVIN Glutamyl aminopeptidase OS=Bos taurus OX=9913 GN=ENPEP PE=2 SV=1
## 2        sp|Q9DCT6|BAP18_MOUSE BPTF-associated chromatin complex component 1 OS=Mus musculus OX=10090 GN=Bacc1 PE=1 SV=1
## 3                                                                                                                       
## 4                               sp|Q95108|THIOM_BOVIN Thioredoxin, mitochondrial OS=Bos taurus OX=9913 GN=TXN2 PE=1 SV=2
## 5            sp|Q1LWX3|NTAQ1_DANRE Protein N-terminal glutamine amidohydrolase OS=Danio rerio OX=7955 GN=ntaq1 PE=2 SV=1
## 6 sp|Q5I0K7|ALG13_RAT UDP-N-acetylglucosamine transferase subunit ALG13 OS=Rattus norvegicus OX=10116 GN=Alg13 PE=1 SV=1
##                                                                                                                                                                   go_ids
## 1 GO:0003081; GO:0004177; GO:0004230; GO:0005615; GO:0005737; GO:0005886; GO:0006508; GO:0008217; GO:0008270; GO:0008283; GO:0016477; GO:0042277; GO:0043171; GO:0070006
## 2                                                                                                                                                                       
## 3                                                                                                                                                                       
## 4                                                                                                                                                                       
## 5                                                                                                                                                                       
## 6                                                                                                                                                                       
##                                                                                                                                                                                                                                                                    go_bp
## 1 cell migration [GO:0016477]; cell population proliferation [GO:0008283]; peptide catabolic process [GO:0043171]; proteolysis [GO:0006508]; regulation of blood pressure [GO:0008217]; regulation of systemic arterial blood pressure by renin-angiotensin [GO:0003081]
## 2                                                                                                                                                                                                                                                                       
## 3                                                                                                                                                                                                                                                                       
## 4                                                                                                                                                                                                                                                                       
## 5                                                                                                                                                                                                                                                                       
## 6                                                                                                                                                                                                                                                                       
##                                                                                    go_cc
## 1 cytoplasm [GO:0005737]; extracellular space [GO:0005615]; plasma membrane [GO:0005886]
## 2                                                                                       
## 3                                                                                       
## 4                                                                                       
## 5                                                                                       
## 6                                                                                       
##                                                                                                                                                                                           go_mf
## 1 aminopeptidase activity [GO:0004177]; glutamyl aminopeptidase activity [GO:0004230]; metalloaminopeptidase activity [GO:0070006]; peptide binding [GO:0042277]; zinc ion binding [GO:0008270]
## 2                                                                                                                                                                                              
## 3                                                                                                                                                                                              
## 4                                                                                                                                                                                              
## 5                                                                                                                                                                                              
## 6                                                                                                                                                                                              
##                                                                           goslim_ids
## 1 GO:0003824; GO:0005615; GO:0005886; GO:0016787; GO:0048870; GO:0050886; GO:0140096
## 2                                                                                   
## 3                                                                                   
## 4                                                                                   
## 5                                                                                   
## 6                                                                                   
##                                                                                                                                              goslim_names
## 1 catalytic activity; extracellular space; plasma membrane; hydrolase activity; cell motility; endocrine process; catalytic activity, acting on a protein
## 2                                                                                                                                                        
## 3                                                                                                                                                        
## 4                                                                                                                                                        
## 5                                                                                                                                                        
## 6                                                                                                                                                        
## 'data.frame':    18372 obs. of  23 variables:
##  $ group_id    : chr  "OG_00001" "OG_00002" "OG_00003" "OG_00004" ...
##  $ apul        : chr  "FUN_000185-T1" "FUN_000189-T1" "FUN_000190-T1" "FUN_000191-T1" ...
##  $ peve        : chr  "Peve_00037402" "Peve_00038462" "Peve_00038463" "Peve_00038464" ...
##  $ ptua        : chr  "Pocillopora_meandrina_HIv1___RNAseq.g28886.t1" "Pocillopora_meandrina_HIv1___RNAseq.g28888.t3" "Pocillopora_meandrina_HIv1___RNAseq.g28889.t1" "Pocillopora_meandrina_HIv1___RNAseq.g28890.t1" ...
##  $ type        : chr  "three_way" "three_way" "three_way" "three_way" ...
##  $ avg_identity: num  71.1 68.7 55.2 72 81.2 ...
##  $ query       : chr  "FUN_000185-T1" "FUN_000189-T1" "" "FUN_000191-T1" ...
##  $ accession   : chr  "Q32LQ0" "Q9DCT6" "" "Q95108" ...
##  $ id          : chr  "AMPE_BOVIN" "" "" "" ...
##  $ reviewed    : logi  NA NA NA NA NA NA ...
##  $ protein_name: chr  "Glutamyl aminopeptidase (EAP) (EC 3.4.11.7) (Aminopeptidase A) (AP-A) (CD antigen CD249)" "" "" "" ...
##  $ organism    : chr  "Bos taurus (Bovine)" "" "" "" ...
##  $ pident      : num  41.5 38 NA 44.1 54.3 53.2 60.2 38.5 44.7 NA ...
##  $ length      : num  881 171 NA 136 188 158 447 148 488 NA ...
##  $ evalue      : num  1.4e-197 4.6e-18 NA 3.3e-29 3.5e-53 ...
##  $ bitscore    : num  691.4 92.8 NA 129.4 209.5 ...
##  $ title       : chr  "sp|Q32LQ0|AMPE_BOVIN Glutamyl aminopeptidase OS=Bos taurus OX=9913 GN=ENPEP PE=2 SV=1" "sp|Q9DCT6|BAP18_MOUSE BPTF-associated chromatin complex component 1 OS=Mus musculus OX=10090 GN=Bacc1 PE=1 SV=1" "" "sp|Q95108|THIOM_BOVIN Thioredoxin, mitochondrial OS=Bos taurus OX=9913 GN=TXN2 PE=1 SV=2" ...
##  $ go_ids      : chr  "GO:0003081; GO:0004177; GO:0004230; GO:0005615; GO:0005737; GO:0005886; GO:0006508; GO:0008217; GO:0008270; GO:"| __truncated__ "" "" "" ...
##  $ go_bp       : chr  "cell migration [GO:0016477]; cell population proliferation [GO:0008283]; peptide catabolic process [GO:0043171]"| __truncated__ "" "" "" ...
##  $ go_cc       : chr  "cytoplasm [GO:0005737]; extracellular space [GO:0005615]; plasma membrane [GO:0005886]" "" "" "" ...
##  $ go_mf       : chr  "aminopeptidase activity [GO:0004177]; glutamyl aminopeptidase activity [GO:0004230]; metalloaminopeptidase acti"| __truncated__ "" "" "" ...
##  $ goslim_ids  : chr  "GO:0003824; GO:0005615; GO:0005886; GO:0016787; GO:0048870; GO:0050886; GO:0140096" "" "" "" ...
##  $ goslim_names: chr  "catalytic activity; extracellular space; plasma membrane; hydrolase activity; cell motility; endocrine process;"| __truncated__ "" "" "" ...</code></pre>
</section>
<section id="extract-ortholog-expression-data" class="level2">
<h2 class="anchored" data-anchor-id="extract-ortholog-expression-data">3.2 Extract ortholog expression data</h2>
<p>Now let’s extract expression data for genes that are present in the ortholog groups. We’ll use the gene count matrices with gene IDs to properly map the data.</p>
<section id="load-gene-count-matrices" class="level3">
<h3 class="anchored" data-anchor-id="load-gene-count-matrices">3.2.1 Load gene count matrices</h3>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define file paths for gene count matrices</span></span>
<span id="cb6-2">apul_gene_matrix_file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../D-Apul/output/02.20-D-Apul-RNAseq-alignment-HiSat2/apul-gene_count_matrix.csv"</span></span>
<span id="cb6-3">peve_gene_matrix_file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../E-Peve/output/02.20-E-Peve-RNAseq-alignment-HiSat2/peve-gene_count_matrix.csv"</span></span>
<span id="cb6-4">ptua_gene_matrix_file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../../F-Ptua/output/02.20-F-Ptua-RNAseq-alignment-HiSat2/ptua-gene_count_matrix.csv"</span></span>
<span id="cb6-5"></span>
<span id="cb6-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load gene count matrices for each species</span></span>
<span id="cb6-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Loading gene count matrices...</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb6-8"></span>
<span id="cb6-9">apul_gene_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(apul_gene_matrix_file)</span>
<span id="cb6-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Apul gene matrix dimensions:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(apul_gene_matrix), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb6-11"></span>
<span id="cb6-12">peve_gene_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(peve_gene_matrix_file)</span>
<span id="cb6-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Peve gene matrix dimensions:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(peve_gene_matrix), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb6-14"></span>
<span id="cb6-15">ptua_gene_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(ptua_gene_matrix_file)</span>
<span id="cb6-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ptua gene matrix dimensions:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dim</span>(ptua_gene_matrix), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>## Loading gene count matrices...
## 
## Apul gene matrix dimensions: 44371 41 
## Peve gene matrix dimensions: 40389 39 
## Ptua gene matrix dimensions: 31840 40</code></pre>
</section>
<section id="filter-ortholog-groups-for-complete-three-way-matches" class="level3">
<h3 class="anchored" data-anchor-id="filter-ortholog-groups-for-complete-three-way-matches">3.2.2 Filter ortholog groups for complete three-way matches</h3>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Filtering for complete three-way ortholog groups...</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb8-2"></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Keep only rows where all three species have entries (no NA values or empty strings)</span></span>
<span id="cb8-4">complete_ortholog_groups <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ortholog_groups[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nzchar</span>(ortholog_groups<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>apul) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> </span>
<span id="cb8-5">                                          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nzchar</span>(ortholog_groups<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>peve) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> </span>
<span id="cb8-6">                                          <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nzchar</span>(ortholog_groups<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ptua), ]</span>
<span id="cb8-7"></span>
<span id="cb8-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Total ortholog groups:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(ortholog_groups), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb8-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Complete three-way ortholog groups:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(complete_ortholog_groups), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>## Filtering for complete three-way ortholog groups...
## Total ortholog groups: 18372 
## Complete three-way ortholog groups: 10381</code></pre>
</section>
<section id="filter-for-expression-data-availability" class="level3">
<h3 class="anchored" data-anchor-id="filter-for-expression-data-availability">3.2.3 Filter for expression data availability</h3>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Filtering ortholog groups to ensure all genes have expression data...</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Clean gene IDs to check against expression data</span></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For Apul: remove -T[n] suffix from ortholog groups to match gene matrix format</span></span>
<span id="cb10-5">apul_ortholog_genes_check <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-T[0-9]+$"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, complete_ortholog_groups<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>apul)</span>
<span id="cb10-6"></span>
<span id="cb10-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For Peve and Ptua: use as-is (will clean gene matrix IDs later)</span></span>
<span id="cb10-8">peve_ortholog_genes_check <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complete_ortholog_groups<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>peve</span>
<span id="cb10-9">ptua_ortholog_genes_check <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complete_ortholog_groups<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ptua</span>
<span id="cb10-10"></span>
<span id="cb10-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check which genes are present in expression data</span></span>
<span id="cb10-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (Note: We need to clean gene matrix IDs to match)</span></span>
<span id="cb10-13">apul_gene_matrix_ids <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^gene-"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, apul_gene_matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene_id)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove gene- prefix if present</span></span>
<span id="cb10-14">peve_gene_matrix_ids <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^gene-"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, peve_gene_matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene_id)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove gene- prefix</span></span>
<span id="cb10-15">ptua_gene_matrix_ids <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^gene-"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, ptua_gene_matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene_id)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove gene- prefix</span></span>
<span id="cb10-16"></span>
<span id="cb10-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find which ortholog genes are present in each species' expression data</span></span>
<span id="cb10-18">apul_present <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> apul_ortholog_genes_check <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> apul_gene_matrix_ids</span>
<span id="cb10-19">peve_present <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> peve_ortholog_genes_check <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> peve_gene_matrix_ids</span>
<span id="cb10-20">ptua_present <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ptua_ortholog_genes_check <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> ptua_gene_matrix_ids</span>
<span id="cb10-21"></span>
<span id="cb10-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Keep only ortholog groups where all three species have expression data</span></span>
<span id="cb10-23">expression_complete_mask <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> apul_present <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> peve_present <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> ptua_present</span>
<span id="cb10-24">complete_ortholog_groups <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> complete_ortholog_groups[expression_complete_mask, ]</span>
<span id="cb10-25"></span>
<span id="cb10-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ortholog groups after filtering for expression data availability:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(complete_ortholog_groups), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>## Filtering ortholog groups to ensure all genes have expression data...
## Ortholog groups after filtering for expression data availability: 10258</code></pre>
</section>
<section id="gene-id-cleaning-examples" class="level3">
<h3 class="anchored" data-anchor-id="gene-id-cleaning-examples">3.2.4 Gene ID cleaning examples</h3>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">=== GENE ID CLEANING EXAMPLES ===</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb12-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Apul (clean ortholog groups to match gene matrix):</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb12-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ortholog groups original:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(complete_ortholog_groups<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>apul, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb12-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ortholog groups cleaned:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-T[0-9]+$"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, complete_ortholog_groups<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>apul), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb12-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gene matrix (target format):"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(apul_gene_matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene_id, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb12-6"></span>
<span id="cb12-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Peve (clean gene matrix to match ortholog groups):</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb12-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ortholog groups (target format):"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(complete_ortholog_groups<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>peve, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>) </span>
<span id="cb12-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gene matrix original:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(peve_gene_matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene_id, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb12-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gene matrix cleaned:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(peve_gene_matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene_id_clean, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb12-11"></span>
<span id="cb12-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ptua (clean gene matrix to match ortholog groups):</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb12-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ortholog groups (target format):"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(complete_ortholog_groups<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ptua, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb12-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gene matrix original:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(ptua_gene_matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene_id, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb12-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gene matrix cleaned:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(ptua_gene_matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene_id_clean, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>## 
## === GENE ID CLEANING EXAMPLES ===
## Apul (clean ortholog groups to match gene matrix):
## Ortholog groups original: FUN_000185-T1 FUN_000189-T1 FUN_000190-T1 
## Ortholog groups cleaned: FUN_000185 FUN_000189 FUN_000190 
## Gene matrix (target format): FUN_002326 FUN_002315 FUN_002316 
## 
## Peve (clean gene matrix to match ortholog groups):
## Ortholog groups (target format): Peve_00037402 Peve_00038462 Peve_00038463 
## Gene matrix original: gene-Peve_00000032 gene-Peve_00000122 gene-Peve_00000008 
## Gene matrix cleaned: 
## 
## Ptua (clean gene matrix to match ortholog groups):
## Ortholog groups (target format): Pocillopora_meandrina_HIv1___RNAseq.g28886.t1 Pocillopora_meandrina_HIv1___RNAseq.g28888.t3 Pocillopora_meandrina_HIv1___RNAseq.g28889.t1 
## Gene matrix original: gene-Pocillopora_meandrina_HIv1___RNAseq.g20905.t1 gene-Pocillopora_meandrina_HIv1___RNAseq.g20902.t1 gene-Pocillopora_meandrina_HIv1___RNAseq.g20903.t1 
## Gene matrix cleaned:</code></pre>
</section>
<section id="clean-gene-ids-for-matching" class="level3">
<h3 class="anchored" data-anchor-id="clean-gene-ids-for-matching">3.2.5 Clean gene IDs for matching</h3>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cleaning gene matrix IDs to match ortholog group format...</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb14-2"></span>
<span id="cb14-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For Apul: ortholog groups have "FUN_000185-T1", gene matrix has "FUN_002326"</span></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># We need to remove "-T1" from ortholog groups to match gene matrix</span></span>
<span id="cb14-5">apul_ortholog_genes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-T[0-9]+$"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, complete_ortholog_groups<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>apul))</span>
<span id="cb14-6"></span>
<span id="cb14-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For Peve and Ptua: keep ortholog groups as-is and clean gene matrix</span></span>
<span id="cb14-8">peve_ortholog_genes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(complete_ortholog_groups<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>peve)</span>
<span id="cb14-9">ptua_ortholog_genes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(complete_ortholog_groups<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ptua)</span>
<span id="cb14-10"></span>
<span id="cb14-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Clean gene matrix IDs accordingly</span></span>
<span id="cb14-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apul: gene matrix already in correct format (no cleaning needed)</span></span>
<span id="cb14-13">apul_gene_matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene_id_clean <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> apul_gene_matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene_id</span>
<span id="cb14-14"></span>
<span id="cb14-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Peve: gene matrix has "gene-Peve_00000032", ortholog groups have "Peve_00037402"  </span></span>
<span id="cb14-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># So we need to remove "gene-" prefix from gene matrix</span></span>
<span id="cb14-17">peve_gene_matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene_id_clean <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^gene-"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, peve_gene_matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene_id)</span>
<span id="cb14-18"></span>
<span id="cb14-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ptua: gene matrix has "gene-Pocillopora_meandrina_HIv1___RNAseq.g20905.t1", </span></span>
<span id="cb14-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ortholog groups have "Pocillopora_meandrina_HIv1___RNAseq.g28886.t1"</span></span>
<span id="cb14-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># So we just need to remove "gene-" prefix from gene matrix</span></span>
<span id="cb14-22">ptua_gene_matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene_id_clean <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^gene-"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, ptua_gene_matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene_id)</span>
<span id="cb14-23"></span>
<span id="cb14-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Apul ortholog genes (complete groups only):"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(apul_ortholog_genes), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb14-25"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Peve ortholog genes (complete groups only):"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(peve_ortholog_genes), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb14-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ptua ortholog genes (complete groups only):"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(ptua_ortholog_genes), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>## Cleaning gene matrix IDs to match ortholog group format...
## Apul ortholog genes (complete groups only): 10223 
## Peve ortholog genes (complete groups only): 10223 
## Ptua ortholog genes (complete groups only): 10223</code></pre>
</section>
<section id="create-ortholog-expression-data-with-group_id-mapping" class="level3">
<h3 class="anchored" data-anchor-id="create-ortholog-expression-data-with-group_id-mapping">3.2.6 Create ortholog expression data with group_id mapping</h3>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Creating ortholog expression data with proper group_id mapping...</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb16-2"></span>
<span id="cb16-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Function to extract expression data for a species using ortholog group mapping</span></span>
<span id="cb16-4">extract_species_expression <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(ortholog_groups_df, gene_matrix, species_col, species_name) {</span>
<span id="cb16-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Processing"</span>, species_name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"...</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb16-6">  </span>
<span id="cb16-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove duplicate group_ids, keeping first occurrence of each</span></span>
<span id="cb16-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"  Input ortholog groups:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(ortholog_groups_df), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb16-9">  unique_groups <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ortholog_groups_df[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">duplicated</span>(ortholog_groups_df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>group_id), ]</span>
<span id="cb16-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"  After removing duplicates:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(unique_groups), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"unique group_ids</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb16-11">  </span>
<span id="cb16-12">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create results data frame starting with group_id</span></span>
<span id="cb16-13">  result_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group_id =</span> unique_groups<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>group_id, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stringsAsFactors =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb16-14">  </span>
<span id="cb16-15">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get expression columns (exclude gene_id and gene_id_clean columns)</span></span>
<span id="cb16-16">  expr_cols <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setdiff</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(gene_matrix), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_id"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_id_clean"</span>))</span>
<span id="cb16-17">  </span>
<span id="cb16-18">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize expression columns with NA</span></span>
<span id="cb16-19">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>(col <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> expr_cols) {</span>
<span id="cb16-20">    result_df[[col]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span></span>
<span id="cb16-21">  }</span>
<span id="cb16-22">  </span>
<span id="cb16-23">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For each ortholog group, find the corresponding gene and extract expression</span></span>
<span id="cb16-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>(i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_len</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(unique_groups))) {</span>
<span id="cb16-25">    target_gene <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> unique_groups[[species_col]][i]</span>
<span id="cb16-26">    </span>
<span id="cb16-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Clean target gene for matching</span></span>
<span id="cb16-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span>(species_name <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Apul"</span>) {</span>
<span id="cb16-29">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove transcript suffix for Apul</span></span>
<span id="cb16-30">      target_gene_clean <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-T[0-9]+$"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, target_gene)</span>
<span id="cb16-31">      matching_rows <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(gene_matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene_id_clean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> target_gene_clean)</span>
<span id="cb16-32">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb16-33">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For Peve and Ptua, match cleaned gene_id</span></span>
<span id="cb16-34">      matching_rows <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(gene_matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene_id_clean <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> target_gene)</span>
<span id="cb16-35">    }</span>
<span id="cb16-36">    </span>
<span id="cb16-37">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(matching_rows) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) {</span>
<span id="cb16-38">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Single match - copy expression data</span></span>
<span id="cb16-39">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>(col <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> expr_cols) {</span>
<span id="cb16-40">        result_df[i, col] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gene_matrix[matching_rows, col]</span>
<span id="cb16-41">      }</span>
<span id="cb16-42">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(matching_rows) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) {</span>
<span id="cb16-43">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Multiple matches - take first gene (no averaging)</span></span>
<span id="cb16-44">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"  Group"</span>, unique_groups<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>group_id[i], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"has"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(matching_rows), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene matches - using first match</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb16-45">      first_match <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> matching_rows[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb16-46">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>(col <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> expr_cols) {</span>
<span id="cb16-47">        result_df[i, col] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gene_matrix[first_match, col]</span>
<span id="cb16-48">      }</span>
<span id="cb16-49">    } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb16-50">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># No match - leave as NA</span></span>
<span id="cb16-51">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"  Warning: No expression data found for group"</span>, unique_groups<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>group_id[i], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene"</span>, target_gene, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb16-52">    }</span>
<span id="cb16-53">  }</span>
<span id="cb16-54">  </span>
<span id="cb16-55">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove rows with all NA expression values</span></span>
<span id="cb16-56">  expr_na_mask <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(result_df[, expr_cols, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">drop =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(x)))</span>
<span id="cb16-57">  result_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> result_df[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>expr_na_mask, ]</span>
<span id="cb16-58">  </span>
<span id="cb16-59">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"  Final dimensions:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(result_df), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ortholog groups x"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(result_df)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"samples</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb16-60">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"  Removed"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(expr_na_mask), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"groups with no expression data</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb16-61">  </span>
<span id="cb16-62">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(result_df)</span>
<span id="cb16-63">}</span>
<span id="cb16-64"></span>
<span id="cb16-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract expression data for each species using the ortholog group mapping</span></span>
<span id="cb16-66">apul_ortholog_expression <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extract_species_expression</span>(complete_ortholog_groups, apul_gene_matrix, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"apul"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Apul"</span>)</span>
<span id="cb16-67">peve_ortholog_expression <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extract_species_expression</span>(complete_ortholog_groups, peve_gene_matrix, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"peve"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Peve"</span>)</span>
<span id="cb16-68">ptua_ortholog_expression <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">extract_species_expression</span>(complete_ortholog_groups, ptua_gene_matrix, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ptua"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ptua"</span>)</span>
<span id="cb16-69"></span>
<span id="cb16-70"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"=== FINAL ORTHOLOG EXPRESSION DATA DIMENSIONS ===</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb16-71"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Apul:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(apul_ortholog_expression), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ortholog groups x"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(apul_ortholog_expression)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"samples</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb16-72"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Peve:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(peve_ortholog_expression), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ortholog groups x"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(peve_ortholog_expression)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"samples</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb16-73"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ptua:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(ptua_ortholog_expression), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ortholog groups x"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(ptua_ortholog_expression)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"samples</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>## Creating ortholog expression data with proper group_id mapping...
## Processing Apul ...
##   Input ortholog groups: 10258 
##   After removing duplicates: 10223 unique group_ids
##   Final dimensions: 10223 ortholog groups x 40 samples
##   Removed 0 groups with no expression data
## 
## Processing Peve ...
##   Input ortholog groups: 10258 
##   After removing duplicates: 10223 unique group_ids
##   Final dimensions: 10223 ortholog groups x 38 samples
##   Removed 0 groups with no expression data
## 
## Processing Ptua ...
##   Input ortholog groups: 10258 
##   After removing duplicates: 10223 unique group_ids
##   Final dimensions: 10223 ortholog groups x 39 samples
##   Removed 0 groups with no expression data
## 
## === FINAL ORTHOLOG EXPRESSION DATA DIMENSIONS ===
## Apul: 10223 ortholog groups x 40 samples
## Peve: 10223 ortholog groups x 38 samples
## Ptua: 10223 ortholog groups x 39 samples</code></pre>
</section>
<section id="write-ortholog-expression-data" class="level3">
<h3 class="anchored" data-anchor-id="write-ortholog-expression-data">3.2.7 Write ortholog expression data</h3>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Exporting ortholog expression data to CSV files...</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb18-2"></span>
<span id="cb18-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define output file paths</span></span>
<span id="cb18-4">apul_output_file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"apul_ortholog_expression.csv"</span>)</span>
<span id="cb18-5">peve_output_file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"peve_ortholog_expression.csv"</span>)</span>
<span id="cb18-6">ptua_output_file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ptua_ortholog_expression.csv"</span>)</span>
<span id="cb18-7"></span>
<span id="cb18-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Write CSV files without quotes</span></span>
<span id="cb18-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.csv</span>(apul_ortholog_expression, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> apul_output_file, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quote =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb18-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Exported Apul ortholog expression data to:"</span>, apul_output_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb18-11"></span>
<span id="cb18-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.csv</span>(peve_ortholog_expression, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> peve_output_file, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quote =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb18-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Exported Peve ortholog expression data to:"</span>, peve_output_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb18-14"></span>
<span id="cb18-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.csv</span>(ptua_ortholog_expression, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> ptua_output_file, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quote =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb18-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Exported Ptua ortholog expression data to:"</span>, ptua_output_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb18-17"></span>
<span id="cb18-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">All ortholog expression data exported successfully!</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>## Exporting ortholog expression data to CSV files...
## Exported Apul ortholog expression data to: ../output/13.00-multiomics-barnacle/apul_ortholog_expression.csv 
## Exported Peve ortholog expression data to: ../output/13.00-multiomics-barnacle/peve_ortholog_expression.csv 
## Exported Ptua ortholog expression data to: ../output/13.00-multiomics-barnacle/ptua_ortholog_expression.csv 
## 
## All ortholog expression data exported successfully!</code></pre>
</section>
<section id="column-structure-analysis" class="level3">
<h3 class="anchored" data-anchor-id="column-structure-analysis">3.2.8 Column structure analysis</h3>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"=== COLUMN STRUCTURE ANALYSIS ===</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb20-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Apul columns:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(apul_ortholog_expression), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb20-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Apul column names (first 10):"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(apul_ortholog_expression), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb20-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Apul column names (last 10):"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tail</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(apul_ortholog_expression), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb20-5"></span>
<span id="cb20-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Peve columns:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(peve_ortholog_expression), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb20-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Peve column names (first 10):"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(peve_ortholog_expression), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb20-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Peve column names (last 10):"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tail</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(peve_ortholog_expression), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb20-9"></span>
<span id="cb20-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ptua columns:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(ptua_ortholog_expression), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb20-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ptua column names (first 10):"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(ptua_ortholog_expression), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb20-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ptua column names (last 10):"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tail</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(ptua_ortholog_expression), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">collapse =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">", "</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>## === COLUMN STRUCTURE ANALYSIS ===
## Apul columns: 41 
## Apul column names (first 10): group_id, ACR.139.TP1, ACR.139.TP2, ACR.139.TP3, ACR.139.TP4, ACR.145.TP1, ACR.145.TP2, ACR.145.TP3, ACR.145.TP4, ACR.150.TP1 
## Apul column names (last 10): ACR.237.TP3, ACR.237.TP4, ACR.244.TP1, ACR.244.TP2, ACR.244.TP3, ACR.244.TP4, ACR.265.TP1, ACR.265.TP2, ACR.265.TP3, ACR.265.TP4 
## 
## Peve columns: 39 
## Peve column names (first 10): group_id, POR.216.TP1, POR.216.TP2, POR.216.TP3, POR.216.TP4, POR.236.TP1, POR.236.TP2, POR.245.TP1, POR.245.TP2, POR.245.TP3 
## Peve column names (last 10): POR.73.TP3, POR.73.TP4, POR.74.TP1, POR.74.TP2, POR.74.TP3, POR.74.TP4, POR.83.TP1, POR.83.TP2, POR.83.TP3, POR.83.TP4 
## 
## Ptua columns: 40 
## Ptua column names (first 10): group_id, POC.201.TP1, POC.201.TP2, POC.201.TP3, POC.219.TP1, POC.219.TP2, POC.219.TP3, POC.219.TP4, POC.222.TP1, POC.222.TP2 
## Ptua column names (last 10): POC.52.TP3, POC.52.TP4, POC.53.TP1, POC.53.TP2, POC.53.TP3, POC.53.TP4, POC.57.TP1, POC.57.TP2, POC.57.TP3, POC.57.TP4</code></pre>
</section>
<section id="summary-statistics" class="level3">
<h3 class="anchored" data-anchor-id="summary-statistics">3.2.9 Summary statistics</h3>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"=== LINE COUNTS FOR ORTHOLOG EXPRESSION DATA ===</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb22-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Apul ortholog expression with info: "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(apul_ortholog_expression), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" rows</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb22-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Peve ortholog expression with info: "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(peve_ortholog_expression), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" rows</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb22-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ptua ortholog expression with info: "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(ptua_ortholog_expression), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" rows</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>## === LINE COUNTS FOR ORTHOLOG EXPRESSION DATA ===
## Apul ortholog expression with info:  10223  rows
## Peve ortholog expression with info:  10223  rows
## Ptua ortholog expression with info:  10223  rows</code></pre>
</section>
<section id="diagnostic-analysis" class="level3">
<h3 class="anchored" data-anchor-id="diagnostic-analysis">3.2.10 Diagnostic analysis</h3>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">=== VERIFICATION: THREE-WAY ORTHOLOG COUNTS ===</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb24-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"After filtering, all species should have identical three_way ortholog counts.</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb24-3"></span>
<span id="cb24-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check how many genes we have for each species</span></span>
<span id="cb24-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Genes found in expression data by species:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb24-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Apul ortholog expression (before adding info):"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(apul_ortholog_expression), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb24-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Peve ortholog expression (before adding info):"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(peve_ortholog_expression), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb24-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ptua ortholog expression (before adding info):"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(ptua_ortholog_expression), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb24-9"></span>
<span id="cb24-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Verify all ortholog groups are three-way</span></span>
<span id="cb24-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Complete three-way ortholog groups available:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(complete_ortholog_groups), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb24-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"All should be type 'three_way'? Check:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">table</span>(complete_ortholog_groups<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>type), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb24-13"></span>
<span id="cb24-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Verify perfect gene coverage (should be 100% for all species now)</span></span>
<span id="cb24-15">apul_coverage <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">intersect</span>(apul_ortholog_genes, apul_gene_matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene_id_clean))</span>
<span id="cb24-16">peve_coverage <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">intersect</span>(peve_ortholog_genes, peve_gene_matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene_id_clean))</span>
<span id="cb24-17">ptua_coverage <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">intersect</span>(ptua_ortholog_genes, ptua_gene_matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene_id_clean))</span>
<span id="cb24-18"></span>
<span id="cb24-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gene coverage in expression data (should be 100% for all):</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb24-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Apul: "</span>, apul_coverage, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(apul_ortholog_genes), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" ("</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(apul_coverage<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(apul_ortholog_genes)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%)</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb24-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Peve: "</span>, peve_coverage, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(peve_ortholog_genes), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" ("</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(peve_coverage<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(peve_ortholog_genes)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%)</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb24-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ptua: "</span>, ptua_coverage, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(ptua_ortholog_genes), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" ("</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(ptua_coverage<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(ptua_ortholog_genes)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"%)</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>## 
## === VERIFICATION: THREE-WAY ORTHOLOG COUNTS ===
## After filtering, all species should have identical three_way ortholog counts.
## 
## Genes found in expression data by species:
## Apul ortholog expression (before adding info): 10223 
## Peve ortholog expression (before adding info): 10223 
## Ptua ortholog expression (before adding info): 10223 
## 
## Complete three-way ortholog groups available: 10258 
## All should be type 'three_way'? Check: 10258 
## 
## Gene coverage in expression data (should be 100% for all):
## Apul:  10223 / 10223  ( 100 %)
## Peve:  10223 / 10223  ( 100 %)
## Ptua:  10223 / 10223  ( 100 %)</code></pre>
</section>
<section id="preview-expression-data" class="level3">
<h3 class="anchored" data-anchor-id="preview-expression-data">3.2.11 Preview expression data</h3>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">=== PREVIEW OF ORTHOLOG EXPRESSION DATA ===</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb26-2"></span>
<span id="cb26-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Apul ortholog expression:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb26-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(apul_ortholog_expression)</span>
<span id="cb26-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb26-6"></span>
<span id="cb26-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Peve ortholog expression:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb26-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(peve_ortholog_expression)</span>
<span id="cb26-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb26-10"></span>
<span id="cb26-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Ptua ortholog expression:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb26-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(ptua_ortholog_expression)</span>
<span id="cb26-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>## 
## === PREVIEW OF ORTHOLOG EXPRESSION DATA ===
## Apul ortholog expression:
## 
## 'data.frame':    10223 obs. of  41 variables:
##  $ group_id   : chr  "OG_00001" "OG_00002" "OG_00003" "OG_00004" ...
##  $ ACR.139.TP1: int  2507 1890 323 1600 295 185 1000 102 707 641 ...
##  $ ACR.139.TP2: int  2446 3030 237 1745 398 233 1186 88 1080 669 ...
##  $ ACR.139.TP3: int  1547 1409 202 3039 582 393 1098 61 793 586 ...
##  $ ACR.139.TP4: int  1917 1037 308 1843 329 304 1011 30 843 448 ...
##  $ ACR.145.TP1: int  1514 868 492 2521 435 484 1119 35 153 330 ...
##  $ ACR.145.TP2: int  1257 1930 188 1243 255 146 569 71 572 1042 ...
##  $ ACR.145.TP3: int  864 1370 356 3488 504 310 796 0 234 872 ...
##  $ ACR.145.TP4: int  992 980 345 1408 271 110 1120 63 239 265 ...
##  $ ACR.150.TP1: int  456 379 308 2502 279 257 836 59 163 181 ...
##  $ ACR.150.TP2: int  1774 4357 421 2344 388 308 849 53 415 1386 ...
##  $ ACR.150.TP3: int  2107 3236 267 1948 393 347 994 68 1036 1241 ...
##  $ ACR.150.TP4: int  2344 1484 382 1815 373 331 1212 59 1010 854 ...
##  $ ACR.173.TP1: int  511 549 394 1213 256 176 520 59 226 281 ...
##  $ ACR.173.TP2: int  1295 1658 291 869 256 159 866 113 658 566 ...
##  $ ACR.173.TP3: int  1023 1505 479 1806 311 371 878 39 707 667 ...
##  $ ACR.173.TP4: int  606 443 566 1874 281 384 674 23 322 215 ...
##  $ ACR.186.TP1: int  140 508 372 1731 193 282 465 0 161 102 ...
##  $ ACR.186.TP2: int  2046 3286 330 2320 400 343 716 75 915 1271 ...
##  $ ACR.186.TP3: int  915 1112 314 3149 270 248 395 9 363 642 ...
##  $ ACR.186.TP4: int  1943 1317 436 2586 292 253 951 18 876 505 ...
##  $ ACR.225.TP1: int  1687 467 463 1773 429 244 834 12 438 135 ...
##  $ ACR.225.TP2: int  1812 2140 292 1353 164 93 915 72 651 1095 ...
##  $ ACR.225.TP3: int  2225 2327 525 2417 479 309 1061 69 904 661 ...
##  $ ACR.225.TP4: int  850 411 324 2484 305 203 659 18 315 125 ...
##  $ ACR.229.TP1: int  3876 1026 493 2266 832 471 1699 54 847 424 ...
##  $ ACR.229.TP2: int  2471 3540 276 2826 358 272 762 93 674 1378 ...
##  $ ACR.229.TP3: int  2409 2606 399 2208 303 272 844 58 993 798 ...
##  $ ACR.229.TP4: int  756 497 842 2606 325 339 789 21 119 231 ...
##  $ ACR.237.TP1: int  1392 583 374 3052 474 399 1247 21 372 235 ...
##  $ ACR.237.TP2: int  1297 1620 231 1447 343 201 919 100 560 1073 ...
##  $ ACR.237.TP3: int  2023 3745 246 2193 341 224 1174 127 1019 1437 ...
##  $ ACR.237.TP4: int  1080 673 293 3552 367 410 1046 39 408 490 ...
##  $ ACR.244.TP1: int  998 469 376 1363 490 281 630 28 203 91 ...
##  $ ACR.244.TP2: int  1987 3116 403 2706 406 231 1268 102 695 1592 ...
##  $ ACR.244.TP3: int  2553 3142 400 2036 422 203 1227 186 1127 814 ...
##  $ ACR.244.TP4: int  752 403 494 2792 308 333 601 5 245 339 ...
##  $ ACR.265.TP1: int  1004 339 815 3730 507 336 912 30 153 255 ...
##  $ ACR.265.TP2: int  1876 3004 311 3363 568 263 1106 74 577 1454 ...
##  $ ACR.265.TP3: int  1848 1914 383 2090 484 187 1135 85 394 624 ...
##  $ ACR.265.TP4: int  697 586 686 3726 594 494 1044 34 205 351 ...
## 
## 
## 
## Peve ortholog expression:
## 'data.frame':    10223 obs. of  39 variables:
##  $ group_id   : chr  "OG_00001" "OG_00002" "OG_00003" "OG_00004" ...
##  $ POR.216.TP1: int  2254 42 894 67 51 6 217 11 256 0 ...
##  $ POR.216.TP2: int  2122 62 191 233 147 43 768 84 219 9 ...
##  $ POR.216.TP3: int  785 25 94 70 58 41 357 13 90 0 ...
##  $ POR.216.TP4: int  470 17 131 38 35 0 136 16 37 0 ...
##  $ POR.236.TP1: int  1971 45 220 251 138 45 681 38 213 11 ...
##  $ POR.236.TP2: int  849 15 61 81 61 16 300 11 83 0 ...
##  $ POR.245.TP1: int  1757 33 276 204 127 8 429 48 218 10 ...
##  $ POR.245.TP2: int  714 8 59 88 59 47 269 30 101 4 ...
##  $ POR.245.TP3: int  587 8 70 69 37 19 170 25 100 0 ...
##  $ POR.245.TP4: int  1479 90 564 91 88 18 712 72 82 12 ...
##  $ POR.260.TP1: int  2395 67 506 189 149 56 674 39 291 0 ...
##  $ POR.260.TP2: int  937 23 73 69 52 16 377 12 149 0 ...
##  $ POR.260.TP3: int  739 8 50 73 81 19 334 18 71 0 ...
##  $ POR.260.TP4: int  1196 37 337 139 49 27 327 36 144 0 ...
##  $ POR.262.TP1: int  1603 52 192 113 68 11 363 12 179 0 ...
##  $ POR.262.TP2: int  1412 92 156 215 111 25 918 41 131 0 ...
##  $ POR.262.TP3: int  1604 66 145 155 177 36 742 54 218 0 ...
##  $ POR.262.TP4: int  882 56 124 156 100 23 435 45 103 0 ...
##  $ POR.69.TP1 : int  742 44 172 58 82 8 226 40 127 0 ...
##  $ POR.69.TP2 : int  1357 26 463 89 70 10 379 20 212 8 ...
##  $ POR.69.TP3 : int  821 19 23 73 22 13 239 10 126 6 ...
##  $ POR.69.TP4 : int  387 14 67 46 7 17 114 34 118 3 ...
##  $ POR.72.TP1 : int  933 44 160 77 46 8 378 45 123 0 ...
##  $ POR.72.TP2 : int  1318 37 395 100 97 11 144 18 146 0 ...
##  $ POR.72.TP3 : int  1343 60 345 67 49 11 253 26 241 0 ...
##  $ POR.72.TP4 : int  1665 73 221 158 122 25 310 18 204 0 ...
##  $ POR.73.TP1 : int  837 25 126 52 57 12 276 21 209 0 ...
##  $ POR.73.TP2 : int  1226 22 265 38 33 10 165 29 130 0 ...
##  $ POR.73.TP3 : int  362 5 17 30 19 5 151 9 59 0 ...
##  $ POR.73.TP4 : int  716 9 49 51 19 5 137 23 115 0 ...
##  $ POR.74.TP1 : int  1590 44 288 107 106 3 273 50 131 0 ...
##  $ POR.74.TP2 : int  427 18 90 46 44 0 131 18 42 0 ...
##  $ POR.74.TP3 : int  1089 28 126 111 34 21 358 9 149 0 ...
##  $ POR.74.TP4 : int  578 3 132 50 24 4 98 0 79 0 ...
##  $ POR.83.TP1 : int  631 56 235 93 40 9 305 23 82 9 ...
##  $ POR.83.TP2 : int  999 35 252 67 13 2 101 4 159 0 ...
##  $ POR.83.TP3 : int  743 30 35 46 36 28 114 17 129 0 ...
##  $ POR.83.TP4 : int  524 13 82 30 10 0 74 4 60 0 ...
## 
## 
## 
## Ptua ortholog expression:
## 'data.frame':    10223 obs. of  40 variables:
##  $ group_id   : chr  "OG_00001" "OG_00002" "OG_00003" "OG_00004" ...
##  $ POC.201.TP1: int  1444 376 86 345 79 86 727 441 1033 53 ...
##  $ POC.201.TP2: int  794 557 139 311 135 179 1156 151 1296 112 ...
##  $ POC.201.TP3: int  171 154 75 112 40 35 257 81 205 33 ...
##  $ POC.219.TP1: int  415 496 220 480 248 143 926 282 868 56 ...
##  $ POC.219.TP2: int  365 402 87 255 118 108 556 201 625 55 ...
##  $ POC.219.TP3: int  57 113 38 93 12 4 78 56 99 0 ...
##  $ POC.219.TP4: int  187 281 60 235 21 45 343 286 366 21 ...
##  $ POC.222.TP1: int  396 638 222 651 229 406 963 408 1162 140 ...
##  $ POC.222.TP2: int  804 239 166 205 59 181 575 327 1238 44 ...
##  $ POC.222.TP3: int  1415 687 176 580 347 287 1113 208 1757 93 ...
##  $ POC.222.TP4: int  327 238 106 198 58 109 380 223 398 52 ...
##  $ POC.255.TP1: int  307 464 111 328 143 157 780 291 850 76 ...
##  $ POC.255.TP2: int  466 375 101 148 50 45 432 148 815 48 ...
##  $ POC.255.TP3: int  229 218 152 202 79 48 366 101 253 17 ...
##  $ POC.255.TP4: int  438 396 133 438 132 99 748 173 1112 18 ...
##  $ POC.259.TP1: int  733 565 142 271 93 109 790 343 876 75 ...
##  $ POC.259.TP2: int  1167 662 181 401 168 317 1228 271 1097 107 ...
##  $ POC.259.TP3: int  311 300 121 374 83 53 524 357 636 21 ...
##  $ POC.259.TP4: int  723 509 178 594 119 159 823 329 1149 62 ...
##  $ POC.40.TP1 : int  69 228 227 209 84 116 373 338 762 18 ...
##  $ POC.40.TP2 : int  155 251 132 272 60 74 355 329 854 31 ...
##  $ POC.40.TP3 : int  245 500 142 368 111 135 649 228 898 55 ...
##  $ POC.40.TP4 : int  75 324 144 288 124 134 446 235 1072 27 ...
##  $ POC.42.TP1 : int  155 312 170 236 84 136 462 315 621 24 ...
##  $ POC.42.TP2 : int  263 520 222 370 114 112 662 399 889 30 ...
##  $ POC.42.TP3 : int  201 321 125 208 72 122 347 196 798 15 ...
##  $ POC.42.TP4 : int  50 64 86 129 36 62 84 105 53 0 ...
##  $ POC.52.TP1 : int  38 64 19 61 0 0 0 34 55 6 ...
##  $ POC.52.TP2 : int  697 287 157 364 69 148 446 147 737 25 ...
##  $ POC.52.TP3 : int  769 320 104 420 102 91 623 161 893 35 ...
##  $ POC.52.TP4 : int  1741 544 162 382 228 135 1024 180 1417 64 ...
##  $ POC.53.TP1 : int  837 445 87 265 93 131 758 144 1293 23 ...
##  $ POC.53.TP2 : int  242 345 135 218 49 63 533 148 1038 35 ...
##  $ POC.53.TP3 : int  1134 629 181 448 200 321 1140 248 1174 42 ...
##  $ POC.53.TP4 : int  140 284 131 374 92 47 291 360 498 35 ...
##  $ POC.57.TP1 : int  720 369 88 317 146 242 660 437 1091 46 ...
##  $ POC.57.TP2 : int  378 141 134 184 60 78 279 304 373 18 ...
##  $ POC.57.TP3 : int  1838 465 130 404 158 172 1026 278 1303 36 ...
##  $ POC.57.TP4 : int  287 507 222 282 176 121 511 509 1048 69 ...</code></pre>
</section>
</section>
</section>
<section id="barnacle-analysis" class="level1">
<h1>4 BARNACLE ANALYSIS</h1>
<p>Based on the barnacle workflow, we need to: 1. Use <code>sctransform</code> to normalize the count data 2. Create tensors for multiomics analysis 3. Run sparse tensor decomposition</p>
<section id="load-expression-data" class="level2">
<h2 class="anchored" data-anchor-id="load-expression-data">4.1 Load expression data</h2>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read the exported ortholog expression data</span></span>
<span id="cb28-2">apul_expr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"apul_ortholog_expression.csv"</span>))</span>
<span id="cb28-3">peve_expr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"peve_ortholog_expression.csv"</span>))  </span>
<span id="cb28-4">ptua_expr <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ptua_ortholog_expression.csv"</span>))</span>
<span id="cb28-5"></span>
<span id="cb28-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Loaded expression data:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb28-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Apul:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(apul_expr), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes x"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(apul_expr)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"samples</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb28-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Peve:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(peve_expr), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes x"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(peve_expr)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"samples</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>) </span>
<span id="cb28-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ptua:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(ptua_expr), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"genes x"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(ptua_expr)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"samples</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>## Loaded expression data:
## Apul: 10223 genes x 40 samples
## Peve: 10223 genes x 38 samples
## Ptua: 10223 genes x 39 samples</code></pre>
</section>
<section id="normalize-data-with-sctransform" class="level2">
<h2 class="anchored" data-anchor-id="normalize-data-with-sctransform">4.2 Normalize data with sctransform</h2>
<p>Following the barnacle manuscript approach, we’ll use <code>sctransform</code> to normalize each species’ data. We’ll use a bulk RNA-seq appropriate approach.</p>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Function to normalize count data with sctransform for bulk RNA-seq</span></span>
<span id="cb30-2">normalize_with_sctransform <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(count_data, species_name) {</span>
<span id="cb30-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Normalizing"</span>, species_name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data with sctransform...</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-4">  </span>
<span id="cb30-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if we have group_id or gene_id column</span></span>
<span id="cb30-6">  id_col <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"group_id"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(count_data)) <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"group_id"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_id"</span></span>
<span id="cb30-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Using"</span>, id_col, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"as identifier column</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-8">  </span>
<span id="cb30-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check for and handle duplicate group_ids/gene_ids</span></span>
<span id="cb30-10">  duplicate_ids <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> count_data[[id_col]][<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">duplicated</span>(count_data[[id_col]])]</span>
<span id="cb30-11">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(duplicate_ids) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) {</span>
<span id="cb30-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Found"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(duplicate_ids)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"duplicate"</span>, id_col, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"values:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"  Examples:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(duplicate_ids), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"  Note: sctransform may fail due to duplicate row names, will fall back to log2(CPM + 1)</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-15">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb30-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"No duplicate"</span>, id_col, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"values found</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-17">  }</span>
<span id="cb30-18">  </span>
<span id="cb30-19">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use original data without aggregation - let sctransform handle duplicates or fail</span></span>
<span id="cb30-20">  agg_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> count_data</span>
<span id="cb30-21">  </span>
<span id="cb30-22">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract count matrix (genes as rows, samples as columns)</span></span>
<span id="cb30-23">  count_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(agg_data[, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove id column</span></span>
<span id="cb30-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(count_matrix) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> agg_data[[id_col]]</span>
<span id="cb30-25">  </span>
<span id="cb30-26">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check for and handle problematic values</span></span>
<span id="cb30-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Checking data quality...</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"  - Zero values:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(count_matrix <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(count_matrix), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-29">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"  - NA values:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(count_matrix)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"  - Infinite values:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.infinite</span>(count_matrix)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-31">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"  - Min value:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(count_matrix, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"  - Max value:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(count_matrix, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-33">  </span>
<span id="cb30-34">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove genes with all zeros or very low expression</span></span>
<span id="cb30-35">  gene_sums <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(count_matrix)</span>
<span id="cb30-36">  keep_genes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gene_sums <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Keep genes with total counts &gt; 10</span></span>
<span id="cb30-37">  count_matrix_filtered <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> count_matrix[keep_genes, , drop <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>]</span>
<span id="cb30-38">  </span>
<span id="cb30-39">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"  - Filtered to"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(count_matrix_filtered), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ortholog groups (from"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(count_matrix), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">")</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-40">  </span>
<span id="cb30-41">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Transpose for sctransform (expects cells as rows, genes as columns)</span></span>
<span id="cb30-42">  count_matrix_t <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(count_matrix_filtered)</span>
<span id="cb30-43">  </span>
<span id="cb30-44">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply sctransform normalization with bulk RNA-seq appropriate parameters</span></span>
<span id="cb30-45">  normalized_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tryCatch</span>({</span>
<span id="cb30-46">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use more conservative parameters for bulk RNA-seq</span></span>
<span id="cb30-47">    normalized <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sctransform<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vst</span>(</span>
<span id="cb30-48">      count_matrix_t, </span>
<span id="cb30-49">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"glmGamPoi"</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># More appropriate for bulk data</span></span>
<span id="cb30-50">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_genes =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(count_matrix_t)),  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use fewer variable genes</span></span>
<span id="cb30-51">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">return_cell_attr =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb30-52">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbosity =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb30-53">    )</span>
<span id="cb30-54">    </span>
<span id="cb30-55">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract normalized data and transpose back (genes as rows, samples as columns)</span></span>
<span id="cb30-56">    normalized_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(normalized<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y)</span>
<span id="cb30-57">    </span>
<span id="cb30-58">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create output data frame with original gene set (fill missing with zeros)</span></span>
<span id="cb30-59">    full_normalized_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(count_matrix), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(count_matrix))</span>
<span id="cb30-60">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(full_normalized_data) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(count_matrix)</span>
<span id="cb30-61">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(full_normalized_data) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(count_matrix)</span>
<span id="cb30-62">    </span>
<span id="cb30-63">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fill in normalized values for kept genes</span></span>
<span id="cb30-64">    full_normalized_data[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(normalized_data), ] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> normalized_data</span>
<span id="cb30-65">    </span>
<span id="cb30-66">    result_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb30-67">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(full_normalized_data),</span>
<span id="cb30-68">      full_normalized_data,</span>
<span id="cb30-69">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stringsAsFactors =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb30-70">    )</span>
<span id="cb30-71">    </span>
<span id="cb30-72">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sctransform normalization successful for"</span>, species_name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-73">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(result_df)</span>
<span id="cb30-74">    </span>
<span id="cb30-75">  }, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">error =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(e) {</span>
<span id="cb30-76">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sctransform failed for"</span>, species_name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">":"</span>, e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>message, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-77">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Falling back to log2(CPM + 1) normalization...</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-78">    </span>
<span id="cb30-79">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fallback: log2(CPM + 1) normalization</span></span>
<span id="cb30-80">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate CPM (Counts Per Million)</span></span>
<span id="cb30-81">    lib_sizes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(count_matrix)</span>
<span id="cb30-82">    cpm_matrix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sweep</span>(count_matrix, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, lib_sizes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">FUN =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>)</span>
<span id="cb30-83">    </span>
<span id="cb30-84">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Log2 transform with pseudocount</span></span>
<span id="cb30-85">    normalized_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log2</span>(cpm_matrix <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb30-86">    </span>
<span id="cb30-87">    result_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb30-88">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group_id =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(normalized_data),</span>
<span id="cb30-89">      normalized_data,</span>
<span id="cb30-90">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stringsAsFactors =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb30-91">    )</span>
<span id="cb30-92">    </span>
<span id="cb30-93">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Log2(CPM + 1) normalization complete for"</span>, species_name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-94">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(result_df)</span>
<span id="cb30-95">  })</span>
<span id="cb30-96">  </span>
<span id="cb30-97">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Input dimensions:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(count_data), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rows x"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(count_data)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"samples</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-98">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Output dimensions:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(normalized_df), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ortholog groups x"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(normalized_df)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"samples</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-99">  </span>
<span id="cb30-100">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(normalized_df)</span>
<span id="cb30-101">}</span>
<span id="cb30-102"></span>
<span id="cb30-103"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Normalize each species</span></span>
<span id="cb30-104"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"=== STARTING NORMALIZATION ===</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb30-105">apul_normalized <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normalize_with_sctransform</span>(apul_expr, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Apul"</span>)</span>
<span id="cb30-106">peve_normalized <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normalize_with_sctransform</span>(peve_expr, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Peve"</span>) </span>
<span id="cb30-107">ptua_normalized <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">normalize_with_sctransform</span>(ptua_expr, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ptua"</span>)</span>
<span id="cb30-108"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"=== NORMALIZATION COMPLETE ===</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>## === STARTING NORMALIZATION ===
## 
## Normalizing Apul data with sctransform...
## Using group_id as identifier column
## No duplicate group_id values found
## Checking data quality...
##   - Zero values: 24719 / 408920 
##   - NA values: 0 
##   - Infinite values: 0 
##   - Min value: 0 
##   - Max value: 204262 
##   - Filtered to 10157 ortholog groups (from 10223 )
##   |                                                                              |                                                                      |   0%sctransform failed for Apul : Argument 'useNames' must be either TRUE or FALSE 
## Falling back to log2(CPM + 1) normalization...
## Log2(CPM + 1) normalization complete for Apul 
## Input dimensions: 10223 rows x 40 samples
## Output dimensions: 10223 ortholog groups x 40 samples
## 
## Normalizing Peve data with sctransform...
## Using group_id as identifier column
## No duplicate group_id values found
## Checking data quality...
##   - Zero values: 39003 / 388474 
##   - NA values: 0 
##   - Infinite values: 0 
##   - Min value: 0 
##   - Max value: 208234 
##   - Filtered to 10074 ortholog groups (from 10223 )
##   |                                                                              |                                                                      |   0%sctransform failed for Peve : Argument 'useNames' must be either TRUE or FALSE 
## Falling back to log2(CPM + 1) normalization...
## Log2(CPM + 1) normalization complete for Peve 
## Input dimensions: 10223 rows x 38 samples
## Output dimensions: 10223 ortholog groups x 38 samples
## 
## Normalizing Ptua data with sctransform...
## Using group_id as identifier column
## No duplicate group_id values found
## Checking data quality...
##   - Zero values: 20764 / 398697 
##   - NA values: 0 
##   - Infinite values: 0 
##   - Min value: 0 
##   - Max value: 204924 
##   - Filtered to 10170 ortholog groups (from 10223 )
##   |                                                                              |                                                                      |   0%sctransform failed for Ptua : Argument 'useNames' must be either TRUE or FALSE 
## Falling back to log2(CPM + 1) normalization...
## Log2(CPM + 1) normalization complete for Ptua 
## Input dimensions: 10223 rows x 39 samples
## Output dimensions: 10223 ortholog groups x 39 samples
## 
## === NORMALIZATION COMPLETE ===</code></pre>
</section>
<section id="export-normalized-data-for-python-analysis" class="level2">
<h2 class="anchored" data-anchor-id="export-normalized-data-for-python-analysis">4.3 Export normalized data for Python analysis</h2>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Export normalized data for Python processing</span></span>
<span id="cb32-2">apul_norm_file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"apul_normalized_expression.csv"</span>)</span>
<span id="cb32-3">peve_norm_file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"peve_normalized_expression.csv"</span>)</span>
<span id="cb32-4">ptua_norm_file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ptua_normalized_expression.csv"</span>)</span>
<span id="cb32-5"></span>
<span id="cb32-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.csv</span>(apul_normalized, apul_norm_file, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quote =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb32-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.csv</span>(peve_normalized, peve_norm_file, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quote =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb32-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">write.csv</span>(ptua_normalized, ptua_norm_file, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quote =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb32-9"></span>
<span id="cb32-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Exported normalized data:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb32-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Apul:"</span>, apul_norm_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb32-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Peve:"</span>, peve_norm_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb32-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Ptua:"</span>, ptua_norm_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>## Exported normalized data:
## Apul: ../output/13.00-multiomics-barnacle/apul_normalized_expression.csv 
## Peve: ../output/13.00-multiomics-barnacle/peve_normalized_expression.csv 
## Ptua: ../output/13.00-multiomics-barnacle/ptua_normalized_expression.csv</code></pre>
</section>
<section id="create-tensor-dataset-in-python" class="level2">
<h2 class="anchored" data-anchor-id="create-tensor-dataset-in-python">4.4 Create tensor dataset in Python</h2>
<p>Now we’ll switch to Python to create the multiomics tensor and run barnacle analysis.</p>
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb34-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb34-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb34-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pathlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span>
<span id="cb34-5"></span>
<span id="cb34-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up paths</span></span>
<span id="cb34-7">output_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> r.output_dir</span>
<span id="cb34-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Working in output directory: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>output_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb34-9"></span>
<span id="cb34-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load normalized data</span></span>
<span id="cb34-11">apul_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"apul_normalized_expression.csv"</span>))</span>
<span id="cb34-12">peve_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"peve_normalized_expression.csv"</span>))</span>
<span id="cb34-13">ptua_norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ptua_normalized_expression.csv"</span>))</span>
<span id="cb34-14"></span>
<span id="cb34-15"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Loaded normalized data:"</span>)</span>
<span id="cb34-16"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Apul: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>apul_norm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb34-17"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Peve: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>peve_norm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)  </span>
<span id="cb34-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Ptua: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>ptua_norm<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb34-19"></span>
<span id="cb34-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check which genes are common across all species</span></span>
<span id="cb34-21">apul_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(apul_norm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'group_id'</span>])</span>
<span id="cb34-22">peve_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(peve_norm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'group_id'</span>])</span>
<span id="cb34-23">ptua_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(ptua_norm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'group_id'</span>])</span>
<span id="cb34-24"></span>
<span id="cb34-25">common_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> apul_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> peve_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> ptua_genes</span>
<span id="cb34-26"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Common genes across all species: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(common_genes)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb34-27"></span>
<span id="cb34-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter to common genes and align gene order</span></span>
<span id="cb34-29">common_genes_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(common_genes))</span>
<span id="cb34-30"></span>
<span id="cb34-31">apul_common <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> apul_norm[apul_norm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'group_id'</span>].isin(common_genes_list)].set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'group_id'</span>).reindex(common_genes_list)</span>
<span id="cb34-32">peve_common <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> peve_norm[peve_norm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'group_id'</span>].isin(common_genes_list)].set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'group_id'</span>).reindex(common_genes_list)</span>
<span id="cb34-33">ptua_common <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ptua_norm[ptua_norm[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'group_id'</span>].isin(common_genes_list)].set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'group_id'</span>).reindex(common_genes_list)</span>
<span id="cb34-34"></span>
<span id="cb34-35"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Filtered to common genes:"</span>)</span>
<span id="cb34-36"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Apul: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>apul_common<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb34-37"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Peve: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>peve_common<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb34-38"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Ptua: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>ptua_common<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>## Working in output directory: ../output/13.00-multiomics-barnacle
## Loaded normalized data:
## Apul: (10223, 41)
## Peve: (10223, 39)
## Ptua: (10223, 40)
## 
## Common genes across all species: 10223
## 
## Filtered to common genes:
## Apul: (10223, 40)
## Peve: (10223, 38)
## Ptua: (10223, 39)</code></pre>
</section>
<section id="parse-sample-information" class="level2">
<h2 class="anchored" data-anchor-id="parse-sample-information">4.5 Parse sample information</h2>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Parse sample names to extract sample information for each species independently</span></span>
<span id="cb36-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> parse_species_samples(columns, species_name):</span>
<span id="cb36-3">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Parse sample column names for a specific species"""</span></span>
<span id="cb36-4">    sample_map <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb36-5">    sample_ids <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb36-6">    timepoints <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>()</span>
<span id="cb36-7">    </span>
<span id="cb36-8">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> col <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> columns:</span>
<span id="cb36-9">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Expected format: PREFIX.NUMBER.TP# (e.g., ACR.139.TP1, POR.216.TP1, POC.201.TP1)</span></span>
<span id="cb36-10">        parts <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> col.split(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>)</span>
<span id="cb36-11">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(parts) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>].startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'TP'</span>):</span>
<span id="cb36-12">            prefix <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb36-13">            numeric_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]  </span>
<span id="cb36-14">            timepoint <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(parts[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>:])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># e.g., 1 from TP1</span></span>
<span id="cb36-15">            </span>
<span id="cb36-16">            sample_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>prefix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>numeric_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># e.g., "ACR.139"</span></span>
<span id="cb36-17">            sample_map[(sample_id, timepoint)] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> col</span>
<span id="cb36-18">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> sample_id <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sample_ids:</span>
<span id="cb36-19">                sample_ids.append(sample_id)</span>
<span id="cb36-20">            timepoints.add(timepoint)</span>
<span id="cb36-21">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb36-22">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Warning: Could not parse column name: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>col<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb36-23">    </span>
<span id="cb36-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> sample_map, sample_ids, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(timepoints)</span>
<span id="cb36-25"></span>
<span id="cb36-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Parse sample information for each species independently</span></span>
<span id="cb36-27"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Parsing sample information for each species..."</span>)</span>
<span id="cb36-28"></span>
<span id="cb36-29">species_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb36-30">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'apul'</span>: apul_common,</span>
<span id="cb36-31">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'peve'</span>: peve_common, </span>
<span id="cb36-32">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ptua'</span>: ptua_common</span>
<span id="cb36-33">}</span>
<span id="cb36-34"></span>
<span id="cb36-35">species_info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb36-36">all_timepoints <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>()</span>
<span id="cb36-37"></span>
<span id="cb36-38"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> species, data <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> species_data.items():</span>
<span id="cb36-39">    sample_map, sample_ids, timepoints <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> parse_species_samples(data.columns, species)</span>
<span id="cb36-40">    species_info[species] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb36-41">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sample_map'</span>: sample_map,</span>
<span id="cb36-42">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sample_ids'</span>: sample_ids,</span>
<span id="cb36-43">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'timepoints'</span>: timepoints,</span>
<span id="cb36-44">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n_samples'</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sample_ids)</span>
<span id="cb36-45">    }</span>
<span id="cb36-46">    all_timepoints.update(timepoints)</span>
<span id="cb36-47">    </span>
<span id="cb36-48">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>species<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">:"</span>)</span>
<span id="cb36-49">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  Samples: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sample_ids)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sample_ids[:<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">...)"</span>)</span>
<span id="cb36-50">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  Timepoints: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>timepoints<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb36-51"></span>
<span id="cb36-52">common_timepoints <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(all_timepoints))</span>
<span id="cb36-53"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Timepoints found across all species: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>common_timepoints<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb36-54"></span>
<span id="cb36-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the maximum number of samples to determine tensor dimensions</span></span>
<span id="cb36-56">max_samples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(info[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n_samples'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> info <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> species_info.values())</span>
<span id="cb36-57"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Maximum samples in any species: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>max_samples<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb36-58"></span>
<span id="cb36-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print detailed sample structure</span></span>
<span id="cb36-60"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Detailed sample structure:"</span>)</span>
<span id="cb36-61"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> species, info <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> species_info.items():</span>
<span id="cb36-62">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>species<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>info[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n_samples'</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> samples × </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(info[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'timepoints'</span>])<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> timepoints"</span>)</span></code></pre></div>
<pre><code>## Parsing sample information for each species...
## apul:
##   Samples: 10 (['ACR.139', 'ACR.145', 'ACR.150']...)
##   Timepoints: [1, 2, 3, 4]
## peve:
##   Samples: 10 (['POR.216', 'POR.236', 'POR.245']...)
##   Timepoints: [1, 2, 3, 4]
## ptua:
##   Samples: 10 (['POC.201', 'POC.219', 'POC.222']...)
##   Timepoints: [1, 2, 3, 4]
## 
## Timepoints found across all species: [1, 2, 3, 4]
## Maximum samples in any species: 10
## 
## Detailed sample structure:
## apul: 10 samples × 4 timepoints
## peve: 10 samples × 4 timepoints
## ptua: 10 samples × 4 timepoints</code></pre>
</section>
<section id="create-3d-tensor-genes-species_samples-timepoints" class="level2">
<h2 class="anchored" data-anchor-id="create-3d-tensor-genes-species_samples-timepoints">4.6 Create 3D tensor (genes × species_samples × timepoints)</h2>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a 3D tensor: genes × (species_samples) × timepoints</span></span>
<span id="cb38-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This flattens species and samples into a single dimension that Barnacle can handle</span></span>
<span id="cb38-3"></span>
<span id="cb38-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Creating 3D tensor by combining species and samples..."</span>)</span>
<span id="cb38-5"></span>
<span id="cb38-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># First, collect all actual sample-timepoint combinations that have data</span></span>
<span id="cb38-7">all_sample_columns <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb38-8">sample_labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Track which sample belongs to which species</span></span>
<span id="cb38-9">species_sample_map <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Map from combined index to (species, sample_idx, sample_id)</span></span>
<span id="cb38-10"></span>
<span id="cb38-11">sample_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb38-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> species <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'apul'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'peve'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ptua'</span>]:</span>
<span id="cb38-13">    data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> species_data[species]</span>
<span id="cb38-14">    info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> species_info[species]</span>
<span id="cb38-15">    </span>
<span id="cb38-16">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Processing </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>species<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">:"</span>)</span>
<span id="cb38-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> sample_id <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> info[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sample_ids'</span>]:</span>
<span id="cb38-18">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if this sample has data for any timepoint</span></span>
<span id="cb38-19">        has_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb38-20">        sample_timepoint_cols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> []</span>
<span id="cb38-21">        </span>
<span id="cb38-22">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> timepoint <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> common_timepoints:</span>
<span id="cb38-23">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (sample_id, timepoint) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> info[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sample_map'</span>]:</span>
<span id="cb38-24">                col_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> info[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sample_map'</span>][(sample_id, timepoint)]</span>
<span id="cb38-25">                sample_timepoint_cols.append(col_name)</span>
<span id="cb38-26">                has_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb38-27">        </span>
<span id="cb38-28">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> has_data:</span>
<span id="cb38-29">            all_sample_columns.extend(sample_timepoint_cols)</span>
<span id="cb38-30">            sample_labels.append(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>species<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sample_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb38-31">            species_sample_map[sample_idx] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb38-32">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'species'</span>: species,</span>
<span id="cb38-33">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sample_id'</span>: sample_id,</span>
<span id="cb38-34">                <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sample_idx_in_species'</span>: info[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sample_ids'</span>].index(sample_id)</span>
<span id="cb38-35">            }</span>
<span id="cb38-36">            sample_idx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb38-37">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  Added </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>sample_id<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> with </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sample_timepoint_cols)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> timepoints"</span>)</span>
<span id="cb38-38"></span>
<span id="cb38-39">n_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(common_genes_list)</span>
<span id="cb38-40">n_combined_samples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sample_labels)</span>
<span id="cb38-41">n_timepoints <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(common_timepoints)</span>
<span id="cb38-42"></span>
<span id="cb38-43"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Creating 3D tensor with shape: (</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>n_genes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>n_combined_samples<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">, </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>n_timepoints<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)"</span>)</span>
<span id="cb38-44"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Combined samples from all species: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>n_combined_samples<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb38-45"></span>
<span id="cb38-46"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Initialize tensor</span></span>
<span id="cb38-47">tensor_3d <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.full((n_genes, n_combined_samples, n_timepoints), np.nan)</span>
<span id="cb38-48"></span>
<span id="cb38-49"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fill tensor</span></span>
<span id="cb38-50">filled_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb38-51">missing_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb38-52"></span>
<span id="cb38-53"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> combined_idx, sample_label <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(sample_labels):</span>
<span id="cb38-54">    species_info_map <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> species_sample_map[combined_idx]</span>
<span id="cb38-55">    species <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> species_info_map[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'species'</span>]</span>
<span id="cb38-56">    sample_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> species_info_map[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sample_id'</span>]</span>
<span id="cb38-57">    </span>
<span id="cb38-58">    data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> species_data[species]</span>
<span id="cb38-59">    info <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> species_info[species]</span>
<span id="cb38-60">    </span>
<span id="cb38-61">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> time_idx, timepoint <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(common_timepoints):</span>
<span id="cb38-62">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (sample_id, timepoint) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> info[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sample_map'</span>]:</span>
<span id="cb38-63">            col_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> info[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sample_map'</span>][(sample_id, timepoint)]</span>
<span id="cb38-64">            tensor_3d[:, combined_idx, time_idx] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[col_name].values</span>
<span id="cb38-65">            filled_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb38-66">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb38-67">            missing_count <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb38-68"></span>
<span id="cb38-69"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check tensor statistics</span></span>
<span id="cb38-70">n_missing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(np.isnan(tensor_3d))</span>
<span id="cb38-71">n_total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tensor_3d.size</span>
<span id="cb38-72">n_finite <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(np.isfinite(tensor_3d))</span>
<span id="cb38-73"></span>
<span id="cb38-74"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">=== TENSOR STATISTICS ==="</span>)</span>
<span id="cb38-75"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Tensor shape: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tensor_3d<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb38-76"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Total elements: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>n_total<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb38-77"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Finite values: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>n_finite<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb38-78"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Missing/NaN values: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>n_missing<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb38-79"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Missing percentage: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>n_missing <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> n_total <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">%"</span>)</span>
<span id="cb38-80"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Filled </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>filled_count<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> sample-timepoint combinations"</span>)</span>
<span id="cb38-81"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Missing </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>missing_count<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> sample-timepoint combinations"</span>)</span>
<span id="cb38-82"></span>
<span id="cb38-83"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check non-zero values among finite values</span></span>
<span id="cb38-84">finite_values <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> tensor_3d[np.isfinite(tensor_3d)]</span>
<span id="cb38-85">n_nonzero <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>(finite_values <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb38-86"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Non-zero finite values: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>n_nonzero<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb38-87"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Zero finite values: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(finite_values) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> n_nonzero<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb38-88"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Sparsity among finite values: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(finite_values) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> n_nonzero) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(finite_values) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.2f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">%"</span>)</span>
<span id="cb38-89"></span>
<span id="cb38-90"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save sample mapping for later interpretation</span></span>
<span id="cb38-91">sample_mapping <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame([</span>
<span id="cb38-92">    {</span>
<span id="cb38-93">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'combined_index'</span>: i,</span>
<span id="cb38-94">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sample_label'</span>: label,</span>
<span id="cb38-95">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'species'</span>: species_sample_map[i][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'species'</span>],</span>
<span id="cb38-96">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sample_id'</span>: species_sample_map[i][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sample_id'</span>]</span>
<span id="cb38-97">    }</span>
<span id="cb38-98">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, label <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(sample_labels)</span>
<span id="cb38-99">])</span>
<span id="cb38-100"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Sample mapping:"</span>)</span>
<span id="cb38-101"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(sample_mapping.head(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span></code></pre></div>
<pre><code>## Creating 3D tensor by combining species and samples...
## 
## Processing apul:
##   Added ACR.139 with 4 timepoints
##   Added ACR.145 with 4 timepoints
##   Added ACR.150 with 4 timepoints
##   Added ACR.173 with 4 timepoints
##   Added ACR.186 with 4 timepoints
##   Added ACR.225 with 4 timepoints
##   Added ACR.229 with 4 timepoints
##   Added ACR.237 with 4 timepoints
##   Added ACR.244 with 4 timepoints
##   Added ACR.265 with 4 timepoints
## 
## Processing peve:
##   Added POR.216 with 4 timepoints
##   Added POR.236 with 2 timepoints
##   Added POR.245 with 4 timepoints
##   Added POR.260 with 4 timepoints
##   Added POR.262 with 4 timepoints
##   Added POR.69 with 4 timepoints
##   Added POR.72 with 4 timepoints
##   Added POR.73 with 4 timepoints
##   Added POR.74 with 4 timepoints
##   Added POR.83 with 4 timepoints
## 
## Processing ptua:
##   Added POC.201 with 3 timepoints
##   Added POC.219 with 4 timepoints
##   Added POC.222 with 4 timepoints
##   Added POC.255 with 4 timepoints
##   Added POC.259 with 4 timepoints
##   Added POC.40 with 4 timepoints
##   Added POC.42 with 4 timepoints
##   Added POC.52 with 4 timepoints
##   Added POC.53 with 4 timepoints
##   Added POC.57 with 4 timepoints
## 
## Creating 3D tensor with shape: (10223, 30, 4)
## Combined samples from all species: 30
## 
## === TENSOR STATISTICS ===
## Tensor shape: (10223, 30, 4)
## Total elements: 1226760
## Finite values: 1196091
## Missing/NaN values: 30669
## Missing percentage: 2.50%
## Filled 117 sample-timepoint combinations
## Missing 3 sample-timepoint combinations
## Non-zero finite values: 1111605
## Zero finite values: 84486
## Sparsity among finite values: 7.06%
## 
## Sample mapping:
##    combined_index  sample_label species sample_id
## 0               0  apul_ACR.139    apul   ACR.139
## 1               1  apul_ACR.145    apul   ACR.145
## 2               2  apul_ACR.150    apul   ACR.150
## 3               3  apul_ACR.173    apul   ACR.173
## 4               4  apul_ACR.186    apul   ACR.186
## 5               5  apul_ACR.225    apul   ACR.225
## 6               6  apul_ACR.229    apul   ACR.229
## 7               7  apul_ACR.237    apul   ACR.237
## 8               8  apul_ACR.244    apul   ACR.244
## 9               9  apul_ACR.265    apul   ACR.265</code></pre>
</section>
<section id="run-barnacle-sparse-tensor-decomposition" class="level2">
<h2 class="anchored" data-anchor-id="run-barnacle-sparse-tensor-decomposition">4.7 Run Barnacle sparse tensor decomposition</h2>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb40-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> barnacle.decomposition <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> SparseCP</span>
<span id="cb40-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb40-3"></span>
<span id="cb40-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Handle missing values by filling with zeros (could also use mean imputation)</span></span>
<span id="cb40-5">tensor_filled <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.nan_to_num(tensor_3d, nan<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>)</span>
<span id="cb40-6"></span>
<span id="cb40-7"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Running Barnacle sparse tensor decomposition..."</span>)</span>
<span id="cb40-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Input tensor shape: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tensor_filled<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb40-9"></span>
<span id="cb40-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up sparse CP decomposition parameters</span></span>
<span id="cb40-11">rank <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Number of components to extract</span></span>
<span id="cb40-12">lambdas <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sparsity penalties for [genes, samples, timepoints]</span></span>
<span id="cb40-13"></span>
<span id="cb40-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create model</span></span>
<span id="cb40-15">model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> SparseCP(</span>
<span id="cb40-16">    rank<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>rank,</span>
<span id="cb40-17">    lambdas<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>lambdas,</span>
<span id="cb40-18">    nonneg_modes<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>],  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Non-negative gene loadings only</span></span>
<span id="cb40-19">    n_initializations<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Reduced for faster testing</span></span>
<span id="cb40-20">    random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span></span>
<span id="cb40-21">)</span>
<span id="cb40-22"></span>
<span id="cb40-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fit the model</span></span>
<span id="cb40-24"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fitting sparse CP decomposition..."</span>)</span>
<span id="cb40-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb40-26">    decomposition <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> model.fit_transform(tensor_filled, verbose<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb40-27">    </span>
<span id="cb40-28">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Decomposition complete!"</span>)</span>
<span id="cb40-29">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Converged: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">hasattr</span>(model, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'converged_'</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> model<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>converged_<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb40-30">    </span>
<span id="cb40-31">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">hasattr</span>(model, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'loss_'</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> model.loss_ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb40-32">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Final loss: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>model<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>loss_[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.6f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb40-33">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Number of iterations: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(model.loss_)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb40-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb40-35">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Loss information not available"</span>)</span>
<span id="cb40-36">    </span>
<span id="cb40-37">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Examine factor matrices</span></span>
<span id="cb40-38">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Factor matrix shapes:"</span>)</span>
<span id="cb40-39">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, factor <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(decomposition.factors):</span>
<span id="cb40-40">        factor_names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Genes'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species_Samples'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Timepoints'</span>]</span>
<span id="cb40-41">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Mode </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>factor_names[i]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">): </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>factor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>shape<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb40-42">        </span>
<span id="cb40-43">    decomposition_success <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span></span>
<span id="cb40-44">    </span>
<span id="cb40-45"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb40-46">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Error during decomposition: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>e<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb40-47">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Creating dummy decomposition for downstream code..."</span>)</span>
<span id="cb40-48">    decomposition_success <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb40-49">    </span>
<span id="cb40-50">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create dummy factors for error handling</span></span>
<span id="cb40-51">    <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">class</span> DummyDecomposition:</span>
<span id="cb40-52">        <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">__init__</span>(<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>):</span>
<span id="cb40-53">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb40-54">                np.random.rand(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(common_genes_list), rank),  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># genes</span></span>
<span id="cb40-55">                np.random.rand(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sample_labels), rank),      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># samples</span></span>
<span id="cb40-56">                np.random.rand(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(common_timepoints), rank)   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># timepoints</span></span>
<span id="cb40-57">            ]</span>
<span id="cb40-58">            <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">self</span>.weights <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.ones(rank)</span>
<span id="cb40-59">    </span>
<span id="cb40-60">    decomposition <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> DummyDecomposition()</span></code></pre></div>
<pre><code>## Running Barnacle sparse tensor decomposition...
## Input tensor shape: (10223, 30, 4)
## Fitting sparse CP decomposition...
## 
## Beginning initialization 1 of 3
## 
## Beginning initialization 2 of 3
## 
## Beginning initialization 3 of 3
## 
## Decomposition complete!
## Converged: False
## Final loss: 850410.240223
## Number of iterations: 1000
## 
## Factor matrix shapes:
## Mode 0 (Genes): (10223, 5)
## Mode 1 (Species_Samples): (30, 5)
## Mode 2 (Timepoints): (4, 5)</code></pre>
</section>
<section id="analyze-and-interpret-results" class="level2">
<h2 class="anchored" data-anchor-id="analyze-and-interpret-results">4.8 Analyze and interpret results</h2>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb42-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> decomposition_success:</span>
<span id="cb42-2">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract factor matrices</span></span>
<span id="cb42-3">    gene_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> decomposition.factors[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># genes × components</span></span>
<span id="cb42-4">    sample_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> decomposition.factors[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># combined_samples × components  </span></span>
<span id="cb42-5">    time_factors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> decomposition.factors[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># timepoints × components</span></span>
<span id="cb42-6"></span>
<span id="cb42-7">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"=== BARNACLE DECOMPOSITION RESULTS ==="</span>)</span>
<span id="cb42-8">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Number of components: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>rank<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb42-9">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Component weights: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>decomposition<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>weights<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb42-10"></span>
<span id="cb42-11">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">=== TIMEPOINT LOADINGS ==="</span>)</span>
<span id="cb42-12">    time_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(</span>
<span id="cb42-13">        time_factors,</span>
<span id="cb42-14">        index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'TP</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> tp <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> common_timepoints],</span>
<span id="cb42-15">        columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Component_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(rank)]</span>
<span id="cb42-16">    )</span>
<span id="cb42-17">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(time_df)</span>
<span id="cb42-18"></span>
<span id="cb42-19">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">=== SAMPLE LOADINGS BY SPECIES ==="</span>)</span>
<span id="cb42-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show sample loadings grouped by species</span></span>
<span id="cb42-21">    sample_df_full <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(</span>
<span id="cb42-22">        sample_factors,</span>
<span id="cb42-23">        index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sample_labels,</span>
<span id="cb42-24">        columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Component_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(rank)]</span>
<span id="cb42-25">    )</span>
<span id="cb42-26">    </span>
<span id="cb42-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add species information</span></span>
<span id="cb42-28">    sample_df_full[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [species_sample_map[i][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'species'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sample_labels))]</span>
<span id="cb42-29">    sample_df_full[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sample_ID'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [species_sample_map[i][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sample_id'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sample_labels))]</span>
<span id="cb42-30">    </span>
<span id="cb42-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show by species</span></span>
<span id="cb42-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> species <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'apul'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'peve'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ptua'</span>]:</span>
<span id="cb42-33">        species_samples <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sample_df_full[sample_df_full[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> species]</span>
<span id="cb42-34">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>species<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>upper()<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> samples:"</span>)</span>
<span id="cb42-35">        component_cols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Component_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(rank)]</span>
<span id="cb42-36">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(species_samples[component_cols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sample_ID'</span>]].head())</span>
<span id="cb42-37"></span>
<span id="cb42-38">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find top orthologs for each component</span></span>
<span id="cb42-39">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">=== TOP ORTHOLOGS PER COMPONENT ==="</span>)</span>
<span id="cb42-40">    n_top_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb42-41">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> comp <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(rank):</span>
<span id="cb42-42">        gene_loadings <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_factors[:, comp]</span>
<span id="cb42-43">        top_gene_indices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.argsort(np.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>(gene_loadings))[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>n_top_genes:][::<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb42-44">        top_genes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [common_genes_list[i] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> top_gene_indices]</span>
<span id="cb42-45">        top_loadings <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_loadings[top_gene_indices]</span>
<span id="cb42-46"></span>
<span id="cb42-47">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Component </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>comp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> (weight: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>decomposition<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">.</span>weights[comp]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">):"</span>)</span>
<span id="cb42-48">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> gene, loading <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(top_genes, top_loadings):</span>
<span id="cb42-49">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>gene<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>loading<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb42-50">            </span>
<span id="cb42-51">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Analyze species patterns in sample factors</span></span>
<span id="cb42-52">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">=== SPECIES PATTERNS IN SAMPLE FACTORS ==="</span>)</span>
<span id="cb42-53">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> comp <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(rank):</span>
<span id="cb42-54">        comp_col <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Component_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>comp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span></span>
<span id="cb42-55">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Component </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>comp<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> - Average loadings by species:"</span>)</span>
<span id="cb42-56">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> species <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'apul'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'peve'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ptua'</span>]:</span>
<span id="cb42-57">            species_loadings <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sample_df_full[sample_df_full[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> species][comp_col]</span>
<span id="cb42-58">            avg_loading <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> species_loadings.mean()</span>
<span id="cb42-59">            std_loading <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> species_loadings.std()</span>
<span id="cb42-60">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"  </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>species<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>avg_loading<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> ± </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>std_loading<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.3f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb42-61"></span>
<span id="cb42-62"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb42-63">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Decomposition failed - skipping detailed analysis"</span>)</span></code></pre></div>
<pre><code>## === BARNACLE DECOMPOSITION RESULTS ===
## Number of components: 5
## Component weights: [1. 1. 1. 1. 1.]
## 
## === TIMEPOINT LOADINGS ===
##      Component_1  Component_2  Component_3  Component_4  Component_5
## TP1    -7.701441     7.248857     6.407210    -1.603194     9.432116
## TP2    -6.501151     7.048609     6.483539     2.348303     5.935557
## TP3     0.751937     6.083226     6.649038     4.224872     4.126090
## TP4     0.715524     6.361256     5.878711    -6.434467    13.710867
## 
## === SAMPLE LOADINGS BY SPECIES ===
## 
## APUL samples:
##               Component_1  Component_2  ...  Component_5  Sample_ID
## apul_ACR.139    -0.001308     0.055781  ...     0.286177    ACR.139
## apul_ACR.145    -0.020095     0.025637  ...     0.313320    ACR.145
## apul_ACR.150     0.113907     0.064111  ...     0.299476    ACR.150
## apul_ACR.173    -0.008487     0.034594  ...     0.300150    ACR.173
## apul_ACR.186     0.056992     0.048160  ...     0.306427    ACR.186
## 
## [5 rows x 6 columns]
## 
## PEVE samples:
##               Component_1  Component_2  ...  Component_5  Sample_ID
## peve_POR.216     0.127030     0.326041  ...     0.047131    POR.216
## peve_POR.236    -0.816268     0.046569  ...     0.006104    POR.236
## peve_POR.245     0.046398     0.308702  ...     0.042404    POR.245
## peve_POR.260     0.073880     0.313210  ...     0.040011    POR.260
## peve_POR.262     0.143507     0.317012  ...     0.057350    POR.262
## 
## [5 rows x 6 columns]
## 
## PTUA samples:
##               Component_1  Component_2  ...  Component_5  Sample_ID
## ptua_POC.201    -0.369146    -0.024078  ...     0.026998    POC.201
## ptua_POC.219    -0.079287     0.004088  ...     0.051066    POC.219
## ptua_POC.222    -0.001975     0.036936  ...     0.060317    POC.222
## ptua_POC.255    -0.016951     0.027903  ...     0.044414    POC.255
## ptua_POC.259    -0.057884     0.022418  ...     0.070374    POC.259
## 
## [5 rows x 6 columns]
## 
## === TOP ORTHOLOGS PER COMPONENT ===
## 
## Component 1 (weight: 1.000):
##   OG_09295: 2.483
##   OG_02088: 2.048
##   OG_04999: 2.039
##   OG_09247: 2.031
##   OG_02502: 1.911
## 
## Component 2 (weight: 1.000):
##   OG_02502: 6.268
##   OG_09295: 6.169
##   OG_02088: 6.153
##   OG_09247: 6.115
##   OG_01995: 5.971
## 
## Component 3 (weight: 1.000):
##   OG_01396: 5.810
##   OG_00843: 5.762
##   OG_09596: 5.717
##   OG_09075: 5.549
##   OG_07200: 5.528
## 
## Component 4 (weight: 1.000):
##   OG_07251: 7.120
##   OG_02560: 6.711
##   OG_08795: 6.661
##   OG_02331: 6.567
##   OG_09596: 6.558
## 
## Component 5 (weight: 1.000):
##   OG_09596: 7.402
##   OG_01995: 7.172
##   OG_07251: 7.136
##   OG_02560: 7.057
##   OG_09075: 7.022
## 
## === SPECIES PATTERNS IN SAMPLE FACTORS ===
## 
## Component 1 - Average loadings by species:
##   apul: 0.029 ± 0.043
##   peve: 0.019 ± 0.295
##   ptua: -0.026 ± 0.142
## 
## Component 2 - Average loadings by species:
##   apul: 0.039 ± 0.013
##   peve: 0.300 ± 0.090
##   ptua: 0.027 ± 0.024
## 
## Component 3 - Average loadings by species:
##   apul: -0.190 ± 0.015
##   peve: -0.039 ± 0.014
##   ptua: 0.248 ± 0.023
## 
## Component 4 - Average loadings by species:
##   apul: 0.307 ± 0.020
##   peve: 0.036 ± 0.018
##   ptua: 0.045 ± 0.042
## 
## Component 5 - Average loadings by species:
##   apul: 0.311 ± 0.013
##   peve: 0.029 ± 0.017
##   ptua: 0.045 ± 0.015</code></pre>
</section>
<section id="summary" class="level2">
<h2 class="anchored" data-anchor-id="summary">4.9 Summary</h2>
<div class="sourceCode" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb44-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"=== BARNACLE ANALYSIS SUMMARY ===</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-2"></span>
<span id="cb44-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"1. Data Preprocessing:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"   - Loaded ortholog expression data for 3 species</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"   - Normalized using sctransform for count data</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"   - Filtered to genes common across all species</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-7"></span>
<span id="cb44-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2. Tensor Construction:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"   - Created 3D tensor: genes × (species_samples) × timepoints</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"   - Combined all species samples into single dimension</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"   - Dimensions based on timeseries experimental design</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-12"></span>
<span id="cb44-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"3. Sparse Tensor Decomposition:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"   - Applied barnacle SparseCP with sparsity constraints</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"   - Extracted latent factors representing:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"     * Gene co-expression patterns</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"     * Combined sample-species relationships</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>) </span>
<span id="cb44-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"     * Temporal dynamics</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-19"></span>
<span id="cb44-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"4. Results Generated:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"   - Factor matrices for each tensor mode</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"   - Component weights indicating importance</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"   - Top contributing genes per component</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb44-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"   - Temporal and species loadings</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>## === BARNACLE ANALYSIS SUMMARY ===
## 
## 1. Data Preprocessing:
##    - Loaded ortholog expression data for 3 species
##    - Normalized using sctransform for count data
##    - Filtered to genes common across all species
## 
## 2. Tensor Construction:
##    - Created 3D tensor: genes × (species_samples) × timepoints
##    - Combined all species samples into single dimension
##    - Dimensions based on timeseries experimental design
## 
## 3. Sparse Tensor Decomposition:
##    - Applied barnacle SparseCP with sparsity constraints
##    - Extracted latent factors representing:
##      * Gene co-expression patterns
##      * Combined sample-species relationships
##      * Temporal dynamics
## 
## 4. Results Generated:
##    - Factor matrices for each tensor mode
##    - Component weights indicating importance
##    - Top contributing genes per component
##    - Temporal and species loadings</code></pre>
</section>
<section id="save-results" class="level2">
<h2 class="anchored" data-anchor-id="save-results">4.10 Save results</h2>
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb46-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save tensor data</span></span>
<span id="cb46-2">tensor_file <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"multiomics_tensor.npy"</span>)</span>
<span id="cb46-3">np.save(tensor_file, tensor_filled)</span>
<span id="cb46-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Saved tensor to: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>tensor_file<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb46-5"></span>
<span id="cb46-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save factor matrices</span></span>
<span id="cb46-7">factors_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"barnacle_factors"</span>)</span>
<span id="cb46-8">os.makedirs(factors_dir, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb46-9"></span>
<span id="cb46-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> decomposition_success:</span>
<span id="cb46-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Gene factors</span></span>
<span id="cb46-12">    gene_factor_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(</span>
<span id="cb46-13">        gene_factors,</span>
<span id="cb46-14">        index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>common_genes_list,</span>
<span id="cb46-15">        columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Component_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(rank)]</span>
<span id="cb46-16">    )</span>
<span id="cb46-17">    gene_factor_df.to_csv(os.path.join(factors_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_factors.csv"</span>))</span>
<span id="cb46-18"></span>
<span id="cb46-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sample factors with species information</span></span>
<span id="cb46-20">    sample_factor_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(</span>
<span id="cb46-21">        sample_factors,</span>
<span id="cb46-22">        index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sample_labels,</span>
<span id="cb46-23">        columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Component_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(rank)]</span>
<span id="cb46-24">    )</span>
<span id="cb46-25">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add metadata</span></span>
<span id="cb46-26">    sample_factor_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [species_sample_map[i][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'species'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sample_labels))]</span>
<span id="cb46-27">    sample_factor_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sample_ID'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [species_sample_map[i][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sample_id'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sample_labels))]</span>
<span id="cb46-28">    sample_factor_df.to_csv(os.path.join(factors_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sample_factors.csv"</span>))</span>
<span id="cb46-29"></span>
<span id="cb46-30">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Time factors</span></span>
<span id="cb46-31">    time_df.to_csv(os.path.join(factors_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"time_factors.csv"</span>))</span>
<span id="cb46-32"></span>
<span id="cb46-33">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save component weights</span></span>
<span id="cb46-34">    weights_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame({</span>
<span id="cb46-35">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component'</span>: [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Component_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>i<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(rank)],</span>
<span id="cb46-36">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Weight'</span>: decomposition.weights</span>
<span id="cb46-37">    })</span>
<span id="cb46-38">    weights_df.to_csv(os.path.join(factors_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"component_weights.csv"</span>), index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb46-39">    </span>
<span id="cb46-40">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save sample mapping</span></span>
<span id="cb46-41">    sample_mapping.to_csv(os.path.join(factors_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sample_mapping.csv"</span>), index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb46-42"></span>
<span id="cb46-43">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save metadata</span></span>
<span id="cb46-44">    metadata <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb46-45">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tensor_shape'</span>: tensor_filled.shape,</span>
<span id="cb46-46">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tensor_type'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'3D_genes_species_samples_timepoints'</span>,</span>
<span id="cb46-47">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n_genes'</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(common_genes_list),</span>
<span id="cb46-48">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n_combined_samples'</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sample_labels),</span>
<span id="cb46-49">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n_timepoints'</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(common_timepoints),</span>
<span id="cb46-50">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'rank'</span>: rank,</span>
<span id="cb46-51">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lambdas'</span>: lambdas,</span>
<span id="cb46-52">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'decomposition_success'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb46-53">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'timepoint_order'</span>: common_timepoints,</span>
<span id="cb46-54">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'species_info'</span>: {species: info[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n_samples'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> species, info <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> species_info.items()},</span>
<span id="cb46-55">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_count'</span>: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(common_genes_list)</span>
<span id="cb46-56">    }</span>
<span id="cb46-57">    </span>
<span id="cb46-58">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">hasattr</span>(model, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'converged_'</span>):</span>
<span id="cb46-59">        metadata[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'converged'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">bool</span>(model.converged_)</span>
<span id="cb46-60">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">hasattr</span>(model, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'loss_'</span>) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> model.loss_ <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span>:</span>
<span id="cb46-61">        metadata[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'final_loss'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(model.loss_[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb46-62">        metadata[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n_iterations'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(model.loss_)</span>
<span id="cb46-63"></span>
<span id="cb46-64"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb46-65">    metadata <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb46-66">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tensor_shape'</span>: tensor_filled.shape,</span>
<span id="cb46-67">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tensor_type'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'3D_genes_species_samples_timepoints'</span>,</span>
<span id="cb46-68">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'decomposition_success'</span>: <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>,</span>
<span id="cb46-69">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'error'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Decomposition failed'</span></span>
<span id="cb46-70">    }</span>
<span id="cb46-71"></span>
<span id="cb46-72"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> json</span>
<span id="cb46-73"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">open</span>(os.path.join(factors_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"metadata.json"</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span>) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> f:</span>
<span id="cb46-74">    json.dump(metadata, f, indent<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb46-75"></span>
<span id="cb46-76"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">Saved all results to: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>factors_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb46-77"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> decomposition_success:</span>
<span id="cb46-78">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Files created:"</span>)</span>
<span id="cb46-79">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"- gene_factors.csv: Gene loadings for each component"</span>)</span>
<span id="cb46-80">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"- sample_factors.csv: Sample loadings for each component (with species info)"</span>)</span>
<span id="cb46-81">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"- time_factors.csv: Timepoint loadings for each component"</span>)</span>
<span id="cb46-82">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"- component_weights.csv: Component importance weights"</span>)</span>
<span id="cb46-83">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"- sample_mapping.csv: Mapping of samples to species"</span>)</span>
<span id="cb46-84">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"- metadata.json: Analysis metadata and parameters"</span>)</span>
<span id="cb46-85"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb46-86">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Only metadata saved due to decomposition failure"</span>)</span></code></pre></div>
<pre><code>## Saved tensor to: ../output/13.00-multiomics-barnacle/multiomics_tensor.npy
## 
## Saved all results to: ../output/13.00-multiomics-barnacle/barnacle_factors
## Files created:
## - gene_factors.csv: Gene loadings for each component
## - sample_factors.csv: Sample loadings for each component (with species info)
## - time_factors.csv: Timepoint loadings for each component
## - component_weights.csv: Component importance weights
## - sample_mapping.csv: Mapping of samples to species
## - metadata.json: Analysis metadata and parameters</code></pre>
</section>
<section id="visualize-barnacle-results" class="level2">
<h2 class="anchored" data-anchor-id="visualize-barnacle-results">4.11 Visualize Barnacle results</h2>
<section id="visualization-setup" class="level3">
<h3 class="anchored" data-anchor-id="visualization-setup">4.11.1 Visualization setup</h3>
<div class="sourceCode" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb48-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Setup for visualizations: load libs, directories and dataframes (shared by all small chunks)</span></span>
<span id="cb48-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb48-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb48-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb48-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb48-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> seaborn <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> sns</span>
<span id="cb48-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.decomposition <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> PCA</span>
<span id="cb48-8"></span>
<span id="cb48-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensure factors_dir is defined (created in previous chunk)</span></span>
<span id="cb48-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb48-11">    factors_dir</span>
<span id="cb48-12"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">NameError</span>:</span>
<span id="cb48-13">    factors_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"barnacle_factors"</span>)</span>
<span id="cb48-14"></span>
<span id="cb48-15">fig_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(factors_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"figures"</span>)</span>
<span id="cb48-16">os.makedirs(fig_dir, exist_ok<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb48-17"></span>
<span id="cb48-18"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Creating visualizations in:"</span>, fig_dir)</span>
<span id="cb48-19"></span>
<span id="cb48-20"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> safe_load_df(var_name, csv_name):</span>
<span id="cb48-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb48-22">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">globals</span>()[var_name]</span>
<span id="cb48-23">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>:</span>
<span id="cb48-24">        path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(factors_dir, csv_name)</span>
<span id="cb48-25">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(path):</span>
<span id="cb48-26">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> pd.read_csv(path, index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb48-27">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb48-28">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb48-29"></span>
<span id="cb48-30">gene_factor_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> safe_load_df(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_factor_df'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene_factors.csv'</span>)</span>
<span id="cb48-31">sample_factor_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> safe_load_df(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sample_factor_df'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sample_factors.csv'</span>)</span>
<span id="cb48-32">time_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> safe_load_df(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time_df'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time_factors.csv'</span>)</span>
<span id="cb48-33">weights_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb48-34">weights_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(factors_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'component_weights.csv'</span>)</span>
<span id="cb48-35"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> os.path.exists(weights_path):</span>
<span id="cb48-36">    weights_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(weights_path)</span>
<span id="cb48-37"></span>
<span id="cb48-38"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Visualization setup complete'</span>)</span></code></pre></div>
<pre><code>## '../output/13.00-multiomics-barnacle/barnacle_factors'
## Creating visualizations in: ../output/13.00-multiomics-barnacle/barnacle_factors/figures
## Visualization setup complete</code></pre>
</section>
<section id="component-weights" class="level3">
<h3 class="anchored" data-anchor-id="component-weights">4.11.2 Component weights</h3>
<div class="sourceCode" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb50-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Component weights barplot</span></span>
<span id="cb50-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> weights_df <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> weights_df.empty:</span>
<span id="cb50-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb50-4">        plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb50-5">        sns.barplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component'</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Weight'</span>, data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>weights_df, palette<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'viridis'</span>)</span>
<span id="cb50-6">        plt.xticks(rotation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>)</span>
<span id="cb50-7">        plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component weights'</span>)</span>
<span id="cb50-8">        plt.tight_layout()</span>
<span id="cb50-9">        out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(fig_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'component_weights.png'</span>)</span>
<span id="cb50-10">        plt.savefig(out, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>)</span>
<span id="cb50-11">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Saved:'</span>, out)</span>
<span id="cb50-12">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb50-13">            plt.show()</span>
<span id="cb50-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>:</span>
<span id="cb50-15">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb50-16">        plt.close()</span>
<span id="cb50-17">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb50-18">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Could not plot component weights:'</span>, e)</span>
<span id="cb50-19"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb50-20">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'No component_weights.csv found; skipping weights plot'</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-08-Data-Exploration---E5-Timeseries-A.pulchra-Multi-species-Multi-omics-Using-Barnacle/13.00-multiomics-barnacle_files/figure-gfm/viz-weights-1.png" width="576"></p>
</section>
<section id="timepoint-loadings" class="level3">
<h3 class="anchored" data-anchor-id="timepoint-loadings">4.11.3 Timepoint loadings</h3>
<div class="sourceCode" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb51-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Timepoint loadings (line plot)</span></span>
<span id="cb51-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> time_df <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> time_df.empty:</span>
<span id="cb51-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb51-4">        plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb51-5">        x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(time_df.index)))</span>
<span id="cb51-6">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> col <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> time_df.columns:</span>
<span id="cb51-7">            plt.plot(x, time_df[col].values, marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>col)</span>
<span id="cb51-8">        plt.xticks(x, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">list</span>(time_df.index), rotation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>)</span>
<span id="cb51-9">        plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Timepoint'</span>)</span>
<span id="cb51-10">        plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Loading'</span>)</span>
<span id="cb51-11">        plt.legend(bbox_to_anchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.02</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'upper left'</span>)</span>
<span id="cb51-12">        plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Timepoint loadings per component'</span>)</span>
<span id="cb51-13">        plt.tight_layout()</span>
<span id="cb51-14">        out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(fig_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'time_loadings.png'</span>)</span>
<span id="cb51-15">        plt.savefig(out, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>)</span>
<span id="cb51-16">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Saved:'</span>, out)</span>
<span id="cb51-17">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb51-18">            plt.show()</span>
<span id="cb51-19">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>:</span>
<span id="cb51-20">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb51-21">        plt.close()</span>
<span id="cb51-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb51-23">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Timepoint loading plot failed:'</span>, e)</span>
<span id="cb51-24"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb51-25">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'No time_factors available; skipping timepoint plot'</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-08-Data-Exploration---E5-Timeseries-A.pulchra-Multi-species-Multi-omics-Using-Barnacle/13.00-multiomics-barnacle_files/figure-gfm/viz-time-loadings-3.png" width="768"></p>
</section>
<section id="sample-factor-heatmap" class="level3">
<h3 class="anchored" data-anchor-id="sample-factor-heatmap">4.11.4 Sample-factor heatmap</h3>
<div class="sourceCode" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb52-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sample-factor heatmap grouped by species</span></span>
<span id="cb52-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> sample_factor_df <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> sample_factor_df.empty:</span>
<span id="cb52-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb52-4">        sf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sample_factor_df.copy()</span>
<span id="cb52-5">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If metadata columns present, separate numeric factor columns</span></span>
<span id="cb52-6">        meta_cols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [c <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sample_ID'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sf.columns]</span>
<span id="cb52-7">        factor_cols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [c <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sf.columns <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> meta_cols]</span>
<span id="cb52-8">        species_series <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sf[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sf.columns <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> pd.Series([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'unknown'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>sf.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sf.index)</span>
<span id="cb52-9">        sample_vals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sf[factor_cols]</span>
<span id="cb52-10"></span>
<span id="cb52-11">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sort by species for display</span></span>
<span id="cb52-12"></span>
<span id="cb52-13">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Order samples by species, then by Sample_ID (if available) to include all samples</span></span>
<span id="cb52-14">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sample_ID'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sf.columns:</span>
<span id="cb52-15">            order <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sf.sort_values([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sample_ID'</span>]).index</span>
<span id="cb52-16">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb52-17">            order <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> species_series.sort_values().index</span>
<span id="cb52-18">        sample_vals_sorted <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sample_vals.loc[order]</span>
<span id="cb52-19"></span>
<span id="cb52-20">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a single-axis heatmap and force display of all sample labels</span></span>
<span id="cb52-21">        fig <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, sample_vals_sorted.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.08</span>)))</span>
<span id="cb52-22">        ax_hm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.add_subplot(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">111</span>)</span>
<span id="cb52-23"></span>
<span id="cb52-24">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Main heatmap with slightly shrunken colorbar</span></span>
<span id="cb52-25">        h <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sns.heatmap(sample_vals_sorted, cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'vlag'</span>, center<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,</span>
<span id="cb52-26">                        cbar_kws<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>{<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'label'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Component loading (signed)'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'shrink'</span>: <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>},</span>
<span id="cb52-27">                        ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax_hm)</span>
<span id="cb52-28">        ax_hm.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Components'</span>)</span>
<span id="cb52-29">        ax_hm.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span>
<span id="cb52-30"></span>
<span id="cb52-31">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Force display of all sample labels (small font for legibility)</span></span>
<span id="cb52-32">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb52-33">            ax_hm.set_yticks(np.arange(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(sample_vals_sorted.index)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb52-34">            ax_hm.set_yticklabels(sample_vals_sorted.index, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb52-35">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>:</span>
<span id="cb52-36">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb52-37"></span>
<span id="cb52-38">        plt.tight_layout()</span>
<span id="cb52-39">        out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(fig_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sample_factors_heatmap.png'</span>)</span>
<span id="cb52-40">        plt.savefig(out, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>)</span>
<span id="cb52-41">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Saved:'</span>, out)</span>
<span id="cb52-42">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb52-43">            plt.show()</span>
<span id="cb52-44">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>:</span>
<span id="cb52-45">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb52-46">        plt.close()</span>
<span id="cb52-47"></span>
<span id="cb52-48">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb52-49">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sample factors plotting failed:'</span>, e)</span>
<span id="cb52-50"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb52-51">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'No sample_factors available; skipping sample heatmap'</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-08-Data-Exploration---E5-Timeseries-A.pulchra-Multi-species-Multi-omics-Using-Barnacle/13.00-multiomics-barnacle_files/figure-gfm/viz-sample-heatmap-5.png" width="960"></p>
</section>
<section id="pca-of-sample-factor-loadings" class="level3">
<h3 class="anchored" data-anchor-id="pca-of-sample-factor-loadings">4.11.5 PCA of sample-factor loadings</h3>
<div class="sourceCode" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb53-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># PCA of sample factors (2D scatter)</span></span>
<span id="cb53-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> sample_factor_df <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> sample_factor_df.empty:</span>
<span id="cb53-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb53-4">        sf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sample_factor_df.copy()</span>
<span id="cb53-5">        meta_cols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [c <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sample_ID'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sf.columns]</span>
<span id="cb53-6">        factor_cols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [c <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sf.columns <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> meta_cols]</span>
<span id="cb53-7">        species_series <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sf[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> sf.columns <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> pd.Series([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'unknown'</span>]<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>sf.shape[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sf.index)</span>
<span id="cb53-8">        sample_vals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sf[factor_cols]</span>
<span id="cb53-9"></span>
<span id="cb53-10">        X <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> sample_vals.fillna(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>).values</span>
<span id="cb53-11">        pca <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> PCA(n_components<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb53-12">        pcs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pca.fit_transform(X)</span>
<span id="cb53-13">        pcs_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.DataFrame(pcs, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>sample_vals.index, columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PC1'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PC2'</span>])</span>
<span id="cb53-14">        pcs_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> species_series.loc[pcs_df.index].values</span>
<span id="cb53-15"></span>
<span id="cb53-16">        plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>))</span>
<span id="cb53-17">        sns.scatterplot(data<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pcs_df, x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PC1'</span>, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PC2'</span>, hue<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Species'</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">80</span>)</span>
<span id="cb53-18">        plt.title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PCA of sample-factor loadings'</span>)</span>
<span id="cb53-19">        plt.tight_layout()</span>
<span id="cb53-20">        out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(fig_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'sample_factors_pca.png'</span>)</span>
<span id="cb53-21">        plt.savefig(out, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>)</span>
<span id="cb53-22">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Saved:'</span>, out)</span>
<span id="cb53-23">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb53-24">            plt.show()</span>
<span id="cb53-25">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>:</span>
<span id="cb53-26">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb53-27">        plt.close()</span>
<span id="cb53-28"></span>
<span id="cb53-29">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb53-30">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Sample PCA plotting failed:'</span>, e)</span>
<span id="cb53-31"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb53-32">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'No sample_factors available; skipping sample PCA'</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-08-Data-Exploration---E5-Timeseries-A.pulchra-Multi-species-Multi-omics-Using-Barnacle/13.00-multiomics-barnacle_files/figure-gfm/viz-sample-pca-7.png" width="576"></p>
</section>
<section id="top-orthologs-per-component" class="level3">
<h3 class="anchored" data-anchor-id="top-orthologs-per-component">4.11.6 Top orthologs per component</h3>
<div class="sourceCode" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb54-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Top orthologs per component (barplots)</span></span>
<span id="cb54-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> gene_factor_df <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">is</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> gene_factor_df.empty:</span>
<span id="cb54-3">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb54-4">        gf <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gene_factor_df.copy()</span>
<span id="cb54-5">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Determine number of components</span></span>
<span id="cb54-6">        comps <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gf.columns</span>
<span id="cb54-7">        n_top <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb54-8">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> col <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> comps:</span>
<span id="cb54-9">            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># rank by absolute loading</span></span>
<span id="cb54-10">            s <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gf[col].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">abs</span>().sort_values(ascending<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>).head(n_top)</span>
<span id="cb54-11">            plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, n_top<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>)))</span>
<span id="cb54-12">            sns.barplot(x<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>s.values, y<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>s.index, palette<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'magma'</span>)</span>
<span id="cb54-13">            plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Absolute loading'</span>)</span>
<span id="cb54-14">            plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Ortholog group'</span>)</span>
<span id="cb54-15">            plt.title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'Top </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>n_top<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> genes - </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>col<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">'</span>)</span>
<span id="cb54-16">            plt.tight_layout()</span>
<span id="cb54-17">            out <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> os.path.join(fig_dir, <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f'top_orthologs_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>col<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.png'</span>)</span>
<span id="cb54-18">            plt.savefig(out, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">150</span>)</span>
<span id="cb54-19">            <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Saved:'</span>, out)</span>
<span id="cb54-20">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">try</span>:</span>
<span id="cb54-21">                plt.show()</span>
<span id="cb54-22">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span>:</span>
<span id="cb54-23">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">pass</span></span>
<span id="cb54-24">            plt.close()</span>
<span id="cb54-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">except</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">Exception</span> <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> e:</span>
<span id="cb54-26">        <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Top orthologs plotting failed:'</span>, e)</span>
<span id="cb54-27"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb54-28">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'No gene_factors available; skipping gene plots'</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-08-Data-Exploration---E5-Timeseries-A.pulchra-Multi-species-Multi-omics-Using-Barnacle/13.00-multiomics-barnacle_files/figure-gfm/viz-top-genes-9.png" width="576"><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-08-Data-Exploration---E5-Timeseries-A.pulchra-Multi-species-Multi-omics-Using-Barnacle/13.00-multiomics-barnacle_files/figure-gfm/viz-top-genes-10.png" width="576"><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-08-Data-Exploration---E5-Timeseries-A.pulchra-Multi-species-Multi-omics-Using-Barnacle/13.00-multiomics-barnacle_files/figure-gfm/viz-top-genes-11.png" width="576"><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-08-Data-Exploration---E5-Timeseries-A.pulchra-Multi-species-Multi-omics-Using-Barnacle/13.00-multiomics-barnacle_files/figure-gfm/viz-top-genes-12.png" width="576"><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-10-08-Data-Exploration---E5-Timeseries-A.pulchra-Multi-species-Multi-omics-Using-Barnacle/13.00-multiomics-barnacle_files/figure-gfm/viz-top-genes-13.png" width="576"></p>
</section>
</section>
</section>
<section id="system-info" class="level1">
<h1>5 SYSTEM INFO</h1>
<div class="sourceCode" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb55-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sessionInfo</span>()</span></code></pre></div>
<pre><code>## R version 4.2.3 (2023-03-15)
## Platform: x86_64-pc-linux-gnu (64-bit)
## Running under: Ubuntu 24.04.3 LTS
## 
## Matrix products: default
## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3
## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so
## 
## locale:
##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
##  [9] LC_ADDRESS=C               LC_TELEPHONE=C            
## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       
## 
## attached base packages:
## [1] stats     graphics  grDevices utils     datasets  methods   base     
## 
## other attached packages:
##  [1] glmGamPoi_1.10.2  sctransform_0.4.2 reticulate_1.43.0 lubridate_1.9.4  
##  [5] forcats_1.0.0     stringr_1.5.1     dplyr_1.1.4       purrr_1.1.0      
##  [9] readr_2.1.5       tidyr_1.3.1       tibble_3.3.0      ggplot2_4.0.0    
## [13] tidyverse_2.0.0   knitr_1.50       
## 
## loaded via a namespace (and not attached):
##  [1] MatrixGenerics_1.10.0       Biobase_2.58.0             
##  [3] jsonlite_2.0.0              DelayedMatrixStats_1.20.0  
##  [5] S7_0.2.0                    stats4_4.2.3               
##  [7] GenomeInfoDbData_1.2.9      yaml_2.3.10                
##  [9] globals_0.18.0              pillar_1.11.0              
## [11] lattice_0.22-7              glue_1.8.0                 
## [13] digest_0.6.37               GenomicRanges_1.50.2       
## [15] RColorBrewer_1.1-3          XVector_0.38.0             
## [17] htmltools_0.5.8.1           Matrix_1.6-1               
## [19] plyr_1.8.9                  pkgconfig_2.0.3            
## [21] listenv_0.9.1               zlibbioc_1.44.0            
## [23] scales_1.4.0                tzdb_0.5.0                 
## [25] timechange_0.3.0            generics_0.1.4             
## [27] farver_2.1.2                IRanges_2.32.0             
## [29] withr_3.0.2                 SummarizedExperiment_1.28.0
## [31] BiocGenerics_0.44.0         cli_3.6.5                  
## [33] magrittr_2.0.4              evaluate_1.0.5             
## [35] future_1.67.0               parallelly_1.45.1          
## [37] MASS_7.3-60                 tools_4.2.3                
## [39] hms_1.1.3                   lifecycle_1.0.4            
## [41] matrixStats_1.5.0           S4Vectors_0.36.2           
## [43] DelayedArray_0.24.0         compiler_4.2.3             
## [45] GenomeInfoDb_1.34.9         rlang_1.1.6                
## [47] grid_4.2.3                  RCurl_1.98-1.17            
## [49] rstudioapi_0.17.1           bitops_1.0-9               
## [51] rmarkdown_2.29              gtable_0.3.6               
## [53] codetools_0.2-20            reshape2_1.4.4             
## [55] R6_2.6.1                    gridExtra_2.3              
## [57] fastmap_1.2.0               future.apply_1.20.0        
## [59] stringi_1.8.7               parallel_4.2.3             
## [61] Rcpp_1.1.0                  vctrs_0.6.5                
## [63] png_0.1-8                   tidyselect_1.2.1           
## [65] xfun_0.53                   sparseMatrixStats_1.10.0</code></pre>
</section>
<section id="references" class="level1">
<h1>6 REFERENCES</h1>
<div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-blaskowski2024" class="csl-entry">
Blaskowski, Stephen, Marie Roald, Paul M. Berube, Rogier Braakman, and E. Virginia Armbrust. 2024. “Simultaneous Acclimation to Nitrogen and Iron Scarcity in Open Ocean Cyanobacteria Revealed by Sparse Tensor Decomposition of Metatranscriptomes.” <a href="http://dx.doi.org/10.1101/2024.07.15.603627" class="uri">http://dx.doi.org/10.1101/2024.07.15.603627</a>.
</div>
</div>


</section>

 ]]></description>
  <category>2025</category>
  <category>barnacle</category>
  <category>Acropora pulchra</category>
  <category>Porites evermanni</category>
  <category>Pocillopora tuahiniensis</category>
  <category>E5</category>
  <category>coral</category>
  <category>timeseries_molecular</category>
  <guid>https://robertslab.github.io/sams-notebook/posts/2025/2025-10-08-Data-Exploration---E5-Timeseries-A.pulchra-Multi-species-Multi-omics-Using-Barnacle/</guid>
  <pubDate>Wed, 08 Oct 2025 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Equipment Maintenance - Battery Replacments for -80C Freezer and Server UPS</title>
  <dc:creator>Sam White</dc:creator>
  <link>https://robertslab.github.io/sams-notebook/posts/2025/2025-09-25-Equipment-Maintenance---Battery-Replacments-for--80C-Freezer-and-Server-UPS/</link>
  <description><![CDATA[ 





<section id="intro" class="level1">
<h1>INTRO</h1>
<p>Replaced the battery in our -80C feezer (VWR) with a new one (Power Sonic PS-1270 Rechargeable Sealed Lead Acid Battery 12V 7AH for General Purpose, Medical, Emergency Lighting, Fire and Security with F1 Terminals).</p>
<p>Replaced the batteries in our APC Universal Power Supply (UPS) that powers our servers (Gannet/Owl).</p>


</section>

 ]]></description>
  <category>2025</category>
  <category>battery replacement</category>
  <guid>https://robertslab.github.io/sams-notebook/posts/2025/2025-09-25-Equipment-Maintenance---Battery-Replacments-for--80C-Freezer-and-Server-UPS/</guid>
  <pubDate>Thu, 25 Sep 2025 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Exploration - E5 Timeseries A.pulchra Multi-omics Using MOFA2</title>
  <dc:creator>Sam White</dc:creator>
  <link>https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/</link>
  <description><![CDATA[ 





<section id="intro" class="level1">
<h1>INTRO</h1>
<p>This notebook is an introductory exploration of the E5 coral <a href="https://github.com/urol-e5/timeseries_molecular"><code>urol-e5/timeseries_molecular</code></a> (GitHub repo) data using a multi-omics approach, using <a href="https://biofam.github.io/MOFA2/index.html">MOFA2</a>.</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>You may want to skip ahead to the various plots, of which there are many. But, if you want to explore the nitty gritty, just scroll on through!</p>
</div>
</div>
<p>I started using MOFA2 after attempting to use a different multi-omics software, called barnacle. Barnacle employs the use of tensor decomposition, which was appealing. However, I ran into difficulties trying to analyze data with different numbers of features (e.g.&nbsp;number of genes and number of methylated CpGs). Barnacle was unhappy.</p>
<p>Switching to MOFA2 allowed me to get around that limitation. Additionally, MOFA2 is really, really well-documented, including a number of tutorials to walk the user through analysis. It’s very nice.</p>
<p>Since I was just starting out and kicking the tires, I kept things simple and only analyzed the following:</p>
<ul>
<li>gene expression counts</li>
<li>transcript expression counts</li>
<li>CpG methylation counts</li>
</ul>
<p>I have not yet incorporated the actual timeseries aspect of this project into the analysis! Additionally, I have not incorporated the miRNA data. Both of these components were not in a ready-to-use format, so I’ll address them at a later date.</p>
<hr>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>The contents below are from knitted markdown <a href="https://github.com/urol-e5/timeseries_molecular/blob/fa95a5a62200051e4f709f59894345b502396e6a/D-Apul/code/22.20-Apul-multiomics-MOFA2.md"><code>22.20-Apul-multiomics-MOFA2.md</code></a> (commit <code>fa95a5a</code>).</p>
</div>
</div>
</section>
<section id="background" class="level1">
<h1>1 BACKGROUND</h1>
<p>This script performs multi-omics data integration and analysis for <em>A. pulchra</em> using the MOFA2 framework (<a href="https://biofam.github.io/MOFA2/">MOFA2 documentation</a>) .</p>
<p><strong>Software:</strong> - MOFA2: Multi-Omics Factor Analysis v2, a statistical framework for comprehensive integration of multi-modal data.</p>
<p><strong>Input files:</strong></p>
<p>Data files downloaded from <a href="https://github.com/urol-e5/timeseries_molecular/wiki/02%E2%80%90Expression-Count-Matrices#a-pulchra"><em>A.pulchra</em> Expression Count GitHub wiki</a>.</p>
<ul>
<li>Genes: <a href="https://gannet.fish.washington.edu/gitrepos/urol-e5/timeseries_molecular/D-Apul/output/02.20-D-Apul-RNAseq-alignment-HiSat2/apul-gene_count_matrix.csv">apul-gene_count_matrix.csv</a></li>
<li>Transcripts: <a href="https://gannet.fish.washington.edu/gitrepos/urol-e5/timeseries_molecular/D-Apul/output/02.20-D-Apul-RNAseq-alignment-HiSat2/apul-transcript_count_matrix.csv">apul-transcript_count_matrix.csv</a></li>
<li>lncRNA: <a href="https://gannet.fish.washington.edu/v1_web/owlshell/bu-github/timeseries_molecular/D-Apul/output/31.5-Apul-lncRNA-discovery/lncRNA_counts.clean.filtered.txt">lncRNA_counts.clean.filtered.txt</a></li>
<li>Methylated CpGs: <a href="https://gannet.fish.washington.edu/metacarcinus/E5/20250903_meth_Apul/merged-WGBS-CpG-counts_filtered.csv">merged-WGBS-CpG-counts_filtered.csv</a></li>
</ul>
<p><strong>Output files:</strong></p>
<p>NOTE: Due to the large file sizes of the output files, they are not uploaded to GitHub.</p>
<p>They are available here: <a href="https://gannet.fish.washington.edu/gitrepos/urol-e5/timeseries_molecular/D-Apul/output/22.20-Apul-multiomics-MOFA2/" class="uri">https://gannet.fish.washington.edu/gitrepos/urol-e5/timeseries_molecular/D-Apul/output/22.20-Apul-multiomics-MOFA2/</a></p>
<p>Creating these files (MOFA2 model HDF5 and RDS files) requires running the MOFA2 training steps in this script, which can take several hours depending on the number of factors and computational resources. It will be faster to download these output files from the above link and then run this script.</p>
<ul>
<li>Output files are written to: <code>../output/22.20-Apul-multiomics-MOFA2/</code>
<ul>
<li>MOFA2 model HDF5 files: <code>MOFA2_model_factors-&lt;N&gt;.hdf5</code> (where <code>&lt;N&gt;</code> is the number of factors, e.g.&nbsp;10-15)</li>
<li>MOFA2 model RDS files: <code>MOFA2_model_factors-&lt;N&gt;.rds</code> (where <code>&lt;N&gt;</code> is the number of factors, e.g.&nbsp;10-15)</li>
</ul></li>
</ul>
<p><strong>Script workflow:</strong> - Loads and harmonizes multi-omics input data (gene, transcript, lncRNA, methylation counts) - Preprocesses data (removes zero-variance features, harmonizes sample columns) - Trains MOFA2 models for a range of factor numbers (10-15) or loads pre-trained models from disk - Performs downstream analysis and visualization of MOFA2 results (variance explained, factor characterization, feature weights)</p>
</section>
<section id="setup" class="level1">
<h1>2 Setup</h1>
<section id="libraries" class="level2">
<h2 class="anchored" data-anchor-id="libraries">2.1 Libraries</h2>
</section>
<section id="variables" class="level2">
<h2 class="anchored" data-anchor-id="variables">2.2 Variables</h2>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output directory</span></span>
<span id="cb1-2">output_dir <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../output/22.20-Apul-multiomics-MOFA2"</span></span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Model seed</span></span>
<span id="cb1-5">model_seed <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">42</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># INPUT FILES</span></span>
<span id="cb1-8">data_files <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb1-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gene_counts =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/apul-gene_count_matrix.csv"</span>,</span>
<span id="cb1-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">transcript_counts =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/apul-transcript_count_matrix.csv"</span>,</span>
<span id="cb1-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lncRNA_counts =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/lncRNA_counts.clean.filtered.txt"</span>,</span>
<span id="cb1-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">methylation_counts =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"../data/merged-WGBS-CpG-counts_filtered_n20.csv"</span></span>
<span id="cb1-13">)</span></code></pre></div>
</section>
</section>
<section id="data-structure-overview" class="level1">
<h1>3 Data Structure Overview</h1>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show structure and preview of each data file in the data folder using tidyverse/dplyr</span></span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (name <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(data_files)) {</span>
<span id="cb2-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">===== "</span>, name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" =====</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb2-5">  file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data_files[[name]]</span>
<span id="cb2-6">  dat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fread</span>(file)</span>
<span id="cb2-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(dat))</span>
<span id="cb2-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(dat <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_head</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span>
<span id="cb2-9">}</span></code></pre></div>
<pre><code>=====  gene_counts  =====
Rows: 44,371
Columns: 41
$ gene_id       &lt;chr&gt; "FUN_002326", "FUN_002315", "FUN_002316", "FUN_002303", …
$ `ACR-139-TP1` &lt;int&gt; 3, 0, 0, 10, 2, 12, 3, 1, 3, 12, 4, 10, 4, 1, 8, 1, 5, 1…
$ `ACR-139-TP2` &lt;int&gt; 2, 1, 0, 5, 1, 7, 1, 2, 1, 7, 1, 7, 1, 2, 4, 2, 3, 1, 6,…
$ `ACR-139-TP3` &lt;int&gt; 3, 0, 0, 10, 1, 10, 2, 1, 1, 11, 1, 11, 1, 2, 9, 2, 3, 1…
$ `ACR-139-TP4` &lt;int&gt; 4, 0, 0, 10, 2, 10, 2, 1, 3, 11, 3, 8, 3, 1, 8, 1, 3, 0,…
$ `ACR-145-TP1` &lt;int&gt; 12, 0, 0, 23, 2, 26, 1, 3, 2, 24, 2, 20, 2, 2, 20, 2, 12…
$ `ACR-145-TP2` &lt;int&gt; 7, 1, 1, 18, 3, 25, 2, 4, 2, 19, 3, 19, 3, 4, 19, 4, 6, …
$ `ACR-145-TP3` &lt;int&gt; 7, 0, 0, 20, 1, 22, 1, 2, 1, 25, 1, 24, 1, 2, 17, 2, 5, …
$ `ACR-145-TP4` &lt;int&gt; 16, 1, 0, 38, 1, 49, 1, 3, 1, 36, 1, 34, 1, 4, 31, 5, 15…
$ `ACR-150-TP1` &lt;int&gt; 21, 0, 0, 38, 9, 38, 9, 0, 9, 33, 9, 34, 10, 0, 41, 0, 1…
$ `ACR-150-TP2` &lt;int&gt; 3, 0, 0, 6, 1, 10, 1, 3, 1, 7, 1, 6, 1, 2, 5, 2, 3, 1, 5…
$ `ACR-150-TP3` &lt;int&gt; 10, 1, 2, 40, 11, 54, 11, 10, 12, 44, 12, 47, 10, 9, 34,…
$ `ACR-150-TP4` &lt;int&gt; 11, 0, 0, 30, 2, 38, 2, 6, 2, 32, 2, 31, 1, 6, 28, 6, 14…
$ `ACR-173-TP1` &lt;int&gt; 19, 1, 0, 73, 28, 70, 30, 2, 33, 53, 35, 49, 39, 2, 50, …
$ `ACR-173-TP2` &lt;int&gt; 6, 1, 2, 18, 5, 27, 7, 7, 6, 22, 6, 20, 6, 7, 16, 5, 6, …
$ `ACR-173-TP3` &lt;int&gt; 24, 1, 0, 73, 5, 89, 5, 15, 4, 72, 5, 78, 4, 14, 65, 13,…
$ `ACR-173-TP4` &lt;int&gt; 17, 0, 0, 31, 6, 40, 7, 3, 6, 28, 6, 27, 7, 2, 35, 2, 12…
$ `ACR-186-TP1` &lt;int&gt; 1, 0, 0, 3, 1, 3, 1, 0, 1, 3, 1, 2, 1, 0, 2, 0, 0, 0, 1,…
$ `ACR-186-TP2` &lt;int&gt; 2, 0, 0, 5, 1, 5, 1, 1, 1, 4, 0, 3, 0, 1, 2, 0, 2, 0, 3,…
$ `ACR-186-TP3` &lt;int&gt; 2, 0, 0, 4, 1, 5, 0, 0, 1, 3, 0, 3, 0, 1, 3, 0, 3, 0, 3,…
$ `ACR-186-TP4` &lt;int&gt; 3, 0, 0, 9, 1, 9, 1, 2, 1, 6, 1, 7, 1, 1, 7, 2, 3, 0, 7,…
$ `ACR-225-TP1` &lt;int&gt; 20, 0, 0, 34, 2, 38, 2, 3, 2, 29, 2, 29, 2, 3, 33, 3, 10…
$ `ACR-225-TP2` &lt;int&gt; 15, 2, 0, 54, 6, 74, 6, 9, 6, 58, 7, 55, 8, 8, 43, 9, 14…
$ `ACR-225-TP3` &lt;int&gt; 13, 0, 0, 38, 3, 47, 4, 10, 4, 41, 3, 40, 4, 9, 30, 11, …
$ `ACR-225-TP4` &lt;int&gt; 11, 0, 0, 21, 1, 23, 2, 1, 2, 20, 2, 18, 2, 1, 17, 2, 10…
$ `ACR-229-TP1` &lt;int&gt; 2, 0, 0, 2, 1, 4, 0, 1, 2, 2, 1, 2, 1, 0, 3, 0, 1, 1, 2,…
$ `ACR-229-TP2` &lt;int&gt; 1, 0, 0, 2, 1, 2, 2, 0, 1, 3, 1, 3, 1, 0, 1, 0, 1, 1, 3,…
$ `ACR-229-TP3` &lt;int&gt; 1, 0, 0, 3, 1, 2, 1, 0, 1, 2, 1, 2, 1, 0, 1, 0, 1, 0, 1,…
$ `ACR-229-TP4` &lt;int&gt; 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1,…
$ `ACR-237-TP1` &lt;int&gt; 16, 0, 0, 45, 2, 43, 2, 2, 2, 35, 2, 35, 2, 3, 36, 2, 11…
$ `ACR-237-TP2` &lt;int&gt; 16, 0, 0, 37, 4, 52, 4, 7, 3, 42, 4, 44, 4, 6, 35, 7, 14…
$ `ACR-237-TP3` &lt;int&gt; 14, 1, 1, 36, 7, 52, 6, 15, 6, 41, 6, 41, 7, 11, 31, 13,…
$ `ACR-237-TP4` &lt;int&gt; 24, 0, 0, 51, 2, 54, 2, 4, 2, 44, 2, 41, 2, 3, 45, 5, 16…
$ `ACR-244-TP1` &lt;int&gt; 2, 0, 0, 3, 0, 3, 0, 0, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2,…
$ `ACR-244-TP2` &lt;int&gt; 1, 0, 0, 4, 1, 5, 1, 1, 1, 4, 1, 4, 1, 2, 3, 2, 1, 0, 3,…
$ `ACR-244-TP3` &lt;int&gt; 3, 0, 0, 12, 3, 12, 3, 2, 3, 10, 4, 9, 3, 2, 7, 2, 2, 1,…
$ `ACR-244-TP4` &lt;int&gt; 1, 0, 0, 3, 1, 3, 1, 0, 1, 3, 1, 3, 1, 0, 3, 0, 1, 0, 3,…
$ `ACR-265-TP1` &lt;int&gt; 18, 0, 0, 31, 1, 39, 1, 0, 1, 38, 1, 30, 1, 1, 34, 1, 13…
$ `ACR-265-TP2` &lt;int&gt; 9, 0, 1, 29, 2, 37, 2, 9, 3, 33, 2, 31, 3, 10, 22, 7, 12…
$ `ACR-265-TP3` &lt;int&gt; 5, 0, 0, 23, 3, 30, 4, 6, 3, 24, 4, 26, 4, 5, 17, 5, 5, …
$ `ACR-265-TP4` &lt;int&gt; 12, 0, 0, 23, 1, 20, 1, 0, 2, 16, 1, 15, 1, 1, 20, 0, 8,…
          gene_id ACR-139-TP1 ACR-139-TP2 ACR-139-TP3 ACR-139-TP4 ACR-145-TP1
           &lt;char&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
    1: FUN_002326           3           2           3           4          12
    2: FUN_002315           0           1           0           0           0
    3: FUN_002316           0           0           0           0           0
    4: FUN_002303          10           5          10          10          23
    5: FUN_002304           2           1           1           2           2
   ---                                                                       
44367: FUN_044367           0           0           0           0           0
44368: FUN_044368           0           0           0           0           0
44369: FUN_044369           0           0           0           0           0
44370: FUN_044370           0           0           0           0           0
44371: FUN_044371           0           2           0           1           0
       ACR-145-TP2 ACR-145-TP3 ACR-145-TP4 ACR-150-TP1 ACR-150-TP2 ACR-150-TP3
             &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
    1:           7           7          16          21           3          10
    2:           1           0           1           0           0           1
    3:           1           0           0           0           0           2
    4:          18          20          38          38           6          40
    5:           3           1           1           9           1          11
   ---                                                                        
44367:           0           0           0           0           0           0
44368:           0           0           0           0           0           0
44369:           0           0           0           0           0           0
44370:           0           0           0           0           0           0
44371:           1           0           0           0           0           0
       ACR-150-TP4 ACR-173-TP1 ACR-173-TP2 ACR-173-TP3 ACR-173-TP4 ACR-186-TP1
             &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
    1:          11          19           6          24          17           1
    2:           0           1           1           1           0           0
    3:           0           0           2           0           0           0
    4:          30          73          18          73          31           3
    5:           2          28           5           5           6           1
   ---                                                                        
44367:           0           0           0           0           0           0
44368:           0           0           0           0           0           0
44369:           0           0           0           0           0           0
44370:           0           0           0           0           0           0
44371:           0           1           0           0           0           0
       ACR-186-TP2 ACR-186-TP3 ACR-186-TP4 ACR-225-TP1 ACR-225-TP2 ACR-225-TP3
             &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
    1:           2           2           3          20          15          13
    2:           0           0           0           0           2           0
    3:           0           0           0           0           0           0
    4:           5           4           9          34          54          38
    5:           1           1           1           2           6           3
   ---                                                                        
44367:           0           0           0           0           0           0
44368:           0           0           0           0           0           0
44369:           0           0           0           0           0           0
44370:           0           0           0           0           0           0
44371:           0           0           0           0           4           0
       ACR-225-TP4 ACR-229-TP1 ACR-229-TP2 ACR-229-TP3 ACR-229-TP4 ACR-237-TP1
             &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
    1:          11           2           1           1           0          16
    2:           0           0           0           0           0           0
    3:           0           0           0           0           0           0
    4:          21           2           2           3           1          45
    5:           1           1           1           1           0           2
   ---                                                                        
44367:           0           0           0           0           0           0
44368:           0           0           0           0           0           0
44369:           0           0           0           0           0           0
44370:           0           0           0           0           0           0
44371:           0           0           0           7           0           0
       ACR-237-TP2 ACR-237-TP3 ACR-237-TP4 ACR-244-TP1 ACR-244-TP2 ACR-244-TP3
             &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
    1:          16          14          24           2           1           3
    2:           0           1           0           0           0           0
    3:           0           1           0           0           0           0
    4:          37          36          51           3           4          12
    5:           4           7           2           0           1           3
   ---                                                                        
44367:           0           0           0           0           0           0
44368:           0           0           0           0           0           0
44369:           0           0           0           0           0           0
44370:           0           0           0           0           0           0
44371:           0           0           0           0           0           6
       ACR-244-TP4 ACR-265-TP1 ACR-265-TP2 ACR-265-TP3 ACR-265-TP4
             &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
    1:           1          18           9           5          12
    2:           0           0           0           0           0
    3:           0           0           1           0           0
    4:           3          31          29          23          23
    5:           1           1           2           3           1
   ---                                                            
44367:           0           0           0           0           0
44368:           0           0           0           0           0
44369:           0           0           0           0           0
44370:           0           0           0           0           0
44371:           0           0           0           0           0
      gene_id ACR-139-TP1 ACR-139-TP2 ACR-139-TP3 ACR-139-TP4 ACR-145-TP1
       &lt;char&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
1: FUN_002326           3           2           3           4          12
2: FUN_002315           0           1           0           0           0
3: FUN_002316           0           0           0           0           0
   ACR-145-TP2 ACR-145-TP3 ACR-145-TP4 ACR-150-TP1 ACR-150-TP2 ACR-150-TP3
         &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
1:           7           7          16          21           3          10
2:           1           0           1           0           0           1
3:           1           0           0           0           0           2
   ACR-150-TP4 ACR-173-TP1 ACR-173-TP2 ACR-173-TP3 ACR-173-TP4 ACR-186-TP1
         &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
1:          11          19           6          24          17           1
2:           0           1           1           1           0           0
3:           0           0           2           0           0           0
   ACR-186-TP2 ACR-186-TP3 ACR-186-TP4 ACR-225-TP1 ACR-225-TP2 ACR-225-TP3
         &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
1:           2           2           3          20          15          13
2:           0           0           0           0           2           0
3:           0           0           0           0           0           0
   ACR-225-TP4 ACR-229-TP1 ACR-229-TP2 ACR-229-TP3 ACR-229-TP4 ACR-237-TP1
         &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
1:          11           2           1           1           0          16
2:           0           0           0           0           0           0
3:           0           0           0           0           0           0
   ACR-237-TP2 ACR-237-TP3 ACR-237-TP4 ACR-244-TP1 ACR-244-TP2 ACR-244-TP3
         &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
1:          16          14          24           2           1           3
2:           0           1           0           0           0           0
3:           0           1           0           0           0           0
   ACR-244-TP4 ACR-265-TP1 ACR-265-TP2 ACR-265-TP3 ACR-265-TP4
         &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
1:           1          18           9           5          12
2:           0           0           0           0           0
3:           0           0           1           0           0


=====  transcript_counts  =====
Rows: 44,371
Columns: 41
$ transcript_id &lt;chr&gt; "FUN_002326-T1", "FUN_002315-T1", "FUN_002316-T1", "FUN_…
$ `ACR-139-TP1` &lt;int&gt; 3, 0, 0, 10, 2, 12, 3, 1, 3, 12, 4, 10, 4, 1, 8, 1, 5, 1…
$ `ACR-139-TP2` &lt;int&gt; 2, 1, 0, 5, 1, 7, 1, 2, 1, 7, 1, 7, 1, 2, 4, 2, 3, 1, 6,…
$ `ACR-139-TP3` &lt;int&gt; 3, 0, 0, 10, 1, 10, 2, 1, 1, 11, 1, 11, 1, 2, 9, 2, 3, 1…
$ `ACR-139-TP4` &lt;int&gt; 4, 0, 0, 10, 2, 10, 2, 1, 3, 11, 3, 8, 3, 1, 8, 1, 3, 0,…
$ `ACR-145-TP1` &lt;int&gt; 12, 0, 0, 23, 2, 26, 1, 3, 2, 24, 2, 20, 2, 2, 20, 2, 12…
$ `ACR-145-TP2` &lt;int&gt; 7, 1, 1, 18, 3, 25, 2, 4, 2, 19, 3, 19, 3, 4, 19, 4, 6, …
$ `ACR-145-TP3` &lt;int&gt; 7, 0, 0, 20, 1, 22, 1, 2, 1, 25, 1, 24, 1, 2, 17, 2, 5, …
$ `ACR-145-TP4` &lt;int&gt; 16, 1, 0, 38, 1, 49, 1, 3, 1, 36, 1, 34, 1, 4, 31, 5, 15…
$ `ACR-150-TP1` &lt;int&gt; 21, 0, 0, 38, 9, 38, 9, 0, 9, 33, 9, 34, 10, 0, 41, 0, 1…
$ `ACR-150-TP2` &lt;int&gt; 3, 0, 0, 6, 1, 10, 1, 3, 1, 7, 1, 6, 1, 2, 5, 2, 3, 1, 5…
$ `ACR-150-TP3` &lt;int&gt; 10, 1, 2, 40, 11, 54, 11, 10, 12, 44, 12, 47, 10, 9, 34,…
$ `ACR-150-TP4` &lt;int&gt; 11, 0, 0, 30, 2, 38, 2, 6, 2, 32, 2, 31, 1, 6, 28, 6, 14…
$ `ACR-173-TP1` &lt;int&gt; 19, 1, 0, 73, 28, 70, 30, 2, 33, 53, 35, 49, 39, 2, 50, …
$ `ACR-173-TP2` &lt;int&gt; 6, 1, 2, 18, 5, 27, 7, 7, 6, 22, 6, 20, 6, 7, 16, 5, 6, …
$ `ACR-173-TP3` &lt;int&gt; 24, 1, 0, 73, 5, 89, 5, 15, 4, 72, 5, 78, 4, 14, 65, 13,…
$ `ACR-173-TP4` &lt;int&gt; 17, 0, 0, 31, 6, 40, 7, 3, 6, 28, 6, 27, 7, 2, 35, 2, 12…
$ `ACR-186-TP1` &lt;int&gt; 1, 0, 0, 3, 1, 3, 1, 0, 1, 3, 1, 2, 1, 0, 2, 0, 0, 0, 1,…
$ `ACR-186-TP2` &lt;int&gt; 2, 0, 0, 5, 1, 5, 1, 1, 1, 4, 0, 3, 0, 1, 2, 0, 2, 0, 3,…
$ `ACR-186-TP3` &lt;int&gt; 2, 0, 0, 4, 1, 5, 0, 0, 1, 3, 0, 3, 0, 1, 3, 0, 3, 0, 3,…
$ `ACR-186-TP4` &lt;int&gt; 3, 0, 0, 9, 1, 9, 1, 2, 1, 6, 1, 7, 1, 1, 7, 2, 3, 0, 7,…
$ `ACR-225-TP1` &lt;int&gt; 20, 0, 0, 34, 2, 38, 2, 3, 2, 29, 2, 29, 2, 3, 33, 3, 10…
$ `ACR-225-TP2` &lt;int&gt; 15, 2, 0, 54, 6, 74, 6, 9, 6, 58, 7, 55, 8, 8, 43, 9, 14…
$ `ACR-225-TP3` &lt;int&gt; 13, 0, 0, 38, 3, 47, 4, 10, 4, 41, 3, 40, 4, 9, 30, 11, …
$ `ACR-225-TP4` &lt;int&gt; 11, 0, 0, 21, 1, 23, 2, 1, 2, 20, 2, 18, 2, 1, 17, 2, 10…
$ `ACR-229-TP1` &lt;int&gt; 2, 0, 0, 2, 1, 4, 0, 1, 2, 2, 1, 2, 1, 0, 3, 0, 1, 1, 2,…
$ `ACR-229-TP2` &lt;int&gt; 1, 0, 0, 2, 1, 2, 2, 0, 1, 3, 1, 3, 1, 0, 1, 0, 1, 1, 3,…
$ `ACR-229-TP3` &lt;int&gt; 1, 0, 0, 3, 1, 2, 1, 0, 1, 2, 1, 2, 1, 0, 1, 0, 1, 0, 1,…
$ `ACR-229-TP4` &lt;int&gt; 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1,…
$ `ACR-237-TP1` &lt;int&gt; 16, 0, 0, 45, 2, 43, 2, 2, 2, 35, 2, 35, 2, 3, 36, 2, 11…
$ `ACR-237-TP2` &lt;int&gt; 16, 0, 0, 37, 4, 52, 4, 7, 3, 42, 4, 44, 4, 6, 35, 7, 14…
$ `ACR-237-TP3` &lt;int&gt; 14, 1, 1, 36, 7, 52, 6, 15, 6, 41, 6, 41, 7, 11, 31, 13,…
$ `ACR-237-TP4` &lt;int&gt; 24, 0, 0, 51, 2, 54, 2, 4, 2, 44, 2, 41, 2, 3, 45, 5, 16…
$ `ACR-244-TP1` &lt;int&gt; 2, 0, 0, 3, 0, 3, 0, 0, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2,…
$ `ACR-244-TP2` &lt;int&gt; 1, 0, 0, 4, 1, 5, 1, 1, 1, 4, 1, 4, 1, 2, 3, 2, 1, 0, 3,…
$ `ACR-244-TP3` &lt;int&gt; 3, 0, 0, 12, 3, 12, 3, 2, 3, 10, 4, 9, 3, 2, 7, 2, 2, 1,…
$ `ACR-244-TP4` &lt;int&gt; 1, 0, 0, 3, 1, 3, 1, 0, 1, 3, 1, 3, 1, 0, 3, 0, 1, 0, 3,…
$ `ACR-265-TP1` &lt;int&gt; 18, 0, 0, 31, 1, 39, 1, 0, 1, 38, 1, 30, 1, 1, 34, 1, 13…
$ `ACR-265-TP2` &lt;int&gt; 9, 0, 1, 29, 2, 37, 2, 9, 3, 33, 2, 31, 3, 10, 22, 7, 12…
$ `ACR-265-TP3` &lt;int&gt; 5, 0, 0, 23, 3, 30, 4, 6, 3, 24, 4, 26, 4, 5, 17, 5, 5, …
$ `ACR-265-TP4` &lt;int&gt; 12, 0, 0, 23, 1, 20, 1, 0, 2, 16, 1, 15, 1, 1, 20, 0, 8,…
       transcript_id ACR-139-TP1 ACR-139-TP2 ACR-139-TP3 ACR-139-TP4
              &lt;char&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
    1: FUN_002326-T1           3           2           3           4
    2: FUN_002315-T1           0           1           0           0
    3: FUN_002316-T1           0           0           0           0
    4: FUN_002303-T1          10           5          10          10
    5: FUN_002304-T1           2           1           1           2
   ---                                                              
44367: FUN_044367-T1           0           0           0           0
44368: FUN_044368-T1           0           0           0           0
44369: FUN_044369-T1           0           0           0           0
44370: FUN_044370-T1           0           0           0           0
44371: FUN_044371-T1           0           2           0           1
       ACR-145-TP1 ACR-145-TP2 ACR-145-TP3 ACR-145-TP4 ACR-150-TP1 ACR-150-TP2
             &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
    1:          12           7           7          16          21           3
    2:           0           1           0           1           0           0
    3:           0           1           0           0           0           0
    4:          23          18          20          38          38           6
    5:           2           3           1           1           9           1
   ---                                                                        
44367:           0           0           0           0           0           0
44368:           0           0           0           0           0           0
44369:           0           0           0           0           0           0
44370:           0           0           0           0           0           0
44371:           0           1           0           0           0           0
       ACR-150-TP3 ACR-150-TP4 ACR-173-TP1 ACR-173-TP2 ACR-173-TP3 ACR-173-TP4
             &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
    1:          10          11          19           6          24          17
    2:           1           0           1           1           1           0
    3:           2           0           0           2           0           0
    4:          40          30          73          18          73          31
    5:          11           2          28           5           5           6
   ---                                                                        
44367:           0           0           0           0           0           0
44368:           0           0           0           0           0           0
44369:           0           0           0           0           0           0
44370:           0           0           0           0           0           0
44371:           0           0           1           0           0           0
       ACR-186-TP1 ACR-186-TP2 ACR-186-TP3 ACR-186-TP4 ACR-225-TP1 ACR-225-TP2
             &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
    1:           1           2           2           3          20          15
    2:           0           0           0           0           0           2
    3:           0           0           0           0           0           0
    4:           3           5           4           9          34          54
    5:           1           1           1           1           2           6
   ---                                                                        
44367:           0           0           0           0           0           0
44368:           0           0           0           0           0           0
44369:           0           0           0           0           0           0
44370:           0           0           0           0           0           0
44371:           0           0           0           0           0           4
       ACR-225-TP3 ACR-225-TP4 ACR-229-TP1 ACR-229-TP2 ACR-229-TP3 ACR-229-TP4
             &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
    1:          13          11           2           1           1           0
    2:           0           0           0           0           0           0
    3:           0           0           0           0           0           0
    4:          38          21           2           2           3           1
    5:           3           1           1           1           1           0
   ---                                                                        
44367:           0           0           0           0           0           0
44368:           0           0           0           0           0           0
44369:           0           0           0           0           0           0
44370:           0           0           0           0           0           0
44371:           0           0           0           0           7           0
       ACR-237-TP1 ACR-237-TP2 ACR-237-TP3 ACR-237-TP4 ACR-244-TP1 ACR-244-TP2
             &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
    1:          16          16          14          24           2           1
    2:           0           0           1           0           0           0
    3:           0           0           1           0           0           0
    4:          45          37          36          51           3           4
    5:           2           4           7           2           0           1
   ---                                                                        
44367:           0           0           0           0           0           0
44368:           0           0           0           0           0           0
44369:           0           0           0           0           0           0
44370:           0           0           0           0           0           0
44371:           0           0           0           0           0           0
       ACR-244-TP3 ACR-244-TP4 ACR-265-TP1 ACR-265-TP2 ACR-265-TP3 ACR-265-TP4
             &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
    1:           3           1          18           9           5          12
    2:           0           0           0           0           0           0
    3:           0           0           0           1           0           0
    4:          12           3          31          29          23          23
    5:           3           1           1           2           3           1
   ---                                                                        
44367:           0           0           0           0           0           0
44368:           0           0           0           0           0           0
44369:           0           0           0           0           0           0
44370:           0           0           0           0           0           0
44371:           6           0           0           0           0           0
   transcript_id ACR-139-TP1 ACR-139-TP2 ACR-139-TP3 ACR-139-TP4 ACR-145-TP1
          &lt;char&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
1: FUN_002326-T1           3           2           3           4          12
2: FUN_002315-T1           0           1           0           0           0
3: FUN_002316-T1           0           0           0           0           0
   ACR-145-TP2 ACR-145-TP3 ACR-145-TP4 ACR-150-TP1 ACR-150-TP2 ACR-150-TP3
         &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
1:           7           7          16          21           3          10
2:           1           0           1           0           0           1
3:           1           0           0           0           0           2
   ACR-150-TP4 ACR-173-TP1 ACR-173-TP2 ACR-173-TP3 ACR-173-TP4 ACR-186-TP1
         &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
1:          11          19           6          24          17           1
2:           0           1           1           1           0           0
3:           0           0           2           0           0           0
   ACR-186-TP2 ACR-186-TP3 ACR-186-TP4 ACR-225-TP1 ACR-225-TP2 ACR-225-TP3
         &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
1:           2           2           3          20          15          13
2:           0           0           0           0           2           0
3:           0           0           0           0           0           0
   ACR-225-TP4 ACR-229-TP1 ACR-229-TP2 ACR-229-TP3 ACR-229-TP4 ACR-237-TP1
         &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
1:          11           2           1           1           0          16
2:           0           0           0           0           0           0
3:           0           0           0           0           0           0
   ACR-237-TP2 ACR-237-TP3 ACR-237-TP4 ACR-244-TP1 ACR-244-TP2 ACR-244-TP3
         &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
1:          16          14          24           2           1           3
2:           0           1           0           0           0           0
3:           0           1           0           0           0           0
   ACR-244-TP4 ACR-265-TP1 ACR-265-TP2 ACR-265-TP3 ACR-265-TP4
         &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;       &lt;int&gt;
1:           1          18           9           5          12
2:           0           0           0           0           0
3:           0           0           1           0           0


=====  lncRNA_counts  =====
Rows: 15,559
Columns: 46
$ Geneid        &lt;chr&gt; "lncRNA_015", "lncRNA_076", "lncRNA_077", "lncRNA_078", …
$ Chr           &lt;chr&gt; "ntLink_2", "ntLink_6", "ntLink_6", "ntLink_6", "ntLink_…
$ Start         &lt;int&gt; 327086, 48577, 191068, 191227, 191233, 191352, 253957, 2…
$ End           &lt;int&gt; 329262, 50741, 194203, 194203, 194203, 194203, 256027, 2…
$ Strand        &lt;chr&gt; "+", "+", "+", "+", "+", "+", "+", "+", "+", "+", "+", "…
$ Length        &lt;int&gt; 2177, 2165, 3136, 2977, 2971, 2852, 2071, 1764, 1100, 18…
$ `ACR-139-TP1` &lt;dbl&gt; 113.00, 48.00, 648.25, 648.25, 648.25, 648.25, 52.50, 36…
$ `ACR-139-TP2` &lt;dbl&gt; 2.00, 19.00, 694.75, 694.75, 694.75, 694.75, 13.00, 8.00…
$ `ACR-139-TP3` &lt;dbl&gt; 2.00, 23.00, 958.50, 958.50, 958.50, 958.50, 19.00, 13.0…
$ `ACR-139-TP4` &lt;dbl&gt; 114.00, 10.00, 764.75, 764.75, 764.75, 764.75, 71.00, 34…
$ `ACR-145-TP1` &lt;dbl&gt; 154.00, 50.00, 846.25, 846.25, 846.25, 846.25, 23.00, 15…
$ `ACR-145-TP2` &lt;dbl&gt; 20.00, 11.00, 488.75, 488.75, 488.75, 488.75, 12.00, 8.0…
$ `ACR-145-TP3` &lt;dbl&gt; 90.00, 49.00, 1035.25, 1035.25, 1035.25, 1035.25, 19.50,…
$ `ACR-145-TP4` &lt;dbl&gt; 106.00, 72.00, 585.00, 585.00, 585.00, 585.00, 24.00, 15…
$ `ACR-150-TP1` &lt;dbl&gt; 268.00, 33.00, 719.50, 719.50, 719.50, 719.50, 8.00, 8.0…
$ `ACR-150-TP2` &lt;dbl&gt; 37.00, 44.00, 590.75, 590.75, 590.75, 590.75, 20.50, 9.5…
$ `ACR-150-TP3` &lt;dbl&gt; 108.00, 19.00, 671.25, 671.25, 671.25, 671.25, 16.00, 10…
$ `ACR-150-TP4` &lt;dbl&gt; 26.00, 0.00, 839.75, 839.75, 839.75, 839.75, 37.00, 19.0…
$ `ACR-173-TP1` &lt;dbl&gt; 430.00, 13.00, 622.75, 622.75, 622.75, 622.75, 36.50, 35…
$ `ACR-173-TP2` &lt;dbl&gt; 36.00, 38.00, 417.75, 417.75, 417.75, 417.75, 15.50, 3.5…
$ `ACR-173-TP3` &lt;dbl&gt; 16.00, 24.00, 1084.00, 1084.00, 1084.00, 1084.00, 2.50, …
$ `ACR-173-TP4` &lt;dbl&gt; 99.00, 6.00, 848.50, 848.50, 848.50, 848.50, 19.00, 7.00…
$ `ACR-186-TP1` &lt;dbl&gt; 32.00, 54.00, 625.00, 625.00, 625.00, 625.00, 12.00, 12.…
$ `ACR-186-TP2` &lt;dbl&gt; 7.00, 122.00, 932.08, 931.08, 931.08, 930.75, 22.00, 13.…
$ `ACR-186-TP3` &lt;dbl&gt; 29.00, 40.00, 1325.50, 1325.50, 1325.50, 1325.50, 45.00,…
$ `ACR-186-TP4` &lt;dbl&gt; 37.00, 69.00, 888.50, 888.50, 888.50, 888.50, 50.50, 28.…
$ `ACR-225-TP1` &lt;dbl&gt; 15.00, 66.00, 870.75, 870.75, 870.75, 870.75, 3.50, 3.50…
$ `ACR-225-TP2` &lt;dbl&gt; 267.00, 47.00, 711.50, 711.50, 711.50, 711.50, 40.00, 28…
$ `ACR-225-TP3` &lt;dbl&gt; 43.00, 26.00, 947.75, 947.75, 947.75, 947.75, 15.50, 10.…
$ `ACR-225-TP4` &lt;dbl&gt; 8.00, 5.00, 782.50, 782.50, 782.50, 782.50, 5.00, 3.00, …
$ `ACR-229-TP1` &lt;dbl&gt; 4.00, 59.00, 929.25, 929.25, 929.25, 929.25, 28.00, 21.0…
$ `ACR-229-TP2` &lt;dbl&gt; 45.00, 68.00, 914.50, 914.50, 914.50, 914.50, 49.00, 28.…
$ `ACR-229-TP3` &lt;dbl&gt; 107.00, 96.00, 837.25, 837.25, 837.25, 837.25, 44.50, 21…
$ `ACR-229-TP4` &lt;dbl&gt; 66.00, 178.00, 786.00, 786.00, 786.00, 786.00, 0.00, 0.0…
$ `ACR-237-TP1` &lt;dbl&gt; 22.00, 42.00, 1060.75, 1060.75, 1060.75, 1060.75, 1.50, …
$ `ACR-237-TP2` &lt;dbl&gt; 58.00, 60.00, 680.20, 680.20, 680.20, 680.20, 15.00, 11.…
$ `ACR-237-TP3` &lt;dbl&gt; 29.00, 23.00, 672.75, 672.75, 672.75, 672.75, 34.50, 23.…
$ `ACR-237-TP4` &lt;dbl&gt; 104.00, 4.00, 1327.50, 1327.50, 1327.50, 1327.50, 0.00, …
$ `ACR-244-TP1` &lt;dbl&gt; 6.00, 116.00, 697.50, 697.50, 697.50, 697.50, 1.00, 0.00…
$ `ACR-244-TP2` &lt;dbl&gt; 32.00, 109.00, 834.50, 834.50, 834.50, 834.50, 27.50, 22…
$ `ACR-244-TP3` &lt;dbl&gt; 181.00, 58.00, 823.00, 823.00, 823.00, 823.00, 46.50, 38…
$ `ACR-244-TP4` &lt;dbl&gt; 38.00, 67.00, 1132.75, 1132.75, 1132.75, 1132.75, 9.50, …
$ `ACR-265-TP1` &lt;dbl&gt; 5.00, 147.00, 1188.50, 1188.50, 1188.50, 1188.50, 25.00,…
$ `ACR-265-TP2` &lt;dbl&gt; 76.00, 106.00, 812.25, 812.25, 812.25, 812.25, 40.50, 30…
$ `ACR-265-TP3` &lt;dbl&gt; 254.00, 109.00, 735.00, 735.00, 735.00, 735.00, 33.00, 2…
$ `ACR-265-TP4` &lt;dbl&gt; 43.00, 28.00, 982.25, 982.25, 982.25, 982.25, 14.00, 14.…
             Geneid        Chr  Start    End Strand Length ACR-139-TP1
             &lt;char&gt;     &lt;char&gt;  &lt;int&gt;  &lt;int&gt; &lt;char&gt;  &lt;int&gt;       &lt;num&gt;
    1:   lncRNA_015   ntLink_2 327086 329262      +   2177      113.00
    2:   lncRNA_076   ntLink_6  48577  50741      +   2165       48.00
    3:   lncRNA_077   ntLink_6 191068 194203      +   3136      648.25
    4:   lncRNA_078   ntLink_6 191227 194203      +   2977      648.25
    5:   lncRNA_080   ntLink_6 191233 194203      +   2971      648.25
   ---                                                                
15555: lncRNA_55784 ptg000076l 100025 114600      +  14576        5.81
15556: lncRNA_55785 ptg000076l 100059 114600      +  14542        5.81
15557: lncRNA_55814 ptg000086l  27295  29656      +   2362       25.00
15558: lncRNA_55815 ptg000086l  27333  30207      +   2875       27.00
15559: lncRNA_55927 ptg000126l  19531  20380      +    850        3.00
       ACR-139-TP2 ACR-139-TP3 ACR-139-TP4 ACR-145-TP1 ACR-145-TP2 ACR-145-TP3
             &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
    1:        2.00        2.00      114.00      154.00       20.00       90.00
    2:       19.00       23.00       10.00       50.00       11.00       49.00
    3:      694.75      958.50      764.75      846.25      488.75     1035.25
    4:      694.75      958.50      764.75      846.25      488.75     1035.25
    5:      694.75      958.50      764.75      846.25      488.75     1035.25
   ---                                                                        
15555:      184.16       29.73       30.35      177.56       11.24       37.31
15556:      184.16       29.73       30.35      177.56       11.24       37.31
15557:       12.00       22.50       21.50      252.00      128.00      255.00
15558:       13.00       23.50       23.50      255.00      142.00      258.00
15559:       29.00       50.00       33.00       33.00        0.00       92.00
       ACR-145-TP4 ACR-150-TP1 ACR-150-TP2 ACR-150-TP3 ACR-150-TP4 ACR-173-TP1
             &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
    1:      106.00       268.0       37.00      108.00       26.00      430.00
    2:       72.00        33.0       44.00       19.00        0.00       13.00
    3:      585.00       719.5      590.75      671.25      839.75      622.75
    4:      585.00       719.5      590.75      671.25      839.75      622.75
    5:      585.00       719.5      590.75      671.25      839.75      622.75
   ---                                                                        
15555:      111.07        10.3       92.34       12.64       25.57       19.51
15556:      111.07        10.3       92.34       12.64       25.57       19.51
15557:      550.50        97.5      232.00      235.00      189.00       49.50
15558:      607.50       101.5      281.00      239.00      213.00       54.50
15559:       90.00        25.0       21.00       31.00       40.00       76.00
       ACR-173-TP2 ACR-173-TP3 ACR-173-TP4 ACR-186-TP1 ACR-186-TP2 ACR-186-TP3
             &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
    1:       36.00       16.00       99.00       32.00        7.00        29.0
    2:       38.00       24.00        6.00       54.00      122.00        40.0
    3:      417.75     1084.00      848.50      625.00      932.08      1325.5
    4:      417.75     1084.00      848.50      625.00      931.08      1325.5
    5:      417.75     1084.00      848.50      625.00      931.08      1325.5
   ---                                                                        
15555:       46.02       59.42       14.84       44.54       24.91        12.8
15556:       46.02       59.42       14.84       44.54       24.91        12.8
15557:       24.00       40.50       71.00        0.00        1.00         0.0
15558:       28.00       40.50       71.00        0.00        1.00         0.0
15559:       10.00      117.00       40.00       38.00      104.00       114.0
       ACR-186-TP4 ACR-225-TP1 ACR-225-TP2 ACR-225-TP3 ACR-225-TP4 ACR-229-TP1
             &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
    1:       37.00       15.00      267.00       43.00        8.00        4.00
    2:       69.00       66.00       47.00       26.00        5.00       59.00
    3:      888.50      870.75      711.50      947.75      782.50      929.25
    4:      888.50      870.75      711.50      947.75      782.50      929.25
    5:      888.50      870.75      711.50      947.75      782.50      929.25
   ---                                                                        
15555:       34.18      146.58       23.34      118.35      197.86       66.95
15556:       34.18      146.58       23.34      118.35      197.86       66.95
15557:        0.00       67.00       60.00       76.00       58.50      152.00
15558:        0.00       70.00       70.00       81.00       58.50      159.00
15559:       89.00       63.00        7.00       48.00       18.00        0.00
       ACR-229-TP2 ACR-229-TP3 ACR-229-TP4 ACR-237-TP1 ACR-237-TP2 ACR-237-TP3
             &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
    1:       45.00      107.00        66.0       22.00       58.00       29.00
    2:       68.00       96.00       178.0       42.00       60.00       23.00
    3:      914.50      837.25       786.0     1060.75      680.20      672.75
    4:      914.50      837.25       786.0     1060.75      680.20      672.75
    5:      914.50      837.25       786.0     1060.75      680.20      672.75
   ---                                                                        
15555:       36.22       24.41        73.2       28.93       11.32       31.15
15556:       36.22       24.41        73.2       28.93       11.32       31.15
15557:       45.00       77.50       140.0      122.00      186.50      199.50
15558:       53.00      104.50       142.0      122.00      230.50      227.50
15559:        0.00        0.00         0.0       76.00       18.00        8.00
       ACR-237-TP4 ACR-244-TP1 ACR-244-TP2 ACR-244-TP3 ACR-244-TP4 ACR-265-TP1
             &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
    1:      104.00        6.00       32.00      181.00       38.00        5.00
    2:        4.00      116.00      109.00       58.00       67.00      147.00
    3:     1327.50      697.50      834.50      823.00     1132.75     1188.50
    4:     1327.50      697.50      834.50      823.00     1132.75     1188.50
    5:     1327.50      697.50      834.50      823.00     1132.75     1188.50
   ---                                                                        
15555:       76.14       13.05       14.61       11.47       45.68      189.53
15556:       76.14       13.05       14.61       11.47       45.68      189.53
15557:      198.00      122.50      208.00      185.50      168.50      546.50
15558:      199.00      118.50      230.00      207.50      175.50      550.50
15559:       58.00      118.00      120.00      179.00      345.00       55.00
       ACR-265-TP2 ACR-265-TP3 ACR-265-TP4
             &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
    1:       76.00      254.00       43.00
    2:      106.00      109.00       28.00
    3:      812.25      735.00      982.25
    4:      812.25      735.00      982.25
    5:      812.25      735.00      982.25
   ---                                    
15555:       19.69       75.12       94.46
15556:       19.69       75.12       94.46
15557:      391.00      287.00      210.50
15558:      463.00      320.00      213.50
15559:       66.00       68.00       82.00
       Geneid      Chr  Start    End Strand Length ACR-139-TP1 ACR-139-TP2
       &lt;char&gt;   &lt;char&gt;  &lt;int&gt;  &lt;int&gt; &lt;char&gt;  &lt;int&gt;       &lt;num&gt;       &lt;num&gt;
1: lncRNA_015 ntLink_2 327086 329262      +   2177      113.00        2.00
2: lncRNA_076 ntLink_6  48577  50741      +   2165       48.00       19.00
3: lncRNA_077 ntLink_6 191068 194203      +   3136      648.25      694.75
   ACR-139-TP3 ACR-139-TP4 ACR-145-TP1 ACR-145-TP2 ACR-145-TP3 ACR-145-TP4
         &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
1:         2.0      114.00      154.00       20.00       90.00         106
2:        23.0       10.00       50.00       11.00       49.00          72
3:       958.5      764.75      846.25      488.75     1035.25         585
   ACR-150-TP1 ACR-150-TP2 ACR-150-TP3 ACR-150-TP4 ACR-173-TP1 ACR-173-TP2
         &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
1:       268.0       37.00      108.00       26.00      430.00       36.00
2:        33.0       44.00       19.00        0.00       13.00       38.00
3:       719.5      590.75      671.25      839.75      622.75      417.75
   ACR-173-TP3 ACR-173-TP4 ACR-186-TP1 ACR-186-TP2 ACR-186-TP3 ACR-186-TP4
         &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
1:          16        99.0          32        7.00        29.0        37.0
2:          24         6.0          54      122.00        40.0        69.0
3:        1084       848.5         625      932.08      1325.5       888.5
   ACR-225-TP1 ACR-225-TP2 ACR-225-TP3 ACR-225-TP4 ACR-229-TP1 ACR-229-TP2
         &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
1:       15.00       267.0       43.00         8.0        4.00        45.0
2:       66.00        47.0       26.00         5.0       59.00        68.0
3:      870.75       711.5      947.75       782.5      929.25       914.5
   ACR-229-TP3 ACR-229-TP4 ACR-237-TP1 ACR-237-TP2 ACR-237-TP3 ACR-237-TP4
         &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
1:      107.00          66       22.00        58.0       29.00       104.0
2:       96.00         178       42.00        60.0       23.00         4.0
3:      837.25         786     1060.75       680.2      672.75      1327.5
   ACR-244-TP1 ACR-244-TP2 ACR-244-TP3 ACR-244-TP4 ACR-265-TP1 ACR-265-TP2
         &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
1:         6.0        32.0         181       38.00         5.0       76.00
2:       116.0       109.0          58       67.00       147.0      106.00
3:       697.5       834.5         823     1132.75      1188.5      812.25
   ACR-265-TP3 ACR-265-TP4
         &lt;num&gt;       &lt;num&gt;
1:         254       43.00
2:         109       28.00
3:         735      982.25


=====  methylation_counts  =====
Rows: 6,566,306
Columns: 40
$ CpG           &lt;chr&gt; "CpG_ntLink_0_90500", "CpG_ntLink_0_90540", "CpG_ntLink_…
$ `ACR-145-TP3` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 17.391…
$ `ACR-265-TP4` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, NA, 0.000000, 30.000000, N…
$ `ACR-139-TP3` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, NA, NA…
$ `ACR-244-TP1` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, 50.00000, NA, 50.00000, 54.5…
$ `ACR-237-TP1` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, 33.33333, 21.42857, 28.57143…
$ `ACR-265-TP3` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.2500…
$ `ACR-186-TP4` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 2.857143, 5.555556, 14.285…
$ `ACR-186-TP2` &lt;dbl&gt; 1.851852, 2.985075, 1.428571, 3.030303, 2.777778, 5.5555…
$ `ACR-244-TP4` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, 25.000000, 31.250000, 29.411…
$ `ACR-225-TP3` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, 21.428571, 21.428571, 21.428…
$ `ACR-139-TP2` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 18.750…
$ `ACR-186-TP1` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 23.529…
$ `ACR-145-TP1` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 7.1428…
$ `ACR-145-TP4` &lt;dbl&gt; 0.000000, 3.448276, 0.000000, 0.000000, 0.000000, 5.5555…
$ `ACR-225-TP4` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 9.0909…
$ `ACR-173-TP3` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, 7.142857, 6.666667, 6.666667…
$ `ACR-150-TP4` &lt;dbl&gt; NA, NA, 0.000000, NA, NA, NA, NA, 27.272727, 28.571429, …
$ `ACR-173-TP1` &lt;dbl&gt; NA, 0.000000, 0.000000, NA, NA, NA, NA, 8.333333, 8.3333…
$ `ACR-173-TP2` &lt;dbl&gt; NA, NA, 0.000000, NA, 0.000000, 30.000000, 0.000000, 15.…
$ `ACR-237-TP3` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, 50.000000, 40.000000, 50.000…
$ `ACR-265-TP1` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 13.513…
$ `ACR-186-TP3` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 26.315…
$ `ACR-229-TP1` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 4.545455, 0.000000, 9.0909…
$ `ACR-229-TP2` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 8.3333…
$ `ACR-150-TP3` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, 46.666667, 50.000000, 50.000…
$ `ACR-173-TP4` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, 17.647059, 25.000000, 12.500…
$ `ACR-225-TP2` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 8.333333, 0.000000, 0.0000…
$ `ACR-244-TP2` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, 33.33333, 26.08696, 40.90909…
$ `ACR-150-TP2` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, 30.769231, 25.000000, 36.000…
$ `ACR-237-TP2` &lt;dbl&gt; NA, 0.000000, 0.000000, NA, NA, NA, NA, 12.500000, 12.00…
$ `ACR-265-TP2` &lt;dbl&gt; 4.166667, 0.000000, 0.000000, 0.000000, 0.000000, 18.750…
$ `ACR-229-TP4` &lt;dbl&gt; 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 15.38462, 0…
$ `ACR-244-TP3` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 27.272727, 15.38…
$ `ACR-150-TP1` &lt;dbl&gt; NA, 0.000000, 0.000000, NA, NA, NA, NA, 28.571429, 20.00…
$ `ACR-139-TP1` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 5.882353, 0.000000, 5.5555…
$ `ACR-145-TP2` &lt;dbl&gt; 0.000000, 2.631579, 2.439024, 0.000000, 0.000000, 8.6956…
$ `ACR-139-TP4` &lt;dbl&gt; 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 16.66667, 0…
$ `ACR-229-TP3` &lt;dbl&gt; 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 12.50000, 0…
$ `ACR-237-TP4` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, 40.000000, 30.000000, 30.000…
                          CpG ACR-145-TP3 ACR-265-TP4 ACR-139-TP3 ACR-244-TP1
                       &lt;char&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
      1:   CpG_ntLink_0_90500           0           0     0.00000          NA
      2:   CpG_ntLink_0_90540           0           0     0.00000          NA
      3:   CpG_ntLink_0_90562           0           0     0.00000          NA
      4:   CpG_ntLink_0_90633           0          NA     0.00000          NA
      5:   CpG_ntLink_0_90648           0           0     0.00000          NA
     ---                                                                     
6566302: CpG_ptg000185l_33346          NA          NA     0.00000    2.272727
6566303: CpG_ptg000185l_33559          NA          NA     0.00000    0.000000
6566304: CpG_ptg000185l_33571          NA          NA    13.33333    1.666667
6566305: CpG_ptg000185l_33573          NA          NA    13.33333    0.000000
6566306: CpG_ptg000185l_33592          NA          NA     0.00000    0.000000
         ACR-237-TP1 ACR-265-TP3 ACR-186-TP4 ACR-186-TP2 ACR-244-TP4
               &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
      1:          NA           0    0.000000    1.851852          NA
      2:          NA           0    0.000000    2.985075          NA
      3:          NA           0    0.000000    1.428571          NA
      4:          NA           0    2.857143    3.030303          NA
      5:          NA           0    5.555556    2.777778          NA
     ---                                                            
6566302:           0          NA          NA          NA    0.000000
6566303:           0          NA          NA          NA    0.000000
6566304:           0          NA          NA          NA    0.000000
6566305:           0          NA          NA          NA    2.040816
6566306:           0          NA          NA          NA    0.000000
         ACR-225-TP3 ACR-139-TP2 ACR-186-TP1 ACR-145-TP1 ACR-145-TP4
               &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
      1:          NA           0           0           0    0.000000
      2:          NA           0           0           0    3.448276
      3:          NA           0           0           0    0.000000
      4:          NA           0           0           0    0.000000
      5:          NA           0           0           0    0.000000
     ---                                                            
6566302:    0.000000           0          NA          NA          NA
6566303:    0.000000           0          NA          NA    0.000000
6566304:    0.000000           0          NA          NA    0.000000
6566305:    6.666667           0          NA          NA    0.000000
6566306:    0.000000           0          NA          NA          NA
         ACR-225-TP4 ACR-173-TP3 ACR-150-TP4 ACR-173-TP1 ACR-173-TP2
               &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
      1:           0          NA          NA          NA          NA
      2:           0          NA          NA           0          NA
      3:           0          NA    0.000000           0           0
      4:           0          NA          NA          NA          NA
      5:           0          NA          NA          NA           0
     ---                                                            
6566302:           0           0    0.000000           0           0
6566303:           0           0    0.000000           0           0
6566304:           0           0    7.142857           0           0
6566305:           0           0    0.000000           0           0
6566306:          20           0   18.181818           0           0
         ACR-237-TP3 ACR-265-TP1 ACR-186-TP3 ACR-229-TP1 ACR-229-TP2
               &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
      1:          NA           0           0    0.000000           0
      2:          NA           0           0    0.000000           0
      3:          NA           0           0    0.000000           0
      4:          NA           0           0    4.545455           0
      5:          NA           0           0    0.000000           0
     ---                                                            
6566302:    0.000000          NA           0          NA          NA
6566303:    0.000000          NA          NA          NA          NA
6566304:    0.000000          NA          NA          NA          NA
6566305:    5.263158          NA          NA          NA          NA
6566306:    0.000000          NA          NA          NA          NA
         ACR-150-TP3 ACR-173-TP4 ACR-225-TP2 ACR-244-TP2 ACR-150-TP2
               &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
      1:          NA          NA    0.000000          NA          NA
      2:          NA          NA    0.000000          NA          NA
      3:          NA          NA    0.000000          NA          NA
      4:          NA          NA    8.333333          NA          NA
      5:          NA          NA    0.000000          NA          NA
     ---                                                            
6566302:    0.000000           0    0.000000           0           0
6566303:    0.000000           0    0.000000           0           0
6566304:    0.000000           0    0.000000           0           0
6566305:    0.000000           0    0.000000           0           0
6566306:    9.090909          NA    0.000000           0           0
         ACR-237-TP2 ACR-265-TP2 ACR-229-TP4 ACR-244-TP3 ACR-150-TP1
               &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
      1:          NA    4.166667           0          NA          NA
      2:    0.000000    0.000000           0          NA    0.000000
      3:    0.000000    0.000000           0          NA    0.000000
      4:          NA    0.000000           0          NA          NA
      5:          NA    0.000000           0          NA          NA
     ---                                                            
6566302:    0.000000          NA          NA           0    0.000000
6566303:    0.000000          NA          NA           0    5.263158
6566304:    0.000000          NA          NA           0    0.000000
6566305:    0.000000          NA          NA           0    0.000000
6566306:    7.692308          NA          NA           0    6.666667
         ACR-139-TP1 ACR-145-TP2 ACR-139-TP4 ACR-229-TP3 ACR-237-TP4
               &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
      1:    0.000000    0.000000    0.000000           0          NA
      2:    0.000000    2.631579    0.000000           0          NA
      3:    0.000000    2.439024    0.000000           0          NA
      4:    5.882353    0.000000    0.000000           0          NA
      5:    0.000000    0.000000    0.000000           0          NA
     ---                                                            
6566302:    0.000000    0.000000    0.000000          NA    0.000000
6566303:    4.545455          NA    0.000000          NA    3.703704
6566304:    5.555556          NA   18.181818          NA    0.000000
6566305:   10.526316          NA   14.285714          NA    0.000000
6566306:    0.000000          NA    5.555556          NA    0.000000
                  CpG ACR-145-TP3 ACR-265-TP4 ACR-139-TP3 ACR-244-TP1
               &lt;char&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
1: CpG_ntLink_0_90500           0           0           0          NA
2: CpG_ntLink_0_90540           0           0           0          NA
3: CpG_ntLink_0_90562           0           0           0          NA
   ACR-237-TP1 ACR-265-TP3 ACR-186-TP4 ACR-186-TP2 ACR-244-TP4 ACR-225-TP3
         &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
1:          NA           0           0    1.851852          NA          NA
2:          NA           0           0    2.985075          NA          NA
3:          NA           0           0    1.428571          NA          NA
   ACR-139-TP2 ACR-186-TP1 ACR-145-TP1 ACR-145-TP4 ACR-225-TP4 ACR-173-TP3
         &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
1:           0           0           0    0.000000           0          NA
2:           0           0           0    3.448276           0          NA
3:           0           0           0    0.000000           0          NA
   ACR-150-TP4 ACR-173-TP1 ACR-173-TP2 ACR-237-TP3 ACR-265-TP1 ACR-186-TP3
         &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
1:          NA          NA          NA          NA           0           0
2:          NA           0          NA          NA           0           0
3:           0           0           0          NA           0           0
   ACR-229-TP1 ACR-229-TP2 ACR-150-TP3 ACR-173-TP4 ACR-225-TP2 ACR-244-TP2
         &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
1:           0           0          NA          NA           0          NA
2:           0           0          NA          NA           0          NA
3:           0           0          NA          NA           0          NA
   ACR-150-TP2 ACR-237-TP2 ACR-265-TP2 ACR-229-TP4 ACR-244-TP3 ACR-150-TP1
         &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
1:          NA          NA    4.166667           0          NA          NA
2:          NA           0    0.000000           0          NA           0
3:          NA           0    0.000000           0          NA           0
   ACR-139-TP1 ACR-145-TP2 ACR-139-TP4 ACR-229-TP3 ACR-237-TP4
         &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;       &lt;num&gt;
1:           0    0.000000           0           0          NA
2:           0    2.631579           0           0          NA
3:           0    2.439024           0           0          NA</code></pre>
</section>
<section id="data-prep-for-mofa2" class="level1">
<h1>4 DATA PREP FOR MOFA2</h1>
<section id="view-data-structures" class="level2">
<h2 class="anchored" data-anchor-id="view-data-structures">4.1 View data structures</h2>
<p>Primarily converts data to tibbles for easier viewing/compatability with tidyverse.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Prepare data for MOFA2: ensure features are rows, samples are columns using dplyr/tidyverse</span></span>
<span id="cb4-2">lncRNA_raw <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fread</span>(data_files<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lncRNA_counts) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>()</span>
<span id="cb4-3">lncRNA_counts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lncRNA_raw <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb4-4">lncRNA_counts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lncRNA_counts <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Geneid =</span> lncRNA_raw<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Geneid) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">relocate</span>(Geneid)</span>
<span id="cb4-5"></span>
<span id="cb4-6">gene_counts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fread</span>(data_files<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>gene_counts) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>()</span>
<span id="cb4-7"></span>
<span id="cb4-8">transcript_counts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fread</span>(data_files<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>transcript_counts) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>()</span>
<span id="cb4-9"></span>
<span id="cb4-10">methylation_counts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fread</span>(data_files<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>methylation_counts) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>()</span>
<span id="cb4-11"></span>
<span id="cb4-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show structure of processed data</span></span>
<span id="cb4-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">===== lncRNA_counts (processed) =====</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>===== lncRNA_counts (processed) =====</code></pre>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(lncRNA_counts))</span></code></pre></div>
<pre><code>Rows: 15,559
Columns: 41
$ Geneid        &lt;chr&gt; "lncRNA_015", "lncRNA_076", "lncRNA_077", "lncRNA_078", …
$ `ACR-139-TP1` &lt;dbl&gt; 113.00, 48.00, 648.25, 648.25, 648.25, 648.25, 52.50, 36…
$ `ACR-139-TP2` &lt;dbl&gt; 2.00, 19.00, 694.75, 694.75, 694.75, 694.75, 13.00, 8.00…
$ `ACR-139-TP3` &lt;dbl&gt; 2.00, 23.00, 958.50, 958.50, 958.50, 958.50, 19.00, 13.0…
$ `ACR-139-TP4` &lt;dbl&gt; 114.00, 10.00, 764.75, 764.75, 764.75, 764.75, 71.00, 34…
$ `ACR-145-TP1` &lt;dbl&gt; 154.00, 50.00, 846.25, 846.25, 846.25, 846.25, 23.00, 15…
$ `ACR-145-TP2` &lt;dbl&gt; 20.00, 11.00, 488.75, 488.75, 488.75, 488.75, 12.00, 8.0…
$ `ACR-145-TP3` &lt;dbl&gt; 90.00, 49.00, 1035.25, 1035.25, 1035.25, 1035.25, 19.50,…
$ `ACR-145-TP4` &lt;dbl&gt; 106.00, 72.00, 585.00, 585.00, 585.00, 585.00, 24.00, 15…
$ `ACR-150-TP1` &lt;dbl&gt; 268.00, 33.00, 719.50, 719.50, 719.50, 719.50, 8.00, 8.0…
$ `ACR-150-TP2` &lt;dbl&gt; 37.00, 44.00, 590.75, 590.75, 590.75, 590.75, 20.50, 9.5…
$ `ACR-150-TP3` &lt;dbl&gt; 108.00, 19.00, 671.25, 671.25, 671.25, 671.25, 16.00, 10…
$ `ACR-150-TP4` &lt;dbl&gt; 26.00, 0.00, 839.75, 839.75, 839.75, 839.75, 37.00, 19.0…
$ `ACR-173-TP1` &lt;dbl&gt; 430.00, 13.00, 622.75, 622.75, 622.75, 622.75, 36.50, 35…
$ `ACR-173-TP2` &lt;dbl&gt; 36.00, 38.00, 417.75, 417.75, 417.75, 417.75, 15.50, 3.5…
$ `ACR-173-TP3` &lt;dbl&gt; 16.00, 24.00, 1084.00, 1084.00, 1084.00, 1084.00, 2.50, …
$ `ACR-173-TP4` &lt;dbl&gt; 99.00, 6.00, 848.50, 848.50, 848.50, 848.50, 19.00, 7.00…
$ `ACR-186-TP1` &lt;dbl&gt; 32.00, 54.00, 625.00, 625.00, 625.00, 625.00, 12.00, 12.…
$ `ACR-186-TP2` &lt;dbl&gt; 7.00, 122.00, 932.08, 931.08, 931.08, 930.75, 22.00, 13.…
$ `ACR-186-TP3` &lt;dbl&gt; 29.00, 40.00, 1325.50, 1325.50, 1325.50, 1325.50, 45.00,…
$ `ACR-186-TP4` &lt;dbl&gt; 37.00, 69.00, 888.50, 888.50, 888.50, 888.50, 50.50, 28.…
$ `ACR-225-TP1` &lt;dbl&gt; 15.00, 66.00, 870.75, 870.75, 870.75, 870.75, 3.50, 3.50…
$ `ACR-225-TP2` &lt;dbl&gt; 267.00, 47.00, 711.50, 711.50, 711.50, 711.50, 40.00, 28…
$ `ACR-225-TP3` &lt;dbl&gt; 43.00, 26.00, 947.75, 947.75, 947.75, 947.75, 15.50, 10.…
$ `ACR-225-TP4` &lt;dbl&gt; 8.00, 5.00, 782.50, 782.50, 782.50, 782.50, 5.00, 3.00, …
$ `ACR-229-TP1` &lt;dbl&gt; 4.00, 59.00, 929.25, 929.25, 929.25, 929.25, 28.00, 21.0…
$ `ACR-229-TP2` &lt;dbl&gt; 45.00, 68.00, 914.50, 914.50, 914.50, 914.50, 49.00, 28.…
$ `ACR-229-TP3` &lt;dbl&gt; 107.00, 96.00, 837.25, 837.25, 837.25, 837.25, 44.50, 21…
$ `ACR-229-TP4` &lt;dbl&gt; 66.00, 178.00, 786.00, 786.00, 786.00, 786.00, 0.00, 0.0…
$ `ACR-237-TP1` &lt;dbl&gt; 22.00, 42.00, 1060.75, 1060.75, 1060.75, 1060.75, 1.50, …
$ `ACR-237-TP2` &lt;dbl&gt; 58.00, 60.00, 680.20, 680.20, 680.20, 680.20, 15.00, 11.…
$ `ACR-237-TP3` &lt;dbl&gt; 29.00, 23.00, 672.75, 672.75, 672.75, 672.75, 34.50, 23.…
$ `ACR-237-TP4` &lt;dbl&gt; 104.00, 4.00, 1327.50, 1327.50, 1327.50, 1327.50, 0.00, …
$ `ACR-244-TP1` &lt;dbl&gt; 6.00, 116.00, 697.50, 697.50, 697.50, 697.50, 1.00, 0.00…
$ `ACR-244-TP2` &lt;dbl&gt; 32.00, 109.00, 834.50, 834.50, 834.50, 834.50, 27.50, 22…
$ `ACR-244-TP3` &lt;dbl&gt; 181.00, 58.00, 823.00, 823.00, 823.00, 823.00, 46.50, 38…
$ `ACR-244-TP4` &lt;dbl&gt; 38.00, 67.00, 1132.75, 1132.75, 1132.75, 1132.75, 9.50, …
$ `ACR-265-TP1` &lt;dbl&gt; 5.00, 147.00, 1188.50, 1188.50, 1188.50, 1188.50, 25.00,…
$ `ACR-265-TP2` &lt;dbl&gt; 76.00, 106.00, 812.25, 812.25, 812.25, 812.25, 40.50, 30…
$ `ACR-265-TP3` &lt;dbl&gt; 254.00, 109.00, 735.00, 735.00, 735.00, 735.00, 33.00, 2…
$ `ACR-265-TP4` &lt;dbl&gt; 43.00, 28.00, 982.25, 982.25, 982.25, 982.25, 14.00, 14.…
# A tibble: 15,559 × 41
   Geneid  `ACR-139-TP1` `ACR-139-TP2` `ACR-139-TP3` `ACR-139-TP4` `ACR-145-TP1`
   &lt;chr&gt;           &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;
 1 lncRNA…         113             2             2           114           154  
 2 lncRNA…          48            19            23            10            50  
 3 lncRNA…         648.          695.          958.          765.          846. 
 4 lncRNA…         648.          695.          958.          765.          846. 
 5 lncRNA…         648.          695.          958.          765.          846. 
 6 lncRNA…         648.          695.          958.          765.          846. 
 7 lncRNA…          52.5          13            19            71            23  
 8 lncRNA…          36.5           8            13            34            15  
 9 lncRNA…           0             3.5           4.5           2.5          53.5
10 lncRNA…           4             6            25            39            26  
# ℹ 15,549 more rows
# ℹ 35 more variables: `ACR-145-TP2` &lt;dbl&gt;, `ACR-145-TP3` &lt;dbl&gt;,
#   `ACR-145-TP4` &lt;dbl&gt;, `ACR-150-TP1` &lt;dbl&gt;, `ACR-150-TP2` &lt;dbl&gt;,
#   `ACR-150-TP3` &lt;dbl&gt;, `ACR-150-TP4` &lt;dbl&gt;, `ACR-173-TP1` &lt;dbl&gt;,
#   `ACR-173-TP2` &lt;dbl&gt;, `ACR-173-TP3` &lt;dbl&gt;, `ACR-173-TP4` &lt;dbl&gt;,
#   `ACR-186-TP1` &lt;dbl&gt;, `ACR-186-TP2` &lt;dbl&gt;, `ACR-186-TP3` &lt;dbl&gt;,
#   `ACR-186-TP4` &lt;dbl&gt;, `ACR-225-TP1` &lt;dbl&gt;, `ACR-225-TP2` &lt;dbl&gt;, …</code></pre>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(lncRNA_counts <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_head</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span></code></pre></div>
<pre><code># A tibble: 3 × 41
  Geneid   `ACR-139-TP1` `ACR-139-TP2` `ACR-139-TP3` `ACR-139-TP4` `ACR-145-TP1`
  &lt;chr&gt;            &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;
1 lncRNA_…          113             2             2           114           154 
2 lncRNA_…           48            19            23            10            50 
3 lncRNA_…          648.          695.          958.          765.          846.
# ℹ 35 more variables: `ACR-145-TP2` &lt;dbl&gt;, `ACR-145-TP3` &lt;dbl&gt;,
#   `ACR-145-TP4` &lt;dbl&gt;, `ACR-150-TP1` &lt;dbl&gt;, `ACR-150-TP2` &lt;dbl&gt;,
#   `ACR-150-TP3` &lt;dbl&gt;, `ACR-150-TP4` &lt;dbl&gt;, `ACR-173-TP1` &lt;dbl&gt;,
#   `ACR-173-TP2` &lt;dbl&gt;, `ACR-173-TP3` &lt;dbl&gt;, `ACR-173-TP4` &lt;dbl&gt;,
#   `ACR-186-TP1` &lt;dbl&gt;, `ACR-186-TP2` &lt;dbl&gt;, `ACR-186-TP3` &lt;dbl&gt;,
#   `ACR-186-TP4` &lt;dbl&gt;, `ACR-225-TP1` &lt;dbl&gt;, `ACR-225-TP2` &lt;dbl&gt;,
#   `ACR-225-TP3` &lt;dbl&gt;, `ACR-225-TP4` &lt;dbl&gt;, `ACR-229-TP1` &lt;dbl&gt;, …</code></pre>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">===== gene_counts (original) =====</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>===== gene_counts (original) =====</code></pre>
<div class="sourceCode" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(gene_counts))</span></code></pre></div>
<pre><code>Rows: 44,371
Columns: 41
$ gene_id       &lt;chr&gt; "FUN_002326", "FUN_002315", "FUN_002316", "FUN_002303", …
$ `ACR-139-TP1` &lt;int&gt; 3, 0, 0, 10, 2, 12, 3, 1, 3, 12, 4, 10, 4, 1, 8, 1, 5, 1…
$ `ACR-139-TP2` &lt;int&gt; 2, 1, 0, 5, 1, 7, 1, 2, 1, 7, 1, 7, 1, 2, 4, 2, 3, 1, 6,…
$ `ACR-139-TP3` &lt;int&gt; 3, 0, 0, 10, 1, 10, 2, 1, 1, 11, 1, 11, 1, 2, 9, 2, 3, 1…
$ `ACR-139-TP4` &lt;int&gt; 4, 0, 0, 10, 2, 10, 2, 1, 3, 11, 3, 8, 3, 1, 8, 1, 3, 0,…
$ `ACR-145-TP1` &lt;int&gt; 12, 0, 0, 23, 2, 26, 1, 3, 2, 24, 2, 20, 2, 2, 20, 2, 12…
$ `ACR-145-TP2` &lt;int&gt; 7, 1, 1, 18, 3, 25, 2, 4, 2, 19, 3, 19, 3, 4, 19, 4, 6, …
$ `ACR-145-TP3` &lt;int&gt; 7, 0, 0, 20, 1, 22, 1, 2, 1, 25, 1, 24, 1, 2, 17, 2, 5, …
$ `ACR-145-TP4` &lt;int&gt; 16, 1, 0, 38, 1, 49, 1, 3, 1, 36, 1, 34, 1, 4, 31, 5, 15…
$ `ACR-150-TP1` &lt;int&gt; 21, 0, 0, 38, 9, 38, 9, 0, 9, 33, 9, 34, 10, 0, 41, 0, 1…
$ `ACR-150-TP2` &lt;int&gt; 3, 0, 0, 6, 1, 10, 1, 3, 1, 7, 1, 6, 1, 2, 5, 2, 3, 1, 5…
$ `ACR-150-TP3` &lt;int&gt; 10, 1, 2, 40, 11, 54, 11, 10, 12, 44, 12, 47, 10, 9, 34,…
$ `ACR-150-TP4` &lt;int&gt; 11, 0, 0, 30, 2, 38, 2, 6, 2, 32, 2, 31, 1, 6, 28, 6, 14…
$ `ACR-173-TP1` &lt;int&gt; 19, 1, 0, 73, 28, 70, 30, 2, 33, 53, 35, 49, 39, 2, 50, …
$ `ACR-173-TP2` &lt;int&gt; 6, 1, 2, 18, 5, 27, 7, 7, 6, 22, 6, 20, 6, 7, 16, 5, 6, …
$ `ACR-173-TP3` &lt;int&gt; 24, 1, 0, 73, 5, 89, 5, 15, 4, 72, 5, 78, 4, 14, 65, 13,…
$ `ACR-173-TP4` &lt;int&gt; 17, 0, 0, 31, 6, 40, 7, 3, 6, 28, 6, 27, 7, 2, 35, 2, 12…
$ `ACR-186-TP1` &lt;int&gt; 1, 0, 0, 3, 1, 3, 1, 0, 1, 3, 1, 2, 1, 0, 2, 0, 0, 0, 1,…
$ `ACR-186-TP2` &lt;int&gt; 2, 0, 0, 5, 1, 5, 1, 1, 1, 4, 0, 3, 0, 1, 2, 0, 2, 0, 3,…
$ `ACR-186-TP3` &lt;int&gt; 2, 0, 0, 4, 1, 5, 0, 0, 1, 3, 0, 3, 0, 1, 3, 0, 3, 0, 3,…
$ `ACR-186-TP4` &lt;int&gt; 3, 0, 0, 9, 1, 9, 1, 2, 1, 6, 1, 7, 1, 1, 7, 2, 3, 0, 7,…
$ `ACR-225-TP1` &lt;int&gt; 20, 0, 0, 34, 2, 38, 2, 3, 2, 29, 2, 29, 2, 3, 33, 3, 10…
$ `ACR-225-TP2` &lt;int&gt; 15, 2, 0, 54, 6, 74, 6, 9, 6, 58, 7, 55, 8, 8, 43, 9, 14…
$ `ACR-225-TP3` &lt;int&gt; 13, 0, 0, 38, 3, 47, 4, 10, 4, 41, 3, 40, 4, 9, 30, 11, …
$ `ACR-225-TP4` &lt;int&gt; 11, 0, 0, 21, 1, 23, 2, 1, 2, 20, 2, 18, 2, 1, 17, 2, 10…
$ `ACR-229-TP1` &lt;int&gt; 2, 0, 0, 2, 1, 4, 0, 1, 2, 2, 1, 2, 1, 0, 3, 0, 1, 1, 2,…
$ `ACR-229-TP2` &lt;int&gt; 1, 0, 0, 2, 1, 2, 2, 0, 1, 3, 1, 3, 1, 0, 1, 0, 1, 1, 3,…
$ `ACR-229-TP3` &lt;int&gt; 1, 0, 0, 3, 1, 2, 1, 0, 1, 2, 1, 2, 1, 0, 1, 0, 1, 0, 1,…
$ `ACR-229-TP4` &lt;int&gt; 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1,…
$ `ACR-237-TP1` &lt;int&gt; 16, 0, 0, 45, 2, 43, 2, 2, 2, 35, 2, 35, 2, 3, 36, 2, 11…
$ `ACR-237-TP2` &lt;int&gt; 16, 0, 0, 37, 4, 52, 4, 7, 3, 42, 4, 44, 4, 6, 35, 7, 14…
$ `ACR-237-TP3` &lt;int&gt; 14, 1, 1, 36, 7, 52, 6, 15, 6, 41, 6, 41, 7, 11, 31, 13,…
$ `ACR-237-TP4` &lt;int&gt; 24, 0, 0, 51, 2, 54, 2, 4, 2, 44, 2, 41, 2, 3, 45, 5, 16…
$ `ACR-244-TP1` &lt;int&gt; 2, 0, 0, 3, 0, 3, 0, 0, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2,…
$ `ACR-244-TP2` &lt;int&gt; 1, 0, 0, 4, 1, 5, 1, 1, 1, 4, 1, 4, 1, 2, 3, 2, 1, 0, 3,…
$ `ACR-244-TP3` &lt;int&gt; 3, 0, 0, 12, 3, 12, 3, 2, 3, 10, 4, 9, 3, 2, 7, 2, 2, 1,…
$ `ACR-244-TP4` &lt;int&gt; 1, 0, 0, 3, 1, 3, 1, 0, 1, 3, 1, 3, 1, 0, 3, 0, 1, 0, 3,…
$ `ACR-265-TP1` &lt;int&gt; 18, 0, 0, 31, 1, 39, 1, 0, 1, 38, 1, 30, 1, 1, 34, 1, 13…
$ `ACR-265-TP2` &lt;int&gt; 9, 0, 1, 29, 2, 37, 2, 9, 3, 33, 2, 31, 3, 10, 22, 7, 12…
$ `ACR-265-TP3` &lt;int&gt; 5, 0, 0, 23, 3, 30, 4, 6, 3, 24, 4, 26, 4, 5, 17, 5, 5, …
$ `ACR-265-TP4` &lt;int&gt; 12, 0, 0, 23, 1, 20, 1, 0, 2, 16, 1, 15, 1, 1, 20, 0, 8,…
# A tibble: 44,371 × 41
   gene_id `ACR-139-TP1` `ACR-139-TP2` `ACR-139-TP3` `ACR-139-TP4` `ACR-145-TP1`
   &lt;chr&gt;           &lt;int&gt;         &lt;int&gt;         &lt;int&gt;         &lt;int&gt;         &lt;int&gt;
 1 FUN_00…             3             2             3             4            12
 2 FUN_00…             0             1             0             0             0
 3 FUN_00…             0             0             0             0             0
 4 FUN_00…            10             5            10            10            23
 5 FUN_00…             2             1             1             2             2
 6 FUN_00…            12             7            10            10            26
 7 FUN_00…             3             1             2             2             1
 8 FUN_00…             1             2             1             1             3
 9 FUN_00…             3             1             1             3             2
10 FUN_00…            12             7            11            11            24
# ℹ 44,361 more rows
# ℹ 35 more variables: `ACR-145-TP2` &lt;int&gt;, `ACR-145-TP3` &lt;int&gt;,
#   `ACR-145-TP4` &lt;int&gt;, `ACR-150-TP1` &lt;int&gt;, `ACR-150-TP2` &lt;int&gt;,
#   `ACR-150-TP3` &lt;int&gt;, `ACR-150-TP4` &lt;int&gt;, `ACR-173-TP1` &lt;int&gt;,
#   `ACR-173-TP2` &lt;int&gt;, `ACR-173-TP3` &lt;int&gt;, `ACR-173-TP4` &lt;int&gt;,
#   `ACR-186-TP1` &lt;int&gt;, `ACR-186-TP2` &lt;int&gt;, `ACR-186-TP3` &lt;int&gt;,
#   `ACR-186-TP4` &lt;int&gt;, `ACR-225-TP1` &lt;int&gt;, `ACR-225-TP2` &lt;int&gt;, …</code></pre>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(gene_counts <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_head</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span></code></pre></div>
<pre><code># A tibble: 3 × 41
  gene_id  `ACR-139-TP1` `ACR-139-TP2` `ACR-139-TP3` `ACR-139-TP4` `ACR-145-TP1`
  &lt;chr&gt;            &lt;int&gt;         &lt;int&gt;         &lt;int&gt;         &lt;int&gt;         &lt;int&gt;
1 FUN_002…             3             2             3             4            12
2 FUN_002…             0             1             0             0             0
3 FUN_002…             0             0             0             0             0
# ℹ 35 more variables: `ACR-145-TP2` &lt;int&gt;, `ACR-145-TP3` &lt;int&gt;,
#   `ACR-145-TP4` &lt;int&gt;, `ACR-150-TP1` &lt;int&gt;, `ACR-150-TP2` &lt;int&gt;,
#   `ACR-150-TP3` &lt;int&gt;, `ACR-150-TP4` &lt;int&gt;, `ACR-173-TP1` &lt;int&gt;,
#   `ACR-173-TP2` &lt;int&gt;, `ACR-173-TP3` &lt;int&gt;, `ACR-173-TP4` &lt;int&gt;,
#   `ACR-186-TP1` &lt;int&gt;, `ACR-186-TP2` &lt;int&gt;, `ACR-186-TP3` &lt;int&gt;,
#   `ACR-186-TP4` &lt;int&gt;, `ACR-225-TP1` &lt;int&gt;, `ACR-225-TP2` &lt;int&gt;,
#   `ACR-225-TP3` &lt;int&gt;, `ACR-225-TP4` &lt;int&gt;, `ACR-229-TP1` &lt;int&gt;, …</code></pre>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">===== transcript_counts (original) =====</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>===== transcript_counts (original) =====</code></pre>
<div class="sourceCode" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(transcript_counts))</span></code></pre></div>
<pre><code>Rows: 44,371
Columns: 41
$ transcript_id &lt;chr&gt; "FUN_002326-T1", "FUN_002315-T1", "FUN_002316-T1", "FUN_…
$ `ACR-139-TP1` &lt;int&gt; 3, 0, 0, 10, 2, 12, 3, 1, 3, 12, 4, 10, 4, 1, 8, 1, 5, 1…
$ `ACR-139-TP2` &lt;int&gt; 2, 1, 0, 5, 1, 7, 1, 2, 1, 7, 1, 7, 1, 2, 4, 2, 3, 1, 6,…
$ `ACR-139-TP3` &lt;int&gt; 3, 0, 0, 10, 1, 10, 2, 1, 1, 11, 1, 11, 1, 2, 9, 2, 3, 1…
$ `ACR-139-TP4` &lt;int&gt; 4, 0, 0, 10, 2, 10, 2, 1, 3, 11, 3, 8, 3, 1, 8, 1, 3, 0,…
$ `ACR-145-TP1` &lt;int&gt; 12, 0, 0, 23, 2, 26, 1, 3, 2, 24, 2, 20, 2, 2, 20, 2, 12…
$ `ACR-145-TP2` &lt;int&gt; 7, 1, 1, 18, 3, 25, 2, 4, 2, 19, 3, 19, 3, 4, 19, 4, 6, …
$ `ACR-145-TP3` &lt;int&gt; 7, 0, 0, 20, 1, 22, 1, 2, 1, 25, 1, 24, 1, 2, 17, 2, 5, …
$ `ACR-145-TP4` &lt;int&gt; 16, 1, 0, 38, 1, 49, 1, 3, 1, 36, 1, 34, 1, 4, 31, 5, 15…
$ `ACR-150-TP1` &lt;int&gt; 21, 0, 0, 38, 9, 38, 9, 0, 9, 33, 9, 34, 10, 0, 41, 0, 1…
$ `ACR-150-TP2` &lt;int&gt; 3, 0, 0, 6, 1, 10, 1, 3, 1, 7, 1, 6, 1, 2, 5, 2, 3, 1, 5…
$ `ACR-150-TP3` &lt;int&gt; 10, 1, 2, 40, 11, 54, 11, 10, 12, 44, 12, 47, 10, 9, 34,…
$ `ACR-150-TP4` &lt;int&gt; 11, 0, 0, 30, 2, 38, 2, 6, 2, 32, 2, 31, 1, 6, 28, 6, 14…
$ `ACR-173-TP1` &lt;int&gt; 19, 1, 0, 73, 28, 70, 30, 2, 33, 53, 35, 49, 39, 2, 50, …
$ `ACR-173-TP2` &lt;int&gt; 6, 1, 2, 18, 5, 27, 7, 7, 6, 22, 6, 20, 6, 7, 16, 5, 6, …
$ `ACR-173-TP3` &lt;int&gt; 24, 1, 0, 73, 5, 89, 5, 15, 4, 72, 5, 78, 4, 14, 65, 13,…
$ `ACR-173-TP4` &lt;int&gt; 17, 0, 0, 31, 6, 40, 7, 3, 6, 28, 6, 27, 7, 2, 35, 2, 12…
$ `ACR-186-TP1` &lt;int&gt; 1, 0, 0, 3, 1, 3, 1, 0, 1, 3, 1, 2, 1, 0, 2, 0, 0, 0, 1,…
$ `ACR-186-TP2` &lt;int&gt; 2, 0, 0, 5, 1, 5, 1, 1, 1, 4, 0, 3, 0, 1, 2, 0, 2, 0, 3,…
$ `ACR-186-TP3` &lt;int&gt; 2, 0, 0, 4, 1, 5, 0, 0, 1, 3, 0, 3, 0, 1, 3, 0, 3, 0, 3,…
$ `ACR-186-TP4` &lt;int&gt; 3, 0, 0, 9, 1, 9, 1, 2, 1, 6, 1, 7, 1, 1, 7, 2, 3, 0, 7,…
$ `ACR-225-TP1` &lt;int&gt; 20, 0, 0, 34, 2, 38, 2, 3, 2, 29, 2, 29, 2, 3, 33, 3, 10…
$ `ACR-225-TP2` &lt;int&gt; 15, 2, 0, 54, 6, 74, 6, 9, 6, 58, 7, 55, 8, 8, 43, 9, 14…
$ `ACR-225-TP3` &lt;int&gt; 13, 0, 0, 38, 3, 47, 4, 10, 4, 41, 3, 40, 4, 9, 30, 11, …
$ `ACR-225-TP4` &lt;int&gt; 11, 0, 0, 21, 1, 23, 2, 1, 2, 20, 2, 18, 2, 1, 17, 2, 10…
$ `ACR-229-TP1` &lt;int&gt; 2, 0, 0, 2, 1, 4, 0, 1, 2, 2, 1, 2, 1, 0, 3, 0, 1, 1, 2,…
$ `ACR-229-TP2` &lt;int&gt; 1, 0, 0, 2, 1, 2, 2, 0, 1, 3, 1, 3, 1, 0, 1, 0, 1, 1, 3,…
$ `ACR-229-TP3` &lt;int&gt; 1, 0, 0, 3, 1, 2, 1, 0, 1, 2, 1, 2, 1, 0, 1, 0, 1, 0, 1,…
$ `ACR-229-TP4` &lt;int&gt; 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1,…
$ `ACR-237-TP1` &lt;int&gt; 16, 0, 0, 45, 2, 43, 2, 2, 2, 35, 2, 35, 2, 3, 36, 2, 11…
$ `ACR-237-TP2` &lt;int&gt; 16, 0, 0, 37, 4, 52, 4, 7, 3, 42, 4, 44, 4, 6, 35, 7, 14…
$ `ACR-237-TP3` &lt;int&gt; 14, 1, 1, 36, 7, 52, 6, 15, 6, 41, 6, 41, 7, 11, 31, 13,…
$ `ACR-237-TP4` &lt;int&gt; 24, 0, 0, 51, 2, 54, 2, 4, 2, 44, 2, 41, 2, 3, 45, 5, 16…
$ `ACR-244-TP1` &lt;int&gt; 2, 0, 0, 3, 0, 3, 0, 0, 0, 2, 0, 2, 0, 1, 2, 0, 0, 0, 2,…
$ `ACR-244-TP2` &lt;int&gt; 1, 0, 0, 4, 1, 5, 1, 1, 1, 4, 1, 4, 1, 2, 3, 2, 1, 0, 3,…
$ `ACR-244-TP3` &lt;int&gt; 3, 0, 0, 12, 3, 12, 3, 2, 3, 10, 4, 9, 3, 2, 7, 2, 2, 1,…
$ `ACR-244-TP4` &lt;int&gt; 1, 0, 0, 3, 1, 3, 1, 0, 1, 3, 1, 3, 1, 0, 3, 0, 1, 0, 3,…
$ `ACR-265-TP1` &lt;int&gt; 18, 0, 0, 31, 1, 39, 1, 0, 1, 38, 1, 30, 1, 1, 34, 1, 13…
$ `ACR-265-TP2` &lt;int&gt; 9, 0, 1, 29, 2, 37, 2, 9, 3, 33, 2, 31, 3, 10, 22, 7, 12…
$ `ACR-265-TP3` &lt;int&gt; 5, 0, 0, 23, 3, 30, 4, 6, 3, 24, 4, 26, 4, 5, 17, 5, 5, …
$ `ACR-265-TP4` &lt;int&gt; 12, 0, 0, 23, 1, 20, 1, 0, 2, 16, 1, 15, 1, 1, 20, 0, 8,…
# A tibble: 44,371 × 41
   transcript_id `ACR-139-TP1` `ACR-139-TP2` `ACR-139-TP3` `ACR-139-TP4`
   &lt;chr&gt;                 &lt;int&gt;         &lt;int&gt;         &lt;int&gt;         &lt;int&gt;
 1 FUN_002326-T1             3             2             3             4
 2 FUN_002315-T1             0             1             0             0
 3 FUN_002316-T1             0             0             0             0
 4 FUN_002303-T1            10             5            10            10
 5 FUN_002304-T1             2             1             1             2
 6 FUN_002305-T1            12             7            10            10
 7 FUN_002306-T1             3             1             2             2
 8 FUN_002307-T1             1             2             1             1
 9 FUN_002308-T1             3             1             1             3
10 FUN_002309-T1            12             7            11            11
# ℹ 44,361 more rows
# ℹ 36 more variables: `ACR-145-TP1` &lt;int&gt;, `ACR-145-TP2` &lt;int&gt;,
#   `ACR-145-TP3` &lt;int&gt;, `ACR-145-TP4` &lt;int&gt;, `ACR-150-TP1` &lt;int&gt;,
#   `ACR-150-TP2` &lt;int&gt;, `ACR-150-TP3` &lt;int&gt;, `ACR-150-TP4` &lt;int&gt;,
#   `ACR-173-TP1` &lt;int&gt;, `ACR-173-TP2` &lt;int&gt;, `ACR-173-TP3` &lt;int&gt;,
#   `ACR-173-TP4` &lt;int&gt;, `ACR-186-TP1` &lt;int&gt;, `ACR-186-TP2` &lt;int&gt;,
#   `ACR-186-TP3` &lt;int&gt;, `ACR-186-TP4` &lt;int&gt;, `ACR-225-TP1` &lt;int&gt;, …</code></pre>
<div class="sourceCode" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(transcript_counts <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_head</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span></code></pre></div>
<pre><code># A tibble: 3 × 41
  transcript_id `ACR-139-TP1` `ACR-139-TP2` `ACR-139-TP3` `ACR-139-TP4`
  &lt;chr&gt;                 &lt;int&gt;         &lt;int&gt;         &lt;int&gt;         &lt;int&gt;
1 FUN_002326-T1             3             2             3             4
2 FUN_002315-T1             0             1             0             0
3 FUN_002316-T1             0             0             0             0
# ℹ 36 more variables: `ACR-145-TP1` &lt;int&gt;, `ACR-145-TP2` &lt;int&gt;,
#   `ACR-145-TP3` &lt;int&gt;, `ACR-145-TP4` &lt;int&gt;, `ACR-150-TP1` &lt;int&gt;,
#   `ACR-150-TP2` &lt;int&gt;, `ACR-150-TP3` &lt;int&gt;, `ACR-150-TP4` &lt;int&gt;,
#   `ACR-173-TP1` &lt;int&gt;, `ACR-173-TP2` &lt;int&gt;, `ACR-173-TP3` &lt;int&gt;,
#   `ACR-173-TP4` &lt;int&gt;, `ACR-186-TP1` &lt;int&gt;, `ACR-186-TP2` &lt;int&gt;,
#   `ACR-186-TP3` &lt;int&gt;, `ACR-186-TP4` &lt;int&gt;, `ACR-225-TP1` &lt;int&gt;,
#   `ACR-225-TP2` &lt;int&gt;, `ACR-225-TP3` &lt;int&gt;, `ACR-225-TP4` &lt;int&gt;, …</code></pre>
<div class="sourceCode" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">===== methylation_counts (original) =====</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>===== methylation_counts (original) =====</code></pre>
<div class="sourceCode" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">glimpse</span>(methylation_counts))</span></code></pre></div>
<pre><code>Rows: 6,566,306
Columns: 40
$ CpG           &lt;chr&gt; "CpG_ntLink_0_90500", "CpG_ntLink_0_90540", "CpG_ntLink_…
$ `ACR-145-TP3` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 17.391…
$ `ACR-265-TP4` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, NA, 0.000000, 30.000000, N…
$ `ACR-139-TP3` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, NA, NA…
$ `ACR-244-TP1` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, 50.00000, NA, 50.00000, 54.5…
$ `ACR-237-TP1` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, 33.33333, 21.42857, 28.57143…
$ `ACR-265-TP3` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 6.2500…
$ `ACR-186-TP4` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 2.857143, 5.555556, 14.285…
$ `ACR-186-TP2` &lt;dbl&gt; 1.851852, 2.985075, 1.428571, 3.030303, 2.777778, 5.5555…
$ `ACR-244-TP4` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, 25.000000, 31.250000, 29.411…
$ `ACR-225-TP3` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, 21.428571, 21.428571, 21.428…
$ `ACR-139-TP2` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 18.750…
$ `ACR-186-TP1` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 23.529…
$ `ACR-145-TP1` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 7.1428…
$ `ACR-145-TP4` &lt;dbl&gt; 0.000000, 3.448276, 0.000000, 0.000000, 0.000000, 5.5555…
$ `ACR-225-TP4` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 9.0909…
$ `ACR-173-TP3` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, 7.142857, 6.666667, 6.666667…
$ `ACR-150-TP4` &lt;dbl&gt; NA, NA, 0.000000, NA, NA, NA, NA, 27.272727, 28.571429, …
$ `ACR-173-TP1` &lt;dbl&gt; NA, 0.000000, 0.000000, NA, NA, NA, NA, 8.333333, 8.3333…
$ `ACR-173-TP2` &lt;dbl&gt; NA, NA, 0.000000, NA, 0.000000, 30.000000, 0.000000, 15.…
$ `ACR-237-TP3` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, 50.000000, 40.000000, 50.000…
$ `ACR-265-TP1` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 13.513…
$ `ACR-186-TP3` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 26.315…
$ `ACR-229-TP1` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 4.545455, 0.000000, 9.0909…
$ `ACR-229-TP2` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 8.3333…
$ `ACR-150-TP3` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, 46.666667, 50.000000, 50.000…
$ `ACR-173-TP4` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, 17.647059, 25.000000, 12.500…
$ `ACR-225-TP2` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 8.333333, 0.000000, 0.0000…
$ `ACR-244-TP2` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, 33.33333, 26.08696, 40.90909…
$ `ACR-150-TP2` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, 30.769231, 25.000000, 36.000…
$ `ACR-237-TP2` &lt;dbl&gt; NA, 0.000000, 0.000000, NA, NA, NA, NA, 12.500000, 12.00…
$ `ACR-265-TP2` &lt;dbl&gt; 4.166667, 0.000000, 0.000000, 0.000000, 0.000000, 18.750…
$ `ACR-229-TP4` &lt;dbl&gt; 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 15.38462, 0…
$ `ACR-244-TP3` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 27.272727, 15.38…
$ `ACR-150-TP1` &lt;dbl&gt; NA, 0.000000, 0.000000, NA, NA, NA, NA, 28.571429, 20.00…
$ `ACR-139-TP1` &lt;dbl&gt; 0.000000, 0.000000, 0.000000, 5.882353, 0.000000, 5.5555…
$ `ACR-145-TP2` &lt;dbl&gt; 0.000000, 2.631579, 2.439024, 0.000000, 0.000000, 8.6956…
$ `ACR-139-TP4` &lt;dbl&gt; 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 16.66667, 0…
$ `ACR-229-TP3` &lt;dbl&gt; 0.00000, 0.00000, 0.00000, 0.00000, 0.00000, 12.50000, 0…
$ `ACR-237-TP4` &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, 40.000000, 30.000000, 30.000…
# A tibble: 6,566,306 × 40
   CpG     `ACR-145-TP3` `ACR-265-TP4` `ACR-139-TP3` `ACR-244-TP1` `ACR-237-TP1`
   &lt;chr&gt;           &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;
 1 CpG_nt…          0             0             0               NA          NA  
 2 CpG_nt…          0             0             0               NA          NA  
 3 CpG_nt…          0             0             0               NA          NA  
 4 CpG_nt…          0            NA             0               NA          NA  
 5 CpG_nt…          0             0             0               NA          NA  
 6 CpG_nt…         17.4          30            NA               NA          NA  
 7 CpG_nt…          0            NA            NA               NA          NA  
 8 CpG_nt…         13.3           9.09         17.6             50          33.3
 9 CpG_nt…          6.67          0            12.5             NA          21.4
10 CpG_nt…         13.3           0             6.67            50          28.6
# ℹ 6,566,296 more rows
# ℹ 34 more variables: `ACR-265-TP3` &lt;dbl&gt;, `ACR-186-TP4` &lt;dbl&gt;,
#   `ACR-186-TP2` &lt;dbl&gt;, `ACR-244-TP4` &lt;dbl&gt;, `ACR-225-TP3` &lt;dbl&gt;,
#   `ACR-139-TP2` &lt;dbl&gt;, `ACR-186-TP1` &lt;dbl&gt;, `ACR-145-TP1` &lt;dbl&gt;,
#   `ACR-145-TP4` &lt;dbl&gt;, `ACR-225-TP4` &lt;dbl&gt;, `ACR-173-TP3` &lt;dbl&gt;,
#   `ACR-150-TP4` &lt;dbl&gt;, `ACR-173-TP1` &lt;dbl&gt;, `ACR-173-TP2` &lt;dbl&gt;,
#   `ACR-237-TP3` &lt;dbl&gt;, `ACR-265-TP1` &lt;dbl&gt;, `ACR-186-TP3` &lt;dbl&gt;, …</code></pre>
<div class="sourceCode" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(methylation_counts <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">slice_head</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span></code></pre></div>
<pre><code># A tibble: 3 × 40
  CpG      `ACR-145-TP3` `ACR-265-TP4` `ACR-139-TP3` `ACR-244-TP1` `ACR-237-TP1`
  &lt;chr&gt;            &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;         &lt;dbl&gt;
1 CpG_ntL…             0             0             0            NA            NA
2 CpG_ntL…             0             0             0            NA            NA
3 CpG_ntL…             0             0             0            NA            NA
# ℹ 34 more variables: `ACR-265-TP3` &lt;dbl&gt;, `ACR-186-TP4` &lt;dbl&gt;,
#   `ACR-186-TP2` &lt;dbl&gt;, `ACR-244-TP4` &lt;dbl&gt;, `ACR-225-TP3` &lt;dbl&gt;,
#   `ACR-139-TP2` &lt;dbl&gt;, `ACR-186-TP1` &lt;dbl&gt;, `ACR-145-TP1` &lt;dbl&gt;,
#   `ACR-145-TP4` &lt;dbl&gt;, `ACR-225-TP4` &lt;dbl&gt;, `ACR-173-TP3` &lt;dbl&gt;,
#   `ACR-150-TP4` &lt;dbl&gt;, `ACR-173-TP1` &lt;dbl&gt;, `ACR-173-TP2` &lt;dbl&gt;,
#   `ACR-237-TP3` &lt;dbl&gt;, `ACR-265-TP1` &lt;dbl&gt;, `ACR-186-TP3` &lt;dbl&gt;,
#   `ACR-229-TP1` &lt;dbl&gt;, `ACR-229-TP2` &lt;dbl&gt;, `ACR-150-TP3` &lt;dbl&gt;, …</code></pre>
</section>
<section id="compare-column-names-across-input-data" class="level2">
<h2 class="anchored" data-anchor-id="compare-column-names-across-input-data">4.2 Compare Column Names Across Input Data</h2>
<div class="sourceCode" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># List of all data frames</span></span>
<span id="cb28-2">input_dfs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb28-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gene_counts =</span> gene_counts,</span>
<span id="cb28-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">transcript_counts =</span> transcript_counts,</span>
<span id="cb28-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lncRNA_counts =</span> lncRNA_counts,</span>
<span id="cb28-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">methylation_counts =</span> methylation_counts</span>
<span id="cb28-7">)</span>
<span id="cb28-8"></span>
<span id="cb28-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get column names for each (excluding feature/ID column)</span></span>
<span id="cb28-10">colnames_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(input_dfs, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(df) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(df)[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb28-11"></span>
<span id="cb28-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the first as reference</span></span>
<span id="cb28-13">ref_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> colnames_list[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<span id="cb28-14">ref_file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(colnames_list)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb28-15"></span>
<span id="cb28-16"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq_along</span>(colnames_list)) {</span>
<span id="cb28-17">  this_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> colnames_list[[i]]</span>
<span id="cb28-18">  this_file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(colnames_list)[i]</span>
<span id="cb28-19">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">identical</span>(ref_names, this_names)) {</span>
<span id="cb28-20">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">File with different column names:"</span>, this_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb28-21">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Columns in"</span>, this_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"not in"</span>, ref_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">":</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb28-22">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setdiff</span>(this_names, ref_names))</span>
<span id="cb28-23">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Columns in"</span>, ref_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"not in"</span>, this_file, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">":</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb28-24">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setdiff</span>(ref_names, this_names))</span>
<span id="cb28-25">  }</span>
<span id="cb28-26">}</span></code></pre></div>
<pre><code>File with different column names: methylation_counts 
Columns in methylation_counts not in gene_counts :
character(0)
Columns in gene_counts not in methylation_counts :
[1] "ACR-225-TP1"</code></pre>
<div class="sourceCode" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Column name comparison complete.</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>Column name comparison complete.</code></pre>
</section>
<section id="harmonize-columns-across-data-frames" class="level2">
<h2 class="anchored" data-anchor-id="harmonize-columns-across-data-frames">4.3 Harmonize Columns Across Data Frames</h2>
<div class="sourceCode" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the intersection of all sample columns (excluding feature/ID column)</span></span>
<span id="cb32-2">colnames_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb32-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gene_counts =</span> gene_counts,</span>
<span id="cb32-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">transcript_counts =</span> transcript_counts,</span>
<span id="cb32-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lncRNA_counts =</span> lncRNA_counts,</span>
<span id="cb32-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">methylation_counts =</span> methylation_counts</span>
<span id="cb32-7">), <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(df) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(df)[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb32-8"></span>
<span id="cb32-9">common_cols <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Reduce</span>(intersect, colnames_list)</span>
<span id="cb32-10"></span>
<span id="cb32-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Function to remove extra columns and print what is removed</span></span>
<span id="cb32-12">remove_extra_cols <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(df, df_name) {</span>
<span id="cb32-13">  orig_cols <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(df)[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb32-14">  extra <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setdiff</span>(orig_cols, common_cols)</span>
<span id="cb32-15">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(extra) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) {</span>
<span id="cb32-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Removing columns from"</span>, df_name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">":</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb32-17">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(extra)</span>
<span id="cb32-18">  }</span>
<span id="cb32-19">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Keep only the ID column and common columns</span></span>
<span id="cb32-20">  df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df[, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(df)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], common_cols)]</span>
<span id="cb32-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(df)</span>
<span id="cb32-22">}</span>
<span id="cb32-23"></span>
<span id="cb32-24">gene_counts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">remove_extra_cols</span>(gene_counts, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene_counts"</span>)</span></code></pre></div>
<pre><code>Removing columns from gene_counts :
[1] "ACR-225-TP1"</code></pre>
<div class="sourceCode" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1">transcript_counts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">remove_extra_cols</span>(transcript_counts, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript_counts"</span>)</span></code></pre></div>
<pre><code>Removing columns from transcript_counts :
[1] "ACR-225-TP1"</code></pre>
<div class="sourceCode" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1">lncRNA_counts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">remove_extra_cols</span>(lncRNA_counts, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lncRNA_counts"</span>)</span></code></pre></div>
<pre><code>Removing columns from lncRNA_counts :
[1] "ACR-225-TP1"</code></pre>
<div class="sourceCode" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb38-1">methylation_counts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">remove_extra_cols</span>(methylation_counts, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"methylation_counts"</span>)</span>
<span id="cb38-2"></span>
<span id="cb38-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print final structure</span></span>
<span id="cb38-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Final structure after harmonizing columns:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>Final structure after harmonizing columns:</code></pre>
<div class="sourceCode" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb40-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">gene_counts:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>gene_counts:</code></pre>
<div class="sourceCode" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb42-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(gene_counts))</span></code></pre></div>
<pre><code>tibble [44,371 × 40] (S3: tbl_df/tbl/data.frame)
 $ gene_id    : chr [1:44371] "FUN_002326" "FUN_002315" "FUN_002316" "FUN_002303" ...
 $ ACR-139-TP1: int [1:44371] 3 0 0 10 2 12 3 1 3 12 ...
 $ ACR-139-TP2: int [1:44371] 2 1 0 5 1 7 1 2 1 7 ...
 $ ACR-139-TP3: int [1:44371] 3 0 0 10 1 10 2 1 1 11 ...
 $ ACR-139-TP4: int [1:44371] 4 0 0 10 2 10 2 1 3 11 ...
 $ ACR-145-TP1: int [1:44371] 12 0 0 23 2 26 1 3 2 24 ...
 $ ACR-145-TP2: int [1:44371] 7 1 1 18 3 25 2 4 2 19 ...
 $ ACR-145-TP3: int [1:44371] 7 0 0 20 1 22 1 2 1 25 ...
 $ ACR-145-TP4: int [1:44371] 16 1 0 38 1 49 1 3 1 36 ...
 $ ACR-150-TP1: int [1:44371] 21 0 0 38 9 38 9 0 9 33 ...
 $ ACR-150-TP2: int [1:44371] 3 0 0 6 1 10 1 3 1 7 ...
 $ ACR-150-TP3: int [1:44371] 10 1 2 40 11 54 11 10 12 44 ...
 $ ACR-150-TP4: int [1:44371] 11 0 0 30 2 38 2 6 2 32 ...
 $ ACR-173-TP1: int [1:44371] 19 1 0 73 28 70 30 2 33 53 ...
 $ ACR-173-TP2: int [1:44371] 6 1 2 18 5 27 7 7 6 22 ...
 $ ACR-173-TP3: int [1:44371] 24 1 0 73 5 89 5 15 4 72 ...
 $ ACR-173-TP4: int [1:44371] 17 0 0 31 6 40 7 3 6 28 ...
 $ ACR-186-TP1: int [1:44371] 1 0 0 3 1 3 1 0 1 3 ...
 $ ACR-186-TP2: int [1:44371] 2 0 0 5 1 5 1 1 1 4 ...
 $ ACR-186-TP3: int [1:44371] 2 0 0 4 1 5 0 0 1 3 ...
 $ ACR-186-TP4: int [1:44371] 3 0 0 9 1 9 1 2 1 6 ...
 $ ACR-225-TP2: int [1:44371] 15 2 0 54 6 74 6 9 6 58 ...
 $ ACR-225-TP3: int [1:44371] 13 0 0 38 3 47 4 10 4 41 ...
 $ ACR-225-TP4: int [1:44371] 11 0 0 21 1 23 2 1 2 20 ...
 $ ACR-229-TP1: int [1:44371] 2 0 0 2 1 4 0 1 2 2 ...
 $ ACR-229-TP2: int [1:44371] 1 0 0 2 1 2 2 0 1 3 ...
 $ ACR-229-TP3: int [1:44371] 1 0 0 3 1 2 1 0 1 2 ...
 $ ACR-229-TP4: int [1:44371] 0 0 0 1 0 1 0 0 0 1 ...
 $ ACR-237-TP1: int [1:44371] 16 0 0 45 2 43 2 2 2 35 ...
 $ ACR-237-TP2: int [1:44371] 16 0 0 37 4 52 4 7 3 42 ...
 $ ACR-237-TP3: int [1:44371] 14 1 1 36 7 52 6 15 6 41 ...
 $ ACR-237-TP4: int [1:44371] 24 0 0 51 2 54 2 4 2 44 ...
 $ ACR-244-TP1: int [1:44371] 2 0 0 3 0 3 0 0 0 2 ...
 $ ACR-244-TP2: int [1:44371] 1 0 0 4 1 5 1 1 1 4 ...
 $ ACR-244-TP3: int [1:44371] 3 0 0 12 3 12 3 2 3 10 ...
 $ ACR-244-TP4: int [1:44371] 1 0 0 3 1 3 1 0 1 3 ...
 $ ACR-265-TP1: int [1:44371] 18 0 0 31 1 39 1 0 1 38 ...
 $ ACR-265-TP2: int [1:44371] 9 0 1 29 2 37 2 9 3 33 ...
 $ ACR-265-TP3: int [1:44371] 5 0 0 23 3 30 4 6 3 24 ...
 $ ACR-265-TP4: int [1:44371] 12 0 0 23 1 20 1 0 2 16 ...
NULL</code></pre>
<div class="sourceCode" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb44-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">transcript_counts:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>transcript_counts:</code></pre>
<div class="sourceCode" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb46-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(transcript_counts))</span></code></pre></div>
<pre><code>tibble [44,371 × 40] (S3: tbl_df/tbl/data.frame)
 $ transcript_id: chr [1:44371] "FUN_002326-T1" "FUN_002315-T1" "FUN_002316-T1" "FUN_002303-T1" ...
 $ ACR-139-TP1  : int [1:44371] 3 0 0 10 2 12 3 1 3 12 ...
 $ ACR-139-TP2  : int [1:44371] 2 1 0 5 1 7 1 2 1 7 ...
 $ ACR-139-TP3  : int [1:44371] 3 0 0 10 1 10 2 1 1 11 ...
 $ ACR-139-TP4  : int [1:44371] 4 0 0 10 2 10 2 1 3 11 ...
 $ ACR-145-TP1  : int [1:44371] 12 0 0 23 2 26 1 3 2 24 ...
 $ ACR-145-TP2  : int [1:44371] 7 1 1 18 3 25 2 4 2 19 ...
 $ ACR-145-TP3  : int [1:44371] 7 0 0 20 1 22 1 2 1 25 ...
 $ ACR-145-TP4  : int [1:44371] 16 1 0 38 1 49 1 3 1 36 ...
 $ ACR-150-TP1  : int [1:44371] 21 0 0 38 9 38 9 0 9 33 ...
 $ ACR-150-TP2  : int [1:44371] 3 0 0 6 1 10 1 3 1 7 ...
 $ ACR-150-TP3  : int [1:44371] 10 1 2 40 11 54 11 10 12 44 ...
 $ ACR-150-TP4  : int [1:44371] 11 0 0 30 2 38 2 6 2 32 ...
 $ ACR-173-TP1  : int [1:44371] 19 1 0 73 28 70 30 2 33 53 ...
 $ ACR-173-TP2  : int [1:44371] 6 1 2 18 5 27 7 7 6 22 ...
 $ ACR-173-TP3  : int [1:44371] 24 1 0 73 5 89 5 15 4 72 ...
 $ ACR-173-TP4  : int [1:44371] 17 0 0 31 6 40 7 3 6 28 ...
 $ ACR-186-TP1  : int [1:44371] 1 0 0 3 1 3 1 0 1 3 ...
 $ ACR-186-TP2  : int [1:44371] 2 0 0 5 1 5 1 1 1 4 ...
 $ ACR-186-TP3  : int [1:44371] 2 0 0 4 1 5 0 0 1 3 ...
 $ ACR-186-TP4  : int [1:44371] 3 0 0 9 1 9 1 2 1 6 ...
 $ ACR-225-TP2  : int [1:44371] 15 2 0 54 6 74 6 9 6 58 ...
 $ ACR-225-TP3  : int [1:44371] 13 0 0 38 3 47 4 10 4 41 ...
 $ ACR-225-TP4  : int [1:44371] 11 0 0 21 1 23 2 1 2 20 ...
 $ ACR-229-TP1  : int [1:44371] 2 0 0 2 1 4 0 1 2 2 ...
 $ ACR-229-TP2  : int [1:44371] 1 0 0 2 1 2 2 0 1 3 ...
 $ ACR-229-TP3  : int [1:44371] 1 0 0 3 1 2 1 0 1 2 ...
 $ ACR-229-TP4  : int [1:44371] 0 0 0 1 0 1 0 0 0 1 ...
 $ ACR-237-TP1  : int [1:44371] 16 0 0 45 2 43 2 2 2 35 ...
 $ ACR-237-TP2  : int [1:44371] 16 0 0 37 4 52 4 7 3 42 ...
 $ ACR-237-TP3  : int [1:44371] 14 1 1 36 7 52 6 15 6 41 ...
 $ ACR-237-TP4  : int [1:44371] 24 0 0 51 2 54 2 4 2 44 ...
 $ ACR-244-TP1  : int [1:44371] 2 0 0 3 0 3 0 0 0 2 ...
 $ ACR-244-TP2  : int [1:44371] 1 0 0 4 1 5 1 1 1 4 ...
 $ ACR-244-TP3  : int [1:44371] 3 0 0 12 3 12 3 2 3 10 ...
 $ ACR-244-TP4  : int [1:44371] 1 0 0 3 1 3 1 0 1 3 ...
 $ ACR-265-TP1  : int [1:44371] 18 0 0 31 1 39 1 0 1 38 ...
 $ ACR-265-TP2  : int [1:44371] 9 0 1 29 2 37 2 9 3 33 ...
 $ ACR-265-TP3  : int [1:44371] 5 0 0 23 3 30 4 6 3 24 ...
 $ ACR-265-TP4  : int [1:44371] 12 0 0 23 1 20 1 0 2 16 ...
NULL</code></pre>
<div class="sourceCode" id="cb48" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb48-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">lncRNA_counts:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>lncRNA_counts:</code></pre>
<div class="sourceCode" id="cb50" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb50-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(lncRNA_counts))</span></code></pre></div>
<pre><code>tibble [15,559 × 40] (S3: tbl_df/tbl/data.frame)
 $ Geneid     : chr [1:15559] "lncRNA_015" "lncRNA_076" "lncRNA_077" "lncRNA_078" ...
 $ ACR-139-TP1: num [1:15559] 113 48 648 648 648 ...
 $ ACR-139-TP2: num [1:15559] 2 19 695 695 695 ...
 $ ACR-139-TP3: num [1:15559] 2 23 958 958 958 ...
 $ ACR-139-TP4: num [1:15559] 114 10 765 765 765 ...
 $ ACR-145-TP1: num [1:15559] 154 50 846 846 846 ...
 $ ACR-145-TP2: num [1:15559] 20 11 489 489 489 ...
 $ ACR-145-TP3: num [1:15559] 90 49 1035 1035 1035 ...
 $ ACR-145-TP4: num [1:15559] 106 72 585 585 585 585 24 15 63.5 23 ...
 $ ACR-150-TP1: num [1:15559] 268 33 720 720 720 ...
 $ ACR-150-TP2: num [1:15559] 37 44 591 591 591 ...
 $ ACR-150-TP3: num [1:15559] 108 19 671 671 671 ...
 $ ACR-150-TP4: num [1:15559] 26 0 840 840 840 ...
 $ ACR-173-TP1: num [1:15559] 430 13 623 623 623 ...
 $ ACR-173-TP2: num [1:15559] 36 38 418 418 418 ...
 $ ACR-173-TP3: num [1:15559] 16 24 1084 1084 1084 ...
 $ ACR-173-TP4: num [1:15559] 99 6 848 848 848 ...
 $ ACR-186-TP1: num [1:15559] 32 54 625 625 625 625 12 12 16 10.5 ...
 $ ACR-186-TP2: num [1:15559] 7 122 932 931 931 ...
 $ ACR-186-TP3: num [1:15559] 29 40 1326 1326 1326 ...
 $ ACR-186-TP4: num [1:15559] 37 69 888 888 888 ...
 $ ACR-225-TP2: num [1:15559] 267 47 712 712 712 ...
 $ ACR-225-TP3: num [1:15559] 43 26 948 948 948 ...
 $ ACR-225-TP4: num [1:15559] 8 5 782 782 782 ...
 $ ACR-229-TP1: num [1:15559] 4 59 929 929 929 ...
 $ ACR-229-TP2: num [1:15559] 45 68 914 914 914 ...
 $ ACR-229-TP3: num [1:15559] 107 96 837 837 837 ...
 $ ACR-229-TP4: num [1:15559] 66 178 786 786 786 786 0 0 29 8 ...
 $ ACR-237-TP1: num [1:15559] 22 42 1061 1061 1061 ...
 $ ACR-237-TP2: num [1:15559] 58 60 680 680 680 ...
 $ ACR-237-TP3: num [1:15559] 29 23 673 673 673 ...
 $ ACR-237-TP4: num [1:15559] 104 4 1328 1328 1328 ...
 $ ACR-244-TP1: num [1:15559] 6 116 698 698 698 ...
 $ ACR-244-TP2: num [1:15559] 32 109 834 834 834 ...
 $ ACR-244-TP3: num [1:15559] 181 58 823 823 823 823 46.5 38.5 26 12 ...
 $ ACR-244-TP4: num [1:15559] 38 67 1133 1133 1133 ...
 $ ACR-265-TP1: num [1:15559] 5 147 1188 1188 1188 ...
 $ ACR-265-TP2: num [1:15559] 76 106 812 812 812 ...
 $ ACR-265-TP3: num [1:15559] 254 109 735 735 735 735 33 27 49 2 ...
 $ ACR-265-TP4: num [1:15559] 43 28 982 982 982 ...
NULL</code></pre>
<div class="sourceCode" id="cb52" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb52-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">methylation_counts:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>methylation_counts:</code></pre>
<div class="sourceCode" id="cb54" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb54-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(methylation_counts))</span></code></pre></div>
<pre><code>tibble [6,566,306 × 40] (S3: tbl_df/tbl/data.frame)
 $ CpG        : chr [1:6566306] "CpG_ntLink_0_90500" "CpG_ntLink_0_90540" "CpG_ntLink_0_90562" "CpG_ntLink_0_90633" ...
 $ ACR-139-TP1: num [1:6566306] 0 0 0 5.88 0 ...
 $ ACR-139-TP2: num [1:6566306] 0 0 0 0 0 ...
 $ ACR-139-TP3: num [1:6566306] 0 0 0 0 0 ...
 $ ACR-139-TP4: num [1:6566306] 0 0 0 0 0 ...
 $ ACR-145-TP1: num [1:6566306] 0 0 0 0 0 ...
 $ ACR-145-TP2: num [1:6566306] 0 2.63 2.44 0 0 ...
 $ ACR-145-TP3: num [1:6566306] 0 0 0 0 0 ...
 $ ACR-145-TP4: num [1:6566306] 0 3.45 0 0 0 ...
 $ ACR-150-TP1: num [1:6566306] NA 0 0 NA NA ...
 $ ACR-150-TP2: num [1:6566306] NA NA NA NA NA ...
 $ ACR-150-TP3: num [1:6566306] NA NA NA NA NA ...
 $ ACR-150-TP4: num [1:6566306] NA NA 0 NA NA ...
 $ ACR-173-TP1: num [1:6566306] NA 0 0 NA NA ...
 $ ACR-173-TP2: num [1:6566306] NA NA 0 NA 0 ...
 $ ACR-173-TP3: num [1:6566306] NA NA NA NA NA ...
 $ ACR-173-TP4: num [1:6566306] NA NA NA NA NA ...
 $ ACR-186-TP1: num [1:6566306] 0 0 0 0 0 ...
 $ ACR-186-TP2: num [1:6566306] 1.85 2.99 1.43 3.03 2.78 ...
 $ ACR-186-TP3: num [1:6566306] 0 0 0 0 0 ...
 $ ACR-186-TP4: num [1:6566306] 0 0 0 2.86 5.56 ...
 $ ACR-225-TP2: num [1:6566306] 0 0 0 8.33 0 ...
 $ ACR-225-TP3: num [1:6566306] NA NA NA NA NA ...
 $ ACR-225-TP4: num [1:6566306] 0 0 0 0 0 ...
 $ ACR-229-TP1: num [1:6566306] 0 0 0 4.55 0 ...
 $ ACR-229-TP2: num [1:6566306] 0 0 0 0 0 ...
 $ ACR-229-TP3: num [1:6566306] 0 0 0 0 0 12.5 0 6.25 6.25 6.25 ...
 $ ACR-229-TP4: num [1:6566306] 0 0 0 0 0 ...
 $ ACR-237-TP1: num [1:6566306] NA NA NA NA NA ...
 $ ACR-237-TP2: num [1:6566306] NA 0 0 NA NA NA NA 12.5 12 12.5 ...
 $ ACR-237-TP3: num [1:6566306] NA NA NA NA NA NA NA 50 40 50 ...
 $ ACR-237-TP4: num [1:6566306] NA NA NA NA NA NA NA 40 30 30 ...
 $ ACR-244-TP1: num [1:6566306] NA NA NA NA NA NA NA 50 NA 50 ...
 $ ACR-244-TP2: num [1:6566306] NA NA NA NA NA ...
 $ ACR-244-TP3: num [1:6566306] NA NA NA NA NA NA NA NA NA NA ...
 $ ACR-244-TP4: num [1:6566306] NA NA NA NA NA ...
 $ ACR-265-TP1: num [1:6566306] 0 0 0 0 0 ...
 $ ACR-265-TP2: num [1:6566306] 4.17 0 0 0 0 ...
 $ ACR-265-TP3: num [1:6566306] 0 0 0 0 0 ...
 $ ACR-265-TP4: num [1:6566306] 0 0 0 NA 0 ...
NULL</code></pre>
</section>
<section id="remove-zero-variance-features" class="level2">
<h2 class="anchored" data-anchor-id="remove-zero-variance-features">4.4 Remove Zero-Variance Features</h2>
<p>MOFA2 model training recommends removing features with no variance.</p>
<div class="sourceCode" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb56-1">remove_zero_var <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(df) {</span>
<span id="cb56-2">  feature_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df[ , <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, drop<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>]</span>
<span id="cb56-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute variance for each row (feature)</span></span>
<span id="cb56-4">  vars <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">apply</span>(feature_data, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x) <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">var</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(x), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>))</span>
<span id="cb56-5">  zero_var_idx <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(vars <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(vars))</span>
<span id="cb56-6">  keep_idx <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(vars <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(vars))</span>
<span id="cb56-7">  removed <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df[zero_var_idx, , drop<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>]</span>
<span id="cb56-8">  filtered <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df[keep_idx, , drop<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>]</span>
<span id="cb56-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filtered=</span>filtered, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">removed=</span>removed)</span>
<span id="cb56-10">}</span>
<span id="cb56-11"></span>
<span id="cb56-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply to each data frame</span></span>
<span id="cb56-13">gene_counts_zero <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">remove_zero_var</span>(gene_counts)</span>
<span id="cb56-14">transcript_counts_zero <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">remove_zero_var</span>(transcript_counts)</span>
<span id="cb56-15">lncRNA_counts_zero <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">remove_zero_var</span>(lncRNA_counts)</span>
<span id="cb56-16">methylation_counts_zero <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">remove_zero_var</span>(methylation_counts)</span>
<span id="cb56-17"></span>
<span id="cb56-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract filtered and removed data frames</span></span>
<span id="cb56-19">gene_counts_nzv <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gene_counts_zero<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>filtered</span>
<span id="cb56-20">gene_counts_zero_removed <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gene_counts_zero<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>removed</span>
<span id="cb56-21">transcript_counts_nzv <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> transcript_counts_zero<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>filtered</span>
<span id="cb56-22">transcript_counts_zero_removed <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> transcript_counts_zero<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>removed</span>
<span id="cb56-23">lncRNA_counts_nzv <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lncRNA_counts_zero<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>filtered</span>
<span id="cb56-24">lncRNA_counts_zero_removed <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lncRNA_counts_zero<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>removed</span>
<span id="cb56-25">methylation_counts_nzv <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> methylation_counts_zero<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>filtered</span>
<span id="cb56-26">methylation_counts_zero_removed <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> methylation_counts_zero<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>removed</span>
<span id="cb56-27"></span>
<span id="cb56-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print structure of all created data frames</span></span>
<span id="cb56-29"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Filtered data frames (zero-variance features removed):</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>Filtered data frames (zero-variance features removed):</code></pre>
<div class="sourceCode" id="cb58" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb58-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">gene_counts_nzv:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>gene_counts_nzv:</code></pre>
<div class="sourceCode" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb60-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(gene_counts_nzv))</span></code></pre></div>
<pre><code>tibble [36,041 × 40] (S3: tbl_df/tbl/data.frame)
 $ gene_id    : chr [1:36041] "FUN_002326" "FUN_002315" "FUN_002316" "FUN_002303" ...
 $ ACR-139-TP1: int [1:36041] 3 0 0 10 2 12 3 1 3 12 ...
 $ ACR-139-TP2: int [1:36041] 2 1 0 5 1 7 1 2 1 7 ...
 $ ACR-139-TP3: int [1:36041] 3 0 0 10 1 10 2 1 1 11 ...
 $ ACR-139-TP4: int [1:36041] 4 0 0 10 2 10 2 1 3 11 ...
 $ ACR-145-TP1: int [1:36041] 12 0 0 23 2 26 1 3 2 24 ...
 $ ACR-145-TP2: int [1:36041] 7 1 1 18 3 25 2 4 2 19 ...
 $ ACR-145-TP3: int [1:36041] 7 0 0 20 1 22 1 2 1 25 ...
 $ ACR-145-TP4: int [1:36041] 16 1 0 38 1 49 1 3 1 36 ...
 $ ACR-150-TP1: int [1:36041] 21 0 0 38 9 38 9 0 9 33 ...
 $ ACR-150-TP2: int [1:36041] 3 0 0 6 1 10 1 3 1 7 ...
 $ ACR-150-TP3: int [1:36041] 10 1 2 40 11 54 11 10 12 44 ...
 $ ACR-150-TP4: int [1:36041] 11 0 0 30 2 38 2 6 2 32 ...
 $ ACR-173-TP1: int [1:36041] 19 1 0 73 28 70 30 2 33 53 ...
 $ ACR-173-TP2: int [1:36041] 6 1 2 18 5 27 7 7 6 22 ...
 $ ACR-173-TP3: int [1:36041] 24 1 0 73 5 89 5 15 4 72 ...
 $ ACR-173-TP4: int [1:36041] 17 0 0 31 6 40 7 3 6 28 ...
 $ ACR-186-TP1: int [1:36041] 1 0 0 3 1 3 1 0 1 3 ...
 $ ACR-186-TP2: int [1:36041] 2 0 0 5 1 5 1 1 1 4 ...
 $ ACR-186-TP3: int [1:36041] 2 0 0 4 1 5 0 0 1 3 ...
 $ ACR-186-TP4: int [1:36041] 3 0 0 9 1 9 1 2 1 6 ...
 $ ACR-225-TP2: int [1:36041] 15 2 0 54 6 74 6 9 6 58 ...
 $ ACR-225-TP3: int [1:36041] 13 0 0 38 3 47 4 10 4 41 ...
 $ ACR-225-TP4: int [1:36041] 11 0 0 21 1 23 2 1 2 20 ...
 $ ACR-229-TP1: int [1:36041] 2 0 0 2 1 4 0 1 2 2 ...
 $ ACR-229-TP2: int [1:36041] 1 0 0 2 1 2 2 0 1 3 ...
 $ ACR-229-TP3: int [1:36041] 1 0 0 3 1 2 1 0 1 2 ...
 $ ACR-229-TP4: int [1:36041] 0 0 0 1 0 1 0 0 0 1 ...
 $ ACR-237-TP1: int [1:36041] 16 0 0 45 2 43 2 2 2 35 ...
 $ ACR-237-TP2: int [1:36041] 16 0 0 37 4 52 4 7 3 42 ...
 $ ACR-237-TP3: int [1:36041] 14 1 1 36 7 52 6 15 6 41 ...
 $ ACR-237-TP4: int [1:36041] 24 0 0 51 2 54 2 4 2 44 ...
 $ ACR-244-TP1: int [1:36041] 2 0 0 3 0 3 0 0 0 2 ...
 $ ACR-244-TP2: int [1:36041] 1 0 0 4 1 5 1 1 1 4 ...
 $ ACR-244-TP3: int [1:36041] 3 0 0 12 3 12 3 2 3 10 ...
 $ ACR-244-TP4: int [1:36041] 1 0 0 3 1 3 1 0 1 3 ...
 $ ACR-265-TP1: int [1:36041] 18 0 0 31 1 39 1 0 1 38 ...
 $ ACR-265-TP2: int [1:36041] 9 0 1 29 2 37 2 9 3 33 ...
 $ ACR-265-TP3: int [1:36041] 5 0 0 23 3 30 4 6 3 24 ...
 $ ACR-265-TP4: int [1:36041] 12 0 0 23 1 20 1 0 2 16 ...
NULL</code></pre>
<div class="sourceCode" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb62-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">transcript_counts_nzv:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>transcript_counts_nzv:</code></pre>
<div class="sourceCode" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb64-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(transcript_counts_nzv))</span></code></pre></div>
<pre><code>tibble [36,041 × 40] (S3: tbl_df/tbl/data.frame)
 $ transcript_id: chr [1:36041] "FUN_002326-T1" "FUN_002315-T1" "FUN_002316-T1" "FUN_002303-T1" ...
 $ ACR-139-TP1  : int [1:36041] 3 0 0 10 2 12 3 1 3 12 ...
 $ ACR-139-TP2  : int [1:36041] 2 1 0 5 1 7 1 2 1 7 ...
 $ ACR-139-TP3  : int [1:36041] 3 0 0 10 1 10 2 1 1 11 ...
 $ ACR-139-TP4  : int [1:36041] 4 0 0 10 2 10 2 1 3 11 ...
 $ ACR-145-TP1  : int [1:36041] 12 0 0 23 2 26 1 3 2 24 ...
 $ ACR-145-TP2  : int [1:36041] 7 1 1 18 3 25 2 4 2 19 ...
 $ ACR-145-TP3  : int [1:36041] 7 0 0 20 1 22 1 2 1 25 ...
 $ ACR-145-TP4  : int [1:36041] 16 1 0 38 1 49 1 3 1 36 ...
 $ ACR-150-TP1  : int [1:36041] 21 0 0 38 9 38 9 0 9 33 ...
 $ ACR-150-TP2  : int [1:36041] 3 0 0 6 1 10 1 3 1 7 ...
 $ ACR-150-TP3  : int [1:36041] 10 1 2 40 11 54 11 10 12 44 ...
 $ ACR-150-TP4  : int [1:36041] 11 0 0 30 2 38 2 6 2 32 ...
 $ ACR-173-TP1  : int [1:36041] 19 1 0 73 28 70 30 2 33 53 ...
 $ ACR-173-TP2  : int [1:36041] 6 1 2 18 5 27 7 7 6 22 ...
 $ ACR-173-TP3  : int [1:36041] 24 1 0 73 5 89 5 15 4 72 ...
 $ ACR-173-TP4  : int [1:36041] 17 0 0 31 6 40 7 3 6 28 ...
 $ ACR-186-TP1  : int [1:36041] 1 0 0 3 1 3 1 0 1 3 ...
 $ ACR-186-TP2  : int [1:36041] 2 0 0 5 1 5 1 1 1 4 ...
 $ ACR-186-TP3  : int [1:36041] 2 0 0 4 1 5 0 0 1 3 ...
 $ ACR-186-TP4  : int [1:36041] 3 0 0 9 1 9 1 2 1 6 ...
 $ ACR-225-TP2  : int [1:36041] 15 2 0 54 6 74 6 9 6 58 ...
 $ ACR-225-TP3  : int [1:36041] 13 0 0 38 3 47 4 10 4 41 ...
 $ ACR-225-TP4  : int [1:36041] 11 0 0 21 1 23 2 1 2 20 ...
 $ ACR-229-TP1  : int [1:36041] 2 0 0 2 1 4 0 1 2 2 ...
 $ ACR-229-TP2  : int [1:36041] 1 0 0 2 1 2 2 0 1 3 ...
 $ ACR-229-TP3  : int [1:36041] 1 0 0 3 1 2 1 0 1 2 ...
 $ ACR-229-TP4  : int [1:36041] 0 0 0 1 0 1 0 0 0 1 ...
 $ ACR-237-TP1  : int [1:36041] 16 0 0 45 2 43 2 2 2 35 ...
 $ ACR-237-TP2  : int [1:36041] 16 0 0 37 4 52 4 7 3 42 ...
 $ ACR-237-TP3  : int [1:36041] 14 1 1 36 7 52 6 15 6 41 ...
 $ ACR-237-TP4  : int [1:36041] 24 0 0 51 2 54 2 4 2 44 ...
 $ ACR-244-TP1  : int [1:36041] 2 0 0 3 0 3 0 0 0 2 ...
 $ ACR-244-TP2  : int [1:36041] 1 0 0 4 1 5 1 1 1 4 ...
 $ ACR-244-TP3  : int [1:36041] 3 0 0 12 3 12 3 2 3 10 ...
 $ ACR-244-TP4  : int [1:36041] 1 0 0 3 1 3 1 0 1 3 ...
 $ ACR-265-TP1  : int [1:36041] 18 0 0 31 1 39 1 0 1 38 ...
 $ ACR-265-TP2  : int [1:36041] 9 0 1 29 2 37 2 9 3 33 ...
 $ ACR-265-TP3  : int [1:36041] 5 0 0 23 3 30 4 6 3 24 ...
 $ ACR-265-TP4  : int [1:36041] 12 0 0 23 1 20 1 0 2 16 ...
NULL</code></pre>
<div class="sourceCode" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb66-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">lncRNA_counts_nzv:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>lncRNA_counts_nzv:</code></pre>
<div class="sourceCode" id="cb68" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb68-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(lncRNA_counts_nzv))</span></code></pre></div>
<pre><code>tibble [15,559 × 40] (S3: tbl_df/tbl/data.frame)
 $ Geneid     : chr [1:15559] "lncRNA_015" "lncRNA_076" "lncRNA_077" "lncRNA_078" ...
 $ ACR-139-TP1: num [1:15559] 113 48 648 648 648 ...
 $ ACR-139-TP2: num [1:15559] 2 19 695 695 695 ...
 $ ACR-139-TP3: num [1:15559] 2 23 958 958 958 ...
 $ ACR-139-TP4: num [1:15559] 114 10 765 765 765 ...
 $ ACR-145-TP1: num [1:15559] 154 50 846 846 846 ...
 $ ACR-145-TP2: num [1:15559] 20 11 489 489 489 ...
 $ ACR-145-TP3: num [1:15559] 90 49 1035 1035 1035 ...
 $ ACR-145-TP4: num [1:15559] 106 72 585 585 585 585 24 15 63.5 23 ...
 $ ACR-150-TP1: num [1:15559] 268 33 720 720 720 ...
 $ ACR-150-TP2: num [1:15559] 37 44 591 591 591 ...
 $ ACR-150-TP3: num [1:15559] 108 19 671 671 671 ...
 $ ACR-150-TP4: num [1:15559] 26 0 840 840 840 ...
 $ ACR-173-TP1: num [1:15559] 430 13 623 623 623 ...
 $ ACR-173-TP2: num [1:15559] 36 38 418 418 418 ...
 $ ACR-173-TP3: num [1:15559] 16 24 1084 1084 1084 ...
 $ ACR-173-TP4: num [1:15559] 99 6 848 848 848 ...
 $ ACR-186-TP1: num [1:15559] 32 54 625 625 625 625 12 12 16 10.5 ...
 $ ACR-186-TP2: num [1:15559] 7 122 932 931 931 ...
 $ ACR-186-TP3: num [1:15559] 29 40 1326 1326 1326 ...
 $ ACR-186-TP4: num [1:15559] 37 69 888 888 888 ...
 $ ACR-225-TP2: num [1:15559] 267 47 712 712 712 ...
 $ ACR-225-TP3: num [1:15559] 43 26 948 948 948 ...
 $ ACR-225-TP4: num [1:15559] 8 5 782 782 782 ...
 $ ACR-229-TP1: num [1:15559] 4 59 929 929 929 ...
 $ ACR-229-TP2: num [1:15559] 45 68 914 914 914 ...
 $ ACR-229-TP3: num [1:15559] 107 96 837 837 837 ...
 $ ACR-229-TP4: num [1:15559] 66 178 786 786 786 786 0 0 29 8 ...
 $ ACR-237-TP1: num [1:15559] 22 42 1061 1061 1061 ...
 $ ACR-237-TP2: num [1:15559] 58 60 680 680 680 ...
 $ ACR-237-TP3: num [1:15559] 29 23 673 673 673 ...
 $ ACR-237-TP4: num [1:15559] 104 4 1328 1328 1328 ...
 $ ACR-244-TP1: num [1:15559] 6 116 698 698 698 ...
 $ ACR-244-TP2: num [1:15559] 32 109 834 834 834 ...
 $ ACR-244-TP3: num [1:15559] 181 58 823 823 823 823 46.5 38.5 26 12 ...
 $ ACR-244-TP4: num [1:15559] 38 67 1133 1133 1133 ...
 $ ACR-265-TP1: num [1:15559] 5 147 1188 1188 1188 ...
 $ ACR-265-TP2: num [1:15559] 76 106 812 812 812 ...
 $ ACR-265-TP3: num [1:15559] 254 109 735 735 735 735 33 27 49 2 ...
 $ ACR-265-TP4: num [1:15559] 43 28 982 982 982 ...
NULL</code></pre>
<div class="sourceCode" id="cb70" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb70-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">methylation_counts_nzv:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>methylation_counts_nzv:</code></pre>
<div class="sourceCode" id="cb72" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb72-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(methylation_counts_nzv))</span></code></pre></div>
<pre><code>tibble [5,539,289 × 40] (S3: tbl_df/tbl/data.frame)
 $ CpG        : chr [1:5539289] "CpG_ntLink_0_90500" "CpG_ntLink_0_90540" "CpG_ntLink_0_90562" "CpG_ntLink_0_90633" ...
 $ ACR-139-TP1: num [1:5539289] 0 0 0 5.88 0 ...
 $ ACR-139-TP2: num [1:5539289] 0 0 0 0 0 ...
 $ ACR-139-TP3: num [1:5539289] 0 0 0 0 0 ...
 $ ACR-139-TP4: num [1:5539289] 0 0 0 0 0 ...
 $ ACR-145-TP1: num [1:5539289] 0 0 0 0 0 ...
 $ ACR-145-TP2: num [1:5539289] 0 2.63 2.44 0 0 ...
 $ ACR-145-TP3: num [1:5539289] 0 0 0 0 0 ...
 $ ACR-145-TP4: num [1:5539289] 0 3.45 0 0 0 ...
 $ ACR-150-TP1: num [1:5539289] NA 0 0 NA NA ...
 $ ACR-150-TP2: num [1:5539289] NA NA NA NA NA ...
 $ ACR-150-TP3: num [1:5539289] NA NA NA NA NA ...
 $ ACR-150-TP4: num [1:5539289] NA NA 0 NA NA ...
 $ ACR-173-TP1: num [1:5539289] NA 0 0 NA NA ...
 $ ACR-173-TP2: num [1:5539289] NA NA 0 NA 0 ...
 $ ACR-173-TP3: num [1:5539289] NA NA NA NA NA ...
 $ ACR-173-TP4: num [1:5539289] NA NA NA NA NA ...
 $ ACR-186-TP1: num [1:5539289] 0 0 0 0 0 ...
 $ ACR-186-TP2: num [1:5539289] 1.85 2.99 1.43 3.03 2.78 ...
 $ ACR-186-TP3: num [1:5539289] 0 0 0 0 0 ...
 $ ACR-186-TP4: num [1:5539289] 0 0 0 2.86 5.56 ...
 $ ACR-225-TP2: num [1:5539289] 0 0 0 8.33 0 ...
 $ ACR-225-TP3: num [1:5539289] NA NA NA NA NA ...
 $ ACR-225-TP4: num [1:5539289] 0 0 0 0 0 ...
 $ ACR-229-TP1: num [1:5539289] 0 0 0 4.55 0 ...
 $ ACR-229-TP2: num [1:5539289] 0 0 0 0 0 ...
 $ ACR-229-TP3: num [1:5539289] 0 0 0 0 0 12.5 0 6.25 6.25 6.25 ...
 $ ACR-229-TP4: num [1:5539289] 0 0 0 0 0 ...
 $ ACR-237-TP1: num [1:5539289] NA NA NA NA NA ...
 $ ACR-237-TP2: num [1:5539289] NA 0 0 NA NA NA NA 12.5 12 12.5 ...
 $ ACR-237-TP3: num [1:5539289] NA NA NA NA NA NA NA 50 40 50 ...
 $ ACR-237-TP4: num [1:5539289] NA NA NA NA NA NA NA 40 30 30 ...
 $ ACR-244-TP1: num [1:5539289] NA NA NA NA NA NA NA 50 NA 50 ...
 $ ACR-244-TP2: num [1:5539289] NA NA NA NA NA ...
 $ ACR-244-TP3: num [1:5539289] NA NA NA NA NA NA NA NA NA NA ...
 $ ACR-244-TP4: num [1:5539289] NA NA NA NA NA ...
 $ ACR-265-TP1: num [1:5539289] 0 0 0 0 0 ...
 $ ACR-265-TP2: num [1:5539289] 4.17 0 0 0 0 ...
 $ ACR-265-TP3: num [1:5539289] 0 0 0 0 0 ...
 $ ACR-265-TP4: num [1:5539289] 0 0 0 NA 0 ...
NULL</code></pre>
<div class="sourceCode" id="cb74" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb74-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Data frames of removed zero-variance features:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>Data frames of removed zero-variance features:</code></pre>
<div class="sourceCode" id="cb76" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb76-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">gene_counts_zero_removed:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>gene_counts_zero_removed:</code></pre>
<div class="sourceCode" id="cb78" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb78-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(gene_counts_zero_removed))</span></code></pre></div>
<pre><code>tibble [8,330 × 40] (S3: tbl_df/tbl/data.frame)
 $ gene_id    : chr [1:8330] "FUN_002347" "FUN_002390" "FUN_002423" "FUN_002674" ...
 $ ACR-139-TP1: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-139-TP2: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-139-TP3: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-139-TP4: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-145-TP1: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-145-TP2: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-145-TP3: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-145-TP4: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-150-TP1: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-150-TP2: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-150-TP3: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-150-TP4: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-173-TP1: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-173-TP2: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-173-TP3: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-173-TP4: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-186-TP1: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-186-TP2: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-186-TP3: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-186-TP4: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-225-TP2: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-225-TP3: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-225-TP4: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-229-TP1: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-229-TP2: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-229-TP3: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-229-TP4: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-237-TP1: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-237-TP2: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-237-TP3: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-237-TP4: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-244-TP1: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-244-TP2: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-244-TP3: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-244-TP4: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-265-TP1: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-265-TP2: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-265-TP3: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-265-TP4: int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
NULL</code></pre>
<div class="sourceCode" id="cb80" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb80-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">transcript_counts_zero_removed:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>transcript_counts_zero_removed:</code></pre>
<div class="sourceCode" id="cb82" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb82-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(transcript_counts_zero_removed))</span></code></pre></div>
<pre><code>tibble [8,330 × 40] (S3: tbl_df/tbl/data.frame)
 $ transcript_id: chr [1:8330] "FUN_002347-T1" "FUN_002390-T1" "FUN_002423-T1" "FUN_002674-T1" ...
 $ ACR-139-TP1  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-139-TP2  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-139-TP3  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-139-TP4  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-145-TP1  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-145-TP2  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-145-TP3  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-145-TP4  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-150-TP1  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-150-TP2  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-150-TP3  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-150-TP4  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-173-TP1  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-173-TP2  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-173-TP3  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-173-TP4  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-186-TP1  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-186-TP2  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-186-TP3  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-186-TP4  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-225-TP2  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-225-TP3  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-225-TP4  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-229-TP1  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-229-TP2  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-229-TP3  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-229-TP4  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-237-TP1  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-237-TP2  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-237-TP3  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-237-TP4  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-244-TP1  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-244-TP2  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-244-TP3  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-244-TP4  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-265-TP1  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-265-TP2  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-265-TP3  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-265-TP4  : int [1:8330] 0 0 0 0 0 0 0 0 0 0 ...
NULL</code></pre>
<div class="sourceCode" id="cb84" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb84-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">lncRNA_counts_zero_removed:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>lncRNA_counts_zero_removed:</code></pre>
<div class="sourceCode" id="cb86" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb86-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(lncRNA_counts_zero_removed))</span></code></pre></div>
<pre><code>tibble [0 × 40] (S3: tbl_df/tbl/data.frame)
 $ Geneid     : chr(0) 
 $ ACR-139-TP1: num(0) 
 $ ACR-139-TP2: num(0) 
 $ ACR-139-TP3: num(0) 
 $ ACR-139-TP4: num(0) 
 $ ACR-145-TP1: num(0) 
 $ ACR-145-TP2: num(0) 
 $ ACR-145-TP3: num(0) 
 $ ACR-145-TP4: num(0) 
 $ ACR-150-TP1: num(0) 
 $ ACR-150-TP2: num(0) 
 $ ACR-150-TP3: num(0) 
 $ ACR-150-TP4: num(0) 
 $ ACR-173-TP1: num(0) 
 $ ACR-173-TP2: num(0) 
 $ ACR-173-TP3: num(0) 
 $ ACR-173-TP4: num(0) 
 $ ACR-186-TP1: num(0) 
 $ ACR-186-TP2: num(0) 
 $ ACR-186-TP3: num(0) 
 $ ACR-186-TP4: num(0) 
 $ ACR-225-TP2: num(0) 
 $ ACR-225-TP3: num(0) 
 $ ACR-225-TP4: num(0) 
 $ ACR-229-TP1: num(0) 
 $ ACR-229-TP2: num(0) 
 $ ACR-229-TP3: num(0) 
 $ ACR-229-TP4: num(0) 
 $ ACR-237-TP1: num(0) 
 $ ACR-237-TP2: num(0) 
 $ ACR-237-TP3: num(0) 
 $ ACR-237-TP4: num(0) 
 $ ACR-244-TP1: num(0) 
 $ ACR-244-TP2: num(0) 
 $ ACR-244-TP3: num(0) 
 $ ACR-244-TP4: num(0) 
 $ ACR-265-TP1: num(0) 
 $ ACR-265-TP2: num(0) 
 $ ACR-265-TP3: num(0) 
 $ ACR-265-TP4: num(0) 
NULL</code></pre>
<div class="sourceCode" id="cb88" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb88-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">methylation_counts_zero_removed:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>methylation_counts_zero_removed:</code></pre>
<div class="sourceCode" id="cb90" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb90-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(methylation_counts_zero_removed))</span></code></pre></div>
<pre><code>tibble [1,027,017 × 40] (S3: tbl_df/tbl/data.frame)
 $ CpG        : chr [1:1027017] "CpG_ntLink_1_108004" "CpG_ntLink_1_109308" "CpG_ntLink_1_143885" "CpG_ntLink_1_149665" ...
 $ ACR-139-TP1: num [1:1027017] 0 NA 0 0 0 0 0 0 0 0 ...
 $ ACR-139-TP2: num [1:1027017] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-139-TP3: num [1:1027017] 0 0 0 0 0 NA NA NA NA NA ...
 $ ACR-139-TP4: num [1:1027017] NA NA NA NA 0 0 0 0 0 0 ...
 $ ACR-145-TP1: num [1:1027017] 0 0 0 0 0 NA NA NA NA NA ...
 $ ACR-145-TP2: num [1:1027017] 0 0 0 NA NA 0 0 0 0 0 ...
 $ ACR-145-TP3: num [1:1027017] 0 0 0 0 0 NA NA NA NA NA ...
 $ ACR-145-TP4: num [1:1027017] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-150-TP1: num [1:1027017] 0 0 0 0 0 NA NA NA 0 0 ...
 $ ACR-150-TP2: num [1:1027017] 0 0 NA NA NA 0 0 0 0 0 ...
 $ ACR-150-TP3: num [1:1027017] NA 0 0 NA 0 0 0 0 0 0 ...
 $ ACR-150-TP4: num [1:1027017] 0 0 NA 0 0 NA NA NA NA NA ...
 $ ACR-173-TP1: num [1:1027017] 0 0 0 0 0 0 NA NA NA NA ...
 $ ACR-173-TP2: num [1:1027017] NA 0 NA NA NA 0 0 0 0 0 ...
 $ ACR-173-TP3: num [1:1027017] 0 0 0 0 0 NA NA NA NA NA ...
 $ ACR-173-TP4: num [1:1027017] 0 0 0 0 0 NA NA NA NA NA ...
 $ ACR-186-TP1: num [1:1027017] 0 0 0 0 0 0 NA 0 NA NA ...
 $ ACR-186-TP2: num [1:1027017] 0 NA 0 0 0 NA NA NA NA 0 ...
 $ ACR-186-TP3: num [1:1027017] NA NA 0 0 0 NA NA NA NA NA ...
 $ ACR-186-TP4: num [1:1027017] 0 NA 0 NA NA 0 0 0 0 0 ...
 $ ACR-225-TP2: num [1:1027017] NA NA NA NA NA NA NA NA NA NA ...
 $ ACR-225-TP3: num [1:1027017] 0 0 0 0 0 NA NA NA NA NA ...
 $ ACR-225-TP4: num [1:1027017] 0 NA NA NA NA NA NA NA NA NA ...
 $ ACR-229-TP1: num [1:1027017] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-229-TP2: num [1:1027017] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-229-TP3: num [1:1027017] NA NA NA NA NA 0 0 0 0 NA ...
 $ ACR-229-TP4: num [1:1027017] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-237-TP1: num [1:1027017] 0 NA NA 0 0 0 0 0 0 0 ...
 $ ACR-237-TP2: num [1:1027017] 0 0 0 0 0 0 0 0 0 0 ...
 $ ACR-237-TP3: num [1:1027017] NA 0 NA NA NA 0 0 0 0 0 ...
 $ ACR-237-TP4: num [1:1027017] 0 0 NA 0 0 0 0 0 0 0 ...
 $ ACR-244-TP1: num [1:1027017] NA NA NA NA NA 0 0 0 0 0 ...
 $ ACR-244-TP2: num [1:1027017] NA NA NA NA NA 0 0 0 0 0 ...
 $ ACR-244-TP3: num [1:1027017] NA NA NA NA NA NA NA NA NA 0 ...
 $ ACR-244-TP4: num [1:1027017] NA NA NA NA NA 0 0 0 0 0 ...
 $ ACR-265-TP1: num [1:1027017] 0 NA 0 NA NA 0 0 0 0 0 ...
 $ ACR-265-TP2: num [1:1027017] 0 0 0 NA NA 0 0 0 0 0 ...
 $ ACR-265-TP3: num [1:1027017] 0 0 0 0 0 NA NA NA NA NA ...
 $ ACR-265-TP4: num [1:1027017] 0 0 0 NA NA NA NA NA NA NA ...
NULL</code></pre>
</section>
<section id="create-matrices-after-zero-variance-removal" class="level2">
<h2 class="anchored" data-anchor-id="create-matrices-after-zero-variance-removal">4.5 Create Matrices After Zero-Variance Removal</h2>
<div class="sourceCode" id="cb92" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb92-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create matrices from filtered data frames</span></span>
<span id="cb92-2">gene_mat_nzv <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> gene_counts_nzv <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb92-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">column_to_rownames</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(gene_counts_nzv)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb92-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>()</span>
<span id="cb92-5"></span>
<span id="cb92-6">transcript_mat_nzv <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> transcript_counts_nzv <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb92-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">column_to_rownames</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(transcript_counts_nzv)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb92-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>()</span>
<span id="cb92-9"></span>
<span id="cb92-10">lncRNA_mat_nzv <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> lncRNA_counts_nzv <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb92-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">column_to_rownames</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Geneid"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb92-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>()</span>
<span id="cb92-13"></span>
<span id="cb92-14">methylation_mat_nzv <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> methylation_counts_nzv <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb92-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">column_to_rownames</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(methylation_counts_nzv)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> </span>
<span id="cb92-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>()</span>
<span id="cb92-17"></span>
<span id="cb92-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Combine into a named list for MOFA2</span></span>
<span id="cb92-19">data_list_nzv <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb92-20">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gene =</span> gene_mat_nzv,</span>
<span id="cb92-21">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">transcript =</span> transcript_mat_nzv,</span>
<span id="cb92-22">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lncRNA =</span> lncRNA_mat_nzv,</span>
<span id="cb92-23">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">methylation =</span> methylation_mat_nzv</span>
<span id="cb92-24">)</span>
<span id="cb92-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show structure of the new list</span></span>
<span id="cb92-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(data_list_nzv, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.level =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
<pre><code>List of 4
 $ gene       : int [1:36041, 1:39] 3 0 0 10 2 12 3 1 3 12 ...
  ..- attr(*, "dimnames")=List of 2
 $ transcript : int [1:36041, 1:39] 3 0 0 10 2 12 3 1 3 12 ...
  ..- attr(*, "dimnames")=List of 2
 $ lncRNA     : num [1:15559, 1:39] 113 48 648 648 648 ...
  ..- attr(*, "dimnames")=List of 2
 $ methylation: num [1:5539289, 1:39] 0 0 0 5.88 0 ...
  ..- attr(*, "dimnames")=List of 2</code></pre>
<div class="sourceCode" id="cb94" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb94-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">List of matrices after zero-variance feature removal ready for MOFA2 object creation.</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>List of matrices after zero-variance feature removal ready for MOFA2 object creation.</code></pre>
</section>
</section>
<section id="create-mofa2-object" class="level1">
<h1>5 CREATE MOFA2 OBJECT</h1>
<div class="sourceCode" id="cb96" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb96-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a MOFA object from the list of matrices</span></span>
<span id="cb96-2">MOFAobject <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">create_mofa</span>(data_list_nzv)</span>
<span id="cb96-3"></span>
<span id="cb96-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Show summary of the MOFA object</span></span>
<span id="cb96-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(MOFAobject)</span></code></pre></div>
<pre><code>Untrained MOFA model with the following characteristics: 
 Number of views: 4 
 Views names: gene transcript lncRNA methylation 
 Number of features (per view): 36041 36041 15559 5539289 
 Number of groups: 1 
 Groups names: group1 
 Number of samples (per group): 39 
 </code></pre>
<div class="sourceCode" id="cb98" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb98-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">MOFA object created.</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>MOFA object created.</code></pre>
<section id="plot-data-overview" class="level2">
<h2 class="anchored" data-anchor-id="plot-data-overview">5.1 Plot data overview</h2>
<div class="sourceCode" id="cb100" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb100-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_data_overview</span>(MOFAobject)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-data-overview-1.png" class="img-fluid"><!-- --></p>
</section>
</section>
<section id="define-mofa2-options" class="level1">
<h1>6 DEFINE MOFA2 OPTIONS</h1>
<section id="data-options" class="level2">
<h2 class="anchored" data-anchor-id="data-options">6.1 Data options</h2>
<div class="sourceCode" id="cb101" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb101-1">data_opts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_default_data_options</span>(MOFAobject)</span>
<span id="cb101-2">data_opts</span></code></pre></div>
<pre><code>$scale_views
[1] FALSE

$scale_groups
[1] FALSE

$center_groups
[1] TRUE

$use_float32
[1] TRUE

$views
[1] "gene"        "transcript"  "lncRNA"      "methylation"

$groups
[1] "group1"</code></pre>
</section>
<section id="model-options" class="level2">
<h2 class="anchored" data-anchor-id="model-options">6.2 Model options</h2>
<div class="sourceCode" id="cb103" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb103-1">model_opts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_default_model_options</span>(MOFAobject)</span>
<span id="cb103-2">model_opts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>num_factors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb103-3"></span>
<span id="cb103-4">model_opts</span></code></pre></div>
<pre><code>$likelihoods
       gene  transcript      lncRNA methylation 
 "gaussian"  "gaussian"  "gaussian"  "gaussian" 

$num_factors
[1] 10

$spikeslab_factors
[1] FALSE

$spikeslab_weights
[1] FALSE

$ard_factors
[1] FALSE

$ard_weights
[1] TRUE</code></pre>
</section>
<section id="training-options" class="level2">
<h2 class="anchored" data-anchor-id="training-options">6.3 Training options</h2>
<div class="sourceCode" id="cb105" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb105-1">train_opts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_default_training_options</span>(MOFAobject)</span>
<span id="cb105-2">train_opts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>convergence_mode <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fast"</span></span>
<span id="cb105-3">train_opts<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>seed <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model_seed</span>
<span id="cb105-4"></span>
<span id="cb105-5">train_opts</span></code></pre></div>
<pre><code>$maxiter
[1] 1000

$convergence_mode
[1] "fast"

$drop_factor_threshold
[1] -1

$verbose
[1] FALSE

$startELBO
[1] 1

$freqELBO
[1] 5

$stochastic
[1] FALSE

$gpu_mode
[1] FALSE

$seed
[1] 42

$outfile
NULL

$weight_views
[1] FALSE

$save_interrupted
[1] FALSE</code></pre>
</section>
</section>
<section id="train-mofa2-object" class="level1">
<h1>7 TRAIN MOFA2 OBJECT</h1>
<p>A range from 10 - 15 factors is recommended by the developers.</p>
<section id="load-saved-mofa-objects-from-disk" class="level2">
<h2 class="anchored" data-anchor-id="load-saved-mofa-objects-from-disk">7.1 Load saved MOFA objects from disk</h2>
<p>If this has been previously run, this will load existing, trained models.</p>
<div class="sourceCode" id="cb107" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb107-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a new list to store loaded MOFA objects</span></span>
<span id="cb107-2">mofa_objects <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb107-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (nf <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>) {</span>
<span id="cb107-4">  rds_file <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(output_dir, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFA2_model_factors-"</span>, nf, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".rds"</span>))</span>
<span id="cb107-5">  obj_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors"</span>, nf)</span>
<span id="cb107-6">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.exists</span>(rds_file)) {</span>
<span id="cb107-7">    mofa_objects[[obj_name]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">readRDS</span>(rds_file)</span>
<span id="cb107-8">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb107-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">warning</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"File not found:"</span>, rds_file))</span>
<span id="cb107-10">  }</span>
<span id="cb107-11">}</span></code></pre></div>
</section>
<section id="train-mofa-objects-for-different-numbers-of-factors" class="level2">
<h2 class="anchored" data-anchor-id="train-mofa-objects-for-different-numbers-of-factors">7.2 Train MOFA objects for different numbers of factors</h2>
<p>If this is the first time running this, this will train the models.</p>
<div class="sourceCode" id="cb108" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb108-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># List to store MOFA objects</span></span>
<span id="cb108-2">mofa_objects <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb108-3"></span>
<span id="cb108-4">data_opts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_default_data_options</span>(MOFAobject)</span>
<span id="cb108-5"></span>
<span id="cb108-6"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (nf <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">15</span>) {</span>
<span id="cb108-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set model options for this number of factors</span></span>
<span id="cb108-8">  model_opts_i <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_default_model_options</span>(MOFAobject)</span>
<span id="cb108-9">  model_opts_i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>num_factors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> nf</span>
<span id="cb108-10">  train_opts_i <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_default_training_options</span>(MOFAobject)</span>
<span id="cb108-11">  train_opts_i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>convergence_mode <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fast"</span></span>
<span id="cb108-12">  train_opts_i<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>seed <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> model_seed</span>
<span id="cb108-13"></span>
<span id="cb108-14">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Prepare MOFA object</span></span>
<span id="cb108-15">  MOFAobject_i <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">prepare_mofa</span>(MOFAobject,</span>
<span id="cb108-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data_options =</span> data_opts,</span>
<span id="cb108-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">model_options =</span> model_opts_i,</span>
<span id="cb108-18">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">training_options =</span> train_opts_i</span>
<span id="cb108-19">  )</span>
<span id="cb108-20"></span>
<span id="cb108-21">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output filenames and object name</span></span>
<span id="cb108-22">  model_hdf5_file_i <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(output_dir, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFA2_model_factors-"</span>, nf, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".hdf5"</span>))</span>
<span id="cb108-23">  model_rds_file_i <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(output_dir, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFA2_model_factors-"</span>, nf, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".rds"</span>))</span>
<span id="cb108-24">  mofa_obj_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors"</span>, nf)</span>
<span id="cb108-25"></span>
<span id="cb108-26">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Train and save</span></span>
<span id="cb108-27">  MOFAobject_i <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">run_mofa</span>(MOFAobject_i, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">outfile =</span> model_hdf5_file_i, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">use_basilisk =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb108-28">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">saveRDS</span>(MOFAobject_i, model_rds_file_i)</span>
<span id="cb108-29"></span>
<span id="cb108-30">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Store in list with descriptive name</span></span>
<span id="cb108-31">  mofa_objects[[mofa_obj_name]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> MOFAobject_i</span>
<span id="cb108-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Trained and saved MOFA object with"</span>, nf, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"factors.</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb108-33">}</span></code></pre></div>
</section>
</section>
<section id="plots" class="level1">
<h1>8 PLOTS</h1>
<section id="factor-correlation" class="level2">
<h2 class="anchored" data-anchor-id="factor-correlation">8.1 Factor correlation</h2>
<div class="sourceCode" id="cb109" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb109-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (obj_name <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(mofa_objects)) {</span>
<span id="cb109-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Factor correlation for"</span>, obj_name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">":</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb109-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_factor_cor</span>(mofa_objects[[obj_name]]))</span>
<span id="cb109-4">}</span></code></pre></div>
<pre><code>Factor correlation for MOFAobject_factors10 :</code></pre>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-factor-correlation-1.png" class="img-fluid"><!-- --></p>
<pre><code>$corr
            Factor1     Factor2    Factor3    Factor4    Factor5     Factor6
Factor1  1.00000000 0.046681334 0.05182031 0.01561756 0.30921785 0.108586555
Factor2  0.04668133 1.000000000 0.06662943 0.01406297 0.04187124 0.007950676
Factor3  0.05182031 0.066629434 1.00000000 0.11377171 0.07144919 0.194514754
Factor4  0.01561756 0.014062971 0.11377171 1.00000000 0.15377259 0.199532043
Factor5  0.30921785 0.041871242 0.07144919 0.15377259 1.00000000 0.012461337
Factor6  0.10858656 0.007950676 0.19451475 0.19953204 0.01246134 1.000000000
Factor7  0.07290545 0.169090429 0.01295552 0.01742722 0.13309303 0.064046676
Factor8  0.15005099 0.005521237 0.06461261 0.11274888 0.22139646 0.062286310
Factor9  0.22883061 0.013924212 0.06786212 0.18152442 0.09914594 0.021700794
Factor10 0.21285997 0.087985593 0.08247005 0.05210695 0.01028841 0.028337434
            Factor7     Factor8     Factor9    Factor10
Factor1  0.07290545 0.150050993 0.228830611 0.212859969
Factor2  0.16909043 0.005521237 0.013924212 0.087985593
Factor3  0.01295552 0.064612605 0.067862120 0.082470046
Factor4  0.01742722 0.112748880 0.181524422 0.052106954
Factor5  0.13309303 0.221396459 0.099145935 0.010288409
Factor6  0.06404668 0.062286310 0.021700794 0.028337434
Factor7  1.00000000 0.094469509 0.011627080 0.128411913
Factor8  0.09446951 1.000000000 0.122213538 0.205433192
Factor9  0.01162708 0.122213538 1.000000000 0.002845682
Factor10 0.12841191 0.205433192 0.002845682 1.000000000

$corrPos
       xName    yName  x  y        corr
1    Factor1  Factor1  1 10 1.000000000
2    Factor1  Factor2  1  9 0.046681334
3    Factor1  Factor3  1  8 0.051820312
4    Factor1  Factor4  1  7 0.015617560
5    Factor1  Factor5  1  6 0.309217845
6    Factor1  Factor6  1  5 0.108586555
7    Factor1  Factor7  1  4 0.072905449
8    Factor1  Factor8  1  3 0.150050993
9    Factor1  Factor9  1  2 0.228830611
10   Factor1 Factor10  1  1 0.212859969
11   Factor2  Factor1  2 10 0.046681334
12   Factor2  Factor2  2  9 1.000000000
13   Factor2  Factor3  2  8 0.066629434
14   Factor2  Factor4  2  7 0.014062971
15   Factor2  Factor5  2  6 0.041871242
16   Factor2  Factor6  2  5 0.007950676
17   Factor2  Factor7  2  4 0.169090429
18   Factor2  Factor8  2  3 0.005521237
19   Factor2  Factor9  2  2 0.013924212
20   Factor2 Factor10  2  1 0.087985593
21   Factor3  Factor1  3 10 0.051820312
22   Factor3  Factor2  3  9 0.066629434
23   Factor3  Factor3  3  8 1.000000000
24   Factor3  Factor4  3  7 0.113771710
25   Factor3  Factor5  3  6 0.071449187
26   Factor3  Factor6  3  5 0.194514754
27   Factor3  Factor7  3  4 0.012955519
28   Factor3  Factor8  3  3 0.064612605
29   Factor3  Factor9  3  2 0.067862120
30   Factor3 Factor10  3  1 0.082470046
31   Factor4  Factor1  4 10 0.015617560
32   Factor4  Factor2  4  9 0.014062971
33   Factor4  Factor3  4  8 0.113771710
34   Factor4  Factor4  4  7 1.000000000
35   Factor4  Factor5  4  6 0.153772587
36   Factor4  Factor6  4  5 0.199532043
37   Factor4  Factor7  4  4 0.017427217
38   Factor4  Factor8  4  3 0.112748880
39   Factor4  Factor9  4  2 0.181524422
40   Factor4 Factor10  4  1 0.052106954
41   Factor5  Factor1  5 10 0.309217845
42   Factor5  Factor2  5  9 0.041871242
43   Factor5  Factor3  5  8 0.071449187
44   Factor5  Factor4  5  7 0.153772587
45   Factor5  Factor5  5  6 1.000000000
46   Factor5  Factor6  5  5 0.012461337
47   Factor5  Factor7  5  4 0.133093028
48   Factor5  Factor8  5  3 0.221396459
49   Factor5  Factor9  5  2 0.099145935
50   Factor5 Factor10  5  1 0.010288409
51   Factor6  Factor1  6 10 0.108586555
52   Factor6  Factor2  6  9 0.007950676
53   Factor6  Factor3  6  8 0.194514754
54   Factor6  Factor4  6  7 0.199532043
55   Factor6  Factor5  6  6 0.012461337
56   Factor6  Factor6  6  5 1.000000000
57   Factor6  Factor7  6  4 0.064046676
58   Factor6  Factor8  6  3 0.062286310
59   Factor6  Factor9  6  2 0.021700794
60   Factor6 Factor10  6  1 0.028337434
61   Factor7  Factor1  7 10 0.072905449
62   Factor7  Factor2  7  9 0.169090429
63   Factor7  Factor3  7  8 0.012955519
64   Factor7  Factor4  7  7 0.017427217
65   Factor7  Factor5  7  6 0.133093028
66   Factor7  Factor6  7  5 0.064046676
67   Factor7  Factor7  7  4 1.000000000
68   Factor7  Factor8  7  3 0.094469509
69   Factor7  Factor9  7  2 0.011627080
70   Factor7 Factor10  7  1 0.128411913
71   Factor8  Factor1  8 10 0.150050993
72   Factor8  Factor2  8  9 0.005521237
73   Factor8  Factor3  8  8 0.064612605
74   Factor8  Factor4  8  7 0.112748880
75   Factor8  Factor5  8  6 0.221396459
76   Factor8  Factor6  8  5 0.062286310
77   Factor8  Factor7  8  4 0.094469509
78   Factor8  Factor8  8  3 1.000000000
79   Factor8  Factor9  8  2 0.122213538
80   Factor8 Factor10  8  1 0.205433192
81   Factor9  Factor1  9 10 0.228830611
82   Factor9  Factor2  9  9 0.013924212
83   Factor9  Factor3  9  8 0.067862120
84   Factor9  Factor4  9  7 0.181524422
85   Factor9  Factor5  9  6 0.099145935
86   Factor9  Factor6  9  5 0.021700794
87   Factor9  Factor7  9  4 0.011627080
88   Factor9  Factor8  9  3 0.122213538
89   Factor9  Factor9  9  2 1.000000000
90   Factor9 Factor10  9  1 0.002845682
91  Factor10  Factor1 10 10 0.212859969
92  Factor10  Factor2 10  9 0.087985593
93  Factor10  Factor3 10  8 0.082470046
94  Factor10  Factor4 10  7 0.052106954
95  Factor10  Factor5 10  6 0.010288409
96  Factor10  Factor6 10  5 0.028337434
97  Factor10  Factor7 10  4 0.128411913
98  Factor10  Factor8 10  3 0.205433192
99  Factor10  Factor9 10  2 0.002845682
100 Factor10 Factor10 10  1 1.000000000

$arg
$arg$type
[1] "full"



Factor correlation for MOFAobject_factors11 :</code></pre>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-factor-correlation-2.png" class="img-fluid"><!-- --></p>
<pre><code>$corr
             Factor1     Factor2      Factor3    Factor4     Factor5
Factor1  1.000000000 0.041415952 0.0832233579 0.01912833 0.082142027
Factor2  0.041415952 1.000000000 0.1201312250 0.22008940 0.065054558
Factor3  0.083223358 0.120131225 1.0000000000 0.03209471 0.013395633
Factor4  0.019128325 0.220089399 0.0320947102 1.00000000 0.084651235
Factor5  0.082142027 0.065054558 0.0133956328 0.08465123 1.000000000
Factor6  0.004511983 0.007471543 0.0804404186 0.10270985 0.105282819
Factor7  0.024247862 0.099026480 0.0007957089 0.07648256 0.214653140
Factor8  0.155715887 0.064379877 0.0144386679 0.11742570 0.001329419
Factor9  0.058424620 0.120030864 0.1550781096 0.09697500 0.063728275
Factor10 0.001950196 0.096047488 0.1559241619 0.01301972 0.074573598
Factor11 0.028704149 0.157837294 0.0192674926 0.05435085 0.065666816
             Factor6      Factor7     Factor8    Factor9    Factor10   Factor11
Factor1  0.004511983 0.0242478624 0.155715887 0.05842462 0.001950196 0.02870415
Factor2  0.007471543 0.0990264798 0.064379877 0.12003086 0.096047488 0.15783729
Factor3  0.080440419 0.0007957089 0.014438668 0.15507811 0.155924162 0.01926749
Factor4  0.102709849 0.0764825610 0.117425700 0.09697500 0.013019718 0.05435085
Factor5  0.105282819 0.2146531404 0.001329419 0.06372827 0.074573598 0.06566682
Factor6  1.000000000 0.2033791746 0.009728593 0.11594433 0.191014321 0.03215011
Factor7  0.203379175 1.0000000000 0.054972070 0.03541703 0.123688443 0.03869996
Factor8  0.009728593 0.0549720699 1.000000000 0.07566166 0.012717315 0.16974650
Factor9  0.115944331 0.0354170263 0.075661660 1.00000000 0.126120288 0.30242051
Factor10 0.191014321 0.1236884426 0.012717315 0.12612029 1.000000000 0.05050392
Factor11 0.032150109 0.0386999553 0.169746504 0.30242051 0.050503922 1.00000000

$corrPos
       xName    yName  x  y         corr
1    Factor1  Factor1  1 11 1.0000000000
2    Factor1  Factor2  1 10 0.0414159520
3    Factor1  Factor3  1  9 0.0832233579
4    Factor1  Factor4  1  8 0.0191283254
5    Factor1  Factor5  1  7 0.0821420269
6    Factor1  Factor6  1  6 0.0045119825
7    Factor1  Factor7  1  5 0.0242478624
8    Factor1  Factor8  1  4 0.1557158871
9    Factor1  Factor9  1  3 0.0584246196
10   Factor1 Factor10  1  2 0.0019501959
11   Factor1 Factor11  1  1 0.0287041486
12   Factor2  Factor1  2 11 0.0414159520
13   Factor2  Factor2  2 10 1.0000000000
14   Factor2  Factor3  2  9 0.1201312250
15   Factor2  Factor4  2  8 0.2200893987
16   Factor2  Factor5  2  7 0.0650545584
17   Factor2  Factor6  2  6 0.0074715433
18   Factor2  Factor7  2  5 0.0990264798
19   Factor2  Factor8  2  4 0.0643798766
20   Factor2  Factor9  2  3 0.1200308637
21   Factor2 Factor10  2  2 0.0960474878
22   Factor2 Factor11  2  1 0.1578372936
23   Factor3  Factor1  3 11 0.0832233579
24   Factor3  Factor2  3 10 0.1201312250
25   Factor3  Factor3  3  9 1.0000000000
26   Factor3  Factor4  3  8 0.0320947102
27   Factor3  Factor5  3  7 0.0133956328
28   Factor3  Factor6  3  6 0.0804404186
29   Factor3  Factor7  3  5 0.0007957089
30   Factor3  Factor8  3  4 0.0144386679
31   Factor3  Factor9  3  3 0.1550781096
32   Factor3 Factor10  3  2 0.1559241619
33   Factor3 Factor11  3  1 0.0192674926
34   Factor4  Factor1  4 11 0.0191283254
35   Factor4  Factor2  4 10 0.2200893987
36   Factor4  Factor3  4  9 0.0320947102
37   Factor4  Factor4  4  8 1.0000000000
38   Factor4  Factor5  4  7 0.0846512346
39   Factor4  Factor6  4  6 0.1027098487
40   Factor4  Factor7  4  5 0.0764825610
41   Factor4  Factor8  4  4 0.1174256995
42   Factor4  Factor9  4  3 0.0969749999
43   Factor4 Factor10  4  2 0.0130197180
44   Factor4 Factor11  4  1 0.0543508545
45   Factor5  Factor1  5 11 0.0821420269
46   Factor5  Factor2  5 10 0.0650545584
47   Factor5  Factor3  5  9 0.0133956328
48   Factor5  Factor4  5  8 0.0846512346
49   Factor5  Factor5  5  7 1.0000000000
50   Factor5  Factor6  5  6 0.1052828193
51   Factor5  Factor7  5  5 0.2146531404
52   Factor5  Factor8  5  4 0.0013294192
53   Factor5  Factor9  5  3 0.0637282745
54   Factor5 Factor10  5  2 0.0745735979
55   Factor5 Factor11  5  1 0.0656668162
56   Factor6  Factor1  6 11 0.0045119825
57   Factor6  Factor2  6 10 0.0074715433
58   Factor6  Factor3  6  9 0.0804404186
59   Factor6  Factor4  6  8 0.1027098487
60   Factor6  Factor5  6  7 0.1052828193
61   Factor6  Factor6  6  6 1.0000000000
62   Factor6  Factor7  6  5 0.2033791746
63   Factor6  Factor8  6  4 0.0097285925
64   Factor6  Factor9  6  3 0.1159443307
65   Factor6 Factor10  6  2 0.1910143209
66   Factor6 Factor11  6  1 0.0321501087
67   Factor7  Factor1  7 11 0.0242478624
68   Factor7  Factor2  7 10 0.0990264798
69   Factor7  Factor3  7  9 0.0007957089
70   Factor7  Factor4  7  8 0.0764825610
71   Factor7  Factor5  7  7 0.2146531404
72   Factor7  Factor6  7  6 0.2033791746
73   Factor7  Factor7  7  5 1.0000000000
74   Factor7  Factor8  7  4 0.0549720699
75   Factor7  Factor9  7  3 0.0354170263
76   Factor7 Factor10  7  2 0.1236884426
77   Factor7 Factor11  7  1 0.0386999553
78   Factor8  Factor1  8 11 0.1557158871
79   Factor8  Factor2  8 10 0.0643798766
80   Factor8  Factor3  8  9 0.0144386679
81   Factor8  Factor4  8  8 0.1174256995
82   Factor8  Factor5  8  7 0.0013294192
83   Factor8  Factor6  8  6 0.0097285925
84   Factor8  Factor7  8  5 0.0549720699
85   Factor8  Factor8  8  4 1.0000000000
86   Factor8  Factor9  8  3 0.0756616599
87   Factor8 Factor10  8  2 0.0127173147
88   Factor8 Factor11  8  1 0.1697465038
89   Factor9  Factor1  9 11 0.0584246196
90   Factor9  Factor2  9 10 0.1200308637
91   Factor9  Factor3  9  9 0.1550781096
92   Factor9  Factor4  9  8 0.0969749999
93   Factor9  Factor5  9  7 0.0637282745
94   Factor9  Factor6  9  6 0.1159443307
95   Factor9  Factor7  9  5 0.0354170263
96   Factor9  Factor8  9  4 0.0756616599
97   Factor9  Factor9  9  3 1.0000000000
98   Factor9 Factor10  9  2 0.1261202881
99   Factor9 Factor11  9  1 0.3024205067
100 Factor10  Factor1 10 11 0.0019501959
101 Factor10  Factor2 10 10 0.0960474878
102 Factor10  Factor3 10  9 0.1559241619
103 Factor10  Factor4 10  8 0.0130197180
104 Factor10  Factor5 10  7 0.0745735979
105 Factor10  Factor6 10  6 0.1910143209
106 Factor10  Factor7 10  5 0.1236884426
107 Factor10  Factor8 10  4 0.0127173147
108 Factor10  Factor9 10  3 0.1261202881
109 Factor10 Factor10 10  2 1.0000000000
110 Factor10 Factor11 10  1 0.0505039222
111 Factor11  Factor1 11 11 0.0287041486
112 Factor11  Factor2 11 10 0.1578372936
113 Factor11  Factor3 11  9 0.0192674926
114 Factor11  Factor4 11  8 0.0543508545
115 Factor11  Factor5 11  7 0.0656668162
116 Factor11  Factor6 11  6 0.0321501087
117 Factor11  Factor7 11  5 0.0386999553
118 Factor11  Factor8 11  4 0.1697465038
119 Factor11  Factor9 11  3 0.3024205067
120 Factor11 Factor10 11  2 0.0505039222
121 Factor11 Factor11 11  1 1.0000000000

$arg
$arg$type
[1] "full"



Factor correlation for MOFAobject_factors12 :</code></pre>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-factor-correlation-3.png" class="img-fluid"><!-- --></p>
<pre><code>$corr
             Factor1    Factor2    Factor3     Factor4    Factor5     Factor6
Factor1  1.000000000 0.13086693 0.01746828 0.074277490 0.01637824 0.076300346
Factor2  0.130866935 1.00000000 0.07139340 0.056759551 0.21461996 0.013051486
Factor3  0.017468276 0.07139340 1.00000000 0.056013428 0.08048173 0.125627669
Factor4  0.074277490 0.05675955 0.05601343 1.000000000 0.03111472 0.007031898
Factor5  0.016378238 0.21461996 0.08048173 0.031114722 1.00000000 0.124148183
Factor6  0.076300346 0.01305149 0.12562767 0.007031898 0.12414818 1.000000000
Factor7  0.022718549 0.07214932 0.15988032 0.079907231 0.03872940 0.161274213
Factor8  0.113239443 0.09828416 0.12029754 0.156821057 0.04968091 0.100619029
Factor9  0.003804119 0.07664182 0.02964587 0.186709098 0.11493523 0.014710688
Factor10 0.111243326 0.11514797 0.06963699 0.072813296 0.08639477 0.109973203
Factor11 0.110775696 0.10879751 0.11509737 0.013526279 0.00237050 0.203137930
Factor12 0.047765690 0.13575159 0.02390891 0.060370655 0.03359439 0.043589928
             Factor7    Factor8     Factor9   Factor10    Factor11   Factor12
Factor1  0.022718549 0.11323944 0.003804119 0.11124333 0.110775696 0.04776569
Factor2  0.072149324 0.09828416 0.076641820 0.11514797 0.108797513 0.13575159
Factor3  0.159880322 0.12029754 0.029645874 0.06963699 0.115097372 0.02390891
Factor4  0.079907231 0.15682106 0.186709098 0.07281330 0.013526279 0.06037065
Factor5  0.038729398 0.04968091 0.114935227 0.08639477 0.002370500 0.03359439
Factor6  0.161274213 0.10061903 0.014710688 0.10997320 0.203137930 0.04358993
Factor7  1.000000000 0.06000014 0.001436961 0.06655498 0.144149539 0.11161860
Factor8  0.060000144 1.00000000 0.148761855 0.03278847 0.113923861 0.22633038
Factor9  0.001436961 0.14876186 1.000000000 0.06288716 0.003465289 0.16655696
Factor10 0.066554979 0.03278847 0.062887160 1.00000000 0.129479762 0.34530840
Factor11 0.144149539 0.11392386 0.003465289 0.12947976 1.000000000 0.08625117
Factor12 0.111618600 0.22633038 0.166556958 0.34530840 0.086251174 1.00000000

$corrPos
       xName    yName  x  y        corr
1    Factor1  Factor1  1 12 1.000000000
2    Factor1  Factor2  1 11 0.130866935
3    Factor1  Factor3  1 10 0.017468276
4    Factor1  Factor4  1  9 0.074277490
5    Factor1  Factor5  1  8 0.016378238
6    Factor1  Factor6  1  7 0.076300346
7    Factor1  Factor7  1  6 0.022718549
8    Factor1  Factor8  1  5 0.113239443
9    Factor1  Factor9  1  4 0.003804119
10   Factor1 Factor10  1  3 0.111243326
11   Factor1 Factor11  1  2 0.110775696
12   Factor1 Factor12  1  1 0.047765690
13   Factor2  Factor1  2 12 0.130866935
14   Factor2  Factor2  2 11 1.000000000
15   Factor2  Factor3  2 10 0.071393404
16   Factor2  Factor4  2  9 0.056759551
17   Factor2  Factor5  2  8 0.214619960
18   Factor2  Factor6  2  7 0.013051486
19   Factor2  Factor7  2  6 0.072149324
20   Factor2  Factor8  2  5 0.098284156
21   Factor2  Factor9  2  4 0.076641820
22   Factor2 Factor10  2  3 0.115147966
23   Factor2 Factor11  2  2 0.108797513
24   Factor2 Factor12  2  1 0.135751587
25   Factor3  Factor1  3 12 0.017468276
26   Factor3  Factor2  3 11 0.071393404
27   Factor3  Factor3  3 10 1.000000000
28   Factor3  Factor4  3  9 0.056013428
29   Factor3  Factor5  3  8 0.080481735
30   Factor3  Factor6  3  7 0.125627669
31   Factor3  Factor7  3  6 0.159880322
32   Factor3  Factor8  3  5 0.120297540
33   Factor3  Factor9  3  4 0.029645874
34   Factor3 Factor10  3  3 0.069636993
35   Factor3 Factor11  3  2 0.115097372
36   Factor3 Factor12  3  1 0.023908908
37   Factor4  Factor1  4 12 0.074277490
38   Factor4  Factor2  4 11 0.056759551
39   Factor4  Factor3  4 10 0.056013428
40   Factor4  Factor4  4  9 1.000000000
41   Factor4  Factor5  4  8 0.031114722
42   Factor4  Factor6  4  7 0.007031898
43   Factor4  Factor7  4  6 0.079907231
44   Factor4  Factor8  4  5 0.156821057
45   Factor4  Factor9  4  4 0.186709098
46   Factor4 Factor10  4  3 0.072813296
47   Factor4 Factor11  4  2 0.013526279
48   Factor4 Factor12  4  1 0.060370655
49   Factor5  Factor1  5 12 0.016378238
50   Factor5  Factor2  5 11 0.214619960
51   Factor5  Factor3  5 10 0.080481735
52   Factor5  Factor4  5  9 0.031114722
53   Factor5  Factor5  5  8 1.000000000
54   Factor5  Factor6  5  7 0.124148183
55   Factor5  Factor7  5  6 0.038729398
56   Factor5  Factor8  5  5 0.049680908
57   Factor5  Factor9  5  4 0.114935227
58   Factor5 Factor10  5  3 0.086394775
59   Factor5 Factor11  5  2 0.002370500
60   Factor5 Factor12  5  1 0.033594387
61   Factor6  Factor1  6 12 0.076300346
62   Factor6  Factor2  6 11 0.013051486
63   Factor6  Factor3  6 10 0.125627669
64   Factor6  Factor4  6  9 0.007031898
65   Factor6  Factor5  6  8 0.124148183
66   Factor6  Factor6  6  7 1.000000000
67   Factor6  Factor7  6  6 0.161274213
68   Factor6  Factor8  6  5 0.100619029
69   Factor6  Factor9  6  4 0.014710688
70   Factor6 Factor10  6  3 0.109973203
71   Factor6 Factor11  6  2 0.203137930
72   Factor6 Factor12  6  1 0.043589928
73   Factor7  Factor1  7 12 0.022718549
74   Factor7  Factor2  7 11 0.072149324
75   Factor7  Factor3  7 10 0.159880322
76   Factor7  Factor4  7  9 0.079907231
77   Factor7  Factor5  7  8 0.038729398
78   Factor7  Factor6  7  7 0.161274213
79   Factor7  Factor7  7  6 1.000000000
80   Factor7  Factor8  7  5 0.060000144
81   Factor7  Factor9  7  4 0.001436961
82   Factor7 Factor10  7  3 0.066554979
83   Factor7 Factor11  7  2 0.144149539
84   Factor7 Factor12  7  1 0.111618600
85   Factor8  Factor1  8 12 0.113239443
86   Factor8  Factor2  8 11 0.098284156
87   Factor8  Factor3  8 10 0.120297540
88   Factor8  Factor4  8  9 0.156821057
89   Factor8  Factor5  8  8 0.049680908
90   Factor8  Factor6  8  7 0.100619029
91   Factor8  Factor7  8  6 0.060000144
92   Factor8  Factor8  8  5 1.000000000
93   Factor8  Factor9  8  4 0.148761855
94   Factor8 Factor10  8  3 0.032788466
95   Factor8 Factor11  8  2 0.113923861
96   Factor8 Factor12  8  1 0.226330375
97   Factor9  Factor1  9 12 0.003804119
98   Factor9  Factor2  9 11 0.076641820
99   Factor9  Factor3  9 10 0.029645874
100  Factor9  Factor4  9  9 0.186709098
101  Factor9  Factor5  9  8 0.114935227
102  Factor9  Factor6  9  7 0.014710688
103  Factor9  Factor7  9  6 0.001436961
104  Factor9  Factor8  9  5 0.148761855
105  Factor9  Factor9  9  4 1.000000000
106  Factor9 Factor10  9  3 0.062887160
107  Factor9 Factor11  9  2 0.003465289
108  Factor9 Factor12  9  1 0.166556958
109 Factor10  Factor1 10 12 0.111243326
110 Factor10  Factor2 10 11 0.115147966
111 Factor10  Factor3 10 10 0.069636993
112 Factor10  Factor4 10  9 0.072813296
113 Factor10  Factor5 10  8 0.086394775
114 Factor10  Factor6 10  7 0.109973203
115 Factor10  Factor7 10  6 0.066554979
116 Factor10  Factor8 10  5 0.032788466
117 Factor10  Factor9 10  4 0.062887160
118 Factor10 Factor10 10  3 1.000000000
119 Factor10 Factor11 10  2 0.129479762
120 Factor10 Factor12 10  1 0.345308402
121 Factor11  Factor1 11 12 0.110775696
122 Factor11  Factor2 11 11 0.108797513
123 Factor11  Factor3 11 10 0.115097372
124 Factor11  Factor4 11  9 0.013526279
125 Factor11  Factor5 11  8 0.002370500
126 Factor11  Factor6 11  7 0.203137930
127 Factor11  Factor7 11  6 0.144149539
128 Factor11  Factor8 11  5 0.113923861
129 Factor11  Factor9 11  4 0.003465289
130 Factor11 Factor10 11  3 0.129479762
131 Factor11 Factor11 11  2 1.000000000
132 Factor11 Factor12 11  1 0.086251174
133 Factor12  Factor1 12 12 0.047765690
134 Factor12  Factor2 12 11 0.135751587
135 Factor12  Factor3 12 10 0.023908908
136 Factor12  Factor4 12  9 0.060370655
137 Factor12  Factor5 12  8 0.033594387
138 Factor12  Factor6 12  7 0.043589928
139 Factor12  Factor7 12  6 0.111618600
140 Factor12  Factor8 12  5 0.226330375
141 Factor12  Factor9 12  4 0.166556958
142 Factor12 Factor10 12  3 0.345308402
143 Factor12 Factor11 12  2 0.086251174
144 Factor12 Factor12 12  1 1.000000000

$arg
$arg$type
[1] "full"



Factor correlation for MOFAobject_factors13 :</code></pre>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-factor-correlation-4.png" class="img-fluid"><!-- --></p>
<pre><code>$corr
             Factor1    Factor2    Factor3     Factor4    Factor5     Factor6
Factor1  1.000000000 0.10883718 0.02917426 0.085260293 0.05260163 0.040176519
Factor2  0.108837178 1.00000000 0.07882284 0.066884655 0.09140162 0.031987942
Factor3  0.029174261 0.07882284 1.00000000 0.054893389 0.17344255 0.125723961
Factor4  0.085260293 0.06688466 0.05489339 1.000000000 0.07954139 0.004491018
Factor5  0.052601633 0.09140162 0.17344255 0.079541391 1.00000000 0.150530776
Factor6  0.040176519 0.03198794 0.12572396 0.004491018 0.15053078 1.000000000
Factor7  0.129748839 0.10854823 0.11531595 0.168131777 0.06216099 0.088442694
Factor8  0.003348177 0.06100529 0.04192253 0.189832742 0.01888140 0.027724751
Factor9  0.055722884 0.15658411 0.10144777 0.057101968 0.15676741 0.202352888
Factor10 0.082639157 0.16644617 0.02922537 0.016463176 0.04817191 0.137561570
Factor11 0.152130432 0.12762415 0.06846731 0.076921441 0.07620836 0.088377258
Factor12 0.120455467 0.07593366 0.12528261 0.003210706 0.16728397 0.188653526
Factor13 0.071766701 0.14256943 0.01514701 0.040767999 0.10439966 0.037237076
             Factor7     Factor8     Factor9    Factor10    Factor11
Factor1  0.129748839 0.003348177 0.055722884 0.082639157 0.152130432
Factor2  0.108548228 0.061005286 0.156584109 0.166446174 0.127624146
Factor3  0.115315954 0.041922532 0.101447768 0.029225374 0.068467309
Factor4  0.168131777 0.189832742 0.057101968 0.016463176 0.076921441
Factor5  0.062160990 0.018881401 0.156767407 0.048171908 0.076208363
Factor6  0.088442694 0.027724751 0.202352888 0.137561570 0.088377258
Factor7  1.000000000 0.164227752 0.042521176 0.041899150 0.009596608
Factor8  0.164227752 1.000000000 0.092514074 0.045638665 0.076533440
Factor9  0.042521176 0.092514074 1.000000000 0.378164816 0.088922487
Factor10 0.041899150 0.045638665 0.378164816 1.000000000 0.091136364
Factor11 0.009596608 0.076533440 0.088922487 0.091136364 1.000000000
Factor12 0.139105803 0.006732573 0.107210144 0.003900319 0.135472591
Factor13 0.257157654 0.179499453 0.007800134 0.046608605 0.345852914
            Factor12    Factor13
Factor1  0.120455467 0.071766701
Factor2  0.075933658 0.142569434
Factor3  0.125282611 0.015147008
Factor4  0.003210706 0.040767999
Factor5  0.167283968 0.104399659
Factor6  0.188653526 0.037237076
Factor7  0.139105803 0.257157654
Factor8  0.006732573 0.179499453
Factor9  0.107210144 0.007800134
Factor10 0.003900319 0.046608605
Factor11 0.135472591 0.345852914
Factor12 1.000000000 0.079050784
Factor13 0.079050784 1.000000000

$corrPos
       xName    yName  x  y        corr
1    Factor1  Factor1  1 13 1.000000000
2    Factor1  Factor2  1 12 0.108837178
3    Factor1  Factor3  1 11 0.029174261
4    Factor1  Factor4  1 10 0.085260293
5    Factor1  Factor5  1  9 0.052601633
6    Factor1  Factor6  1  8 0.040176519
7    Factor1  Factor7  1  7 0.129748839
8    Factor1  Factor8  1  6 0.003348177
9    Factor1  Factor9  1  5 0.055722884
10   Factor1 Factor10  1  4 0.082639157
11   Factor1 Factor11  1  3 0.152130432
12   Factor1 Factor12  1  2 0.120455467
13   Factor1 Factor13  1  1 0.071766701
14   Factor2  Factor1  2 13 0.108837178
15   Factor2  Factor2  2 12 1.000000000
16   Factor2  Factor3  2 11 0.078822838
17   Factor2  Factor4  2 10 0.066884655
18   Factor2  Factor5  2  9 0.091401617
19   Factor2  Factor6  2  8 0.031987942
20   Factor2  Factor7  2  7 0.108548228
21   Factor2  Factor8  2  6 0.061005286
22   Factor2  Factor9  2  5 0.156584109
23   Factor2 Factor10  2  4 0.166446174
24   Factor2 Factor11  2  3 0.127624146
25   Factor2 Factor12  2  2 0.075933658
26   Factor2 Factor13  2  1 0.142569434
27   Factor3  Factor1  3 13 0.029174261
28   Factor3  Factor2  3 12 0.078822838
29   Factor3  Factor3  3 11 1.000000000
30   Factor3  Factor4  3 10 0.054893389
31   Factor3  Factor5  3  9 0.173442546
32   Factor3  Factor6  3  8 0.125723961
33   Factor3  Factor7  3  7 0.115315954
34   Factor3  Factor8  3  6 0.041922532
35   Factor3  Factor9  3  5 0.101447768
36   Factor3 Factor10  3  4 0.029225374
37   Factor3 Factor11  3  3 0.068467309
38   Factor3 Factor12  3  2 0.125282611
39   Factor3 Factor13  3  1 0.015147008
40   Factor4  Factor1  4 13 0.085260293
41   Factor4  Factor2  4 12 0.066884655
42   Factor4  Factor3  4 11 0.054893389
43   Factor4  Factor4  4 10 1.000000000
44   Factor4  Factor5  4  9 0.079541391
45   Factor4  Factor6  4  8 0.004491018
46   Factor4  Factor7  4  7 0.168131777
47   Factor4  Factor8  4  6 0.189832742
48   Factor4  Factor9  4  5 0.057101968
49   Factor4 Factor10  4  4 0.016463176
50   Factor4 Factor11  4  3 0.076921441
51   Factor4 Factor12  4  2 0.003210706
52   Factor4 Factor13  4  1 0.040767999
53   Factor5  Factor1  5 13 0.052601633
54   Factor5  Factor2  5 12 0.091401617
55   Factor5  Factor3  5 11 0.173442546
56   Factor5  Factor4  5 10 0.079541391
57   Factor5  Factor5  5  9 1.000000000
58   Factor5  Factor6  5  8 0.150530776
59   Factor5  Factor7  5  7 0.062160990
60   Factor5  Factor8  5  6 0.018881401
61   Factor5  Factor9  5  5 0.156767407
62   Factor5 Factor10  5  4 0.048171908
63   Factor5 Factor11  5  3 0.076208363
64   Factor5 Factor12  5  2 0.167283968
65   Factor5 Factor13  5  1 0.104399659
66   Factor6  Factor1  6 13 0.040176519
67   Factor6  Factor2  6 12 0.031987942
68   Factor6  Factor3  6 11 0.125723961
69   Factor6  Factor4  6 10 0.004491018
70   Factor6  Factor5  6  9 0.150530776
71   Factor6  Factor6  6  8 1.000000000
72   Factor6  Factor7  6  7 0.088442694
73   Factor6  Factor8  6  6 0.027724751
74   Factor6  Factor9  6  5 0.202352888
75   Factor6 Factor10  6  4 0.137561570
76   Factor6 Factor11  6  3 0.088377258
77   Factor6 Factor12  6  2 0.188653526
78   Factor6 Factor13  6  1 0.037237076
79   Factor7  Factor1  7 13 0.129748839
80   Factor7  Factor2  7 12 0.108548228
81   Factor7  Factor3  7 11 0.115315954
82   Factor7  Factor4  7 10 0.168131777
83   Factor7  Factor5  7  9 0.062160990
84   Factor7  Factor6  7  8 0.088442694
85   Factor7  Factor7  7  7 1.000000000
86   Factor7  Factor8  7  6 0.164227752
87   Factor7  Factor9  7  5 0.042521176
88   Factor7 Factor10  7  4 0.041899150
89   Factor7 Factor11  7  3 0.009596608
90   Factor7 Factor12  7  2 0.139105803
91   Factor7 Factor13  7  1 0.257157654
92   Factor8  Factor1  8 13 0.003348177
93   Factor8  Factor2  8 12 0.061005286
94   Factor8  Factor3  8 11 0.041922532
95   Factor8  Factor4  8 10 0.189832742
96   Factor8  Factor5  8  9 0.018881401
97   Factor8  Factor6  8  8 0.027724751
98   Factor8  Factor7  8  7 0.164227752
99   Factor8  Factor8  8  6 1.000000000
100  Factor8  Factor9  8  5 0.092514074
101  Factor8 Factor10  8  4 0.045638665
102  Factor8 Factor11  8  3 0.076533440
103  Factor8 Factor12  8  2 0.006732573
104  Factor8 Factor13  8  1 0.179499453
105  Factor9  Factor1  9 13 0.055722884
106  Factor9  Factor2  9 12 0.156584109
107  Factor9  Factor3  9 11 0.101447768
108  Factor9  Factor4  9 10 0.057101968
109  Factor9  Factor5  9  9 0.156767407
110  Factor9  Factor6  9  8 0.202352888
111  Factor9  Factor7  9  7 0.042521176
112  Factor9  Factor8  9  6 0.092514074
113  Factor9  Factor9  9  5 1.000000000
114  Factor9 Factor10  9  4 0.378164816
115  Factor9 Factor11  9  3 0.088922487
116  Factor9 Factor12  9  2 0.107210144
117  Factor9 Factor13  9  1 0.007800134
118 Factor10  Factor1 10 13 0.082639157
119 Factor10  Factor2 10 12 0.166446174
120 Factor10  Factor3 10 11 0.029225374
121 Factor10  Factor4 10 10 0.016463176
122 Factor10  Factor5 10  9 0.048171908
123 Factor10  Factor6 10  8 0.137561570
124 Factor10  Factor7 10  7 0.041899150
125 Factor10  Factor8 10  6 0.045638665
126 Factor10  Factor9 10  5 0.378164816
127 Factor10 Factor10 10  4 1.000000000
128 Factor10 Factor11 10  3 0.091136364
129 Factor10 Factor12 10  2 0.003900319
130 Factor10 Factor13 10  1 0.046608605
131 Factor11  Factor1 11 13 0.152130432
132 Factor11  Factor2 11 12 0.127624146
133 Factor11  Factor3 11 11 0.068467309
134 Factor11  Factor4 11 10 0.076921441
135 Factor11  Factor5 11  9 0.076208363
136 Factor11  Factor6 11  8 0.088377258
137 Factor11  Factor7 11  7 0.009596608
138 Factor11  Factor8 11  6 0.076533440
139 Factor11  Factor9 11  5 0.088922487
140 Factor11 Factor10 11  4 0.091136364
141 Factor11 Factor11 11  3 1.000000000
142 Factor11 Factor12 11  2 0.135472591
143 Factor11 Factor13 11  1 0.345852914
144 Factor12  Factor1 12 13 0.120455467
145 Factor12  Factor2 12 12 0.075933658
146 Factor12  Factor3 12 11 0.125282611
147 Factor12  Factor4 12 10 0.003210706
148 Factor12  Factor5 12  9 0.167283968
149 Factor12  Factor6 12  8 0.188653526
150 Factor12  Factor7 12  7 0.139105803
151 Factor12  Factor8 12  6 0.006732573
152 Factor12  Factor9 12  5 0.107210144
153 Factor12 Factor10 12  4 0.003900319
154 Factor12 Factor11 12  3 0.135472591
155 Factor12 Factor12 12  2 1.000000000
156 Factor12 Factor13 12  1 0.079050784
157 Factor13  Factor1 13 13 0.071766701
158 Factor13  Factor2 13 12 0.142569434
159 Factor13  Factor3 13 11 0.015147008
160 Factor13  Factor4 13 10 0.040767999
161 Factor13  Factor5 13  9 0.104399659
162 Factor13  Factor6 13  8 0.037237076
163 Factor13  Factor7 13  7 0.257157654
164 Factor13  Factor8 13  6 0.179499453
165 Factor13  Factor9 13  5 0.007800134
166 Factor13 Factor10 13  4 0.046608605
167 Factor13 Factor11 13  3 0.345852914
168 Factor13 Factor12 13  2 0.079050784
169 Factor13 Factor13 13  1 1.000000000

$arg
$arg$type
[1] "full"



Factor correlation for MOFAobject_factors14 :</code></pre>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-factor-correlation-5.png" class="img-fluid"><!-- --></p>
<pre><code>$corr
              Factor1    Factor2    Factor3     Factor4    Factor5     Factor6
Factor1  1.0000000000 0.11185298 0.01166482 0.064482643 0.03367936 0.010979930
Factor2  0.1118529797 1.00000000 0.08063007 0.076694302 0.08476539 0.034442182
Factor3  0.0116648226 0.08063007 1.00000000 0.075753382 0.16694813 0.137581115
Factor4  0.0644826429 0.07669430 0.07575338 1.000000000 0.06189666 0.002388335
Factor5  0.0336793625 0.08476539 0.16694813 0.061896657 1.00000000 0.126417561
Factor6  0.0109799298 0.03444218 0.13758112 0.002388335 0.12641756 1.000000000
Factor7  0.0985672438 0.10806663 0.05313236 0.153207371 0.12019190 0.103861225
Factor8  0.0001492538 0.06390530 0.01582762 0.187413390 0.04540096 0.035061494
Factor9  0.0367626622 0.15454289 0.18353325 0.047322967 0.10633356 0.190863456
Factor10 0.1295273065 0.12187117 0.03549435 0.061902681 0.07053367 0.065640721
Factor11 0.1066522393 0.15522002 0.03090395 0.025450634 0.01821226 0.132326364
Factor12 0.1110742171 0.06065820 0.18297922 0.011941174 0.12808304 0.186585746
Factor13 0.0864242195 0.05493836 0.01793211 0.011617815 0.07990058 0.058273683
Factor14 0.0655191198 0.12864278 0.07154271 0.032180684 0.02269720 0.030729872
             Factor7      Factor8    Factor9   Factor10   Factor11   Factor12
Factor1  0.098567244 0.0001492538 0.03676266 0.12952731 0.10665224 0.11107422
Factor2  0.108066632 0.0639053047 0.15454289 0.12187117 0.15522002 0.06065820
Factor3  0.053132363 0.0158276211 0.18353325 0.03549435 0.03090395 0.18297922
Factor4  0.153207371 0.1874133899 0.04732297 0.06190268 0.02545063 0.01194117
Factor5  0.120191900 0.0454009649 0.10633356 0.07053367 0.01821226 0.12808304
Factor6  0.103861225 0.0350614936 0.19086346 0.06564072 0.13232636 0.18658575
Factor7  1.000000000 0.1592447782 0.03266840 0.03487607 0.07832920 0.16116934
Factor8  0.159244778 1.0000000000 0.07427074 0.06851454 0.04062926 0.00535282
Factor9  0.032668396 0.0742707366 1.00000000 0.11029803 0.33177415 0.13187051
Factor10 0.034876069 0.0685145399 0.11029803 1.00000000 0.09114700 0.08664029
Factor11 0.078329204 0.0406292553 0.33177415 0.09114700 1.00000000 0.07137104
Factor12 0.161169341 0.0053528205 0.13187051 0.08664029 0.07137104 1.00000000
Factor13 0.007438082 0.0517656301 0.18130530 0.14163951 0.13982486 0.23491372
Factor14 0.236442713 0.2054668627 0.02400050 0.28678063 0.02493496 0.08308732
            Factor13   Factor14
Factor1  0.086424220 0.06551912
Factor2  0.054938358 0.12864278
Factor3  0.017932109 0.07154271
Factor4  0.011617815 0.03218068
Factor5  0.079900578 0.02269720
Factor6  0.058273683 0.03072987
Factor7  0.007438082 0.23644271
Factor8  0.051765630 0.20546686
Factor9  0.181305301 0.02400050
Factor10 0.141639515 0.28678063
Factor11 0.139824860 0.02493496
Factor12 0.234913721 0.08308732
Factor13 1.000000000 0.26657263
Factor14 0.266572631 1.00000000

$corrPos
       xName    yName  x  y         corr
1    Factor1  Factor1  1 14 1.0000000000
2    Factor1  Factor2  1 13 0.1118529797
3    Factor1  Factor3  1 12 0.0116648226
4    Factor1  Factor4  1 11 0.0644826429
5    Factor1  Factor5  1 10 0.0336793625
6    Factor1  Factor6  1  9 0.0109799298
7    Factor1  Factor7  1  8 0.0985672438
8    Factor1  Factor8  1  7 0.0001492538
9    Factor1  Factor9  1  6 0.0367626622
10   Factor1 Factor10  1  5 0.1295273065
11   Factor1 Factor11  1  4 0.1066522393
12   Factor1 Factor12  1  3 0.1110742171
13   Factor1 Factor13  1  2 0.0864242195
14   Factor1 Factor14  1  1 0.0655191198
15   Factor2  Factor1  2 14 0.1118529797
16   Factor2  Factor2  2 13 1.0000000000
17   Factor2  Factor3  2 12 0.0806300670
18   Factor2  Factor4  2 11 0.0766943023
19   Factor2  Factor5  2 10 0.0847653892
20   Factor2  Factor6  2  9 0.0344421821
21   Factor2  Factor7  2  8 0.1080666322
22   Factor2  Factor8  2  7 0.0639053047
23   Factor2  Factor9  2  6 0.1545428910
24   Factor2 Factor10  2  5 0.1218711700
25   Factor2 Factor11  2  4 0.1552200212
26   Factor2 Factor12  2  3 0.0606581961
27   Factor2 Factor13  2  2 0.0549383584
28   Factor2 Factor14  2  1 0.1286427799
29   Factor3  Factor1  3 14 0.0116648226
30   Factor3  Factor2  3 13 0.0806300670
31   Factor3  Factor3  3 12 1.0000000000
32   Factor3  Factor4  3 11 0.0757533817
33   Factor3  Factor5  3 10 0.1669481285
34   Factor3  Factor6  3  9 0.1375811151
35   Factor3  Factor7  3  8 0.0531323628
36   Factor3  Factor8  3  7 0.0158276211
37   Factor3  Factor9  3  6 0.1835332499
38   Factor3 Factor10  3  5 0.0354943538
39   Factor3 Factor11  3  4 0.0309039477
40   Factor3 Factor12  3  3 0.1829792150
41   Factor3 Factor13  3  2 0.0179321092
42   Factor3 Factor14  3  1 0.0715427104
43   Factor4  Factor1  4 14 0.0644826429
44   Factor4  Factor2  4 13 0.0766943023
45   Factor4  Factor3  4 12 0.0757533817
46   Factor4  Factor4  4 11 1.0000000000
47   Factor4  Factor5  4 10 0.0618966567
48   Factor4  Factor6  4  9 0.0023883348
49   Factor4  Factor7  4  8 0.1532073708
50   Factor4  Factor8  4  7 0.1874133899
51   Factor4  Factor9  4  6 0.0473229668
52   Factor4 Factor10  4  5 0.0619026813
53   Factor4 Factor11  4  4 0.0254506337
54   Factor4 Factor12  4  3 0.0119411735
55   Factor4 Factor13  4  2 0.0116178147
56   Factor4 Factor14  4  1 0.0321806844
57   Factor5  Factor1  5 14 0.0336793625
58   Factor5  Factor2  5 13 0.0847653892
59   Factor5  Factor3  5 12 0.1669481285
60   Factor5  Factor4  5 11 0.0618966567
61   Factor5  Factor5  5 10 1.0000000000
62   Factor5  Factor6  5  9 0.1264175615
63   Factor5  Factor7  5  8 0.1201919004
64   Factor5  Factor8  5  7 0.0454009649
65   Factor5  Factor9  5  6 0.1063335633
66   Factor5 Factor10  5  5 0.0705336666
67   Factor5 Factor11  5  4 0.0182122645
68   Factor5 Factor12  5  3 0.1280830412
69   Factor5 Factor13  5  2 0.0799005782
70   Factor5 Factor14  5  1 0.0226971955
71   Factor6  Factor1  6 14 0.0109799298
72   Factor6  Factor2  6 13 0.0344421821
73   Factor6  Factor3  6 12 0.1375811151
74   Factor6  Factor4  6 11 0.0023883348
75   Factor6  Factor5  6 10 0.1264175615
76   Factor6  Factor6  6  9 1.0000000000
77   Factor6  Factor7  6  8 0.1038612253
78   Factor6  Factor8  6  7 0.0350614936
79   Factor6  Factor9  6  6 0.1908634561
80   Factor6 Factor10  6  5 0.0656407211
81   Factor6 Factor11  6  4 0.1323263645
82   Factor6 Factor12  6  3 0.1865857462
83   Factor6 Factor13  6  2 0.0582736832
84   Factor6 Factor14  6  1 0.0307298718
85   Factor7  Factor1  7 14 0.0985672438
86   Factor7  Factor2  7 13 0.1080666322
87   Factor7  Factor3  7 12 0.0531323628
88   Factor7  Factor4  7 11 0.1532073708
89   Factor7  Factor5  7 10 0.1201919004
90   Factor7  Factor6  7  9 0.1038612253
91   Factor7  Factor7  7  8 1.0000000000
92   Factor7  Factor8  7  7 0.1592447782
93   Factor7  Factor9  7  6 0.0326683961
94   Factor7 Factor10  7  5 0.0348760692
95   Factor7 Factor11  7  4 0.0783292041
96   Factor7 Factor12  7  3 0.1611693413
97   Factor7 Factor13  7  2 0.0074380817
98   Factor7 Factor14  7  1 0.2364427127
99   Factor8  Factor1  8 14 0.0001492538
100  Factor8  Factor2  8 13 0.0639053047
101  Factor8  Factor3  8 12 0.0158276211
102  Factor8  Factor4  8 11 0.1874133899
103  Factor8  Factor5  8 10 0.0454009649
104  Factor8  Factor6  8  9 0.0350614936
105  Factor8  Factor7  8  8 0.1592447782
106  Factor8  Factor8  8  7 1.0000000000
107  Factor8  Factor9  8  6 0.0742707366
108  Factor8 Factor10  8  5 0.0685145399
109  Factor8 Factor11  8  4 0.0406292553
110  Factor8 Factor12  8  3 0.0053528205
111  Factor8 Factor13  8  2 0.0517656301
112  Factor8 Factor14  8  1 0.2054668627
113  Factor9  Factor1  9 14 0.0367626622
114  Factor9  Factor2  9 13 0.1545428910
115  Factor9  Factor3  9 12 0.1835332499
116  Factor9  Factor4  9 11 0.0473229668
117  Factor9  Factor5  9 10 0.1063335633
118  Factor9  Factor6  9  9 0.1908634561
119  Factor9  Factor7  9  8 0.0326683961
120  Factor9  Factor8  9  7 0.0742707366
121  Factor9  Factor9  9  6 1.0000000000
122  Factor9 Factor10  9  5 0.1102980339
123  Factor9 Factor11  9  4 0.3317741539
124  Factor9 Factor12  9  3 0.1318705127
125  Factor9 Factor13  9  2 0.1813053011
126  Factor9 Factor14  9  1 0.0240004964
127 Factor10  Factor1 10 14 0.1295273065
128 Factor10  Factor2 10 13 0.1218711700
129 Factor10  Factor3 10 12 0.0354943538
130 Factor10  Factor4 10 11 0.0619026813
131 Factor10  Factor5 10 10 0.0705336666
132 Factor10  Factor6 10  9 0.0656407211
133 Factor10  Factor7 10  8 0.0348760692
134 Factor10  Factor8 10  7 0.0685145399
135 Factor10  Factor9 10  6 0.1102980339
136 Factor10 Factor10 10  5 1.0000000000
137 Factor10 Factor11 10  4 0.0911469953
138 Factor10 Factor12 10  3 0.0866402938
139 Factor10 Factor13 10  2 0.1416395147
140 Factor10 Factor14 10  1 0.2867806257
141 Factor11  Factor1 11 14 0.1066522393
142 Factor11  Factor2 11 13 0.1552200212
143 Factor11  Factor3 11 12 0.0309039477
144 Factor11  Factor4 11 11 0.0254506337
145 Factor11  Factor5 11 10 0.0182122645
146 Factor11  Factor6 11  9 0.1323263645
147 Factor11  Factor7 11  8 0.0783292041
148 Factor11  Factor8 11  7 0.0406292553
149 Factor11  Factor9 11  6 0.3317741539
150 Factor11 Factor10 11  5 0.0911469953
151 Factor11 Factor11 11  4 1.0000000000
152 Factor11 Factor12 11  3 0.0713710355
153 Factor11 Factor13 11  2 0.1398248598
154 Factor11 Factor14 11  1 0.0249349622
155 Factor12  Factor1 12 14 0.1110742171
156 Factor12  Factor2 12 13 0.0606581961
157 Factor12  Factor3 12 12 0.1829792150
158 Factor12  Factor4 12 11 0.0119411735
159 Factor12  Factor5 12 10 0.1280830412
160 Factor12  Factor6 12  9 0.1865857462
161 Factor12  Factor7 12  8 0.1611693413
162 Factor12  Factor8 12  7 0.0053528205
163 Factor12  Factor9 12  6 0.1318705127
164 Factor12 Factor10 12  5 0.0866402938
165 Factor12 Factor11 12  4 0.0713710355
166 Factor12 Factor12 12  3 1.0000000000
167 Factor12 Factor13 12  2 0.2349137211
168 Factor12 Factor14 12  1 0.0830873218
169 Factor13  Factor1 13 14 0.0864242195
170 Factor13  Factor2 13 13 0.0549383584
171 Factor13  Factor3 13 12 0.0179321092
172 Factor13  Factor4 13 11 0.0116178147
173 Factor13  Factor5 13 10 0.0799005782
174 Factor13  Factor6 13  9 0.0582736832
175 Factor13  Factor7 13  8 0.0074380817
176 Factor13  Factor8 13  7 0.0517656301
177 Factor13  Factor9 13  6 0.1813053011
178 Factor13 Factor10 13  5 0.1416395147
179 Factor13 Factor11 13  4 0.1398248598
180 Factor13 Factor12 13  3 0.2349137211
181 Factor13 Factor13 13  2 1.0000000000
182 Factor13 Factor14 13  1 0.2665726313
183 Factor14  Factor1 14 14 0.0655191198
184 Factor14  Factor2 14 13 0.1286427799
185 Factor14  Factor3 14 12 0.0715427104
186 Factor14  Factor4 14 11 0.0321806844
187 Factor14  Factor5 14 10 0.0226971955
188 Factor14  Factor6 14  9 0.0307298718
189 Factor14  Factor7 14  8 0.2364427127
190 Factor14  Factor8 14  7 0.2054668627
191 Factor14  Factor9 14  6 0.0240004964
192 Factor14 Factor10 14  5 0.2867806257
193 Factor14 Factor11 14  4 0.0249349622
194 Factor14 Factor12 14  3 0.0830873218
195 Factor14 Factor13 14  2 0.2665726313
196 Factor14 Factor14 14  1 1.0000000000

$arg
$arg$type
[1] "full"



Factor correlation for MOFAobject_factors15 :</code></pre>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-factor-correlation-6.png" class="img-fluid"><!-- --></p>
<pre><code>$corr
             Factor1    Factor2     Factor3     Factor4    Factor5     Factor6
Factor1  1.000000000 0.08265231 0.010075792 0.002227215 0.03311076 0.018265268
Factor2  0.082652314 1.00000000 0.056587357 0.072537652 0.04911838 0.065961632
Factor3  0.010075792 0.05658736 1.000000000 0.134917076 0.07755240 0.127838669
Factor4  0.002227215 0.07253765 0.134917076 1.000000000 0.11593823 0.079140133
Factor5  0.033110758 0.04911838 0.077552404 0.115938231 1.00000000 0.030723603
Factor6  0.018265268 0.06596163 0.127838669 0.079140133 0.03072360 1.000000000
Factor7  0.017936052 0.06879429 0.031382334 0.036244306 0.16432469 0.003883665
Factor8  0.114871210 0.06297853 0.069689993 0.061112689 0.18389448 0.114856637
Factor9  0.023949875 0.17190549 0.184043930 0.087368588 0.05676291 0.181184623
Factor10 0.108481580 0.14108798 0.087945892 0.158610179 0.10130856 0.132821439
Factor11 0.153009925 0.15109829 0.032695342 0.042017679 0.03566015 0.051961859
Factor12 0.104673557 0.14804224 0.050926829 0.011177712 0.01447160 0.125145012
Factor13 0.113364802 0.06801741 0.175931232 0.144320676 0.02001997 0.199766704
Factor14 0.076145980 0.07421608 0.009915111 0.046775764 0.02186389 0.088123556
Factor15 0.063166542 0.13290280 0.041653879 0.005051877 0.04436457 0.059158598
             Factor7    Factor8    Factor9   Factor10   Factor11   Factor12
Factor1  0.017936052 0.11487121 0.02394987 0.10848158 0.15300992 0.10467356
Factor2  0.068794289 0.06297853 0.17190549 0.14108798 0.15109829 0.14804224
Factor3  0.031382334 0.06968999 0.18404393 0.08794589 0.03269534 0.05092683
Factor4  0.036244306 0.06111269 0.08736859 0.15861018 0.04201768 0.01117771
Factor5  0.164324688 0.18389448 0.05676291 0.10130856 0.03566015 0.01447160
Factor6  0.003883665 0.11485664 0.18118462 0.13282144 0.05196186 0.12514501
Factor7  1.000000000 0.10022220 0.07407366 0.09099808 0.05342566 0.02618218
Factor8  0.100222200 1.00000000 0.03065698 0.09860674 0.07264727 0.07397032
Factor9  0.074073663 0.03065698 1.00000000 0.07505948 0.12308722 0.34636501
Factor10 0.090998081 0.09860674 0.07505948 1.00000000 0.11275268 0.03318288
Factor11 0.053425658 0.07264727 0.12308722 0.11275268 1.00000000 0.08486419
Factor12 0.026182176 0.07397032 0.34636501 0.03318288 0.08486419 1.00000000
Factor13 0.012671786 0.17308875 0.12239443 0.01194059 0.09545847 0.08687148
Factor14 0.037413247 0.04868704 0.17360623 0.10120211 0.13800822 0.15112277
Factor15 0.182823305 0.29087751 0.01452429 0.05058466 0.28434342 0.04574815
           Factor13    Factor14    Factor15
Factor1  0.11336480 0.076145980 0.063166542
Factor2  0.06801741 0.074216080 0.132902802
Factor3  0.17593123 0.009915111 0.041653879
Factor4  0.14432068 0.046775764 0.005051877
Factor5  0.02001997 0.021863886 0.044364572
Factor6  0.19976670 0.088123556 0.059158598
Factor7  0.01267179 0.037413247 0.182823305
Factor8  0.17308875 0.048687045 0.290877509
Factor9  0.12239443 0.173606227 0.014524292
Factor10 0.01194059 0.101202113 0.050584660
Factor11 0.09545847 0.138008217 0.284343422
Factor12 0.08687148 0.151122773 0.045748149
Factor13 1.00000000 0.244142008 0.072195321
Factor14 0.24414201 1.000000000 0.254973263
Factor15 0.07219532 0.254973263 1.000000000

$corrPos
       xName    yName  x  y        corr
1    Factor1  Factor1  1 15 1.000000000
2    Factor1  Factor2  1 14 0.082652314
3    Factor1  Factor3  1 13 0.010075792
4    Factor1  Factor4  1 12 0.002227215
5    Factor1  Factor5  1 11 0.033110758
6    Factor1  Factor6  1 10 0.018265268
7    Factor1  Factor7  1  9 0.017936052
8    Factor1  Factor8  1  8 0.114871210
9    Factor1  Factor9  1  7 0.023949875
10   Factor1 Factor10  1  6 0.108481580
11   Factor1 Factor11  1  5 0.153009925
12   Factor1 Factor12  1  4 0.104673557
13   Factor1 Factor13  1  3 0.113364802
14   Factor1 Factor14  1  2 0.076145980
15   Factor1 Factor15  1  1 0.063166542
16   Factor2  Factor1  2 15 0.082652314
17   Factor2  Factor2  2 14 1.000000000
18   Factor2  Factor3  2 13 0.056587357
19   Factor2  Factor4  2 12 0.072537652
20   Factor2  Factor5  2 11 0.049118384
21   Factor2  Factor6  2 10 0.065961632
22   Factor2  Factor7  2  9 0.068794289
23   Factor2  Factor8  2  8 0.062978525
24   Factor2  Factor9  2  7 0.171905491
25   Factor2 Factor10  2  6 0.141087978
26   Factor2 Factor11  2  5 0.151098290
27   Factor2 Factor12  2  4 0.148042238
28   Factor2 Factor13  2  3 0.068017412
29   Factor2 Factor14  2  2 0.074216080
30   Factor2 Factor15  2  1 0.132902802
31   Factor3  Factor1  3 15 0.010075792
32   Factor3  Factor2  3 14 0.056587357
33   Factor3  Factor3  3 13 1.000000000
34   Factor3  Factor4  3 12 0.134917076
35   Factor3  Factor5  3 11 0.077552404
36   Factor3  Factor6  3 10 0.127838669
37   Factor3  Factor7  3  9 0.031382334
38   Factor3  Factor8  3  8 0.069689993
39   Factor3  Factor9  3  7 0.184043930
40   Factor3 Factor10  3  6 0.087945892
41   Factor3 Factor11  3  5 0.032695342
42   Factor3 Factor12  3  4 0.050926829
43   Factor3 Factor13  3  3 0.175931232
44   Factor3 Factor14  3  2 0.009915111
45   Factor3 Factor15  3  1 0.041653879
46   Factor4  Factor1  4 15 0.002227215
47   Factor4  Factor2  4 14 0.072537652
48   Factor4  Factor3  4 13 0.134917076
49   Factor4  Factor4  4 12 1.000000000
50   Factor4  Factor5  4 11 0.115938231
51   Factor4  Factor6  4 10 0.079140133
52   Factor4  Factor7  4  9 0.036244306
53   Factor4  Factor8  4  8 0.061112689
54   Factor4  Factor9  4  7 0.087368588
55   Factor4 Factor10  4  6 0.158610179
56   Factor4 Factor11  4  5 0.042017679
57   Factor4 Factor12  4  4 0.011177712
58   Factor4 Factor13  4  3 0.144320676
59   Factor4 Factor14  4  2 0.046775764
60   Factor4 Factor15  4  1 0.005051877
61   Factor5  Factor1  5 15 0.033110758
62   Factor5  Factor2  5 14 0.049118384
63   Factor5  Factor3  5 13 0.077552404
64   Factor5  Factor4  5 12 0.115938231
65   Factor5  Factor5  5 11 1.000000000
66   Factor5  Factor6  5 10 0.030723603
67   Factor5  Factor7  5  9 0.164324688
68   Factor5  Factor8  5  8 0.183894483
69   Factor5  Factor9  5  7 0.056762906
70   Factor5 Factor10  5  6 0.101308562
71   Factor5 Factor11  5  5 0.035660154
72   Factor5 Factor12  5  4 0.014471602
73   Factor5 Factor13  5  3 0.020019972
74   Factor5 Factor14  5  2 0.021863886
75   Factor5 Factor15  5  1 0.044364572
76   Factor6  Factor1  6 15 0.018265268
77   Factor6  Factor2  6 14 0.065961632
78   Factor6  Factor3  6 13 0.127838669
79   Factor6  Factor4  6 12 0.079140133
80   Factor6  Factor5  6 11 0.030723603
81   Factor6  Factor6  6 10 1.000000000
82   Factor6  Factor7  6  9 0.003883665
83   Factor6  Factor8  6  8 0.114856637
84   Factor6  Factor9  6  7 0.181184623
85   Factor6 Factor10  6  6 0.132821439
86   Factor6 Factor11  6  5 0.051961859
87   Factor6 Factor12  6  4 0.125145012
88   Factor6 Factor13  6  3 0.199766704
89   Factor6 Factor14  6  2 0.088123556
90   Factor6 Factor15  6  1 0.059158598
91   Factor7  Factor1  7 15 0.017936052
92   Factor7  Factor2  7 14 0.068794289
93   Factor7  Factor3  7 13 0.031382334
94   Factor7  Factor4  7 12 0.036244306
95   Factor7  Factor5  7 11 0.164324688
96   Factor7  Factor6  7 10 0.003883665
97   Factor7  Factor7  7  9 1.000000000
98   Factor7  Factor8  7  8 0.100222200
99   Factor7  Factor9  7  7 0.074073663
100  Factor7 Factor10  7  6 0.090998081
101  Factor7 Factor11  7  5 0.053425658
102  Factor7 Factor12  7  4 0.026182176
103  Factor7 Factor13  7  3 0.012671786
104  Factor7 Factor14  7  2 0.037413247
105  Factor7 Factor15  7  1 0.182823305
106  Factor8  Factor1  8 15 0.114871210
107  Factor8  Factor2  8 14 0.062978525
108  Factor8  Factor3  8 13 0.069689993
109  Factor8  Factor4  8 12 0.061112689
110  Factor8  Factor5  8 11 0.183894483
111  Factor8  Factor6  8 10 0.114856637
112  Factor8  Factor7  8  9 0.100222200
113  Factor8  Factor8  8  8 1.000000000
114  Factor8  Factor9  8  7 0.030656980
115  Factor8 Factor10  8  6 0.098606739
116  Factor8 Factor11  8  5 0.072647274
117  Factor8 Factor12  8  4 0.073970316
118  Factor8 Factor13  8  3 0.173088752
119  Factor8 Factor14  8  2 0.048687045
120  Factor8 Factor15  8  1 0.290877509
121  Factor9  Factor1  9 15 0.023949875
122  Factor9  Factor2  9 14 0.171905491
123  Factor9  Factor3  9 13 0.184043930
124  Factor9  Factor4  9 12 0.087368588
125  Factor9  Factor5  9 11 0.056762906
126  Factor9  Factor6  9 10 0.181184623
127  Factor9  Factor7  9  9 0.074073663
128  Factor9  Factor8  9  8 0.030656980
129  Factor9  Factor9  9  7 1.000000000
130  Factor9 Factor10  9  6 0.075059479
131  Factor9 Factor11  9  5 0.123087220
132  Factor9 Factor12  9  4 0.346365007
133  Factor9 Factor13  9  3 0.122394431
134  Factor9 Factor14  9  2 0.173606227
135  Factor9 Factor15  9  1 0.014524292
136 Factor10  Factor1 10 15 0.108481580
137 Factor10  Factor2 10 14 0.141087978
138 Factor10  Factor3 10 13 0.087945892
139 Factor10  Factor4 10 12 0.158610179
140 Factor10  Factor5 10 11 0.101308562
141 Factor10  Factor6 10 10 0.132821439
142 Factor10  Factor7 10  9 0.090998081
143 Factor10  Factor8 10  8 0.098606739
144 Factor10  Factor9 10  7 0.075059479
145 Factor10 Factor10 10  6 1.000000000
146 Factor10 Factor11 10  5 0.112752681
147 Factor10 Factor12 10  4 0.033182877
148 Factor10 Factor13 10  3 0.011940591
149 Factor10 Factor14 10  2 0.101202113
150 Factor10 Factor15 10  1 0.050584660
151 Factor11  Factor1 11 15 0.153009925
152 Factor11  Factor2 11 14 0.151098290
153 Factor11  Factor3 11 13 0.032695342
154 Factor11  Factor4 11 12 0.042017679
155 Factor11  Factor5 11 11 0.035660154
156 Factor11  Factor6 11 10 0.051961859
157 Factor11  Factor7 11  9 0.053425658
158 Factor11  Factor8 11  8 0.072647274
159 Factor11  Factor9 11  7 0.123087220
160 Factor11 Factor10 11  6 0.112752681
161 Factor11 Factor11 11  5 1.000000000
162 Factor11 Factor12 11  4 0.084864186
163 Factor11 Factor13 11  3 0.095458469
164 Factor11 Factor14 11  2 0.138008217
165 Factor11 Factor15 11  1 0.284343422
166 Factor12  Factor1 12 15 0.104673557
167 Factor12  Factor2 12 14 0.148042238
168 Factor12  Factor3 12 13 0.050926829
169 Factor12  Factor4 12 12 0.011177712
170 Factor12  Factor5 12 11 0.014471602
171 Factor12  Factor6 12 10 0.125145012
172 Factor12  Factor7 12  9 0.026182176
173 Factor12  Factor8 12  8 0.073970316
174 Factor12  Factor9 12  7 0.346365007
175 Factor12 Factor10 12  6 0.033182877
176 Factor12 Factor11 12  5 0.084864186
177 Factor12 Factor12 12  4 1.000000000
178 Factor12 Factor13 12  3 0.086871476
179 Factor12 Factor14 12  2 0.151122773
180 Factor12 Factor15 12  1 0.045748149
181 Factor13  Factor1 13 15 0.113364802
182 Factor13  Factor2 13 14 0.068017412
183 Factor13  Factor3 13 13 0.175931232
184 Factor13  Factor4 13 12 0.144320676
185 Factor13  Factor5 13 11 0.020019972
186 Factor13  Factor6 13 10 0.199766704
187 Factor13  Factor7 13  9 0.012671786
188 Factor13  Factor8 13  8 0.173088752
189 Factor13  Factor9 13  7 0.122394431
190 Factor13 Factor10 13  6 0.011940591
191 Factor13 Factor11 13  5 0.095458469
192 Factor13 Factor12 13  4 0.086871476
193 Factor13 Factor13 13  3 1.000000000
194 Factor13 Factor14 13  2 0.244142008
195 Factor13 Factor15 13  1 0.072195321
196 Factor14  Factor1 14 15 0.076145980
197 Factor14  Factor2 14 14 0.074216080
198 Factor14  Factor3 14 13 0.009915111
199 Factor14  Factor4 14 12 0.046775764
200 Factor14  Factor5 14 11 0.021863886
201 Factor14  Factor6 14 10 0.088123556
202 Factor14  Factor7 14  9 0.037413247
203 Factor14  Factor8 14  8 0.048687045
204 Factor14  Factor9 14  7 0.173606227
205 Factor14 Factor10 14  6 0.101202113
206 Factor14 Factor11 14  5 0.138008217
207 Factor14 Factor12 14  4 0.151122773
208 Factor14 Factor13 14  3 0.244142008
209 Factor14 Factor14 14  2 1.000000000
210 Factor14 Factor15 14  1 0.254973263
211 Factor15  Factor1 15 15 0.063166542
212 Factor15  Factor2 15 14 0.132902802
213 Factor15  Factor3 15 13 0.041653879
214 Factor15  Factor4 15 12 0.005051877
215 Factor15  Factor5 15 11 0.044364572
216 Factor15  Factor6 15 10 0.059158598
217 Factor15  Factor7 15  9 0.182823305
218 Factor15  Factor8 15  8 0.290877509
219 Factor15  Factor9 15  7 0.014524292
220 Factor15 Factor10 15  6 0.050584660
221 Factor15 Factor11 15  5 0.284343422
222 Factor15 Factor12 15  4 0.045748149
223 Factor15 Factor13 15  3 0.072195321
224 Factor15 Factor14 15  2 0.254973263
225 Factor15 Factor15 15  1 1.000000000

$arg
$arg$type
[1] "full"</code></pre>
</section>
<section id="variance-decomposition" class="level2">
<h2 class="anchored" data-anchor-id="variance-decomposition">8.2 Variance decomposition</h2>
<div class="sourceCode" id="cb117" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb117-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (obj_name <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(mofa_objects)) {</span>
<span id="cb117-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Variance explained for"</span>, obj_name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">":</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb117-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_variance_explained</span>(mofa_objects[[obj_name]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_r2=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>))</span>
<span id="cb117-4">}</span></code></pre></div>
<pre><code>Variance explained for MOFAobject_factors10 :</code></pre>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-variance-decomposition-all-1.png" class="img-fluid"><!-- --></p>
<pre><code>Variance explained for MOFAobject_factors11 :</code></pre>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-variance-decomposition-all-2.png" class="img-fluid"><!-- --></p>
<pre><code>Variance explained for MOFAobject_factors12 :</code></pre>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-variance-decomposition-all-3.png" class="img-fluid"><!-- --></p>
<pre><code>Variance explained for MOFAobject_factors13 :</code></pre>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-variance-decomposition-all-4.png" class="img-fluid"><!-- --></p>
<pre><code>Variance explained for MOFAobject_factors14 :</code></pre>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-variance-decomposition-all-5.png" class="img-fluid"><!-- --></p>
<pre><code>Variance explained for MOFAobject_factors15 :</code></pre>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-variance-decomposition-all-6.png" class="img-fluid"><!-- --></p>
<p>Looks like the MOFA object with Factor count of <code>10</code> is the most informative. It shows a variance range in methylation (i.e.&nbsp;variation percentage isn’t pegged at the max/min colors across all factors), as well as some possible effects in Factor 6 within <code>gene</code>, <code>transcript</code>, and <code>lncRNA</code>.</p>
</section>
</section>
<section id="factor-6-characterization" class="level1">
<h1>9 FACTOR 6 CHARACTERIZATION</h1>
<section id="factor-6-variance-decomposition" class="level2">
<h2 class="anchored" data-anchor-id="factor-6-variance-decomposition">9.1 Factor 6 Variance decomposition</h2>
<p>Let’s reduce the <code>max_r2</code> value (percent variation) to see if we can better see an effect from the methylation view on the other views.</p>
<div class="sourceCode" id="cb124" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb124-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Variance explained for MOFAobject_factors10:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>Variance explained for MOFAobject_factors10:</code></pre>
<div class="sourceCode" id="cb126" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb126-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_variance_explained</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_r2=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-variance-decomposition-10factors-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="plot-variance-explained-per-view" class="level2">
<h2 class="anchored" data-anchor-id="plot-variance-explained-per-view">9.2 Plot variance explained per view</h2>
<div class="sourceCode" id="cb127" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb127-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Variance explained per view for MOFAobject_factors10:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>Variance explained per view for MOFAobject_factors10:</code></pre>
<div class="sourceCode" id="cb129" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb129-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_variance_explained</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot_total =</span> T)[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]])</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-variance-explained-view-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="print-percent-variance-explained-per-view-as-a-table" class="level2">
<h2 class="anchored" data-anchor-id="print-percent-variance-explained-per-view-as-a-table">9.3 Print percent variance explained per view as a table</h2>
<div class="sourceCode" id="cb130" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb130-1">var_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_variance_explained</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot_total =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb130-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the ggplot object</span></span>
<span id="cb130-3">var_gg <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> var_list[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]</span>
<span id="cb130-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the data frame from the ggplot object</span></span>
<span id="cb130-5">var_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> var_gg<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>data</span>
<span id="cb130-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(var_df)</span></code></pre></div>
<pre><code>         R2        view  group
1  0.410676        gene group1
2  0.410676  transcript group1
3  1.506209      lncRNA group1
4 94.758272 methylation group1</code></pre>
</section>
<section id="plot-factor-6-values" class="level2">
<h2 class="anchored" data-anchor-id="plot-factor-6-values">9.4 Plot Factor 6 values</h2>
<div class="sourceCode" id="cb132" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb132-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_factor</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], </span>
<span id="cb132-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factors =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, </span>
<span id="cb132-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color_by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Factor6"</span></span>
<span id="cb132-4">)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-factor-values-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="plot-factor-6-weights" class="level2">
<h2 class="anchored" data-anchor-id="plot-factor-6-weights">9.5 Plot Factor 6 weights</h2>
<section id="genes" class="level3">
<h3 class="anchored" data-anchor-id="genes">9.5.1 Genes</h3>
<div class="sourceCode" id="cb133" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb133-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_weights</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]],</span>
<span id="cb133-2"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene"</span>,</span>
<span id="cb133-3"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,</span>
<span id="cb133-4"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nfeatures =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Top number of features to highlight</span></span>
<span id="cb133-5"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> T           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Scale weights from -1 to 1</span></span>
<span id="cb133-6">)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-gene-weights-1.png" class="img-fluid"><!-- --></p>
<section id="plot-top-weights" class="level4">
<h4 class="anchored" data-anchor-id="plot-top-weights">9.5.1.1 Plot top weights</h4>
<div class="sourceCode" id="cb134" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb134-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_top_weights</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]],</span>
<span id="cb134-2"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene"</span>,</span>
<span id="cb134-3"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,</span>
<span id="cb134-4"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nfeatures =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Top number of features to highlight</span></span>
<span id="cb134-5"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> T           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Scale weights from -1 to 1</span></span>
<span id="cb134-6">)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-top-gene-weights-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="print-top-10-weights" class="level4">
<h4 class="anchored" data-anchor-id="print-top-10-weights">9.5.1.2 Print top 10 weights</h4>
<div class="sourceCode" id="cb135" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb135-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print top 10 gene features (by absolute weight) and their actual weights for factor 6</span></span>
<span id="cb135-2">weights <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_weights</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb135-3"></span>
<span id="cb135-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the matrix from the list</span></span>
<span id="cb135-5">weights_vec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> weights[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]][,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb135-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(weights_vec) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(weights[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]])</span>
<span id="cb135-7">top_n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb135-8">top_features <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(weights_vec), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decreasing =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>top_n]</span>
<span id="cb135-9">top_feature_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(top_features)</span>
<span id="cb135-10">top_feature_weights <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> weights_vec[top_feature_names]</span>
<span id="cb135-11">top_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Feature =</span> top_feature_names, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Weight =</span> top_feature_weights)</span>
<span id="cb135-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(top_df)</span></code></pre></div>
<pre><code>              Feature   Weight
FUN_035309 FUN_035309 11.96884
FUN_002351 FUN_002351 11.81707
FUN_032672 FUN_032672 11.14206
FUN_025653 FUN_025653 10.56827
FUN_036932 FUN_036932 10.55383
FUN_011499 FUN_011499 10.45472
FUN_041949 FUN_041949 10.40296
FUN_036512 FUN_036512 10.35465
FUN_007766 FUN_007766 10.20227
FUN_010626 FUN_010626 10.18359</code></pre>
</section>
<section id="plot-heatmap" class="level4">
<h4 class="anchored" data-anchor-id="plot-heatmap">9.5.1.3 Plot heatmap</h4>
<div class="sourceCode" id="cb137" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb137-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_data_heatmap</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], </span>
<span id="cb137-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene"</span>,</span>
<span id="cb137-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,  </span>
<span id="cb137-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>,</span>
<span id="cb137-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">denoise =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb137-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cluster_rows =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cluster_cols =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb137-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show_rownames =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show_colnames =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb137-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row"</span></span>
<span id="cb137-9">)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-heatmap-gene-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="plot-top-gene" class="level4">
<h4 class="anchored" data-anchor-id="plot-top-gene">9.5.1.4 Plot top gene</h4>
<div class="sourceCode" id="cb138" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb138-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Programmatically get top gene by absolute weight for factor 6</span></span>
<span id="cb138-2">weights <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_weights</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb138-3">weights_vec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> weights[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]][,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb138-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(weights_vec) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(weights[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]])</span>
<span id="cb138-5">top_n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb138-6">top_features <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(weights_vec), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decreasing =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>top_n]</span>
<span id="cb138-7">top_gene <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(top_features)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb138-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top gene by absolute weight for factor 6:"</span>, top_gene, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>Top gene by absolute weight for factor 6: FUN_035309 </code></pre>
<div class="sourceCode" id="cb140" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb140-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_factor</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], </span>
<span id="cb140-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factors =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, </span>
<span id="cb140-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color_by =</span> top_gene,</span>
<span id="cb140-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">add_violin =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb140-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dodge =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb140-6">)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-top-gene-factor6-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="plot-gene-by-transcript-scatter" class="level4">
<h4 class="anchored" data-anchor-id="plot-gene-by-transcript-scatter">9.5.1.5 Plot gene by transcript scatter</h4>
<div class="sourceCode" id="cb141" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb141-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_data_scatter</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], </span>
<span id="cb141-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript"</span>,</span>
<span id="cb141-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,  </span>
<span id="cb141-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,</span>
<span id="cb141-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sign =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"positive"</span>,</span>
<span id="cb141-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color_by =</span> top_gene</span>
<span id="cb141-7">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Transcript expression"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-top-gene-by-transcript-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="plot-gene-by-lncrna-scatter" class="level4">
<h4 class="anchored" data-anchor-id="plot-gene-by-lncrna-scatter">9.5.1.6 Plot gene by lncRNA scatter</h4>
<div class="sourceCode" id="cb142" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb142-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_data_scatter</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], </span>
<span id="cb142-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lncRNA"</span>,</span>
<span id="cb142-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,  </span>
<span id="cb142-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,</span>
<span id="cb142-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sign =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"positive"</span>,</span>
<span id="cb142-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color_by =</span> top_gene</span>
<span id="cb142-7">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lncRNA expression"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-top-gene-by-lncRNA-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="plot-gene-by-methylation-scatter" class="level4">
<h4 class="anchored" data-anchor-id="plot-gene-by-methylation-scatter">9.5.1.7 Plot gene by methylation scatter</h4>
<div class="sourceCode" id="cb143" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb143-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_data_scatter</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], </span>
<span id="cb143-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"methylation"</span>,</span>
<span id="cb143-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,  </span>
<span id="cb143-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,</span>
<span id="cb143-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sign =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"positive"</span>,</span>
<span id="cb143-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color_by =</span> top_gene</span>
<span id="cb143-7">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Methylated CpG counts"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-top-gene-by-methylation-1.png" class="img-fluid"><!-- --></p>
</section>
</section>
<section id="transcripts" class="level3">
<h3 class="anchored" data-anchor-id="transcripts">9.5.2 Transcripts</h3>
<div class="sourceCode" id="cb144" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb144-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_weights</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]],</span>
<span id="cb144-2"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript"</span>,</span>
<span id="cb144-3"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,</span>
<span id="cb144-4"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nfeatures =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Top number of features to highlight</span></span>
<span id="cb144-5"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> T           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Scale weights from -1 to 1</span></span>
<span id="cb144-6">)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-transcripts-weights-1.png" class="img-fluid"><!-- --></p>
<section id="plot-top-weights-1" class="level4">
<h4 class="anchored" data-anchor-id="plot-top-weights-1">9.5.2.1 Plot top weights</h4>
<div class="sourceCode" id="cb145" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb145-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_top_weights</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]],</span>
<span id="cb145-2"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript"</span>,</span>
<span id="cb145-3"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,</span>
<span id="cb145-4"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nfeatures =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Top number of features to highlight</span></span>
<span id="cb145-5"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> T           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Scale weights from -1 to 1</span></span>
<span id="cb145-6">)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-top-transcripts-weights-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="print-top-10-weights-1" class="level4">
<h4 class="anchored" data-anchor-id="print-top-10-weights-1">9.5.2.2 Print top 10 weights</h4>
<div class="sourceCode" id="cb146" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb146-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print top 10 transcripts features (by absolute weight) and their actual weights for factor 6</span></span>
<span id="cb146-2">weights <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_weights</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb146-3"></span>
<span id="cb146-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the matrix from the list</span></span>
<span id="cb146-5">weights_vec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> weights[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]][,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb146-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(weights_vec) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(weights[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]])</span>
<span id="cb146-7">top_n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb146-8">top_features <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(weights_vec), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decreasing =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>top_n]</span>
<span id="cb146-9">top_feature_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(top_features)</span>
<span id="cb146-10">top_feature_weights <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> weights_vec[top_feature_names]</span>
<span id="cb146-11">top_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Feature =</span> top_feature_names, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Weight =</span> top_feature_weights)</span>
<span id="cb146-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(top_df)</span></code></pre></div>
<pre><code>                    Feature   Weight
FUN_035309-T1 FUN_035309-T1 11.96884
FUN_002351-T1 FUN_002351-T1 11.81707
FUN_032672-T1 FUN_032672-T1 11.14206
FUN_025653-T1 FUN_025653-T1 10.56827
FUN_036932-T1 FUN_036932-T1 10.55383
FUN_011499-T1 FUN_011499-T1 10.45472
FUN_041949-T1 FUN_041949-T1 10.40296
FUN_036512-T1 FUN_036512-T1 10.35465
FUN_007766-T1 FUN_007766-T1 10.20227
FUN_010626-T1 FUN_010626-T1 10.18359</code></pre>
</section>
<section id="plot-heatmap-1" class="level4">
<h4 class="anchored" data-anchor-id="plot-heatmap-1">9.5.2.3 Plot heatmap</h4>
<div class="sourceCode" id="cb148" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb148-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_data_heatmap</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], </span>
<span id="cb148-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript"</span>,</span>
<span id="cb148-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,  </span>
<span id="cb148-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>,</span>
<span id="cb148-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">denoise =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb148-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cluster_rows =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cluster_cols =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb148-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show_rownames =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show_colnames =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb148-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row"</span></span>
<span id="cb148-9">)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-heatmap-transcripts-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="plot-top-transcript" class="level4">
<h4 class="anchored" data-anchor-id="plot-top-transcript">9.5.2.4 Plot top transcript</h4>
<div class="sourceCode" id="cb149" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb149-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Programmatically get top transcripts by absolute weight for factor 6</span></span>
<span id="cb149-2">weights <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_weights</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb149-3">weights_vec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> weights[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]][,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb149-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(weights_vec) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(weights[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]])</span>
<span id="cb149-5">top_n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb149-6">top_features <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(weights_vec), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decreasing =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>top_n]</span>
<span id="cb149-7">top_transcript <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(top_features)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb149-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top transcript by absolute weight for factor 6:"</span>, top_transcript, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>Top transcript by absolute weight for factor 6: FUN_035309-T1 </code></pre>
<div class="sourceCode" id="cb151" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb151-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_factor</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], </span>
<span id="cb151-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factors =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, </span>
<span id="cb151-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color_by =</span> top_transcript,</span>
<span id="cb151-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">add_violin =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb151-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dodge =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb151-6">)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-top-transcripts-factor01-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="plot-transcript-by-gene-scatter" class="level4">
<h4 class="anchored" data-anchor-id="plot-transcript-by-gene-scatter">9.5.2.5 Plot transcript by gene scatter</h4>
<div class="sourceCode" id="cb152" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb152-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_data_scatter</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], </span>
<span id="cb152-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene"</span>,</span>
<span id="cb152-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,  </span>
<span id="cb152-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,</span>
<span id="cb152-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sign =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"positive"</span>,</span>
<span id="cb152-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color_by =</span> top_transcript</span>
<span id="cb152-7">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Transcript expression"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-top-transcript-by-gene-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="plot-transcript-by-lncrna-scatter" class="level4">
<h4 class="anchored" data-anchor-id="plot-transcript-by-lncrna-scatter">9.5.2.6 Plot transcript by lncRNA scatter</h4>
<div class="sourceCode" id="cb153" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb153-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_data_scatter</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], </span>
<span id="cb153-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lncRNA"</span>,</span>
<span id="cb153-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,  </span>
<span id="cb153-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,</span>
<span id="cb153-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sign =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"positive"</span>,</span>
<span id="cb153-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color_by =</span> top_transcript</span>
<span id="cb153-7">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lncRNA expression"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-top-transcript-by-lncRNA-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="plot-transcript-by-methylation-scatter" class="level4">
<h4 class="anchored" data-anchor-id="plot-transcript-by-methylation-scatter">9.5.2.7 Plot transcript by methylation scatter</h4>
<div class="sourceCode" id="cb154" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb154-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_data_scatter</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], </span>
<span id="cb154-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"methylation"</span>,</span>
<span id="cb154-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,  </span>
<span id="cb154-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,</span>
<span id="cb154-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sign =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"positive"</span>,</span>
<span id="cb154-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color_by =</span> top_transcript</span>
<span id="cb154-7">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Methylated CpG counts"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-top-transcript-by-methylation-1.png" class="img-fluid"><!-- --></p>
</section>
</section>
<section id="lncrna" class="level3">
<h3 class="anchored" data-anchor-id="lncrna">9.5.3 lncRNA</h3>
<section id="plot-weights" class="level4">
<h4 class="anchored" data-anchor-id="plot-weights">9.5.3.1 Plot weights</h4>
<div class="sourceCode" id="cb155" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb155-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_weights</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], </span>
<span id="cb155-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lncRNA"</span>, </span>
<span id="cb155-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, </span>
<span id="cb155-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nfeatures =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb155-5">)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-lncRNA-weights-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="plot-top-weights-2" class="level4">
<h4 class="anchored" data-anchor-id="plot-top-weights-2">9.5.3.2 Plot top weights</h4>
<div class="sourceCode" id="cb156" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb156-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_top_weights</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]],</span>
<span id="cb156-2"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lncRNA"</span>,</span>
<span id="cb156-3"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,</span>
<span id="cb156-4"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nfeatures =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Top number of features to highlight</span></span>
<span id="cb156-5"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> T           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Scale weights from -1 to 1</span></span>
<span id="cb156-6">)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-top-lncRNA-weights-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="print-top-10-weights-2" class="level4">
<h4 class="anchored" data-anchor-id="print-top-10-weights-2">9.5.3.3 Print top 10 weights</h4>
<div class="sourceCode" id="cb157" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb157-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print top 10 lncRNA features (by absolute weight) and their actual weights for factor 6</span></span>
<span id="cb157-2">weights <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_weights</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lncRNA"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb157-3"></span>
<span id="cb157-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the matrix from the list</span></span>
<span id="cb157-5">weights_vec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> weights[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]][,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb157-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(weights_vec) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(weights[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]])</span>
<span id="cb157-7">top_n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb157-8">top_features <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(weights_vec), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decreasing =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>top_n]</span>
<span id="cb157-9">top_feature_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(top_features)</span>
<span id="cb157-10">top_feature_weights <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> weights_vec[top_feature_names]</span>
<span id="cb157-11">top_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Feature =</span> top_feature_names, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Weight =</span> top_feature_weights)</span>
<span id="cb157-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(top_df)</span></code></pre></div>
<pre><code>                  Feature    Weight
lncRNA_33354 lncRNA_33354  31.58608
lncRNA_10790 lncRNA_10790 -30.48354
lncRNA_10791 lncRNA_10791 -30.48354
lncRNA_46600 lncRNA_46600  30.17580
lncRNA_22684 lncRNA_22684 -29.42667
lncRNA_13576 lncRNA_13576  29.42543
lncRNA_2530   lncRNA_2530  29.14041
lncRNA_50019 lncRNA_50019 -29.02657
lncRNA_46598 lncRNA_46598  28.83803
lncRNA_3048   lncRNA_3048  28.63909</code></pre>
</section>
<section id="plot-heatmap-2" class="level4">
<h4 class="anchored" data-anchor-id="plot-heatmap-2">9.5.3.4 Plot heatmap</h4>
<div class="sourceCode" id="cb159" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb159-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_data_heatmap</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], </span>
<span id="cb159-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lncRNA"</span>,</span>
<span id="cb159-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,  </span>
<span id="cb159-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>,</span>
<span id="cb159-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">denoise =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb159-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cluster_rows =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cluster_cols =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb159-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show_rownames =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show_colnames =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb159-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row"</span></span>
<span id="cb159-9">)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-heatmap-lncRNA-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="plot-top-lncrna" class="level4">
<h4 class="anchored" data-anchor-id="plot-top-lncrna">9.5.3.5 Plot top lncRNA</h4>
<div class="sourceCode" id="cb160" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb160-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Programmatically get top lncRNA by absolute weight for factor 6</span></span>
<span id="cb160-2">weights <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_weights</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lncRNA"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb160-3">weights_vec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> weights[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]][,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb160-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(weights_vec) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(weights[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]])</span>
<span id="cb160-5">top_n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb160-6">top_features <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(weights_vec), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decreasing =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>top_n]</span>
<span id="cb160-7">top_lncRNA <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(top_features)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb160-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top lncRNA by absolute weight for factor 6:"</span>, top_lncRNA, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>Top lncRNA by absolute weight for factor 6: lncRNA_33354 </code></pre>
<div class="sourceCode" id="cb162" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb162-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_factor</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], </span>
<span id="cb162-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factors =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, </span>
<span id="cb162-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color_by =</span> top_lncRNA,</span>
<span id="cb162-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">add_violin =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb162-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dodge =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb162-6">)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-top-lncRNA-factor01-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="plot-lncrna-by-gene-scatter" class="level4">
<h4 class="anchored" data-anchor-id="plot-lncrna-by-gene-scatter">9.5.3.6 Plot lncRNA by gene scatter</h4>
<div class="sourceCode" id="cb163" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb163-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_data_scatter</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], </span>
<span id="cb163-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene"</span>,</span>
<span id="cb163-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,  </span>
<span id="cb163-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,</span>
<span id="cb163-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sign =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"positive"</span>,</span>
<span id="cb163-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color_by =</span> top_lncRNA</span>
<span id="cb163-7">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gene expression"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-top-lncRNA-by-gene-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="plot-lncrna-by-transcript-scatter" class="level4">
<h4 class="anchored" data-anchor-id="plot-lncrna-by-transcript-scatter">9.5.3.7 Plot lncRNA by transcript scatter</h4>
<div class="sourceCode" id="cb164" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb164-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_data_scatter</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], </span>
<span id="cb164-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript"</span>,</span>
<span id="cb164-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,  </span>
<span id="cb164-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,</span>
<span id="cb164-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sign =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"positive"</span>,</span>
<span id="cb164-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color_by =</span> top_lncRNA</span>
<span id="cb164-7">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Transcript expression"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-top-lncRNA-by-transcript-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="plot-lncrna-by-methylation-scatter" class="level4">
<h4 class="anchored" data-anchor-id="plot-lncrna-by-methylation-scatter">9.5.3.8 Plot lncRNA by methylation scatter</h4>
<div class="sourceCode" id="cb165" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb165-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_data_scatter</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], </span>
<span id="cb165-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"methylation"</span>,</span>
<span id="cb165-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,  </span>
<span id="cb165-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,</span>
<span id="cb165-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sign =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"positive"</span>,</span>
<span id="cb165-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color_by =</span> top_lncRNA</span>
<span id="cb165-7">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Methylated CpG counts"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-top-lncRNA-by-methylation-1.png" class="img-fluid"><!-- --></p>
</section>
</section>
<section id="methylation" class="level3">
<h3 class="anchored" data-anchor-id="methylation">9.5.4 Methylation</h3>
<section id="plot-weights-1" class="level4">
<h4 class="anchored" data-anchor-id="plot-weights-1">9.5.4.1 Plot weights</h4>
<div class="sourceCode" id="cb166" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb166-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_weights</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], </span>
<span id="cb166-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"methylation"</span>, </span>
<span id="cb166-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, </span>
<span id="cb166-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nfeatures =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb166-5">)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-methylation-weights-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="plot-top-weights-3" class="level4">
<h4 class="anchored" data-anchor-id="plot-top-weights-3">9.5.4.2 Plot top weights</h4>
<div class="sourceCode" id="cb167" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb167-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_top_weights</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]],</span>
<span id="cb167-2"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"methylation"</span>,</span>
<span id="cb167-3"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,</span>
<span id="cb167-4"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nfeatures =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Top number of features to highlight</span></span>
<span id="cb167-5"> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> T           <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Scale weights from -1 to 1</span></span>
<span id="cb167-6">)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-top-methylation-weights-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="print-top-10-weights-3" class="level4">
<h4 class="anchored" data-anchor-id="print-top-10-weights-3">9.5.4.3 Print top 10 weights</h4>
<div class="sourceCode" id="cb168" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb168-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Print top 10 methylation features (by absolute weight) and their actual weights for factor 6</span></span>
<span id="cb168-2">weights <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_weights</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"methylation"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb168-3"></span>
<span id="cb168-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract the matrix from the list</span></span>
<span id="cb168-5">weights_vec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> weights[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]][,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb168-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(weights_vec) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(weights[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]])</span>
<span id="cb168-7">top_n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb168-8">top_features <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(weights_vec), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decreasing =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>top_n]</span>
<span id="cb168-9">top_feature_names <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(top_features)</span>
<span id="cb168-10">top_feature_weights <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> weights_vec[top_feature_names]</span>
<span id="cb168-11">top_df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Feature =</span> top_feature_names, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Weight =</span> top_feature_weights)</span>
<span id="cb168-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(top_df)</span></code></pre></div>
<pre><code>                                        Feature    Weight
CpG_ptg000047l_8165595   CpG_ptg000047l_8165595 -1.450179
CpG_ptg000022l_8261039   CpG_ptg000022l_8261039 -1.382780
CpG_ptg000011l_8087502   CpG_ptg000011l_8087502 -1.375819
CpG_ptg000002l_15471402 CpG_ptg000002l_15471402 -1.371485
CpG_ntLink_8_27585833     CpG_ntLink_8_27585833 -1.370763
CpG_ptg000008l_11026672 CpG_ptg000008l_11026672 -1.361102
CpG_ntLink_6_4139446       CpG_ntLink_6_4139446  1.354538
CpG_ptg000017l_2063994   CpG_ptg000017l_2063994 -1.352967
CpG_ptg000026l_8778144   CpG_ptg000026l_8778144  1.352686
CpG_ptg000017l_3148268   CpG_ptg000017l_3148268  1.351798</code></pre>
</section>
<section id="plot-heatmap-3" class="level4">
<h4 class="anchored" data-anchor-id="plot-heatmap-3">9.5.4.4 Plot heatmap</h4>
<div class="sourceCode" id="cb170" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb170-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_data_heatmap</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], </span>
<span id="cb170-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"methylation"</span>,</span>
<span id="cb170-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,  </span>
<span id="cb170-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>,</span>
<span id="cb170-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">denoise =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb170-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cluster_rows =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cluster_cols =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb170-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show_rownames =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show_colnames =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb170-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"row"</span></span>
<span id="cb170-9">)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-heatmap-methylation-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="plot-top-methylation" class="level4">
<h4 class="anchored" data-anchor-id="plot-top-methylation">9.5.4.5 Plot top methylation</h4>
<div class="sourceCode" id="cb171" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb171-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Programmatically get top methylation by absolute weight for factor 6</span></span>
<span id="cb171-2">weights <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_weights</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"methylation"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb171-3">weights_vec <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> weights[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]][,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb171-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(weights_vec) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(weights[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]])</span>
<span id="cb171-5">top_n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb171-6">top_features <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(weights_vec), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decreasing =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span>top_n]</span>
<span id="cb171-7">top_methylation <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(top_features)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb171-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Top methylation by absolute weight for factor 6:"</span>, top_methylation, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span></code></pre></div>
<pre><code>Top methylation by absolute weight for factor 6: CpG_ptg000047l_8165595 </code></pre>
<div class="sourceCode" id="cb173" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb173-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_factor</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], </span>
<span id="cb173-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factors =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, </span>
<span id="cb173-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color_by =</span> top_methylation,</span>
<span id="cb173-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">add_violin =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb173-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dodge =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb173-6">)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-top-methylation-factor6-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="plot-methylation-by-gene-scatter" class="level4">
<h4 class="anchored" data-anchor-id="plot-methylation-by-gene-scatter">9.5.4.6 Plot methylation by gene scatter</h4>
<div class="sourceCode" id="cb174" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb174-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_data_scatter</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], </span>
<span id="cb174-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gene"</span>,</span>
<span id="cb174-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,  </span>
<span id="cb174-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,</span>
<span id="cb174-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sign =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"negative"</span>,</span>
<span id="cb174-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color_by =</span> top_methylation</span>
<span id="cb174-7">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Gene expression"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-top-methylation-by-gene-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="plot-methylation-by-transcript-scatter" class="level4">
<h4 class="anchored" data-anchor-id="plot-methylation-by-transcript-scatter">9.5.4.7 Plot methylation by transcript scatter</h4>
<div class="sourceCode" id="cb175" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb175-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_data_scatter</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], </span>
<span id="cb175-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"transcript"</span>,</span>
<span id="cb175-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,  </span>
<span id="cb175-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,</span>
<span id="cb175-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sign =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"negative"</span>,</span>
<span id="cb175-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color_by =</span> top_methylation</span>
<span id="cb175-7">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Transcript expression"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-top-methylation-by-transcript-1.png" class="img-fluid"><!-- --></p>
</section>
<section id="plot-methylation-by-lncrna-scatter" class="level4">
<h4 class="anchored" data-anchor-id="plot-methylation-by-lncrna-scatter">9.5.4.8 Plot methylation by lncRNA scatter</h4>
<div class="sourceCode" id="cb176" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb176-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_data_scatter</span>(mofa_objects[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"MOFAobject_factors10"</span>]], </span>
<span id="cb176-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">view =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lncRNA"</span>,</span>
<span id="cb176-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">factor =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,  </span>
<span id="cb176-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,</span>
<span id="cb176-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sign =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"negative"</span>,</span>
<span id="cb176-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color_by =</span> top_methylation</span>
<span id="cb176-7">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lncRNA expression"</span>)</span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-top-methylation-by-lncRNA-1.png" class="img-fluid"><!-- --></p>
</section>
</section>
</section>
</section>
<section id="session-info" class="level1">
<h1>10 SESSION INFO</h1>
<div class="sourceCode" id="cb177" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb177-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sessionInfo</span>()</span></code></pre></div>
<pre><code>R version 4.2.3 (2023-03-15)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 24.04.3 LTS

Matrix products: default
BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3
LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
 [1] ggpubr_0.6.1      lubridate_1.9.4   forcats_1.0.0     stringr_1.5.1    
 [5] dplyr_1.1.4       purrr_1.1.0       readr_2.1.5       tidyr_1.3.1      
 [9] tibble_3.3.0      tidyverse_2.0.0   ggplot2_4.0.0     MOFA2_1.8.0      
[13] data.table_1.17.8 knitr_1.50       

loaded via a namespace (and not attached):
 [1] MatrixGenerics_1.10.0 splines_4.2.3         jsonlite_2.0.0       
 [4] carData_3.0-5         Formula_1.2-5         S7_0.2.0             
 [7] stats4_4.2.3          yaml_2.3.10           ggrepel_0.9.6        
[10] corrplot_0.95         backports_1.5.0       pillar_1.11.0        
[13] lattice_0.22-7        glue_1.8.0            reticulate_1.43.0    
[16] digest_0.6.37         RColorBrewer_1.1-3    ggsignif_0.6.4       
[19] cowplot_1.2.0         htmltools_0.5.8.1     Matrix_1.6-1         
[22] plyr_1.8.9            pkgconfig_2.0.3       pheatmap_1.0.13      
[25] broom_1.0.9           dir.expiry_1.6.0      scales_1.4.0         
[28] HDF5Array_1.26.0      Rtsne_0.17            tzdb_0.5.0           
[31] timechange_0.3.0      mgcv_1.9-3            car_3.1-3            
[34] generics_0.1.4        farver_2.1.2          IRanges_2.32.0       
[37] withr_3.0.2           BiocGenerics_0.44.0   cli_3.6.5            
[40] magrittr_2.0.4        evaluate_1.0.5        nlme_3.1-168         
[43] rstatix_0.7.2         tools_4.2.3           hms_1.1.3            
[46] lifecycle_1.0.4       matrixStats_1.5.0     basilisk.utils_1.10.0
[49] Rhdf5lib_1.20.0       S4Vectors_0.36.2      DelayedArray_0.24.0  
[52] compiler_4.2.3        rlang_1.1.6           rhdf5_2.42.1         
[55] grid_4.2.3            rhdf5filters_1.10.1   rstudioapi_0.17.1    
[58] labeling_0.4.3        rmarkdown_2.29        basilisk_1.10.2      
[61] gtable_0.3.6          abind_1.4-8           reshape2_1.4.4       
[64] R6_2.6.1              utf8_1.2.6            fastmap_1.2.0        
[67] uwot_0.2.3            filelock_1.0.3        stringi_1.8.7        
[70] parallel_4.2.3        Rcpp_1.1.0            vctrs_0.6.5          
[73] png_0.1-8             tidyselect_1.2.1      xfun_0.53            </code></pre>
</section>
<section id="references" class="level1">
<h1>11 REFERENCES</h1>


</section>

 ]]></description>
  <category>2025</category>
  <category>MOFA2</category>
  <category>Acropora pulchra</category>
  <category>E5</category>
  <category>coral</category>
  <category>timeseries_molecular</category>
  <guid>https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/</guid>
  <pubDate>Fri, 19 Sep 2025 07:00:00 GMT</pubDate>
  <media:content url="https://robertslab.github.io/sams-notebook/posts/2025/2025-09-19-Data-Exploration---E5-Timeseries-A.pulchra-Multi-omics-Using-MOFA2/22.20-Apul-multiomics-MOFA2_files/figure-gfm/plot-lncRNA-weights-1.png" medium="image" type="image/png" height="103" width="144"/>
</item>
<item>
  <title>RNA Quantification - C.gigas PolyIC Mechanical Trials RNA from 20250902</title>
  <dc:creator>Sam White</dc:creator>
  <link>https://robertslab.github.io/sams-notebook/posts/2025/2025-09-10-RNA-Quantification---C.gigas-PolyIC-Mechanical-Trials-RNA-from-20250902/</link>
  <description><![CDATA[ 





<section id="intro" class="level1">
<h1>INTRO</h1>
<p>I <a href="../../../posts/2025/2025-09-02-RNA-Isolation---C.gigas-PolyIC-Mechanical-Trials-for-Valentina-Using-Quick-DNA-RNA-Miniprep-Plus-Kit/index.html">previously isolated RNA</a> and needed to quantify it.</p>
</section>
<section id="materials-methods" class="level1">
<h1>MATERIALS &amp; METHODS</h1>
<p>All samples were quantified using the Roberts Lab Qubit 3.0 with the broad range (BR) RNA Assay Kit.</p>
<p>Samples were measured using 1uL of sample.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Some samples ended were too low concentration for the broad range assay using 1uL. They were re-measured using 5uL of sample with the broad range assay.</p>
</div>
</div>
</section>
<section id="results" class="level1">
<h1>RESULTS</h1>
<section id="qubit-data" class="level2">
<h2 class="anchored" data-anchor-id="qubit-data">Qubit data</h2>
<p>Raw Qubit data is here:</p>
<ul>
<li><a href="./20250910-qubit-cgig-polyIC-brRNA.csv"><code>20250910-qubit-cgig-polyIC-brRNA.csv</code></a> (CSV)</li>
</ul>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>The following seven samples yielded no RNA and their tubes were discarded:</p>
<ul>
<li><code>C4PC</code></li>
<li><code>C5PC</code></li>
<li><code>C1PM</code></li>
<li><code>C2PM</code></li>
<li><code>C3PM</code></li>
<li><code>C4PM</code></li>
<li><code>C5PM</code></li>
</ul>
</div>
</div>
<table class="caption-top table">
<colgroup>
<col style="width: 9%">
<col style="width: 12%">
<col style="width: 13%">
<col style="width: 26%">
<col style="width: 26%">
<col style="width: 11%">
</colgroup>
<thead>
<tr class="header">
<th>SampleID</th>
<th>Volume (uL)</th>
<th>Dilution (uL)</th>
<th>Qubit Concentration (ng/u)L</th>
<th>Final Concentration (ng/uL)</th>
<th>Yield (ng)</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>A1C</td>
<td>40</td>
<td>1</td>
<td>610</td>
<td>610</td>
<td>24400</td>
</tr>
<tr class="even">
<td>A2C</td>
<td>40</td>
<td>1</td>
<td>244</td>
<td>244</td>
<td>9760</td>
</tr>
<tr class="odd">
<td>A3C</td>
<td>40</td>
<td>1</td>
<td>580</td>
<td>580</td>
<td>23200</td>
</tr>
<tr class="even">
<td>A4C</td>
<td>40</td>
<td>1</td>
<td>458</td>
<td>458</td>
<td>18320</td>
</tr>
<tr class="odd">
<td>A5C</td>
<td>40</td>
<td>1</td>
<td>534</td>
<td>534</td>
<td>21360</td>
</tr>
<tr class="even">
<td>B1C</td>
<td>40</td>
<td>1</td>
<td>260</td>
<td>260</td>
<td>10400</td>
</tr>
<tr class="odd">
<td>B2C</td>
<td>40</td>
<td>1</td>
<td>512</td>
<td>512</td>
<td>20480</td>
</tr>
<tr class="even">
<td>B3C</td>
<td>40</td>
<td>1</td>
<td>394</td>
<td>394</td>
<td>15760</td>
</tr>
<tr class="odd">
<td>B4C</td>
<td>40</td>
<td>1</td>
<td>532</td>
<td>532</td>
<td>21280</td>
</tr>
<tr class="even">
<td>B5C</td>
<td>40</td>
<td>1</td>
<td>574</td>
<td>574</td>
<td>22960</td>
</tr>
<tr class="odd">
<td>C1C</td>
<td>40</td>
<td>1</td>
<td>752</td>
<td>752</td>
<td>30080</td>
</tr>
<tr class="even">
<td>C2C</td>
<td>40</td>
<td>1</td>
<td>304</td>
<td>304</td>
<td>12160</td>
</tr>
<tr class="odd">
<td>C3C</td>
<td>40</td>
<td>1</td>
<td>624</td>
<td>624</td>
<td>24960</td>
</tr>
<tr class="even">
<td>C4C</td>
<td>40</td>
<td>1</td>
<td>544</td>
<td>544</td>
<td>21760</td>
</tr>
<tr class="odd">
<td>C5C</td>
<td>40</td>
<td>1</td>
<td>542</td>
<td>542</td>
<td>21680</td>
</tr>
<tr class="even">
<td>D1C</td>
<td>40</td>
<td>1</td>
<td>204</td>
<td>204</td>
<td>8160</td>
</tr>
<tr class="odd">
<td>D2C</td>
<td>40</td>
<td>1</td>
<td>318</td>
<td>318</td>
<td>12720</td>
</tr>
<tr class="even">
<td>D3C</td>
<td>40</td>
<td>1</td>
<td>512</td>
<td>512</td>
<td>20480</td>
</tr>
<tr class="odd">
<td>D4C</td>
<td>40</td>
<td>1</td>
<td>374</td>
<td>374</td>
<td>14960</td>
</tr>
<tr class="even">
<td>D5C</td>
<td>40</td>
<td>1</td>
<td>570</td>
<td>570</td>
<td>22800</td>
</tr>
<tr class="odd">
<td>A1M</td>
<td>40</td>
<td>1</td>
<td>340</td>
<td>340</td>
<td>13600</td>
</tr>
<tr class="even">
<td>A2M</td>
<td>40</td>
<td>1</td>
<td>316</td>
<td>316</td>
<td>12640</td>
</tr>
<tr class="odd">
<td>A3M</td>
<td>40</td>
<td>1</td>
<td>388</td>
<td>388</td>
<td>15520</td>
</tr>
<tr class="even">
<td>A4M</td>
<td>40</td>
<td>1</td>
<td>444</td>
<td>444</td>
<td>17760</td>
</tr>
<tr class="odd">
<td>A5M</td>
<td>40</td>
<td>1</td>
<td>642</td>
<td>642</td>
<td>25680</td>
</tr>
<tr class="even">
<td>B1M</td>
<td>40</td>
<td>1</td>
<td>336</td>
<td>336</td>
<td>13440</td>
</tr>
<tr class="odd">
<td>B2M</td>
<td>40</td>
<td>1</td>
<td>294</td>
<td>294</td>
<td>11760</td>
</tr>
<tr class="even">
<td>B3M</td>
<td>40</td>
<td>1</td>
<td>608</td>
<td>608</td>
<td>24320</td>
</tr>
<tr class="odd">
<td>B4M</td>
<td>40</td>
<td>1</td>
<td>171</td>
<td>171</td>
<td>6840</td>
</tr>
<tr class="even">
<td>B5M</td>
<td>40</td>
<td>1</td>
<td>436</td>
<td>436</td>
<td>17440</td>
</tr>
<tr class="odd">
<td>C1M</td>
<td>40</td>
<td>1</td>
<td>252</td>
<td>252</td>
<td>10080</td>
</tr>
<tr class="even">
<td>C2M</td>
<td>40</td>
<td>1</td>
<td>154</td>
<td>154</td>
<td>6160</td>
</tr>
<tr class="odd">
<td>C3M</td>
<td>40</td>
<td>1</td>
<td>408</td>
<td>408</td>
<td>16320</td>
</tr>
<tr class="even">
<td>C4M</td>
<td>40</td>
<td>1</td>
<td>630</td>
<td>630</td>
<td>25200</td>
</tr>
<tr class="odd">
<td>C5M</td>
<td>40</td>
<td>1</td>
<td>131</td>
<td>131</td>
<td>5240</td>
</tr>
<tr class="even">
<td>D1M</td>
<td>40</td>
<td>1</td>
<td>184</td>
<td>184</td>
<td>7360</td>
</tr>
<tr class="odd">
<td>D2M</td>
<td>40</td>
<td>1</td>
<td>103</td>
<td>103</td>
<td>4120</td>
</tr>
<tr class="even">
<td>D3M</td>
<td>40</td>
<td>1</td>
<td>111</td>
<td>111</td>
<td>4440</td>
</tr>
<tr class="odd">
<td>D4M</td>
<td>40</td>
<td>1</td>
<td>410</td>
<td>410</td>
<td>16400</td>
</tr>
<tr class="even">
<td>D5M</td>
<td>40</td>
<td>1</td>
<td>264</td>
<td>264</td>
<td>10560</td>
</tr>
<tr class="odd">
<td>A1T</td>
<td>40</td>
<td>1</td>
<td>358</td>
<td>358</td>
<td>14320</td>
</tr>
<tr class="even">
<td>A2T</td>
<td>40</td>
<td>1</td>
<td>484</td>
<td>484</td>
<td>19360</td>
</tr>
<tr class="odd">
<td>A3T</td>
<td>40</td>
<td>1</td>
<td>206</td>
<td>206</td>
<td>8240</td>
</tr>
<tr class="even">
<td>A4T</td>
<td>40</td>
<td>1</td>
<td>248</td>
<td>248</td>
<td>9920</td>
</tr>
<tr class="odd">
<td>A5T</td>
<td>40</td>
<td>1</td>
<td>139</td>
<td>139</td>
<td>5560</td>
</tr>
<tr class="even">
<td>B1T</td>
<td>40</td>
<td>1</td>
<td>292</td>
<td>292</td>
<td>11680</td>
</tr>
<tr class="odd">
<td>B2T</td>
<td>40</td>
<td>1</td>
<td>276</td>
<td>276</td>
<td>11040</td>
</tr>
<tr class="even">
<td>B3T</td>
<td>40</td>
<td>1</td>
<td>356</td>
<td>356</td>
<td>14240</td>
</tr>
<tr class="odd">
<td>B4T</td>
<td>40</td>
<td>1</td>
<td>392</td>
<td>392</td>
<td>15680</td>
</tr>
<tr class="even">
<td>B5T</td>
<td>40</td>
<td>1</td>
<td>500</td>
<td>500</td>
<td>20000</td>
</tr>
<tr class="odd">
<td>C1T</td>
<td>40</td>
<td>1</td>
<td>488</td>
<td>488</td>
<td>19520</td>
</tr>
<tr class="even">
<td>C2T</td>
<td>40</td>
<td>1</td>
<td>662</td>
<td>662</td>
<td>26480</td>
</tr>
<tr class="odd">
<td>C3T</td>
<td>40</td>
<td>1</td>
<td>594</td>
<td>594</td>
<td>23760</td>
</tr>
<tr class="even">
<td>C4T</td>
<td>40</td>
<td>1</td>
<td>340</td>
<td>340</td>
<td>13600</td>
</tr>
<tr class="odd">
<td>C5T</td>
<td>40</td>
<td>1</td>
<td>598</td>
<td>598</td>
<td>23920</td>
</tr>
<tr class="even">
<td>D1T</td>
<td>40</td>
<td>1</td>
<td>350</td>
<td>350</td>
<td>14000</td>
</tr>
<tr class="odd">
<td>D2T</td>
<td>40</td>
<td>1</td>
<td>922</td>
<td>922</td>
<td>36880</td>
</tr>
<tr class="even">
<td>D3T</td>
<td>40</td>
<td>1</td>
<td>328</td>
<td>328</td>
<td>13120</td>
</tr>
<tr class="odd">
<td>D4T</td>
<td>40</td>
<td>1</td>
<td>274</td>
<td>274</td>
<td>10960</td>
</tr>
<tr class="even">
<td>D5T</td>
<td>40</td>
<td>1</td>
<td>248</td>
<td>248</td>
<td>9920</td>
</tr>
<tr class="odd">
<td>C1PC</td>
<td>40</td>
<td>1</td>
<td>518</td>
<td>518</td>
<td>20720</td>
</tr>
<tr class="even">
<td>C2PC</td>
<td>40</td>
<td>1</td>
<td>432</td>
<td>432</td>
<td>17280</td>
</tr>
<tr class="odd">
<td>C3PC</td>
<td>40</td>
<td>1</td>
<td>362</td>
<td>362</td>
<td>14480</td>
</tr>
<tr class="even">
<td>C4PC</td>
<td>40</td>
<td>1</td>
<td>Out of range</td>
<td>0</td>
<td>0</td>
</tr>
<tr class="odd">
<td>C5PC</td>
<td>40</td>
<td>1</td>
<td>Out of range</td>
<td>0</td>
<td>0</td>
</tr>
<tr class="even">
<td>D1PC</td>
<td>40</td>
<td>1</td>
<td>248</td>
<td>248</td>
<td>9920</td>
</tr>
<tr class="odd">
<td>D2PC</td>
<td>40</td>
<td>1</td>
<td>342</td>
<td>342</td>
<td>13680</td>
</tr>
<tr class="even">
<td>D3PC</td>
<td>40</td>
<td>1</td>
<td>352</td>
<td>352</td>
<td>14080</td>
</tr>
<tr class="odd">
<td>D4PC</td>
<td>40</td>
<td>1</td>
<td>300</td>
<td>300</td>
<td>12000</td>
</tr>
<tr class="even">
<td>D5PC</td>
<td>40</td>
<td>1</td>
<td>416</td>
<td>416</td>
<td>16640</td>
</tr>
<tr class="odd">
<td>C1PM</td>
<td>40</td>
<td>1</td>
<td>Out of range</td>
<td>0</td>
<td>0</td>
</tr>
<tr class="even">
<td>C2PM</td>
<td>40</td>
<td>1</td>
<td>Out of range</td>
<td>0</td>
<td>0</td>
</tr>
<tr class="odd">
<td>C3PM</td>
<td>40</td>
<td>1</td>
<td>Out of range</td>
<td>0</td>
<td>0</td>
</tr>
<tr class="even">
<td>C4PM</td>
<td>40</td>
<td>1</td>
<td>Out of range</td>
<td>0</td>
<td>0</td>
</tr>
<tr class="odd">
<td>C5PM</td>
<td>40</td>
<td>1</td>
<td>Out of range</td>
<td>0</td>
<td>0</td>
</tr>
<tr class="even">
<td>D1PM</td>
<td>40</td>
<td>1</td>
<td>216</td>
<td>216</td>
<td>8640</td>
</tr>
<tr class="odd">
<td>D2PM</td>
<td>40</td>
<td>1</td>
<td>374</td>
<td>374</td>
<td>14960</td>
</tr>
<tr class="even">
<td>D3PM</td>
<td>40</td>
<td>1</td>
<td>622</td>
<td>622</td>
<td>24880</td>
</tr>
<tr class="odd">
<td>D4PM</td>
<td>40</td>
<td>1</td>
<td>406</td>
<td>406</td>
<td>16240</td>
</tr>
<tr class="even">
<td>D4PM</td>
<td>40</td>
<td>1</td>
<td>332</td>
<td>332</td>
<td>13280</td>
</tr>
<tr class="odd">
<td>A1PT</td>
<td>40</td>
<td>1</td>
<td>740</td>
<td>740</td>
<td>29600</td>
</tr>
<tr class="even">
<td>A2PT</td>
<td>40</td>
<td>1</td>
<td>498</td>
<td>498</td>
<td>19920</td>
</tr>
<tr class="odd">
<td>A3PT</td>
<td>40</td>
<td>1</td>
<td>516</td>
<td>516</td>
<td>20640</td>
</tr>
<tr class="even">
<td>A4PT</td>
<td>40</td>
<td>1</td>
<td>392</td>
<td>392</td>
<td>15680</td>
</tr>
<tr class="odd">
<td>A5PT</td>
<td>40</td>
<td>1</td>
<td>542</td>
<td>542</td>
<td>21680</td>
</tr>
<tr class="even">
<td>B1PT</td>
<td>40</td>
<td>1</td>
<td>378</td>
<td>378</td>
<td>15120</td>
</tr>
<tr class="odd">
<td>B2PT</td>
<td>40</td>
<td>1</td>
<td>712</td>
<td>712</td>
<td>28480</td>
</tr>
<tr class="even">
<td>B3PT</td>
<td>40</td>
<td>1</td>
<td>606</td>
<td>606</td>
<td>24240</td>
</tr>
<tr class="odd">
<td>B4PT</td>
<td>40</td>
<td>1</td>
<td>496</td>
<td>496</td>
<td>19840</td>
</tr>
<tr class="even">
<td>B5PT</td>
<td>40</td>
<td>1</td>
<td>342</td>
<td>342</td>
<td>13680</td>
</tr>
<tr class="odd">
<td>C1PT</td>
<td>40</td>
<td>1</td>
<td>318</td>
<td>318</td>
<td>12720</td>
</tr>
<tr class="even">
<td>C2PT</td>
<td>40</td>
<td>1</td>
<td>370</td>
<td>370</td>
<td>14800</td>
</tr>
<tr class="odd">
<td>C3PT</td>
<td>40</td>
<td>1</td>
<td>552</td>
<td>552</td>
<td>22080</td>
</tr>
<tr class="even">
<td>C4PT</td>
<td>40</td>
<td>1</td>
<td>704</td>
<td>704</td>
<td>28160</td>
</tr>
<tr class="odd">
<td>C5PT</td>
<td>40</td>
<td>1</td>
<td>422</td>
<td>422</td>
<td>16880</td>
</tr>
<tr class="even">
<td>D1PT</td>
<td>40</td>
<td>1</td>
<td>664</td>
<td>664</td>
<td>26560</td>
</tr>
<tr class="odd">
<td>D2PT</td>
<td>40</td>
<td>1</td>
<td>1020</td>
<td>1020</td>
<td>40800</td>
</tr>
<tr class="even">
<td>D3PT</td>
<td>40</td>
<td>1</td>
<td>542</td>
<td>542</td>
<td>21680</td>
</tr>
<tr class="odd">
<td>D4PT</td>
<td>40</td>
<td>1</td>
<td>482</td>
<td>482</td>
<td>19280</td>
</tr>
<tr class="even">
<td>D5PT</td>
<td>40</td>
<td>1</td>
<td>476</td>
<td>476</td>
<td>19040</td>
</tr>
<tr class="odd">
<td>C4PC_5uL</td>
<td>40</td>
<td>1</td>
<td>Out of range</td>
<td>0</td>
<td>0</td>
</tr>
<tr class="even">
<td>C5PC_5uL</td>
<td>40</td>
<td>1</td>
<td>Out of range</td>
<td>0</td>
<td>0</td>
</tr>
<tr class="odd">
<td>C1PM_5uL</td>
<td>40</td>
<td>1</td>
<td>Out of range</td>
<td>0</td>
<td>0</td>
</tr>
<tr class="even">
<td>C2PM_5uL</td>
<td>40</td>
<td>1</td>
<td>Out of range</td>
<td>0</td>
<td>0</td>
</tr>
<tr class="odd">
<td>C3PM_5uL</td>
<td>40</td>
<td>1</td>
<td>Out of range</td>
<td>0</td>
<td>0</td>
</tr>
<tr class="even">
<td>C4PM_5uL</td>
<td>40</td>
<td>1</td>
<td>Out of range</td>
<td>0</td>
<td>0</td>
</tr>
<tr class="odd">
<td>C5PM_5uL</td>
<td>40</td>
<td>1</td>
<td>Out of range</td>
<td>0</td>
<td>0</td>
</tr>
</tbody>
</table>
<p>Samples were stored in Valentina’s original boxes in the middle -80<sup>o</sup>C.</p>


</section>
</section>

 ]]></description>
  <category>2025</category>
  <category>Crassostrea gigas</category>
  <category>Pacific oyster</category>
  <category>Qubit</category>
  <category>RNA Quantfication</category>
  <category>Magallana gigas</category>
  <category>Poly IC</category>
  <guid>https://robertslab.github.io/sams-notebook/posts/2025/2025-09-10-RNA-Quantification---C.gigas-PolyIC-Mechanical-Trials-RNA-from-20250902/</guid>
  <pubDate>Wed, 10 Sep 2025 07:00:00 GMT</pubDate>
</item>
<item>
  <title>RNA Isolation - C.gigas PolyIC Mechanical Trials for Valentina Using Quick-DNA RNA Miniprep Plus Kit</title>
  <dc:creator>Sam White</dc:creator>
  <link>https://robertslab.github.io/sams-notebook/posts/2025/2025-09-02-RNA-Isolation---C.gigas-PolyIC-Mechanical-Trials-for-Valentina-Using-Quick-DNA-RNA-Miniprep-Plus-Kit/</link>
  <description><![CDATA[ 





<section id="intro" class="level1">
<h1>INTRO</h1>
<p>Continued RNA isolation for this project, which was <a href="../../../posts/2025/2025-08-04-RNA-Isolation-and-Quantification---C.gigas-PolyIC-Mechanical-Trials-for-Valentina-Using-Quick-DNA-RNA-MiniPrep-Plus-Kit/index.html">initially started on 20250804.</a></p>
<p>I isolated RNA from the remaining 100 tissue samples. See <a href="../../../posts/2025/2025-09-10-RNA-Quantification---C.gigas-PolyIC-Mechanical-Trials-RNA-from-20250902/index.html">RNA quantification on 20250910</a> for the full list of samples.</p>
</section>
<section id="materials-methods" class="level1">
<h1>MATERIALS &amp; METHODS</h1>
<p>Whole body tissue had been snap frozen and stored at -80<sup>o</sup>C.</p>
<section id="homogenization" class="level2">
<h2 class="anchored" data-anchor-id="homogenization">Homogenization</h2>
<p>300uL of DNA/RNA Shield (ZymoResearch) were added to the frozen tissue. Samples and DNA/RNA Shield were transferred to 1.5mL SafeLock (Eppendorf) microcentrifuge tubes containing ~50uL of 0.5mm zirconium oxide beads and ~50uL of 0.15mm zirconium oxide beads. Samples were homogenized using the Roberts Lab Bullet Blender 5E Gold + (NextAdvance) with 1.5mL tube adapters for 3mins at speed 12. The Bullet Blender was pre-cooled, and cooled, using dry ice.</p>
</section>
<section id="rna-isolation" class="level2">
<h2 class="anchored" data-anchor-id="rna-isolation">RNA Isolation</h2>
<p>RNA was isolated using the Quick-DNA/RNA MiniPrep Plus Kit, according to the manufacturer’s protocol with the following changes/notes:</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><p>Treated with optional DNase step.</p></li>
<li><p>Eluted with 50uL of H<sub>2</sub>O.</p></li>
</ul>
</div>
</div>
<p>Samples were stored in Valentina’s original boxes in the middle -80<sup>o</sup>C for quantification at a later date.</p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>The following seven samples yielded no RNA <a href="../../../posts/2025/2025-09-10-RNA-Quantification---C.gigas-PolyIC-Mechanical-Trials-RNA-from-20250902/index.html">when they were quantified on 20250910</a> and their tubes were discarded:</p>
<ul>
<li><code>C4PC</code></li>
<li><code>C5PC</code></li>
<li><code>C1PM</code></li>
<li><code>C2PM</code></li>
<li><code>C3PM</code></li>
<li><code>C4PM</code></li>
<li><code>C5PM</code></li>
</ul>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>2025</category>
  <category>PolyIC</category>
  <category>RNA Isolation</category>
  <category>Qubit</category>
  <category>Magallana gigas</category>
  <category>Pacific oyster</category>
  <category>Quick DNA/RNA Miniprep Plus Kit</category>
  <guid>https://robertslab.github.io/sams-notebook/posts/2025/2025-09-02-RNA-Isolation---C.gigas-PolyIC-Mechanical-Trials-for-Valentina-Using-Quick-DNA-RNA-Miniprep-Plus-Kit/</guid>
  <pubDate>Tue, 02 Sep 2025 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Shiny Server - Configuration on Gannet Using Synology Container Manager</title>
  <dc:creator>Sam White</dc:creator>
  <link>https://robertslab.github.io/sams-notebook/posts/2025/2025-08-29-Shiny-Server---Configuration-on-Gannet-Using-Synology-Container-Manager/</link>
  <description><![CDATA[ 





<section id="intro" class="level1">
<h1>INTRO</h1>
<p>Steven has created a <a href="https://shiny.posit.co/">Shiny app</a> (website) that will allow the public to plot/interact with some of the resazurin data that the lab’s been collecting. He <a href="https://github.com/RobertsLab/resources/issues/2302">assigned me to tackle getting a Shiny server set up on one our lab servers</a> so that we don’t have to rely on free options, which can be limited.</p>
<p>This post documents the process of deploying a Shiny Server using Synology’s Container Manager on Gannet (Synology server). The goal was to host a custom Shiny app for public data visualization, using the official Rocker image and mounting the necessary volumes for persistent app storage.</p>
<section id="step-by-step-instructions" class="level2">
<h2 class="anchored" data-anchor-id="step-by-step-instructions">Step-by-Step Instructions</h2>
<ol type="1">
<li><p><strong>Open Synology Container Manager and search for the Rocker image on DockerHub.</strong><br>
<img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-08-29-Shiny-Server---Configuration-on-Gannet-Using-Synology-Container-Manager/20250829-syno-container_mgr-dockerhub-screenshot.png" class="img-fluid" alt="DockerHub search for Rocker image in Synology Container Manager. Shows the available Rocker images for selection."></p></li>
<li><p><strong>Select the appropriate Rocker image for Shiny Server.</strong></p></li>
</ol>
<p>In this case, I selected <code>rocker/shiny-verse</code>. This includes Shiny server, as well as the <code>tidyverse</code> package. <img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-08-29-Shiny-Server---Configuration-on-Gannet-Using-Synology-Container-Manager/20250829-syno-container_mgr-rocker_image-screenshot.png" class="img-fluid" alt="Selection of the Rocker image for Shiny Server in Synology Container Manager. Highlights the chosen image for deployment."></p>
<ol start="3" type="1">
<li><strong>Create and configure a new container using the selected image.</strong></li>
</ol>
<p>Check the boxes shown in the image below and leave the default port settings (<code>3838</code> and <code>HTTP</code>).</p>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-08-29-Shiny-Server---Configuration-on-Gannet-Using-Synology-Container-Manager/20250829-syno-container_mgr-run-image-screenshot.png" class="img-fluid" alt="Container creation screen in Synology Container Manager. Shows configuration options for the new container."></p>
<ol start="4" type="1">
<li><strong>Set up volume mounts to link the app code and data to the container.</strong></li>
</ol>
<p>To do this, I cloned the <a href="https://github.com/RobertsLab/vims-resazurin"><code>vims-resazurin</code> GitHub repo</a> to the following Synology location: <code>/volume2/docker/shiny-verse/</code>.</p>
<p>When setting the volumes, we’ll need <em>two</em> locations for this particular Shiny app. The reason for this is the <a href="https://github.com/RobertsLab/vims-resazurin/blob/main/code/shiny-app/app.R">Shiny app</a> (GitHub) uses relative paths to access other files within the repo. Otherwise, if all the files referenced were in the same directory as the Shiny app, we could mount just that location.</p>
<p>So, I mounted (bound) the following two locations. These are listed Synology location, followed by container location.</p>
<ol type="1">
<li><p><code>/volume2/docker/shiny-verse/vims-resazurin/main</code> to <code>/srv/shiny-server</code>. This shares all files within the <code>vims-resazurin</code> repo with the Shiny server location in the container.</p></li>
<li><p><code>/volume2/docker/shiny-verse/vims-resazurin/main/code/shiny-app</code> to <code>/srv/shiny-server/resazurin</code>.</p></li>
</ol>
<pre><code>This shares the Shiny app location on the Synology with the Shiny server in the container and provides it with a custom name. In this case, `resazurin`.</code></pre>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-08-29-Shiny-Server---Configuration-on-Gannet-Using-Synology-Container-Manager/20250829-syno-container_mgr-run-image-volumes-screenshot.png" class="img-fluid" alt="Volume mount configuration in Synology Container Manager. Demonstrates how host directories are mapped to container paths."></p>
<ol start="5" type="1">
<li><strong>Configure web portal settings for external access.</strong></li>
</ol>
<p>The HTTPS port number can really be any value you’d like. There are some reserved ports, but it’s a small quantity, so feel free to pick whatever.</p>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-08-29-Shiny-Server---Configuration-on-Gannet-Using-Synology-Container-Manager/20250829-syno-container_mgr-run-image-web_portal-screenshot.png" class="img-fluid" alt="Web portal and network settings for the Shiny Server container. Shows how to enable external access."></p>
<ol start="6" type="1">
<li><strong>Open a terminal in the running container to install required R packages.</strong></li>
</ol>
<p>The Shiny app requires additional R packages which aren’t in the container by default. To install them, you have to open a terminal in the container. Pick “Terminal” from this dropdown menu:</p>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-08-29-Shiny-Server---Configuration-on-Gannet-Using-Synology-Container-Manager/20250829-syno-container_mgr-run-image-open_terminal-screenshot.png" class="img-fluid" alt="Opening a terminal session in the running container. Prepares for R package installation."></p>
<ol start="7" type="1">
<li><strong>Run the R command to install all necessary packages for the app.</strong></li>
</ol>
<p>Here’s the full command:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">R <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>e <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"install.packages(c('shiny', 'shinythemes', 'readxl', 'tidyverse', 'tools', 'DT', 'plotly', 'pracma', 'stringr'))"</span></span></code></pre></div>
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-08-29-Shiny-Server---Configuration-on-Gannet-Using-Synology-Container-Manager/20250829-syno-container_mgr-run-image-R_terminal_commands-screenshot.png" class="img-fluid" alt="R terminal command for installing required packages. Shows the command input in the container terminal."></p>
<ol start="8" type="1">
<li><p><strong>Monitor the installation process to ensure all packages are installed successfully.</strong><br>
<img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-08-29-Shiny-Server---Configuration-on-Gannet-Using-Synology-Container-Manager/20250829-syno-container_mgr-run-image-R_terminal_commands-running-screenshot.png" class="img-fluid" alt="R package installation in progress. Displays the output and progress of the installation process."></p></li>
<li><p><strong>Access the running Shiny app via the web interface to confirm functionality.</strong></p></li>
</ol>
<p>This becomes accessible at our existing domain (gannet.fish.washington.edu), followed by the port number we set in Step 5 above (<code>4444</code>), followed by the custom name we set (<code>resazurin</code>) in Step 4 during mounting/binding volumes to the container. <img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-08-29-Shiny-Server---Configuration-on-Gannet-Using-Synology-Container-Manager/20250829-functional-shiny-app-webpage.png" class="img-fluid" alt="Functional Shiny app webpage. Confirms successful deployment and public accessibility of the app."></p>


</section>
</section>

 ]]></description>
  <category>2025</category>
  <category>rocker</category>
  <category>Shiny app</category>
  <category>Gannet</category>
  <category>Synology</category>
  <category>container</category>
  <guid>https://robertslab.github.io/sams-notebook/posts/2025/2025-08-29-Shiny-Server---Configuration-on-Gannet-Using-Synology-Container-Manager/</guid>
  <pubDate>Fri, 29 Aug 2025 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Homogenization - C.gigas Juvenile Whole Body from polyIC Temp and Mech Stress</title>
  <dc:creator>Sam White</dc:creator>
  <link>https://robertslab.github.io/sams-notebook/posts/2025/2025-08-20-Homogenization---C.gigas-Juvenile-Whole-Body-from-polyIC-Temp-and-Mech-Stress/</link>
  <description><![CDATA[ 





<section id="intro" class="level1">
<h1>INTRO</h1>
<p><a href="https://github.com/RobertsLab/resources/issues/2256">Steven tasked me with helping and/or isolating RNA</a> (GitHub Issue) for Valentina (visiting scientist from Cristian’s lab in Chile). Samples were whole body (no shells) of small juvenile oysters exposed to <a href="https://en.wikipedia.org/wiki/Polyinosinic:polycytidylic_acid">poly I:C</a> (Wikipedia) and then subjected to mechanical stress or temperature stress (or no stress at all).</p>
<p>I <a href="../../../posts/2025/2025-08-04-RNA-Isolation-and-Quantification---C.gigas-PolyIC-Mechanical-Trials-for-Valentina-Using-Quick-DNA-RNA-MiniPrep-Plus-Kit/index.html">previously helped isolate RNA from a subset of these on 20250804</a> and needed to process the remainder, now that Valentina has returned to Chile.</p>
</section>
<section id="materials-methods" class="level1">
<h1>MATERIALS &amp; METHODS</h1>
<p>Whole body tissue had been snap frozen and stored at -80<sup>o</sup>C.</p>
<section id="homogenization" class="level2">
<h2 class="anchored" data-anchor-id="homogenization">Homogenization</h2>
<p>300uL of DNA/RNA Shield (ZymoResearch) were added to the frozen tissue. Samples and DNA/RNA Shield were transferred to 1.5mL SafeLock (Eppendorf) microcentrifuge tubes containig ~50uL of 0.5mm zirconium oxide beads and ~50uL of 0.15mm zirconium oxide beads. Samples were homogenized using the Roberts Lab Bullet Blender 5E Gold + (NextAdvance) with 1.5mL tube adapters for 3mins at speed 12. The Bullet Blender was pre-cooled, and cooled, using dry ice.</p>
<p>Homogenized samples were stored @ -20<sup>o</sup>C until RNA isolation can be performed with Quick-DNA/RNA MiniPrep Plus Kit (ZymoResearch) later this week.</p>


</section>
</section>

 ]]></description>
  <category>2025</category>
  <category>PolyIC</category>
  <category>RNA Isolation</category>
  <category>RNA quantification</category>
  <category>Qubit</category>
  <category>Magallana gigas</category>
  <category>Pacific oyster</category>
  <guid>https://robertslab.github.io/sams-notebook/posts/2025/2025-08-20-Homogenization---C.gigas-Juvenile-Whole-Body-from-polyIC-Temp-and-Mech-Stress/</guid>
  <pubDate>Wed, 20 Aug 2025 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Computer Management - Hard Drive Upgrades in Owl</title>
  <dc:creator>Sam White</dc:creator>
  <link>https://robertslab.github.io/sams-notebook/posts/2025/2025-08-15-Computer-Management---Hard-Drive-Upgrades-in-Owl/</link>
  <description><![CDATA[ 





<section id="intro" class="level1">
<h1>INTRO</h1>
<p>We recently <a href="https://robertslab.github.io/sams-notebook/posts/2024/2024-05-01-Daily-Bits---May-2024/index.html#section-4">replaced our old Owl Synology with a newer Synology (RS2821RP)</a>, but had started to run low on space. Considering this is where we store/backup all of high-throughput sequencing data, it made operational sense to upgrade the storage on this unit, as opposed to create a second storage location on another server.</p>
<p>Most of the HDDs in Owl were 4TB drives carried over from the previous unit. As such, we decided to replace those 4TB with 8TB drives.</p>
</section>
<section id="materials-methods" class="level1">
<h1>MATERIALS &amp; METHODS</h1>
<p>To do this, I needed to use the Synology DSM web interface to access the Storage app. Within this app, I seleted the drive that I wanted to replace, deactivated it, physically removed it from the unit, and added the new HDD. Then, in the Synolgoy DSM Storage app, select “Repair.”</p>
<p>The repair process took approximately 2 - 3 days for each drive replacement.</p>
<p>Since this process only allows for a single drive replacement at a time, this took <em>months</em> to finish (we replaced 12 HDDs); between remote work and then having to wait 2 -3 days for the system each time a drive was replace.</p>
</section>
<section id="results" class="level1">
<h1>RESULTS</h1>
<p>Done!</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-08-15-Computer-Management---Hard-Drive-Upgrades-in-Owl/20250815-owl-HDD-replacement-screenshot.png" class="img-fluid figure-img"></p>
<figcaption>Screenshot showing all HDDs with a usable capacity of 7.3TB.</figcaption>
</figure>
</div>


</section>

 ]]></description>
  <category>2025</category>
  <category>Computer Management</category>
  <category>owl</category>
  <category>Synology</category>
  <guid>https://robertslab.github.io/sams-notebook/posts/2025/2025-08-15-Computer-Management---Hard-Drive-Upgrades-in-Owl/</guid>
  <pubDate>Fri, 15 Aug 2025 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Management - Deletion of Amazon AWS S3 Glacier Archives</title>
  <dc:creator>Sam White</dc:creator>
  <link>https://robertslab.github.io/sams-notebook/posts/2025/2025-08-13-Data-Management---Deletion-of-Amazon-AWS-S3-Glacier-Archives/</link>
  <description><![CDATA[ 





<p>Wow! After literal <em>months</em> of trying to delete all of our Amazon AWS S3 Glacier Archives, I finally managed to succeed! Seriously, <em>MONTHS</em>! Crazy!</p>
<p>Here’s the backstory.</p>
<ol type="1">
<li><p>Glacier archives were created using the Synology Glacier app many years ago to archive all of our next generation sequencing data. It was a LOT of data: <em>terabytes</em>! Amazon Glacier provided a relatively affordable way to keep all of this data backed up: ~$500 - $600/yr. This was cheaper than purchasing a dedicated server with the capacity to provide the necessary storage to backup our data. Additionally, the Synology Glacier app provided a simple, automated means to perform the backup.</p></li>
<li><p>Decided we didn’t want to keep paying for the storage, we were having problems with the Synology Glacier app’s ability to actually perform the backups (consistently started failing, with an error message that didn’t provide much help), and newer versions of the Synology Disk Station Manager (DSM) no longer included a Glacier app to perform these backups.</p></li>
<li><p>You cannot delete an S3 Glacier Vault if it contains <em>any</em> files. Vaults have to be empty before they can be deleted. However, our vaults consisted of terabytes of data and <em>millions</em> of archive files. Delting these manually would be virtually impossible.</p></li>
<li><p>First attempt at automated deletion repeatedly failed. This involved using the Amazon AWS command line and the virtual terminal. Due to the massive quantity of archives, the process consistently failed due to memory constratints. Additionally, spinning up other types of AWS EC2 instances with significantly larger amounts of memory also failed - due to memory constraints.</p></li>
<li><p>I discovered a promising program called <a href="https://fastglacier.com/">FastGlacier</a>. This is a Windows-based GUI. It worked well at deleting small numbers of files. This was great in the beginning because many of the archives were multiple gigaytes in size. However, trying to select and delete the remaining <em>millions</em> of archives always caused the program to lockup. Trying to perform deletions in chunks of ~100 files sort of worked, but the program still frequently locked up and crashed.</p></li>
<li><p>Yesterday, I finally came <a href="https://github.com/aws-solutions-library-samples/guidance-for-automated-deletion-of-vault-archives-in-amazon-s3-glacier">across another solution</a> (GitHub), this one designed by Amazon AWS themselves! It’s a step-by-step guide to setting up a “Stack” in “AWS CloudTrail” to automatically delete archives in a vault. I have no idea what any of it really means, but I followed the instructions and the remaining ~2M files were deleted in ~12hrs!!!!</p></li>
</ol>
<p>At last, we are free of Amazon S3 Glacier!!!</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-08-13-Data-Management---Deletion-of-Amazon-AWS-S3-Glacier-Archives/20250813-aws-glacier-deletion.png" class="img-fluid figure-img"></p>
<figcaption>Screenshot of Amazon AWS confirming deletion of last S3 Glacier vault.</figcaption>
</figure>
</div>



 ]]></description>
  <category>2025</category>
  <category>AWS</category>
  <category>glacier</category>
  <guid>https://robertslab.github.io/sams-notebook/posts/2025/2025-08-13-Data-Management---Deletion-of-Amazon-AWS-S3-Glacier-Archives/</guid>
  <pubDate>Wed, 13 Aug 2025 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Received - Pacific cod RNA-seq from Psomagen Project AN00025268</title>
  <dc:creator>Sam White</dc:creator>
  <link>https://robertslab.github.io/sams-notebook/posts/2025/2025-08-05-Data-Received---Pacific-cod-RNA-seq-from-Psomagen-Project-AN00025268/</link>
  <description><![CDATA[ 





<section id="intro" class="level1">
<h1>INTRO</h1>
<p>We received RNA-seq data from Psomagen Project AN00025268.</p>
<p>Data was downloaded to Owl and MD5 checksums were verified.</p>
<p>Data is available here:</p>
<ul>
<li><a href="https://owl.fish.washington.edu/nightingales/G_macrocephalus/AN00025268/">https://owl.fish.washington.edu/nightingales/G_macrocephalus/AN00025267/</a></li>
</ul>
<p>An interactive sequencing report is available here:</p>
<ul>
<li><a href="https://owl.fish.washington.edu/nightingales/G_macrocephalus/AN00025268/202508_AN00025268_Report/report.html">https://owl.fish.washington.edu/nightingales/G_macrocephalus/AN00025268/202508_AN00025268_Report/report.html</a></li>
</ul>
<section id="checksum-verification" class="level2">
<h2 class="anchored" data-anchor-id="checksum-verification">Checksum verification</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-08-05-Data-Received---Pacific-cod-RNA-seq-from-Psomagen-Project-AN00025268/20250805-gmac-md5s-01.png" class="img-fluid figure-img"></p>
<figcaption>Screencap confirming MD5 checksums after transfer to Owl.</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-08-05-Data-Received---Pacific-cod-RNA-seq-from-Psomagen-Project-AN00025268/20250805-gmac-md5s-02.png" class="img-fluid figure-img"></p>
<figcaption>Screencap confirming MD5 checksums after transfer to Owl.</figcaption>
</figure>
</div>


</section>
</section>

 ]]></description>
  <category>2025</category>
  <category>AN00025268</category>
  <category>RNA-seq</category>
  <category>Pacific cod</category>
  <category>Gadus macrocephalus</category>
  <category>Data Received</category>
  <guid>https://robertslab.github.io/sams-notebook/posts/2025/2025-08-05-Data-Received---Pacific-cod-RNA-seq-from-Psomagen-Project-AN00025268/</guid>
  <pubDate>Tue, 05 Aug 2025 07:00:00 GMT</pubDate>
</item>
<item>
  <title>RNA Isolation and Quantification - C.gigas PolyIC Mechanical Trials for Valentina Using Quick-DNA RNA MiniPrep Plus Kit</title>
  <dc:creator>Sam White</dc:creator>
  <link>https://robertslab.github.io/sams-notebook/posts/2025/2025-08-04-RNA-Isolation-and-Quantification---C.gigas-PolyIC-Mechanical-Trials-for-Valentina-Using-Quick-DNA-RNA-MiniPrep-Plus-Kit/</link>
  <description><![CDATA[ 





<section id="intro" class="level1">
<h1>INTRO</h1>
<p><a href="https://github.com/RobertsLab/resources/issues/2256">Steven tasked me with helping and/or isolating RNA</a> (GitHub Issue) for Valentina (visiting scientist from Cristian’s lab in Chile). Samples were whole body (no shells) of small juvenile oysters exposed to <a href="https://en.wikipedia.org/wiki/Polyinosinic:polycytidylic_acid">poly I:C</a> (Wikipedia) and then subjected to mechanical stress, or no mechanical stress.</p>
</section>
<section id="materials-methods" class="level1">
<h1>MATERIALS &amp; METHODS</h1>
<p>Whole body tissue had been snap frozen and stored at -80<sup>o</sup>C.</p>
<section id="homogenization" class="level2">
<h2 class="anchored" data-anchor-id="homogenization">Homogenization</h2>
<p>300uL of DNA/RNA Shield (ZymoResearch) were added to the frozen tissue. Samples and DNA/RNA Shield were transferred to 1.5mL SafeLock (Eppendorf) microcentrifuge tubes containig ~50uL of 0.5mm zirconium oxide beads and ~50uL of 0.15mm zirconium oxide beads. Samples were homogenized using the Roberts Lab Bullet Blender 5E Gold + (NextAdvance) with 1.5mL tube adapters for 3mins at speed 12. The Bullet Blender was pre-cooled, and cooled, using dry ice.</p>
</section>
<section id="rna-isolation" class="level2">
<h2 class="anchored" data-anchor-id="rna-isolation">RNA Isolation</h2>
<p>RNA was isolated using the Quick-DNA/RNA MiniPrep Plus Kit, according to the manufacturer’s protocol with the following changes/notes:</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li><p>Treated with optional DNase step.</p></li>
<li><p>Eluted with 50uL of H<sub>2</sub>O.</p></li>
</ul>
</div>
</div>
</section>
<section id="rna-quantificaiton" class="level2">
<h2 class="anchored" data-anchor-id="rna-quantificaiton">RNA Quantificaiton</h2>
<p>RNA was quantified using the Qubit High Sensitivity RNA Assay (hsRNA), using 1uL of each sample.</p>
<p>The initial round of quantification revealed that most samples were <em>too</em> concentrated, so a 1:10 dilution of those samples were prepared and quantified.</p>
</section>
</section>
<section id="results" class="level1">
<h1>RESULTS</h1>
<section id="qubit-data" class="level2">
<h2 class="anchored" data-anchor-id="qubit-data">Qubit data</h2>
<ul>
<li><a href="https://docs.google.com/spreadsheets/d/1-L80n-eN18ZJX0NVqU89cRqPnDpUYI5tzt4KrVW9wUo/edit?usp=sharing">20250804-cgig-hsRNA-polyIC</a> (Google Sheet)</li>
</ul>
<table class="caption-top table">
<colgroup>
<col style="width: 7%">
<col style="width: 21%">
<col style="width: 16%">
<col style="width: 29%">
<col style="width: 12%">
<col style="width: 11%">
</colgroup>
<thead>
<tr class="header">
<th>Sample</th>
<th>Concentration(ng/uL)</th>
<th>Dilution Factor</th>
<th>Actual Concentration (ng/uL)</th>
<th>Volume (uL)</th>
<th>Yield (ng)</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>A1 P C</td>
<td>26.4</td>
<td>10</td>
<td>264</td>
<td>40</td>
<td>10560</td>
</tr>
<tr class="even">
<td>A2 P C</td>
<td>142</td>
<td>1</td>
<td>142</td>
<td>40</td>
<td>5680</td>
</tr>
<tr class="odd">
<td>A3 P C</td>
<td>112</td>
<td>1</td>
<td>112</td>
<td>40</td>
<td>4480</td>
</tr>
<tr class="even">
<td>A4 P C</td>
<td>26.8</td>
<td>10</td>
<td>268</td>
<td>40</td>
<td>10720</td>
</tr>
<tr class="odd">
<td>A5 P C</td>
<td>150</td>
<td>1</td>
<td>150</td>
<td>40</td>
<td>6000</td>
</tr>
<tr class="even">
<td>B1 P C</td>
<td>31.4</td>
<td>10</td>
<td>314</td>
<td>40</td>
<td>12560</td>
</tr>
<tr class="odd">
<td>B2 P C</td>
<td>34.8</td>
<td>10</td>
<td>348</td>
<td>40</td>
<td>13920</td>
</tr>
<tr class="even">
<td>B3 P C</td>
<td>196</td>
<td>1</td>
<td>196</td>
<td>40</td>
<td>7840</td>
</tr>
<tr class="odd">
<td>B4 P C</td>
<td>190</td>
<td>1</td>
<td>190</td>
<td>40</td>
<td>7600</td>
</tr>
<tr class="even">
<td>B5 P C</td>
<td>84.6</td>
<td>1</td>
<td>84.6</td>
<td>40</td>
<td>3384</td>
</tr>
<tr class="odd">
<td>A1 P M</td>
<td>23.4</td>
<td>10</td>
<td>234</td>
<td>40</td>
<td>9360</td>
</tr>
<tr class="even">
<td>A2 P M</td>
<td>52.8</td>
<td>10</td>
<td>528</td>
<td>40</td>
<td>21120</td>
</tr>
<tr class="odd">
<td>A3 P M</td>
<td>27.4</td>
<td>10</td>
<td>274</td>
<td>40</td>
<td>10960</td>
</tr>
<tr class="even">
<td>A4 P M</td>
<td>37.2</td>
<td>10</td>
<td>372</td>
<td>40</td>
<td>14880</td>
</tr>
<tr class="odd">
<td>A5 P M</td>
<td>28.8</td>
<td>10</td>
<td>288</td>
<td>40</td>
<td>11520</td>
</tr>
<tr class="even">
<td>B1 P M</td>
<td>63</td>
<td>1</td>
<td>63</td>
<td>40</td>
<td>2520</td>
</tr>
<tr class="odd">
<td>B2 P M</td>
<td>35.2</td>
<td>10</td>
<td>352</td>
<td>40</td>
<td>14080</td>
</tr>
<tr class="even">
<td>B3 P M</td>
<td>28.8</td>
<td>10</td>
<td>288</td>
<td>40</td>
<td>11520</td>
</tr>
<tr class="odd">
<td>B4 P M</td>
<td>200</td>
<td>1</td>
<td>200</td>
<td>40</td>
<td>8000</td>
</tr>
<tr class="even">
<td>B5 P M</td>
<td>42.4</td>
<td>10</td>
<td>424</td>
<td>40</td>
<td>16960</td>
</tr>
</tbody>
</table>


</section>
</section>

 ]]></description>
  <category>2025</category>
  <category>PolyIC</category>
  <category>RNA Isolation</category>
  <category>RNA quantification</category>
  <category>Qubit</category>
  <category>Magallana gigas</category>
  <category>Pacific oyster</category>
  <guid>https://robertslab.github.io/sams-notebook/posts/2025/2025-08-04-RNA-Isolation-and-Quantification---C.gigas-PolyIC-Mechanical-Trials-for-Valentina-Using-Quick-DNA-RNA-MiniPrep-Plus-Kit/</guid>
  <pubDate>Mon, 04 Aug 2025 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Received - S.namaycush PacBio from Angie Schmoldt at Univ. of Wisconsin-Milwaukee</title>
  <dc:creator>Sam White</dc:creator>
  <link>https://robertslab.github.io/sams-notebook/posts/2025/2025-08-04-Data-Received---S.namaycush-PacBio-from-Angie-Schmoldt-at-Univ.-of-Wisconsin-Milwaukee/</link>
  <description><![CDATA[ 





<section id="intro" class="level1">
<h1>INTRO</h1>
<p>We received PacBio data back from Angie Shmoldt at the Univ. of Wisconsin-Milwaukee as part of Rick’s <a href="https://en.wikipedia.org/wiki/Lake_trout"><em>Salvelinus namaycush</em></a> sequencing project.</p>
<p>Data was downloaded and MD5 checksums were verified.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Data was downloaded via <code>sftp</code> using the program <code>lftp</code>, as it was the only way I could figure out how to recursively download the data via command line (SSH access was not an option). Here’s the example:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lftp</span> sftp://user@hostname</span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">lftp</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> mirror /remote/directory /local/destination/</span></code></pre></div>
</div>
</div>
<p>Data is available here:</p>
<p>https://owl.fish.washington.edu/nightingales/S_namaycush/LakeTrout/</p>
<section id="data" class="level2">
<h2 class="anchored" data-anchor-id="data">Data</h2>
<p>Barcoding information can be found in this Excel file:</p>
<ul>
<li><a href="https://owl.fish.washington.edu/nightingales/S_namaycush/LakeTrout/SampleBarcodes_Goetz.xlsx">https://owl.fish.washington.edu/nightingales/S_namaycush/LakeTrout/SampleBarcodes_Goetz.xlsx</a></li>
</ul>
<div id="tbl-pool1-barcodes" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-pool1-barcodes-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;1: Pool 1 Barcodes
</figcaption>
<div aria-describedby="tbl-pool1-barcodes-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<table class="caption-top table">
<thead>
<tr class="header">
<th>Pool 1</th>
<th>Sample</th>
<th>Adapter barcode</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Lean</td>
<td>FA047</td>
<td>bc2041 TATGATCACTGAGTAT</td>
</tr>
<tr class="even">
<td>Siscowet</td>
<td>FA097</td>
<td>bc2071 CGAGTCTAGCGAGTAT</td>
</tr>
<tr class="odd">
<td>Siscowet</td>
<td>FA099</td>
<td>bc2072 TATCAGTAGTGAGTAT</td>
</tr>
</tbody>
</table>
</div>
</figure>
</div>
<div id="tbl-pool2-barcodes" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-pool2-barcodes-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;2: Pool 2 Barcodes
</figcaption>
<div aria-describedby="tbl-pool2-barcodes-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<table class="caption-top table">
<thead>
<tr class="header">
<th>Pool2</th>
<th>Sample</th>
<th>Adapter barcode</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Lean</td>
<td>FA094</td>
<td>bc2069 TCTATGACATGAGTAT</td>
</tr>
<tr class="even">
<td>Lean</td>
<td>FA095</td>
<td>bc2070 TACTGCTCACGAGTAT</td>
</tr>
<tr class="odd">
<td>Siscowet</td>
<td>FA100</td>
<td>bc2073 ATCACTAGTCGAGTAT</td>
</tr>
</tbody>
</table>
</div>
</figure>
</div>
<p>There are two “pools” of data, which exist as BAM files:</p>
<ul>
<li><p>Pool 1</p>
<ul>
<li><p>BAM</p>
<ul>
<li><p><a href="https://owl.fish.washington.edu/nightingales/S_namaycush/LakeTrout/Pool1/hifi_reads$%20md5sum%20m84082_250614_081210_s3.hifi_reads.bam">https://owl.fish.washington.edu/nightingales/S_namaycush/LakeTrout/Pool1/hifi_reads$ md5sum m84082_250614_081210_s3.hifi_reads.bam</a> (22GB)</p></li>
<li><p>MD5: <code>58f6d02a4a8e4a96a9c67cead15f2363</code></p></li>
</ul></li>
<li><p>Report (PDF)</p>
<ul>
<li><a href="https://owl.fish.washington.edu/nightingales/S_namaycush/LakeTrout/Pool1/statistics/m84082_250614_081210_s3.report.pdf">https://owl.fish.washington.edu/nightingales/S_namaycush/LakeTrout/Pool1/statistics/m84082_250614_081210_s3.report.pdf</a></li>
</ul></li>
</ul></li>
<li><p>Pool 2</p>
<ul>
<li><p>BAM</p>
<ul>
<li><p><a href="https://owl.fish.washington.edu/nightingales/S_namaycush/LakeTrout/Pool2/hifi_reads/m84082_250614_101514_s4.hifi_reads.bam">https://owl.fish.washington.edu/nightingales/S_namaycush/LakeTrout/Pool2/hifi_reads/m84082_250614_101514_s4.hifi_reads.bam</a> (19GB)</p></li>
<li><p>MD5: <code>a406ece54be24ca78257109a57c367a8</code></p></li>
</ul></li>
<li><p>Report (PDF)</p>
<ul>
<li><a href="https://owl.fish.washington.edu/nightingales/S_namaycush/LakeTrout/Pool2/statistics/m84082_250614_101514_s4.report.pdf">https://owl.fish.washington.edu/nightingales/S_namaycush/LakeTrout/Pool2/statistics/m84082_250614_101514_s4.report.pdf</a></li>
</ul></li>
</ul></li>
</ul>
</section>
<section id="checksum-verification" class="level2">
<h2 class="anchored" data-anchor-id="checksum-verification">Checksum verification</h2>
<p>No MD5 checksums were provided, however, the files were hosted on a Synology server, so I was able to generate checksums using the web interface. I manually compared those with the checksums I generated for the files once they were on Owl.</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-08-04-Data-Received---S.namaycush-PacBio-from-Angie-Schmoldt-at-Univ.-of-Wisconsin-Milwaukee/20250804-snam-MD5-pool1-BAM.png" class="img-fluid figure-img"></p>
<figcaption>Screenshot of glgc-clifford Synology MD5 checksum value for Pool 1 HiFi BAM</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-08-04-Data-Received---S.namaycush-PacBio-from-Angie-Schmoldt-at-Univ.-of-Wisconsin-Milwaukee/20250804-snam-MD5-pool2-BAM.png" class="img-fluid figure-img"></p>
<figcaption>Screenshot of glgc-clifford Synology MD5 checksum value for Pool 2 HiFi BAM</figcaption>
</figure>
</div>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-08-04-Data-Received---S.namaycush-PacBio-from-Angie-Schmoldt-at-Univ.-of-Wisconsin-Milwaukee/20250804-snam-MD5-Owl.png" class="img-fluid figure-img"></p>
<figcaption>Screenshot of MD5s of Pool1 and 2 BAMs on Owl.</figcaption>
</figure>
</div>


</section>
</section>

 ]]></description>
  <category>2025</category>
  <category>Data Received</category>
  <category>Lake Trout</category>
  <category>Salvelinus namaycush</category>
  <guid>https://robertslab.github.io/sams-notebook/posts/2025/2025-08-04-Data-Received---S.namaycush-PacBio-from-Angie-Schmoldt-at-Univ.-of-Wisconsin-Milwaukee/</guid>
  <pubDate>Mon, 04 Aug 2025 07:00:00 GMT</pubDate>
</item>
<item>
  <title>Data Received - Pacific cod Whole Genome Bisulfite Sequencing from Psomagen Project AN00025267</title>
  <dc:creator>Sam White</dc:creator>
  <link>https://robertslab.github.io/sams-notebook/posts/2025/2025-08-02-Data-Received---Pacific-cod-Whole-Genome-Bisulfite-Sequencing-from-Psomagen-Project-AN00025267/</link>
  <description><![CDATA[ 





<section id="intro" class="level1">
<h1>INTRO</h1>
<p>We received WGBS data from Psomagen Project AN00025267.</p>
<p>Libraries were prepared using Accel-NGS Methyl-Seq DNA Library Kit EZ DNA Methylation-Gold Kit (Zymo Research).</p>
<p>Data was downloaded to Owl and MD5 checksums were verified.</p>
<p>Data is available here:</p>
<ul>
<li><a href="https://owl.fish.washington.edu/nightingales/G_macrocephalus/AN00025267/">https://owl.fish.washington.edu/nightingales/G_macrocephalus/AN00025267/</a></li>
</ul>
<p>An interactive sequencing report is available here:</p>
<ul>
<li><a href="https://owl.fish.washington.edu/nightingales/G_macrocephalus/AN00025267/202508_AN00025267_Report/report.html">https://owl.fish.washington.edu/nightingales/G_macrocephalus/AN00025267/202508_AN00025267_Report/report.html</a></li>
</ul>
<section id="checksum-verification" class="level2">
<h2 class="anchored" data-anchor-id="checksum-verification">Checksum verification</h2>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-08-02-Data-Received---Pacific-cod-Whole-Genome-Bisulfite-Sequencing-from-Psomagen-Project-AN00025267/20250802-gmac-md5sum-checks.png" class="img-fluid figure-img"></p>
<figcaption>Screencap confirming MD5 checksums after transfer to Owl.</figcaption>
</figure>
</div>


</section>
</section>

 ]]></description>
  <category>2025</category>
  <category>AN00025267</category>
  <category>WGBS</category>
  <category>Pacific cod</category>
  <category>Gadus macrocephalus</category>
  <category>Data Received</category>
  <guid>https://robertslab.github.io/sams-notebook/posts/2025/2025-08-02-Data-Received---Pacific-cod-Whole-Genome-Bisulfite-Sequencing-from-Psomagen-Project-AN00025267/</guid>
  <pubDate>Sat, 02 Aug 2025 07:00:00 GMT</pubDate>
</item>
<item>
  <title>DNA Alignments - Pacific cod Heatwave Genetics Samples Using BWA on Raven</title>
  <dc:creator>Sam White</dc:creator>
  <link>https://robertslab.github.io/sams-notebook/posts/2025/2025-07-11-DNA-Alignments---Pacific-cod-Heatwave-Genetics-Samples-Using-BWA-on-Raven/</link>
  <description><![CDATA[ 





<section id="intro" class="level1">
<h1>INTRO</h1>
<p>Steven and Laura <a href="https://github.com/RobertsLab/resources/issues/2232">tasked me with running BWA alignments on the Pacific cod heatwave data</a> (GitHub Issue) that Laura previously received. She also previously trimmed that data, but I don’t have a link to the code she used to do that.</p>
<p>This is part of the <a href="https://github.com/RobertsLab/project-cod-temperature"><code>RobertsLab/project-cod-temperature</code></a> (GitHub).</p>
<p>The alignment process was run on Raven and took <em>weeks</em>! I opted for this approach, instead of attempting to run the process on Hyak using arrays of nodes because I thought I’d save time by being able to quickly run the job with simpler code on Raven. To run on Hyak, I was going to need to add software to our Singularity container, re-build it, test it, and then adapt code for running node arrays. As it turns out, I should have spent a day or two doing that! The process would’ve been significantly faster splitting it across multiple computing nodes!!</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Code below was knitted from <a href="https://github.com/RobertsLab/project-cod-temperature/blob/main/code/14.00-heatwave-genetics-trimmed-bwa-alignments.Rmd"><code>14.00-heatwave-genetics-trimmed-bwa-alignments.Rmd</code></a> (GitHub)</p>
</div>
</div>
<hr>
</section>
<section id="background" class="level1">
<h1>1 BACKGROUND</h1>
<p>This Rmd file will perform the following:</p>
<ol type="1">
<li><p>Create BWA genome index using <a href="https://github.com/lh3/bwa">BWA</a> (Li 2013), if needed.</p></li>
<li><p>Align trimmed FastQs (previously performed by Laura Spencer) to the <em>G.macrocepahlus</em> genome (<a href="https://www.ncbi.nlm.nih.gov/datasets/genome/GCF_031168955.1/">NCBI GCF_031168955.1_ASM3116895v1</a>) using <a href="https://github.com/lh3/bwa">BWA</a> (Li 2013).</p></li>
<li><p>Use <a href="https://github.com/broadinstitute/picard">picard</a> (“Picard Toolkit” 2019) to remove duplicates.</p></li>
<li><p>Use <a href="https://github.com/statgen/bamUtil">bamUtil</a> (Jun et al.&nbsp;2015) to remove overlaps.</p></li>
<li><p>Use <a href="https://www.htslib.org/doc/samtools-depth.html">samtools</a> (Danecek et al.&nbsp;2021) to compute depth.</p></li>
</ol>
</section>
<section id="inputs" class="level1">
<h1>2 INPUTS</h1>
<ul>
<li>Genome FastA</li>
<li>BWA genome FastA index</li>
</ul>
</section>
<section id="outputs" class="level1">
<h1>3 OUTPUTS</h1>
<ul>
<li>Deduplicated, sorted, clipped BAM files</li>
<li>samtools depth file</li>
<li>BAM index files</li>
<li>samtools stats file for BWA alignments</li>
<li>samtools flagstat file for BWA alignments</li>
</ul>
<p>NOTE: Due to the size of the output files, they are not included in the repository. Instead, you can find them in the here:</p>
<ul>
<li><a href="https://gannet.fish.washington.edu/gitrepos/project-cod-temperature/output/14.00-heatwave-genetics-trimmed-bwa-alignments/" class="uri">https://gannet.fish.washington.edu/gitrepos/project-cod-temperature/output/14.00-heatwave-genetics-trimmed-bwa-alignments/</a></li>
</ul>
</section>
<section id="variables" class="level1">
<h1>4 VARIABLES</h1>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># DIRECTORIES</span></span>
<span id="cb1-2">top_output_dir <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".."</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"output"</span>)</span>
<span id="cb1-3">output_dir <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(top_output_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"14.00-heatwave-genetics-trimmed-bwa-alignments"</span>)</span>
<span id="cb1-4">data_dir <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".."</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>)</span>
<span id="cb1-5">trimmed_reads_dir <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(data_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"trimmed-fastqs-heatwave-genetics"</span>)</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># PROGRAMS</span></span>
<span id="cb1-8">programs_dir <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"home"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"shared"</span>)</span>
<span id="cb1-9">bamUtil_dir <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(programs_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bamUtil-1.0.15"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bin"</span>)</span>
<span id="cb1-10">bwa <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(programs_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bwa-0.7.17"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bwa"</span>)</span>
<span id="cb1-11">conda_env_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"base"</span>)</span>
<span id="cb1-12">conda_path <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/sam/programs/mambaforge/condabin/conda"</span>)</span>
<span id="cb1-13">mean_depths <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/home/shared/16TB_HDD_01/sam/gitrepos/WGSfqs-to-genolikelihoods/mean_cov_ind.py"</span>)</span>
<span id="cb1-14">multiqc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"home"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sam"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"programs"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mambaforge"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bin"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"multiqc"</span>)</span>
<span id="cb1-15">picard_dir <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(programs_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"picard-3.4.0-6-g80ca98e2a"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"build"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"libs"</span>)</span>
<span id="cb1-16">picard <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(picard_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"picard.jar"</span>)</span>
<span id="cb1-17">R1_suffix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_trimmed_clipped_R1_paired.fq.gz"</span></span>
<span id="cb1-18">R2_suffix <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_trimmed_clipped_R2_paired.fq.gz"</span></span>
<span id="cb1-19">samtools_dir <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(programs_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"samtools-1.12"</span>)</span>
<span id="cb1-20">samtools <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(samtools_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"samtools"</span>)</span>
<span id="cb1-21"></span>
<span id="cb1-22"></span>
<span id="cb1-23"></span>
<span id="cb1-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FILES</span></span>
<span id="cb1-25">genome_fasta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(data_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GCF_031168955.1_ASM3116895v1_genomic.fna"</span>)</span>
<span id="cb1-26">bwa_index <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">file.path</span>(data_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bwa-GCF_031168955.1_ASM3116895v1_genomic"</span>)</span>
<span id="cb1-27"></span>
<span id="cb1-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># THREADS</span></span>
<span id="cb1-29">threads <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"40"</span></span>
<span id="cb1-30"></span>
<span id="cb1-31"></span>
<span id="cb1-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># FORMATTING</span></span>
<span id="cb1-33">line <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-----------------------------------------------"</span></span>
<span id="cb1-34"></span>
<span id="cb1-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Export these as environment variables for bash chunks.</span></span>
<span id="cb1-36"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.setenv</span>(</span>
<span id="cb1-37">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bamUtil_dir =</span> bamUtil_dir,</span>
<span id="cb1-38">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bwa =</span> bwa,</span>
<span id="cb1-39">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bwa_index =</span> bwa_index,</span>
<span id="cb1-40">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data_dir =</span> data_dir,</span>
<span id="cb1-41">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">genome_fasta =</span> genome_fasta,</span>
<span id="cb1-42">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">line =</span> line,</span>
<span id="cb1-43">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mean_depths =</span> mean_depths,</span>
<span id="cb1-44">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">multiqc =</span> multiqc,</span>
<span id="cb1-45">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">output_dir =</span> output_dir,</span>
<span id="cb1-46">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">picard_dir =</span> picard_dir,</span>
<span id="cb1-47">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">picard =</span> picard,</span>
<span id="cb1-48">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">top_output_dir =</span> top_output_dir,</span>
<span id="cb1-49">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">R1_suffix =</span> R1_suffix,</span>
<span id="cb1-50">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">R2_suffix =</span> R2_suffix,</span>
<span id="cb1-51">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">samtools =</span> samtools,</span>
<span id="cb1-52">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">threads =</span> threads,</span>
<span id="cb1-53">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trimmed_reads_dir =</span> trimmed_reads_dir</span>
<span id="cb1-54">)</span></code></pre></div>
</section>
<section id="load-conda-environment" class="level1">
<h1>5 Load Conda environment</h1>
<p>This is needed to have access to Python3.</p>
<p>If this is successful, the first line of output should show that Python being used.</p>
<p>E.g.</p>
<p><code>python:         /home/sam/programs/mambaforge/envs/mirmachine_env/bin/python</code></p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">use_condaenv</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">condaenv =</span> conda_env_name, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">conda =</span> conda_path)</span>
<span id="cb2-2"></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check successful env loading</span></span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">py_config</span>()</span></code></pre></div>
<pre><code>python:         /home/sam/programs/mambaforge/bin/python
libpython:      /home/sam/programs/mambaforge/lib/libpython3.10.so
pythonhome:     /home/sam/programs/mambaforge:/home/sam/programs/mambaforge
version:        3.10.10 | packaged by conda-forge | (main, Mar 24 2023, 20:08:06) [GCC 11.3.0]
numpy:          /home/sam/programs/mambaforge/lib/python3.10/site-packages/numpy
numpy_version:  1.24.3

NOTE: Python version was forced by use_python() function</code></pre>
</section>
<section id="alignments" class="level1">
<h1>6 ALIGNMENTS</h1>
<section id="create-bwa-index" class="level2">
<h2 class="anchored" data-anchor-id="create-bwa-index">6.1 Create BWA Index</h2>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if BWA index file exists</span></span>
<span id="cb4-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">!</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">-f</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bwa-GCF_031168955.1_ASM3116895v1_genomic.bwt"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">]];</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">then</span></span>
<span id="cb4-3">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BWA index file not found. Creating BWA index..."</span></span>
<span id="cb4-4">    <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${bwa}</span> index <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${data_dir}</span>/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${bwa_index}</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${data_dir}</span>/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${genome_fasta}</span></span>
<span id="cb4-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span></span>
<span id="cb4-6">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BWA index file already exists. Skipping index creation."</span></span>
<span id="cb4-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">fi</span></span></code></pre></div>
</section>
<section id="check-fastqs" class="level2">
<h2 class="anchored" data-anchor-id="check-fastqs">6.2 Check FastQs</h2>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb5-1"></span>
<span id="cb5-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ls</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-1</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${trimmed_reads_dir}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/"</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>.fq.gz <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wc</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-l</span></span></code></pre></div>
</section>
<section id="align-with-bwa" class="level2">
<h2 class="anchored" data-anchor-id="align-with-bwa">6.3 Align with BWA</h2>
<p>This step will produced sorted BAM files.</p>
<p>Alignment is done with the <code>-M</code> option, which does the following:</p>
<blockquote class="blockquote">
<p>Mark shorter split hits as secondary (for Picard compatibility).</p>
</blockquote>
<p><code>samtools view</code> is run with the <code>-F 4</code>. This will exclude unmapped reads.</p>
<p>See <a href="https://broadinstitute.github.io/picard/explain-flags.html" class="uri">https://broadinstitute.github.io/picard/explain-flags.html</a> and <a href="https://www.htslib.org/doc/samtools-view.html" class="uri">https://www.htslib.org/doc/samtools-view.html</a> for more explanation.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make output directory, if it doesn't exist</span></span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mkdir</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--parents</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${output_dir}</span></span>
<span id="cb6-3"></span>
<span id="cb6-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Declare arrays</span></span>
<span id="cb6-5"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">R1_array</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb6-6"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">R2_array</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">()</span></span>
<span id="cb6-7"></span>
<span id="cb6-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Populate arrays</span></span>
<span id="cb6-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">R1_array</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${trimmed_reads_dir}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${R1_suffix}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-10"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">R2_array</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">(</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${trimmed_reads_dir}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${R2_suffix}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">)</span></span>
<span id="cb6-11"></span>
<span id="cb6-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run BWA</span></span>
<span id="cb6-13"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">time</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-14">for fastq in <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">R1_array</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[@]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-15"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb6-16">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove path from FastQ</span></span>
<span id="cb6-17">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sample_no_path</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${R1_array</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>fastq<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]##</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-18">  </span>
<span id="cb6-19">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Capture just samples name (string before first `_`)</span></span>
<span id="cb6-20">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sample</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample_no_path</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span>_<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb6-21">  </span>
<span id="cb6-22">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${fastq}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-23">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb6-24">  </span>
<span id="cb6-25">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run BWA</span></span>
<span id="cb6-26">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${bwa}</span> mem <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-27">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-M</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-28">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-t</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${threads}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-29">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${bwa_index}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-30">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${R1_array</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>fastq<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-31">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${R2_array</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">[</span>fastq<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">]</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-32">  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${output_dir}</span>/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample}</span>-bwa.stderr <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-33">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">samtools</span> view <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-@</span> 20 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-bS</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-F</span> 4 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-34">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">samtools</span> sort <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-@</span> 20 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${output_dir}</span>/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample}</span>.sorted.bam</span>
<span id="cb6-35"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
</section>
</section>
<section id="mark-duplicates" class="level1">
<h1>7 MARK DUPLICATES</h1>
<section id="set-read-groups" class="level2">
<h2 class="anchored" data-anchor-id="set-read-groups">7.1 Set read groups</h2>
<p>Downstream analysis with Picard requires BAM files to have read groups, but these were not set earlier.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> bam <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${output_dir}</span>/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>.sorted.bam</span>
<span id="cb7-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb7-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove path from BAM</span></span>
<span id="cb7-4">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sample_no_path</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${bam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">##</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-5">  </span>
<span id="cb7-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Capture just samples name (string before first `.`)</span></span>
<span id="cb7-7">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sample</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample_no_path</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span>.<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb7-8">  </span>
<span id="cb7-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check read group</span></span>
<span id="cb7-10">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb7-11">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Read group for </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${bam}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> before samtools:"</span></span>
<span id="cb7-12">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${samtools}</span> view <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-H</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${bam}</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'@RG'</span></span>
<span id="cb7-13">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb7-14">  </span>
<span id="cb7-15">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${samtools}</span> addreplacerg <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-16">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"@RG\tID:RG1\tSM:</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-17">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${output_dir}</span>/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample}</span>-RG.sorted.bam <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-18">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--threads</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${threads}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb7-19">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${bam}</span></span>
<span id="cb7-20">  </span>
<span id="cb7-21">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Read group for </span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${output_dir}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">-RG.sorted.bam:"</span></span>
<span id="cb7-22">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${samtools}</span> view <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-H</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${output_dir}</span>/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample}</span>-RG.sorted.bam <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'@RG'</span></span>
<span id="cb7-23">  <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb7-24"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
</section>
<section id="picard-markduplicates" class="level2">
<h2 class="anchored" data-anchor-id="picard-markduplicates">7.2 Picard MarkDuplicates</h2>
<p>Use Picard to mark duplicates</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> bam <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${output_dir}</span>/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>RG.sorted.bam</span>
<span id="cb8-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb8-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove path from BAM</span></span>
<span id="cb8-4">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sample_no_path</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${bam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">##</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb8-5">  </span>
<span id="cb8-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Capture just samples name (string before first `.`)</span></span>
<span id="cb8-7">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sample</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample_no_path</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span>.<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb8-8">  </span>
<span id="cb8-9">  <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">java</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-jar</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${picard}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb8-10">  MarkDuplicates <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb8-11">  I=<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${bam}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb8-12">  O=<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${output_dir}</span>/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample}</span>.sorted.dedup.bam <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb8-13">  M=<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${output_dir}</span>/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample}</span>-picard_dups.log <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb8-14">  VALIDATION_STRINGENCY=SILENT <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb8-15">  REMOVE_DUPLICATES=true <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb8-16">  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${output_dir}</span>/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample}</span>-picard_dups.stderr</span>
<span id="cb8-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
</section>
</section>
<section id="clip-overlaps" class="level1">
<h1>8 CLIP OVERLAPS</h1>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> bam <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${output_dir}</span>/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>.sorted.dedup.bam</span>
<span id="cb9-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb9-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove path from BAM</span></span>
<span id="cb9-4">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sample_no_path</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${bam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">##</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb9-5">  </span>
<span id="cb9-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Capture just samples name (string before first `.`)</span></span>
<span id="cb9-7">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sample</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample_no_path</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span>.<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb9-8">  </span>
<span id="cb9-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run BamUtils to clip overlaps</span></span>
<span id="cb9-10">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${bamUtil_dir}</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/bam</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-11">  clipOverlap <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${bam}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${output_dir}</span>/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample}</span>.sorted.dedup.clipped.bam <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--stats</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb9-15">  <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${output_dir}</span>/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample}</span>.sorted.dedup.clipped-bamUtil.stats</span>
<span id="cb9-16"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
</section>
<section id="depths" class="level1">
<h1>9 DEPTHS</h1>
<section id="samtools-depth" class="level2">
<h2 class="anchored" data-anchor-id="samtools-depth">9.1 samtools depth</h2>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> bam <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${output_dir}</span>/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>.sorted.dedup.clipped.bam</span>
<span id="cb10-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb10-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove path from BAM</span></span>
<span id="cb10-4">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sample_no_path</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${bam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">##</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-5">  </span>
<span id="cb10-6">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Capture filename without .bam (string before last `.`)</span></span>
<span id="cb10-7">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sample</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample_no_path</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%</span>.<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-8">  </span>
<span id="cb10-9">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run BamUtils to clip overlaps</span></span>
<span id="cb10-10">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${samtools}</span> depth <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb10-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-aa</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb10-12">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${bam}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb10-13">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cut</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> 3 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb10-14">  <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gzip</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb10-15">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${output_dir}</span>/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample}</span>.depth.gz</span>
<span id="cb10-16"></span>
<span id="cb10-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
</section>
<section id="mean-depths" class="level2">
<h2 class="anchored" data-anchor-id="mean-depths">9.2 Mean depths</h2>
<p>Uses <code>mean_cov_ind.py</code> Python script from <a href="https://github.com/letimm/WGSfqs-to-genolikelihoods/tree/main" class="uri">https://github.com/letimm/WGSfqs-to-genolikelihoods/tree/main</a></p>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"></span>
<span id="cb11-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${output_dir}</span></span>
<span id="cb11-3"></span>
<span id="cb11-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> depth_file <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>-RG.sorted.dedup.clipped.depth.gz</span>
<span id="cb11-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb11-6">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${mean_depths}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb11-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--infile</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${depth_file}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb11-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--outfile</span> mean-coverage.tab</span>
<span id="cb11-9"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span>
<span id="cb11-10"></span>
<span id="cb11-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span> mean-coverage.tab</span></code></pre></div>
<pre><code>MHW001-RG.sorted.dedup.clipped.depth.gz 1.990901406579994
MHW002-RG.sorted.dedup.clipped.depth.gz 2.4325807984518892
MHW003-RG.sorted.dedup.clipped.depth.gz 10.735153890842785
MHW004-RG.sorted.dedup.clipped.depth.gz 8.894250537520717
MHW005-RG.sorted.dedup.clipped.depth.gz 3.3115601503387313
MHW006-RG.sorted.dedup.clipped.depth.gz 2.671577399430869
MHW007-RG.sorted.dedup.clipped.depth.gz 8.092257537557492
MHW008-RG.sorted.dedup.clipped.depth.gz 7.779096441098513
MHW009-RG.sorted.dedup.clipped.depth.gz 11.925061778018813
MHW010-RG.sorted.dedup.clipped.depth.gz 12.765145869286487</code></pre>
</section>
</section>
<section id="index-bams" class="level1">
<h1>10 INDEX BAMS</h1>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"></span>
<span id="cb13-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${output_dir}</span></span>
<span id="cb13-3"></span>
<span id="cb13-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> bam <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>.sorted.dedup.clipped.bam</span>
<span id="cb13-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb13-6">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${samtools}</span> index <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb13-7">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${bam}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb13-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--threads</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${threads}</span></span>
<span id="cb13-9"></span>
<span id="cb13-10"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
</section>
<section id="stats-files" class="level1">
<h1>11 STATS FILES</h1>
<p>Generate <code>samtools stats</code> and <code>samtools flagstat</code> for BWA alignments.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb14-1"></span>
<span id="cb14-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> bam <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${output_dir}</span>/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>-RG.sorted.bam</span>
<span id="cb14-3"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">do</span></span>
<span id="cb14-4">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove path from BAM</span></span>
<span id="cb14-5">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sample_no_path</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${bam</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">##</span><span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span>/<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-6">  </span>
<span id="cb14-7">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Capture just samples name (string before first `.`)</span></span>
<span id="cb14-8">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">sample</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample_no_path</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span>.<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb14-9">  </span>
<span id="cb14-10">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># samtools stats</span></span>
<span id="cb14-11">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${samtools}</span> stats <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb14-12">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${bam}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb14-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-@</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${threads}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb14-14">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${output_dir}</span>/<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample_no_path}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.stats"</span></span>
<span id="cb14-15">  </span>
<span id="cb14-16">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># samtools flagstat</span></span>
<span id="cb14-17">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${samtools}</span> flagstat <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb14-18">  <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${bam}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb14-19">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-@</span> {threads} <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb14-20">  <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${output_dir}</span>/<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${sample_no_path}</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">.flagstat"</span></span>
<span id="cb14-21"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">done</span></span></code></pre></div>
<section id="multiqc-on-picard-markdduplicates-and-samtools-statsflagstat-files" class="level2">
<h2 class="anchored" data-anchor-id="multiqc-on-picard-markdduplicates-and-samtools-statsflagstat-files">11.1 MultiQC on Picard MarkdDuplicates and samtools stats/flagstat files</h2>
<div class="sourceCode" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb15-1"></span>
<span id="cb15-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${output_dir}</span></span>
<span id="cb15-3"></span>
<span id="cb15-4"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${multiqc}</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--interactive</span> .</span></code></pre></div>
<pre><code>  /// MultiQC 🔍 | v1.14

|           multiqc | MultiQC Version v1.30 now available!
|           multiqc | Search path : /home/shared/16TB_HDD_01/sam/gitrepos/RobertsLab/project-cod-temperature/output/14.00-heatwave-genetics-trimmed-bwa-alignments
|         searching | ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 4131/4131  
|            picard | Found 344 MarkDuplicates reports
|          samtools | Found 344 stats reports
|          samtools | Found 344 flagstat reports
|           multiqc | Compressing plot data
|           multiqc | Report      : multiqc_report.html
|           multiqc | Data        : multiqc_data
|           multiqc | MultiQC complete</code></pre>
</section>
</section>
<section id="references" class="level1">
<h1>12 REFERENCES</h1>
<div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-danecek2021" class="csl-entry">
Danecek, Petr, James K Bonfield, Jennifer Liddle, John Marshall, Valeriu Ohan, Martin O Pollard, Andrew Whitwham, et al.&nbsp;2021. “Twelve Years of SAMtools and BCFtools.” <em>GigaScience</em> 10 (2). <a href="https://doi.org/10.1093/gigascience/giab008" class="uri">https://doi.org/10.1093/gigascience/giab008</a>.
</div>
<div id="ref-jun2015" class="csl-entry">
Jun, Goo, Mary Kate Wing, Gonçalo R. Abecasis, and Hyun Min Kang. 2015. “An Efficient and Scalable Analysis Framework for Variant Extraction and Refinement from Population-Scale DNA Sequence Data.” <em>Genome Research</em> 25 (6): 918–25. <a href="https://doi.org/10.1101/gr.176552.114" class="uri">https://doi.org/10.1101/gr.176552.114</a>.
</div>
<div id="ref-li2013" class="csl-entry">
Li, Heng. 2013. “Aligning Sequence Reads, Clone Sequences and Assembly Contigs with BWA-MEM.” <a href="https://doi.org/10.48550/ARXIV.1303.3997" class="uri">https://doi.org/10.48550/ARXIV.1303.3997</a>.
</div>
<div id="ref-Picard2019toolkit" class="csl-entry">
“Picard Toolkit.” 2019. <em>Broad Institute, GitHub Repository</em>. <a href="https://broadinstitute.github.io/picard/" class="uri">https://broadinstitute.github.io/picard/</a>; Broad Institute.
</div>
</div>


</section>

 ]]></description>
  <category>2025</category>
  <category>BWA</category>
  <category>raven</category>
  <category>Pacific cod</category>
  <category>Gadus macrocephalus</category>
  <guid>https://robertslab.github.io/sams-notebook/posts/2025/2025-07-11-DNA-Alignments---Pacific-cod-Heatwave-Genetics-Samples-Using-BWA-on-Raven/</guid>
  <pubDate>Fri, 11 Jul 2025 07:00:00 GMT</pubDate>
  <media:content url="https://robertslab.github.io/sams-notebook/posts/2025/2025-07-11-DNA-Alignments---Pacific-cod-Heatwave-Genetics-Samples-Using-BWA-on-Raven/20250711-gmac-multiqc-picard_deduplication.png" medium="image" type="image/png" height="96" width="144"/>
</item>
<item>
  <title>DNA Isolation Quantification and Concentration - S.namaycush Siscowet Liver Samples Using Zymo Quick-DNA RNA MiniPrep Plus Kit</title>
  <dc:creator>Sam White</dc:creator>
  <link>https://robertslab.github.io/sams-notebook/posts/2025/2025-07-08-DNA-Isolation-Quantification-and-Concentration---S.namaycush-Siscowet-Liver-Samples-Using-Zymo-Quick-DNA-RNA-MiniPrep-Plus-Kit/</link>
  <description><![CDATA[ 





<section id="intro" class="level1">
<h1>INTRO</h1>
<p>Steven asked that I <a href="https://github.com/RobertsLab/resources/issues/2217">isolate gDNA from more Siscowet lake trout (<em>S.namaycush</em>) liver samples</a> (GitHub Issue) to send to Angie for sequencing - part of Rick’s project.</p>
</section>
<section id="methods" class="level1">
<h1>METHODS</h1>
<p>DNA was isolated using the Quick-DNA/RNA Miniprep Plus Kit (ZymoResearch), according to the manufacturer’s protocol. Liver tissues had been stored @ -20<sup>o</sup>C in RNALater (Ambion). I thawed the tubes, transferred the entire liver tissue (which was very small) to a disposable mortar/pestle combo (1.5mL tube) and homogenized in 1x DNA/RNA Shield. Insoluble material was pelleted and the remainder of the protocol was followed (note: I did <em>not</em> perform Proteinase K lysis). DNA was eventually eluted with 50uL of water.</p>
<p>Subsequently, DNA was quantified using the dsDNA Broad Range Qubit Assay (ThermoFisher). One microliter of sample was combined with 199uL of the dye/buffer mix and measured on a Qubit 3.0.</p>
<p>All samples were subjected to concentrating using a SpeedVac on the “High Drying Rate” setting for ~1hr, as Angie needs highly concentrated DNA for sequencing, with a targeted final volume of ~10uL.</p>
<p>DNA was stored in a box labelled “Lake Trout Liver gDNA” in the FTR 209 -20<sup>o</sup>C freezer.</p>
</section>
<section id="results" class="level1">
<h1>RESULTS</h1>
<section id="qubit-data" class="level2">
<h2 class="anchored" data-anchor-id="qubit-data">Qubit data</h2>
<ul>
<li><a href="https://docs.google.com/spreadsheets/d/1O5Ic79ugw0NnnWsVgZchF5aTQ3DQ9PsCiCAFYnIJKJU/edit?usp=sharing">20250708-snam-qubit-DNA.br-liver</a> (Google Sheet)</li>
</ul>
<table class="caption-top table">
<thead>
<tr class="header">
<th>sample_ID</th>
<th>Concentration (ng/uL)</th>
<th>Volume (uL)</th>
<th>Yield (ng)</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>FA 244</td>
<td>29</td>
<td>40</td>
<td>1160</td>
</tr>
<tr class="even">
<td>FA 245</td>
<td>270</td>
<td>40</td>
<td>10800</td>
</tr>
<tr class="odd">
<td>FA 251</td>
<td>104</td>
<td>40</td>
<td>4160</td>
</tr>
<tr class="even">
<td>FA 252</td>
<td>183</td>
<td>40</td>
<td>7320</td>
</tr>
<tr class="odd">
<td>FA 253</td>
<td>195</td>
<td>40</td>
<td>7800</td>
</tr>
</tbody>
</table>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>This table details sample info <em>before</em> concentrating. Samples were <em>not</em> measured after concentrating.</p>
</div>
</div>


</section>
</section>

 ]]></description>
  <category>2025</category>
  <category>Salvelinus namaycush</category>
  <category>Lake trout</category>
  <category>siscowet</category>
  <category>DNA isolation</category>
  <category>DNA quantification</category>
  <category>Qubit</category>
  <guid>https://robertslab.github.io/sams-notebook/posts/2025/2025-07-08-DNA-Isolation-Quantification-and-Concentration---S.namaycush-Siscowet-Liver-Samples-Using-Zymo-Quick-DNA-RNA-MiniPrep-Plus-Kit/</guid>
  <pubDate>Tue, 08 Jul 2025 07:00:00 GMT</pubDate>
</item>
<item>
  <title>SRA Submission - R.philippinarum Egg RNA-seq Data</title>
  <dc:creator>Sam White</dc:creator>
  <link>https://robertslab.github.io/sams-notebook/posts/2025/2025-07-07-SRA-Submission---R.philippinarum-Egg-RNA-seq-Data/</link>
  <description><![CDATA[ 





<p><a href="https://github.com/RobertsLab/resources/issues/2223">Mac asked me to submit a set of files to NCBI Short Read Archive</a> (SRA; GitHub Issue).</p>
<p>Files were released as the following BioProject:</p>
<p><a href="https://www.ncbi.nlm.nih.gov/bioproject/PRJNA1289209">PRJNA1289209</a></p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://robertslab.github.io/sams-notebook/posts/2025/2025-07-07-SRA-Submission---R.philippinarum-Egg-RNA-seq-Data/20250707-rphi-sra-bioproject-screencap.png" class="img-fluid figure-img" alt="Screenshot of the NCBI BioProject page for PRJNA1289209 titled Parental priming for ocean acidification resilience in cultured Manila clams mechanistic insights gained through transcriptome analysis. The page displays project details including accession number PRJNA1289209, data type as raw sequence reads, scope as multispecies, and submission by University of Washington with a registration date of 9-Jul-2025. SRA Data Details table lists data volume as 330 Gbases and 0.11 Tbytes."></p>
<figcaption>Screenshot of the NCBI BioProject page for PRJNA1289209 titled Parental priming for ocean acidification resilience in cultured Manila clams mechanistic insights gained through transcriptome analysis. The page displays project details including accession number PRJNA1289209, data type as raw sequence reads, scope as multispecies, and submission by University of Washington with a registration date of 9-Jul-2025. SRA Data Details table lists data volume as 330 Gbases and 0.11 Tbytes.</figcaption>
</figure>
</div>



 ]]></description>
  <category>2025</category>
  <category>Ruditapes philippinarum</category>
  <category>Manila clam</category>
  <category>RNA-seq</category>
  <category>SRA submission</category>
  <category>NCBI</category>
  <category>PRJNA1289209</category>
  <guid>https://robertslab.github.io/sams-notebook/posts/2025/2025-07-07-SRA-Submission---R.philippinarum-Egg-RNA-seq-Data/</guid>
  <pubDate>Mon, 07 Jul 2025 07:00:00 GMT</pubDate>
</item>
</channel>
</rss>
