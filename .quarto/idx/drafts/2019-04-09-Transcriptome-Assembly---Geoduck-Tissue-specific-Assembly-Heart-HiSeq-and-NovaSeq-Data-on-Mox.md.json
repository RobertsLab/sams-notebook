{"title":"Transcriptome Assembly - Geoduck Tissue-specific Assembly Heart HiSeq and NovaSeq Data on Mox","markdown":{"yaml":{"layout":"post","title":"Transcriptome Assembly - Geoduck Tissue-specific Assembly Heart HiSeq and NovaSeq Data on Mox","date":"2019-04-09 07:01","tags":["Panopea generosa","geoduck","heart","trinity","assembly","mox","transcriptome"],"categories":["Miscellaneous"]},"headingText":"RESULTS","containsRefs":false,"markdown":"\nI previously assembled and annotated _P.generosa_ heart transcriptome ([20190318](https://robertslab.github.io/sams-notebook/2019/03/18/Transcriptome-Annotation-Geoduck-Heart-with-Trinotate-on-Mox.html)) using just our HiSeq data from our Illumina collaboration. This was a an oversight, as I didn't realize that we also had NovaSeq RNAseq data. So, I've initiated another _de novo_ assembly using Trinity incorporating both sets of data.\n\nSBATCH script (GitHub):\n\n- [20190409_trinity_pgen_heart_RNAseq.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20190409_trinity_pgen_heart_RNAseq.sh)\n\n```shell\n    #!/bin/bash\n    ## Job Name\n    #SBATCH --job-name=trin_heart\n    ## Allocation Definition\n    #SBATCH --account=coenv\n    #SBATCH --partition=coenv\n    ## Resources\n    ## Nodes\n    #SBATCH --nodes=1\n    ## Walltime (days-hours:minutes:seconds format)\n    #SBATCH --time=30-00:00:00\n    ## Memory per node\n    #SBATCH --mem=120G\n    ##turn on e-mail notification\n    #SBATCH --mail-type=ALL\n    #SBATCH --mail-user=samwhite@uw.edu\n    ## Specify the working directory for this job\n    #SBATCH --workdir=/gscratch/scrubbed/samwhite/outputs/20190409_trinity_pgen_heart_RNAseq    \n\n    # Exit script if a command fails\n    set -e    \n\n    # Load Python Mox module for Python module availability\n    module load intel-python3_2017    \n\n    # Document programs in PATH (primarily for program version ID)\n    date >> system_path.log\n    echo \"\" >> system_path.log\n    echo \"System PATH for $SLURM_JOB_ID\" >> system_path.log\n    echo \"\" >> system_path.log\n    printf \"%0.s-\" {1..10} >> system_path.log\n    echo ${PATH} | tr : \\\\n >> system_path.log    \n\n    # User-defined variables\n    reads_dir=/gscratch/srlab/sam/data/P_generosa/RNAseq/heart\n    threads=28\n    assembly_stats=assembly_stats.txt    \n\n    # Paths to programs\n    trinity_dir=\"/gscratch/srlab/programs/Trinity-v2.8.3\"\n    samtools=\"/gscratch/srlab/programs/samtools-1.9/samtools\"    \n\n\n    ## Inititalize arrays\n    R1_array=()\n    R2_array=()    \n\n    # Variables for R1/R2 lists\n    R1_list=\"\"\n    R2_list=\"\"    \n\n    # Create array of fastq R1 files\n    R1_array=(${reads_dir}/*_R1_*.gz)    \n\n    # Create array of fastq R2 files\n    R2_array=(${reads_dir}/*_R2_*.gz)    \n\n    # Create list of fastq files used in analysis\n    ## Uses parameter substitution to strip leading path from filename\n    for fastq in ${reads_dir}/*.gz\n    do\n      echo ${fastq##*/} >> fastq.list.txt\n    done    \n\n    # Create comma-separated lists of FastQ reads\n    R1_list=$(echo ${R1_array[@]} | tr \" \" \",\")\n    R2_list=$(echo ${R2_array[@]} | tr \" \" \",\")    \n\n\n    # Run Trinity\n    ${trinity_dir}/Trinity \\\n    --trimmomatic \\\n    --seqType fq \\\n    --max_memory 120G \\\n    --CPU ${threads} \\\n    --left \\\n    ${R1_list} \\\n    --right \\\n    ${R2_list}    \n\n    # Assembly stats\n    ${trinity_dir}/util/TrinityStats.pl trinity_out_dir/Trinity.fasta \\\n    > ${assembly_stats}    \n\n    # Create gene map files\n    ${trinity_dir}/util/support_scripts/get_Trinity_gene_to_trans_map.pl \\\n    trinity_out_dir/Trinity.fasta \\\n    > trinity_out_dir/Trinity.fasta.gene_trans_map    \n\n    # Create FastA index\n    ${samtools} faidx \\\n    trinity_out_dir/Trinity.fasta\n```\n\nOof, after running for over _two weeks_ the Mox node crashed this past weekend:\n\n![Screencap of Trinity node failure notification.](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20190607_trinity_node_fail.png?raw=true)\n\n\nHave restarted the job...\n\n---\n\n\nOutput folder:\n\n- []()\n\nTrinity FastA:\n\n- []()\n\nTrinity FastA index file:\n\n- []()\n\nTrinity Gene Trans Map file:\n\n- [20190409_trinity_pgen_heart_RNAseq/trinity_out_dir/Trinity.fasta.gene_trans_map](http://gannet.fish.washington.edu/Atumefaciens/20190409_trinity_pgen_heart_RNAseq/trinity_out_dir/Trinity.fasta.gene_trans_map)\n\n\nAssembly stats (text):\n\n- [20190409_trinity_pgen_heart_RNAseq/assembly_stats.txt](http://gannet.fish.washington.edu/Atumefaciens/20190409_trinity_pgen_heart_RNAseq/assembly_stats.txt)\n\n```\n\n```\n\nList of input FastQs (text):\n\n- [20190409_trinity_pgen_heart_RNAseq/fastq.list.txt](http://gannet.fish.washington.edu/Atumefaciens/20190409_trinity_pgen_heart_RNAseq/fastq.list.txt)\n\n```\n\n```\n","srcMarkdownNoYaml":"\nI previously assembled and annotated _P.generosa_ heart transcriptome ([20190318](https://robertslab.github.io/sams-notebook/2019/03/18/Transcriptome-Annotation-Geoduck-Heart-with-Trinotate-on-Mox.html)) using just our HiSeq data from our Illumina collaboration. This was a an oversight, as I didn't realize that we also had NovaSeq RNAseq data. So, I've initiated another _de novo_ assembly using Trinity incorporating both sets of data.\n\nSBATCH script (GitHub):\n\n- [20190409_trinity_pgen_heart_RNAseq.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20190409_trinity_pgen_heart_RNAseq.sh)\n\n```shell\n    #!/bin/bash\n    ## Job Name\n    #SBATCH --job-name=trin_heart\n    ## Allocation Definition\n    #SBATCH --account=coenv\n    #SBATCH --partition=coenv\n    ## Resources\n    ## Nodes\n    #SBATCH --nodes=1\n    ## Walltime (days-hours:minutes:seconds format)\n    #SBATCH --time=30-00:00:00\n    ## Memory per node\n    #SBATCH --mem=120G\n    ##turn on e-mail notification\n    #SBATCH --mail-type=ALL\n    #SBATCH --mail-user=samwhite@uw.edu\n    ## Specify the working directory for this job\n    #SBATCH --workdir=/gscratch/scrubbed/samwhite/outputs/20190409_trinity_pgen_heart_RNAseq    \n\n    # Exit script if a command fails\n    set -e    \n\n    # Load Python Mox module for Python module availability\n    module load intel-python3_2017    \n\n    # Document programs in PATH (primarily for program version ID)\n    date >> system_path.log\n    echo \"\" >> system_path.log\n    echo \"System PATH for $SLURM_JOB_ID\" >> system_path.log\n    echo \"\" >> system_path.log\n    printf \"%0.s-\" {1..10} >> system_path.log\n    echo ${PATH} | tr : \\\\n >> system_path.log    \n\n    # User-defined variables\n    reads_dir=/gscratch/srlab/sam/data/P_generosa/RNAseq/heart\n    threads=28\n    assembly_stats=assembly_stats.txt    \n\n    # Paths to programs\n    trinity_dir=\"/gscratch/srlab/programs/Trinity-v2.8.3\"\n    samtools=\"/gscratch/srlab/programs/samtools-1.9/samtools\"    \n\n\n    ## Inititalize arrays\n    R1_array=()\n    R2_array=()    \n\n    # Variables for R1/R2 lists\n    R1_list=\"\"\n    R2_list=\"\"    \n\n    # Create array of fastq R1 files\n    R1_array=(${reads_dir}/*_R1_*.gz)    \n\n    # Create array of fastq R2 files\n    R2_array=(${reads_dir}/*_R2_*.gz)    \n\n    # Create list of fastq files used in analysis\n    ## Uses parameter substitution to strip leading path from filename\n    for fastq in ${reads_dir}/*.gz\n    do\n      echo ${fastq##*/} >> fastq.list.txt\n    done    \n\n    # Create comma-separated lists of FastQ reads\n    R1_list=$(echo ${R1_array[@]} | tr \" \" \",\")\n    R2_list=$(echo ${R2_array[@]} | tr \" \" \",\")    \n\n\n    # Run Trinity\n    ${trinity_dir}/Trinity \\\n    --trimmomatic \\\n    --seqType fq \\\n    --max_memory 120G \\\n    --CPU ${threads} \\\n    --left \\\n    ${R1_list} \\\n    --right \\\n    ${R2_list}    \n\n    # Assembly stats\n    ${trinity_dir}/util/TrinityStats.pl trinity_out_dir/Trinity.fasta \\\n    > ${assembly_stats}    \n\n    # Create gene map files\n    ${trinity_dir}/util/support_scripts/get_Trinity_gene_to_trans_map.pl \\\n    trinity_out_dir/Trinity.fasta \\\n    > trinity_out_dir/Trinity.fasta.gene_trans_map    \n\n    # Create FastA index\n    ${samtools} faidx \\\n    trinity_out_dir/Trinity.fasta\n```\n\nOof, after running for over _two weeks_ the Mox node crashed this past weekend:\n\n![Screencap of Trinity node failure notification.](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20190607_trinity_node_fail.png?raw=true)\n\n\nHave restarted the job...\n\n---\n\n#### RESULTS\n\nOutput folder:\n\n- []()\n\nTrinity FastA:\n\n- []()\n\nTrinity FastA index file:\n\n- []()\n\nTrinity Gene Trans Map file:\n\n- [20190409_trinity_pgen_heart_RNAseq/trinity_out_dir/Trinity.fasta.gene_trans_map](http://gannet.fish.washington.edu/Atumefaciens/20190409_trinity_pgen_heart_RNAseq/trinity_out_dir/Trinity.fasta.gene_trans_map)\n\n\nAssembly stats (text):\n\n- [20190409_trinity_pgen_heart_RNAseq/assembly_stats.txt](http://gannet.fish.washington.edu/Atumefaciens/20190409_trinity_pgen_heart_RNAseq/assembly_stats.txt)\n\n```\n\n```\n\nList of input FastQs (text):\n\n- [20190409_trinity_pgen_heart_RNAseq/fastq.list.txt](http://gannet.fish.washington.edu/Atumefaciens/20190409_trinity_pgen_heart_RNAseq/fastq.list.txt)\n\n```\n\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"toc":true,"output-file":"2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Heart-HiSeq-and-NovaSeq-Data-on-Mox.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"layout":"post","title":"Transcriptome Assembly - Geoduck Tissue-specific Assembly Heart HiSeq and NovaSeq Data on Mox","date":"2019-04-09 07:01","tags":["Panopea generosa","geoduck","heart","trinity","assembly","mox","transcriptome"],"categories":["Miscellaneous"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}