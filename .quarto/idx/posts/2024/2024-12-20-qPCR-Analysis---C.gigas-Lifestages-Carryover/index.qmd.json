{"title":"qPCR Analysis - C.gigas Lifestages Carryover","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","title":"qPCR Analysis - C.gigas Lifestages Carryover","date":"2024-12-20","draft":false,"engine":"knitr","categories":["2024","Crassostrea gigas","Pacific oyster","qPCR","project-gigas-carryover","lifestage_carryover"]},"headingText":"INTRO","containsRefs":false,"markdown":"\n\n\nThis notebook performs pair-wise comparisons of qPCR gene expression,\nnormalized to `GAPDH` expression. It calculates delta Cq, delta delta\nCq, and fold changes in expression. Additionally, it generates box plots\n(delta Cq), and bar plots (fold change expression).\n\nI've provided a summary of the various pair-wise comparisons immediately below, but you might want to just [skip to the plots](#plotting), as the summary _and_ the notebook content is _very_ lengthy.\n\n# SUMMARY\n\n## t-tests (Delta Cq)\n\n### Seed vs. Adult\n\nThese genes had p-values <= 0.05:\n\n- VIPERIN\n\n### Seed vs. Juvenile\n\nThese genes had p-values <= 0.05:\n\n- citrate synthase\n\n- HSP90\n\n### Seed vs. Spat\n\nThese genes had p-values <= 0.05:\n\n- VIPERIN\n\n### Adult vs. Juvenile\n\nThe genes had p-values <= 0.05:\n\n- citrate synthase\n\n- VIPERIN\n\n### Adult vs. Spat\n\nNo genes had p-values <= 0.05\n\n### Juvenile vs. Spat\n\nThe genes had p-values <= 0.05:\n\n- citrate synthase\n\n- VIPERIN\n\n### Seed - Conditioning Treated vs. Control\n\nNo genes had p-values <= 0.05\n\n### Adult - Conditioning Treated vs. Control\n\nThe genes had p-values <= 0.05:\n\n- HSP90\n\n### Juvenile - Conditioning Treated vs. Control\n\nNo genes had p-values <= 0.05\n\n### Spat - Conditioning Treated vs. Control\n\nThe genes had p-values <= 0.05:\n\n- citrate synthase\n\n- DNMT1\n\n### Adult - Acute Ambient vs. High\n\nNo genes had p-values <= 0.05\n\n### Juvenile - Acute Ambient vs. High\n\nNo genes had p-values <= 0.05\n\n### Adult - Conditioning Treated: Acute Ambient vs. High\n\nNo genes had p-values <= 0.05\n\n### Adult - Conditioning Control: Acute Ambient vs. High\n\nNo genes had p-values <= 0.05\n\n### Juvenile - Conditioning Treated: Acute Ambient vs. High\n\nThe genes had p-values <= 0.05:\n\n- HSP70\n\n### Juvenile - Conditioning Control: Acute Ambient vs. High\n\nThe genes had p-values <= 0.05:\n\n- VIPERIN\n\n## Gene Expression (delta delta Cq or fold change)\n\n### Adult - Conditioning Treated: Acute High vs. Ambient\n\n- All genes show elevated expression relative to Ambient.\n\n- Fold change is at similar levels across all genes, with DNMT1 and HSP70 being the highest.\n\n### Juvenile - Conditioning Treated: Acute High vs. Ambient\n\n- All genes show elevated expression relative to Ambient.\n\n- HSP70 shows ~4-fold higher fold change in expression compared to most of the other genes.\n\n- DNMT1 exhibits fold change expression ~1/2 that of most of the other genes.\n\n### Adult - Adult vs. Seed\n\n- All genes show elevated expression relative to Seed.\n\n- VIPERIN exhibits fold change in expression >2-fold higher than the other genes.\n\n### Adult - Adult vs. Spat\n\n- All genes show elevated expression relative to Spat.\n\n- All genes have similar fold changes in expression, with ATP synthase and DNMT1 showing the highest levels of fold change in expression.\n\n### Adult - Spat vs. Seed\n\n- All genes show elevated expression relative to Seed.\n\n- Most genes have similar fold changes in expression.\n\n- VIPERIN exhibits fold change in a expression ~2-fold higher than the other genes.\n\n### Conditioning by Target and Lifestage\n\n- All genes show elevated expression relative to Control.\n\n- VIPERIN, citrate synthase, and ATP synthase show an initial increase in fold change expression from seed to spat life stages, declining to juvenile and adult lifestages.\n\n- HSP90 shows level fold changes in expression across seed, spat, and juvenile lifestages, followed by a decrease in the adult stage.\n\n- DNMT1 exhibits a drastic decrease in fold change expression from seed to spat, followed by a substantial increase from spat to adult.\n\n- cGAS and HSP70 exhibit decreases from seed to spat, followed by a sharp increase from spat to juvenile. This is followed by a moderate decrease from juvenile to adult by cGAS and a sharp decrease in HSP70.\n\n::: {.callout-note}\nThe post below is markdown generated from [01.01-qPCR.Rmd](https://github.com/RobertsLab/project-gigas-carryover/blob/9a32e40ee9739803a3f5b523c40ffc925d9f7472/lifestage_carryover/scripts/01.01-qPCR.Rmd) (commit `9a32e40`).\n:::\n\n\n\n# 1 Description\n\nThis notebook performs pair-wise comparisons of qPCR gene expression,\nnormalized to `GAPDH` expression. It calculates delta Cq, delta delta\nCq, and fold changes in expression. Additionally, it generates box plots\n(delta Cq), and bar plots (fold change expression).\n\n# 2 Set variables\n\n## 2.1 Set sample groups\n\nGroups are named in the following fashion:\n\n`<life.stage>.<conditioning.treatment>.<acute.treatment>`\n\nThis allows for parsing downstream.\n\n::: {.callout-tip}\nBelow is the full set of groups for the *entire experiment*. For\nthe current qPCR analysis, `seed` and `spat` do *not* have acute\ntreatments; just conditioning treatments.\n:::\n\n\n``` r\nseed.control.ambient=c(\"29\", \"40\", \"55\", \"63\", \"69\", \"101\", \"119\", \"122\", \"155\", \"164\", \"187\", \"202\", \"209\", \"214\", \"233\", \"236\", \"275\")\nseed.control.high=c(\"42\", \"59\", \"60\", \"62\", \"86\", \"102\", \"140\", \"176\", \"177\", \"184\", \"192\", \"223\", \"234\", \"243\", \"244\", \"254\", \"264\")\nseed.treated.ambient=c(\"14\", \"48\", \"66\", \"72\", \"89\", \"115\", \"129\", \"138\", \"156\", \"182\", \"191\", \"201\", \"227\", \"239\", \"270\", \"277\", \"280\")\nseed.treated.high=c(\"15\", \"19\", \"24\", \"88\", \"92\", \"105\", \"111\", \"113\", \"120\", \"128\", \"161\", \"200\", \"211\", \"256\", \"257\", \"266\", \"285\")\nspat.control.ambient=c(\"11\", \"30\", \"36\", \"52\", \"77\", \"114\", \"134\", \"142\", \"144\", \"183\", \"193\", \"229\", \"230\", \"231\", \"240\", \"272\", \"287\")\nspat.control.high=c(\"27\", \"74\", \"93\", \"96\", \"97\", \"137\", \"143\", \"153\", \"168\", \"178\", \"189\", \"206\", \"262\", \"274\", \"282\", \"284\", \"289\")\nspat.treated.ambient=c(\"9\", \"13\", \"38\", \"46\", \"47\", \"121\", \"145\", \"151\", \"174\", \"194\", \"197\", \"198\", \"216\", \"235\", \"241\", \"252\", \"291\")\nspat.treated.high=c(\"6\", \"25\", \"50\", \"78\", \"124\", \"126\", \"131\", \"160\", \"163\", \"172\", \"220\", \"226\", \"242\", \"253\", \"296\", \"298\")\njuvenile.control.ambient=c(\"18\", \"57\", \"65\", \"75\", \"79\", \"104\", \"110\", \"123\", \"125\", \"171\", \"175\", \"205\", \"238\", \"273\", \"279\", \"293\", \"317\")\njuvenile.control.high=c(\"12\", \"39\", \"43\", \"49\", \"71\", \"130\", \"141\", \"146\", \"150\", \"170\", \"195\", \"297\", \"301\", \"324\", \"351\", \"355\", \"371\")\njuvenile.treated.ambient=c(\"1\", \"34\", \"64\", \"83\", \"98\", \"147\", \"152\", \"158\", \"162\", \"169\", \"188\", \"271\", \"295\", \"310\", \"357\", \"361\", \"381\")\njuvenile.treated.high=c(\"28\", \"53\", \"61\", \"73\", \"81\", \"106\", \"109\", \"139\", \"149\", \"173\", \"181\", \"213\", \"290\", \"302\", \"311\", \"364\", \"392\")\nadult.control.ambient=c(\"3\", \"5\", \"13*\", \"16\", \"17\", \"80\", \"87\", \"94\", \"148\", \"159\", \"179\", \"180\", \"250\", \"258\", \"268\", \"312\", \"326\", \"330\", \"334\", \"346\", \"360\", \"377\", \"379\", \"386\")\nadult.control.high=c(\"20\", \"23\", \"26\", \"32\", \"33\", \"67\", \"70\", \"90\", \"107\", \"132\", \"135\", \"157\", \"166\", \"186\", \"207\", \"215\", \"248\", \"316\", \"341\", \"344\", \"349\", \"382\", \"394\", \"395\")\nadult.treated.ambient=c(\"7\", \"31\", \"35\", \"37\", \"41\", \"54\", \"84\", \"100\", \"112\", \"116\", \"118\", \"133\", \"154\", \"199\", \"203\", \"204\", \"208\", \"219\", \"294\", \"318\", \"339\", \"353\", \"363\", \"378\")\nadult.treated.high=c(\"21\", \"22\", \"45\", \"82\", \"85\", \"91\", \"95\", \"99\", \"103\", \"108\", \"117\", \"127\", \"165\", \"185\", \"190\", \"196\", \"232\", \"237\", \"245\", \"263\", \"276\", \"306\", \"343\", \"374\")\n```\n\n## 2.2 Assign groups to list\n\n``` r\n# Combine vectors into lists\n# Used for adding treatment info and/or subsetting downstream\n\ngroups_list <- list(juvenile.control.ambient = juvenile.control.ambient,\n                                   juvenile.control.high = juvenile.control.high,\n                                   juvenile.treated.ambient = juvenile.treated.ambient,\n                                   juvenile.treated.high = juvenile.treated.high,\n                                   adult.control.ambient = adult.control.ambient,\n                                   adult.control.high = adult.control.high,\n                                   adult.treated.ambient = adult.treated.ambient,\n                                   adult.treated.high = adult.treated.high,\n                                   seed.control.ambient = seed.control.ambient,\n                                   seed.control.high = seed.control.high,\n                                   seed.treated.ambient = seed.treated.ambient,\n                                   seed.treated.high = seed.treated.high,\n                                   spat.control.ambient = spat.control.ambient,\n                                   spat.control.high = spat.control.high,\n                                   spat.treated.ambient = spat.treated.ambient,\n                                   spat.treated.high = spat.treated.high)\n```\n\n# 3 Functions\n\n## 3.1 Calculate delta Cq\n\nNormalized to designated normalizing gene\n\n``` r\ncalculate_delta_Cq <- function(df) {\n  df <- df %>%\n    group_by(Sample) %>%\n    mutate(delta_Cq = Cq.Mean - Cq.Mean[Target == \"GAPDH\"]) %>%\n    ungroup()\n  \n  return(df)\n}\n```\n\n## 3.2 Create delta Cq boxplots\n\n### 3.2.1 Lifestage comparison\n\n``` r\n# Function to create box plots for each comparison\ncreate_boxplot_delta_Cq <- function(data, comparison, t_test_results) {\n  # Extract life stages from comparison\n  life_stages <- unlist(strsplit(comparison, \"\\\\.\"))\n\n  # Debugging: Print life stages\n  # print(paste(\"Life stages for comparison:\", comparison))\n  # print(life_stages)\n\n  # Filter data for the relevant life stages\n  filtered_data <- data %>%\n    filter(life.stage %in% life_stages)\n\n  # Debugging: Print filtered data\n  # print(\"Filtered data:\")\n  # print(filtered_data)\n\n  # Check if both life stages are included\n  if (!all(life_stages %in% unique(filtered_data$life.stage))) {\n    stop(\"Not all life stages are included in the filtered data\")\n  }\n\n  y_limits <- range(filtered_data$delta_Cq, na.rm = TRUE)\n\n  # Debugging: Print y_limits\n  # print(\"Y limits:\")\n  # print(y_limits)\n\n  # Filter t_test_results for the current comparison\n  t_test_results_filtered <- t_test_results %>%\n    filter(comparison == !!comparison)\n\n  # Debugging: Print filtered t_test_results\n  # print(\"Filtered t_test_results:\")\n  # print(t_test_results_filtered)\n\n  # Filter t_test_results for asterisks\n  t_test_results_with_asterisks <- t_test_results_filtered %>%\n    filter(asterisk != \"\")\n\n  # Debugging: Print t_test_results_with_asterisks\n  # print(\"t_test_results_with_asterisks:\")\n  # print(t_test_results_with_asterisks)\n\n  formatted_title <- paste0(toupper(substring(life_stages[1], 1, 1)), substring(life_stages[1], 2), \n                            \" vs. \", \n                            toupper(substring(life_stages[2], 1, 1)), substring(life_stages[2], 2))\n\n  boxplot <- ggplot(filtered_data, aes(x = Target, y = delta_Cq, fill = life.stage)) +\n    geom_boxplot(position = position_dodge(width = 0.75)) +\n    theme_minimal() +\n    theme(legend.position = \"right\") +\n    scale_fill_manual(values=c(\"darkgray\", \"salmon\", \"lightblue\", \"lightgreen\")) +\n    ylim(y_limits) +\n    labs(x = \"Target\", y = \"Delta Cq\", title = formatted_title) +\n    # Highlighted section: Adds asterisks\n    geom_text(data = t_test_results_with_asterisks, \n              aes(x = Target, y = y_limits[2] - 1, label = asterisk), \n              vjust = -0.5, size = 8, color = \"black\", inherit.aes = FALSE)\n\n  print(boxplot)\n}\n```\n\n### 3.2.2 Conditioning comparisons\n\n1.  Extract Life Stage and Conditioning Treatments:\n\n- The comparison string is split into its components (`life_stage`,\n  `treatment1`, and `treatment2`).\n\n2.  Filter Data:\n\n- The filtered_data data frame is filtered to include only the rows with\n  the relevant life stage and conditioning treatments.\n\n3.  Check for Both Treatments:\n\n- Ensure that both treatments are included in the `filtered_data`.\n\n4.  Filter T-Test Results:\n\n- The `t_test_results_filtered` data frame is filtered for the specific\n  comparison.\n\n- The `t_test_results_with_asterisks` data frame is created to include\n  only the rows with asterisks.\n\n5.  Format the Title:\n\n- The `formatted_title` variable is created by capitalizing the first\n  letter of each component and concatenating them with ” - ” and ” vs. ”\n  in between.\n\n- This should create box plots comparing conditioning treatments within\n  each life stage, with titles formatted as\n  `<life.stage> - Treated vs. Control`.\n\n``` r\n# Function to create box plots for each comparison of conditioning treatments within life stages\ncreate_boxplot_conditioning <- function(data, comparison, t_test_results) {\n  # Extract life stage and conditioning treatments from comparison\n  comparison_parts <- unlist(strsplit(comparison, \"\\\\.\"))\n  life_stage <- comparison_parts[1]\n  treatment1 <- comparison_parts[2]\n  treatment2 <- comparison_parts[3]\n\n  # Debugging: Print life stage and treatments\n  # print(paste(\"Life stage and treatments for comparison:\", comparison))\n  # print(c(life_stage, treatment1, treatment2))\n\n  # Filter data for the relevant life stage and conditioning treatments\n  filtered_data <- data %>%\n    filter(life.stage == life_stage, conditioning.treatment %in% c(treatment1, treatment2))\n\n  # Debugging: Print filtered data\n  # print(\"Filtered data:\")\n  # print(filtered_data)\n\n  # Check if both treatments are included\n  if (!all(c(treatment1, treatment2) %in% unique(filtered_data$conditioning.treatment))) {\n    stop(\"Not all treatments are included in the filtered data\")\n  }\n\n  y_limits <- range(filtered_data$delta_Cq, na.rm = TRUE)\n\n  # Debugging: Print y_limits\n  # print(\"Y limits:\")\n  # print(y_limits)\n\n  # Filter t_test_results for the current comparison\n  t_test_results_filtered <- t_test_results %>%\n    filter(comparison == !!comparison)\n\n  # Debugging: Print filtered t_test_results\n  # print(\"Filtered t_test_results:\")\n  # print(t_test_results_filtered)\n\n  # Filter t_test_results for asterisks\n  t_test_results_with_asterisks <- t_test_results_filtered %>%\n    filter(asterisk != \"\")\n\n  # Debugging: Print t_test_results_with_asterisks\n  # print(\"t_test_results_with_asterisks:\")\n  # print(t_test_results_with_asterisks)\n\n  # Format the title\n  formatted_title <- paste0(toupper(substring(life_stage, 1, 1)), substring(life_stage, 2), \n                            \" - \", \n                            toupper(substring(treatment1, 1, 1)), substring(treatment1, 2), \n                            \" vs. \", \n                            toupper(substring(treatment2, 1, 1)), substring(treatment2, 2))\n\n  boxplot <- ggplot(filtered_data, aes(x = Target, y = delta_Cq, fill = conditioning.treatment)) +\n    geom_boxplot(position = position_dodge(width = 0.75)) +\n    theme_minimal() +\n    theme(legend.position = \"right\") +\n    scale_fill_manual(values=c(\"darkgray\", \"salmon\")) +\n    ylim(y_limits) +\n    labs(x = \"Target\", y = \"Delta Cq\", title = formatted_title) +\n    # Highlighted section: Adds asterisks\n    geom_text(data = t_test_results_with_asterisks, \n              aes(x = Target, y = y_limits[2] - 1, label = asterisk), \n              vjust = -0.5, size = 8, color = \"black\", inherit.aes = FALSE)\n\n  print(boxplot)\n}\n```\n\n### 3.2.3 Acute comparisons\n\n1.  Extract Life Stage and Acute Treatments:\n\n- The comparison string is split into its components (`life_stage`,\n  `treatment1`, and `treatment2`).\n\n2.  Filter Data:\n\n- The `filtered_data` data frame is filtered to include only the rows\n  with the relevant life stage and acute treatments.\n\n3.  Check for Both Treatments:\n\n- Ensure that both treatments are included in the `filtered_data`.\n\n4.  Filter T-Test Results:\n\n- The `t_test_results_filtered` data frame is filtered for the specific\n  comparison.\n\n- The `t_test_results_with_asterisks` data frame is created to include\n  only the rows with asterisks. Format the Title:\n\n5.  The formatted_title variable is created by capitalizing the first\n    letter of each component and concatenating them with ” - ” and ”\n    vs. ” in between.\n\n- This should create box plots comparing acute treatments within each\n  life stage, with titles formatted as\n  `<life.stage> - Ambient vs. High`.\n\n``` r\n# Function to create box plots for each comparison of acute treatments within life stages\ncreate_boxplot_acute <- function(data, comparison, t_test_results) {\n  # Extract life stage and acute treatments from comparison\n  comparison_parts <- unlist(strsplit(comparison, \"\\\\.\"))\n  life_stage <- comparison_parts[1]\n  treatment1 <- comparison_parts[2]\n  treatment2 <- comparison_parts[3]\n\n  # Debugging: Print life stage and treatments\n  # print(paste(\"Life stage and treatments for comparison:\", comparison))\n  # print(c(life_stage, treatment1, treatment2))\n\n  # Filter data for the relevant life stage and acute treatments\n  filtered_data <- data %>%\n    filter(life.stage == life_stage, acute.treatment %in% c(treatment1, treatment2))\n\n  # Debugging: Print filtered data\n  # print(\"Filtered data:\")\n  # print(filtered_data)\n\n  # Check if both treatments are included\n  if (!all(c(treatment1, treatment2) %in% unique(filtered_data$acute.treatment))) {\n    stop(\"Not all treatments are included in the filtered data\")\n  }\n\n  y_limits <- range(filtered_data$delta_Cq, na.rm = TRUE)\n\n  # Debugging: Print y_limits\n  # print(\"Y limits:\")\n  # print(y_limits)\n\n  # Filter t_test_results for the current comparison\n  t_test_results_filtered <- t_test_results %>%\n    filter(comparison == !!comparison)\n\n  # Debugging: Print filtered t_test_results\n  # print(\"Filtered t_test_results:\")\n  # print(t_test_results_filtered)\n\n  # Filter t_test_results for asterisks\n  t_test_results_with_asterisks <- t_test_results_filtered %>%\n    filter(asterisk != \"\")\n\n  # Debugging: Print t_test_results_with_asterisks\n  # print(\"t_test_results_with_asterisks:\")\n  # print(t_test_results_with_asterisks)\n\n  # Format the title\n  formatted_title <- paste0(toupper(substring(life_stage, 1, 1)), substring(life_stage, 2), \n                            \" - \", \n                            toupper(substring(treatment1, 1, 1)), substring(treatment1, 2), \n                            \" vs. \", \n                            toupper(substring(treatment2, 1, 1)), substring(treatment2, 2))\n\n  boxplot <- ggplot(filtered_data, aes(x = Target, y = delta_Cq, fill = acute.treatment)) +\n    geom_boxplot(position = position_dodge(width = 0.75)) +\n    theme_minimal() +\n    theme(legend.position = \"right\") +\n    scale_fill_manual(values=c(\"darkgray\", \"salmon\")) +\n    ylim(y_limits) +\n    labs(x = \"Target\", y = \"Delta Cq\", title = formatted_title) +\n    # Highlighted section: Adds asterisks\n    geom_text(data = t_test_results_with_asterisks, \n              aes(x = Target, y = y_limits[2] - 1, label = asterisk), \n              vjust = -0.5, size = 8, color = \"magenta\", inherit.aes = FALSE)\n\n  print(boxplot)\n}\n```\n\n### 3.2.4 Acute treatements within life stage conditioning\n\n``` r\n# Function to create box plots for each comparison of acute treatments within life stages and conditioning treatments\ncreate_boxplot_acute_conditioning <- function(data, comparison, t_test_results) {\n  # Extract life stage, conditioning treatment, and acute treatments from comparison\n  comparison_parts <- unlist(strsplit(comparison, \"\\\\.\"))\n  life_stage <- comparison_parts[1]\n  conditioning_treatment <- comparison_parts[2]\n  treatment1 <- comparison_parts[3]\n  treatment2 <- comparison_parts[5]\n\n  # Filter data for the relevant life stage, conditioning treatment, and acute treatments\n  filtered_data <- data %>%\n    filter(life.stage == life_stage, conditioning.treatment == conditioning_treatment, acute.treatment %in% c(treatment1, treatment2))\n\n  # Check if both treatments are included\n  if (!all(c(treatment1, treatment2) %in% unique(filtered_data$acute.treatment))) {\n    stop(\"Not all treatments are included in the filtered data\")\n  }\n\n  y_limits <- range(filtered_data$delta_Cq, na.rm = TRUE)\n\n  # Filter t_test_results for the current comparison\n  t_test_results_filtered <- t_test_results %>%\n    filter(comparison == !!comparison)\n\n  # Filter t_test_results for asterisks\n  t_test_results_with_asterisks <- t_test_results_filtered %>%\n    filter(asterisk != \"\")\n\n  # Format the title\n  formatted_title <- paste0(toupper(substring(life_stage, 1, 1)), substring(life_stage, 2), \n                            \" - \", \n                            toupper(substring(conditioning_treatment, 1, 1)), substring(conditioning_treatment, 2), \n                            \" - \", \n                            toupper(substring(treatment1, 1, 1)), substring(treatment1, 2), \n                            \" vs. \", \n                            toupper(substring(treatment2, 1, 1)), substring(treatment2, 2))\n\n  boxplot <- ggplot(filtered_data, aes(x = Target, y = delta_Cq, fill = acute.treatment)) +\n    geom_boxplot(position = position_dodge(width = 0.75)) +\n    theme_minimal() +\n    theme(legend.position = \"right\") +\n    scale_fill_manual(values=c(\"darkgray\", \"salmon\")) +\n    ylim(y_limits) +\n    labs(x = \"Target\", y = \"Delta Cq\", title = formatted_title) +\n    # Adds asterisks\n    geom_text(data = t_test_results_with_asterisks, \n              aes(x = Target, y = y_limits[2] - 1, label = asterisk), \n              vjust = -0.5, size = 8, color = \"black\", inherit.aes = FALSE)\n\n  print(boxplot)\n}\n```\n\n# 4 Read in files\n\n``` r\n# Get a list of all CSV files in the directory with the naming structure \"*Cq-Results.csv\"\ncq_file_list <- list() # Initialize list\ncq_file_list <- list.files(path = cqs_directory, pattern = \"Cq-Results\\\\.csv$\", full.names = TRUE)\n\n# Initialize an empty list to store the data frames\ndata_frames_list <- list()\n\n# Loop through each file and read it into a data frame, then add it to the list\nfor (file in cq_file_list) {\n  data <- read.csv(file, header = TRUE)\n  data$Sample <- as.character(data$Sample)  # Convert Sample column to character type\n  data_frames_list[[file]] <- data\n}\n\n# Combine all data frames into a single data frame\ncombined_df <- bind_rows(data_frames_list, .id = \"data_frame_id\")\n\nstr(combined_df)\n```\n\n    'data.frame':   1920 obs. of  17 variables:\n     $ data_frame_id         : chr  \"../data/qPCR/Cq/sam_2024-12-10_11-47-51_CFX96_GAPDH-02-Quantification-Cq-Results.csv\" \"../data/qPCR/Cq/sam_2024-12-10_11-47-51_CFX96_GAPDH-02-Quantification-Cq-Results.csv\" \"../data/qPCR/Cq/sam_2024-12-10_11-47-51_CFX96_GAPDH-02-Quantification-Cq-Results.csv\" \"../data/qPCR/Cq/sam_2024-12-10_11-47-51_CFX96_GAPDH-02-Quantification-Cq-Results.csv\" ...\n     $ X                     : logi  NA NA NA NA NA NA ...\n     $ Well                  : chr  \"A01\" \"A02\" \"A03\" \"A04\" ...\n     $ Fluor                 : chr  \"SYBR\" \"SYBR\" \"SYBR\" \"SYBR\" ...\n     $ Target                : chr  \"Cg_GAPDH_205_F-355_R (SR IDs: 1172/3)\" \"Cg_GAPDH_205_F-355_R (SR IDs: 1172/3)\" \"Cg_GAPDH_205_F-355_R (SR IDs: 1172/3)\" \"Cg_GAPDH_205_F-355_R (SR IDs: 1172/3)\" ...\n     $ Content               : chr  \"Unkn-01\" \"Unkn-01\" \"Unkn-01\" \"Unkn-02\" ...\n     $ Sample                : chr  \"270\" \"270\" \"270\" \"271\" ...\n     $ Biological.Set.Name   : logi  NA NA NA NA NA NA ...\n     $ Cq                    : num  24.8 24.8 25 24.4 24.3 ...\n     $ Cq.Mean               : num  24.9 24.9 24.9 24.4 24.4 ...\n     $ Cq.Std..Dev           : num  0.1005 0.1005 0.1005 0.0914 0.0914 ...\n     $ Starting.Quantity..SQ.: num  NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ...\n     $ Log.Starting.Quantity : num  NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ...\n     $ SQ.Mean               : num  NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ...\n     $ SQ.Std..Dev           : num  NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ...\n     $ Set.Point             : int  60 60 60 60 60 60 60 60 60 60 ...\n     $ Well.Note             : logi  NA NA NA NA NA NA ...\n\n# 5 Clean data\n\n## 5.1 Replace target names\n\n``` r\n# Remove rows with Sample name \"NTC\"\ncombined_df <- combined_df[combined_df$Sample != \"NTC\", ]\n\n\n# Replace values in the Target column\ncombined_df$Target <- gsub(\"Cg_GAPDH_205_F-355_R \\\\(SR IDs: 1172/3\\\\)\", \"GAPDH\", combined_df$Target)\n\ncombined_df$Target <- gsub(\"Cg_ATPsynthase_F/R \\\\(SR IDs: 1385/6\\\\)\", \"ATPsynthase\", combined_df$Target)\n\ncombined_df$Target <- gsub(\"Cg_cGAS \\\\(SR IDs: 1826/7\\\\)\", \"cGAS\", combined_df$Target)\n\ncombined_df$Target <- gsub(\"Cg_citrate_synthase \\\\(SR IDs: 1383/4\\\\)\", \"citrate.sythase\", combined_df$Target)\n\ncombined_df$Target <- gsub(\"Cg_DNMT1_F \\\\(SR IDs: 1510/1\\\\)\", \"DNMT1\", combined_df$Target)\n\ncombined_df$Target <- gsub(\"Cg_HSP70_F/R \\\\(SR IDs: 598/9\\\\)\", \"HSP70\", combined_df$Target)\n\ncombined_df$Target <- gsub(\"Cg_Hsp90_F/R \\\\(SR IDs: 1532/3\\\\)\", \"HSP90\", combined_df$Target)\n\ncombined_df$Target <- gsub(\"Cg_VIPERIN_F/R \\\\(SR IDs: 1828/9\\\\)\", \"VIPERIN\", combined_df$Target)\n\nstr(combined_df)\n```\n\n    'data.frame':   1908 obs. of  17 variables:\n     $ data_frame_id         : chr  \"../data/qPCR/Cq/sam_2024-12-10_11-47-51_CFX96_GAPDH-02-Quantification-Cq-Results.csv\" \"../data/qPCR/Cq/sam_2024-12-10_11-47-51_CFX96_GAPDH-02-Quantification-Cq-Results.csv\" \"../data/qPCR/Cq/sam_2024-12-10_11-47-51_CFX96_GAPDH-02-Quantification-Cq-Results.csv\" \"../data/qPCR/Cq/sam_2024-12-10_11-47-51_CFX96_GAPDH-02-Quantification-Cq-Results.csv\" ...\n     $ X                     : logi  NA NA NA NA NA NA ...\n     $ Well                  : chr  \"A01\" \"A02\" \"A03\" \"A04\" ...\n     $ Fluor                 : chr  \"SYBR\" \"SYBR\" \"SYBR\" \"SYBR\" ...\n     $ Target                : chr  \"GAPDH\" \"GAPDH\" \"GAPDH\" \"GAPDH\" ...\n     $ Content               : chr  \"Unkn-01\" \"Unkn-01\" \"Unkn-01\" \"Unkn-02\" ...\n     $ Sample                : chr  \"270\" \"270\" \"270\" \"271\" ...\n     $ Biological.Set.Name   : logi  NA NA NA NA NA NA ...\n     $ Cq                    : num  24.8 24.8 25 24.4 24.3 ...\n     $ Cq.Mean               : num  24.9 24.9 24.9 24.4 24.4 ...\n     $ Cq.Std..Dev           : num  0.1005 0.1005 0.1005 0.0914 0.0914 ...\n     $ Starting.Quantity..SQ.: num  NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ...\n     $ Log.Starting.Quantity : num  NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ...\n     $ SQ.Mean               : num  NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ...\n     $ SQ.Std..Dev           : num  NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ...\n     $ Set.Point             : int  60 60 60 60 60 60 60 60 60 60 ...\n     $ Well.Note             : logi  NA NA NA NA NA NA ...\n\n## 5.2 Identify Samples with Cq.Std..Dev \\> 0.5\n\n``` r\n# Filter out rows where Cq.Std..Dev is NA\ncombined_df <- combined_df[!is.na(combined_df$Cq.Std..Dev), ]\n\n# Filter rows where Cq.Std..Dev is greater than 0.5\nhigh_cq_std_dev <- combined_df[combined_df$Cq.Std..Dev > 0.5, ]\n\n# Print the filtered rows with specified columns, without row names\nprint(high_cq_std_dev[, c(\"Target\", \"Sample\", \"Cq\", \"Cq.Std..Dev\")], row.names = FALSE)\n```\n\n              Target Sample       Cq Cq.Std..Dev\n               GAPDH    316 23.94926   8.5684728\n               GAPDH    316 24.14183   8.5684728\n               GAPDH    316 38.88564   8.5684728\n               GAPDH    213 26.98012   2.2910353\n               GAPDH    213 23.00009   2.2910353\n               GAPDH    213 26.95634   2.2910353\n               GAPDH    263 22.42154   0.8731474\n               GAPDH    263 23.77008   0.8731474\n               GAPDH    263 24.05667   0.8731474\n     citrate.sythase    230 24.44066   4.4783429\n     citrate.sythase    230 24.40421   4.4783429\n     citrate.sythase    230 32.17909   4.4783429\n             VIPERIN    227 30.47773   3.5152533\n             VIPERIN    227 30.37738   3.5152533\n             VIPERIN    227 36.51553   3.5152533\n             VIPERIN    245 26.05748   5.1635899\n             VIPERIN    245 34.98192   5.1635899\n             VIPERIN    245 26.01928   5.1635899\n             VIPERIN    341 26.48675   2.9838590\n             VIPERIN    341 31.67235   2.9838590\n             VIPERIN    341 26.52174   2.9838590\n             VIPERIN    344 29.98184   2.3712440\n             VIPERIN    344 25.90358   2.3712440\n             VIPERIN    344 25.84648   2.3712440\n             VIPERIN    355 28.79712   0.5821437\n             VIPERIN    355 29.57428   0.5821437\n             VIPERIN    355 28.43490   0.5821437\n\n## 5.3 Remove bad technical reps\n\n``` r\n# Group by Sample and Target, then filter out the outlier replicate\ncombined.fitered_df<- combined_df %>%\n  group_by(Sample, Target) %>%\n  filter(abs(Cq - mean(Cq, na.rm = TRUE)) <= Cq.Std..Dev)\n\n# Print the filtered data frame\nstr(combined.fitered_df)\n```\n\n    gropd_df [1,264 × 17] (S3: grouped_df/tbl_df/tbl/data.frame)\n     $ data_frame_id         : chr [1:1264] \"../data/qPCR/Cq/sam_2024-12-10_11-47-51_CFX96_GAPDH-02-Quantification-Cq-Results.csv\" \"../data/qPCR/Cq/sam_2024-12-10_11-47-51_CFX96_GAPDH-02-Quantification-Cq-Results.csv\" \"../data/qPCR/Cq/sam_2024-12-10_11-47-51_CFX96_GAPDH-02-Quantification-Cq-Results.csv\" \"../data/qPCR/Cq/sam_2024-12-10_11-47-51_CFX96_GAPDH-02-Quantification-Cq-Results.csv\" ...\n     $ X                     : logi [1:1264] NA NA NA NA NA NA ...\n     $ Well                  : chr [1:1264] \"A01\" \"A02\" \"A04\" \"A06\" ...\n     $ Fluor                 : chr [1:1264] \"SYBR\" \"SYBR\" \"SYBR\" \"SYBR\" ...\n     $ Target                : chr [1:1264] \"GAPDH\" \"GAPDH\" \"GAPDH\" \"GAPDH\" ...\n     $ Content               : chr [1:1264] \"Unkn-01\" \"Unkn-01\" \"Unkn-02\" \"Unkn-02\" ...\n     $ Sample                : chr [1:1264] \"270\" \"270\" \"271\" \"271\" ...\n     $ Biological.Set.Name   : logi [1:1264] NA NA NA NA NA NA ...\n     $ Cq                    : num [1:1264] 24.8 24.8 24.4 24.4 24.2 ...\n     $ Cq.Mean               : num [1:1264] 24.9 24.9 24.4 24.4 23.9 ...\n     $ Cq.Std..Dev           : num [1:1264] 0.1005 0.1005 0.0914 0.0914 0.2866 ...\n     $ Starting.Quantity..SQ.: num [1:1264] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ...\n     $ Log.Starting.Quantity : num [1:1264] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ...\n     $ SQ.Mean               : num [1:1264] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ...\n     $ SQ.Std..Dev           : num [1:1264] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ...\n     $ Set.Point             : int [1:1264] 60 60 60 60 60 60 60 60 60 60 ...\n     $ Well.Note             : logi [1:1264] NA NA NA NA NA NA ...\n     - attr(*, \"groups\")= tibble [632 × 3] (S3: tbl_df/tbl/data.frame)\n      ..$ Sample: chr [1:632] \"201\" \"201\" \"201\" \"201\" ...\n      ..$ Target: chr [1:632] \"ATPsynthase\" \"DNMT1\" \"GAPDH\" \"HSP70\" ...\n      ..$ .rows : list<int> [1:632] \n      .. ..$ : int [1:2] 65 66\n      .. ..$ : int [1:2] 633 634\n      .. ..$ : int [1:2] 381 382\n      .. ..$ : int [1:2] 791 792\n      .. ..$ : int [1:2] 949 950\n      .. ..$ : int [1:2] 1107 1108\n      .. ..$ : int [1:2] 223 224\n      .. ..$ : int [1:2] 475 476\n      .. ..$ : int [1:2] 67 68\n      .. ..$ : int [1:2] 635 636\n      .. ..$ : int [1:2] 383 384\n      .. ..$ : int [1:2] 793 794\n      .. ..$ : int [1:2] 951 952\n      .. ..$ : int [1:2] 1109 1110\n      .. ..$ : int [1:2] 225 226\n      .. ..$ : int [1:2] 477 478\n      .. ..$ : int [1:2] 69 70\n      .. ..$ : int [1:2] 637 638\n      .. ..$ : int [1:2] 385 386\n      .. ..$ : int [1:2] 795 796\n      .. ..$ : int [1:2] 953 954\n      .. ..$ : int [1:2] 1111 1112\n      .. ..$ : int [1:2] 227 228\n      .. ..$ : int [1:2] 479 480\n      .. ..$ : int [1:2] 71 72\n      .. ..$ : int [1:2] 639 640\n      .. ..$ : int [1:2] 387 388\n      .. ..$ : int [1:2] 797 798\n      .. ..$ : int [1:2] 955 956\n      .. ..$ : int [1:2] 1113 1114\n      .. ..$ : int [1:2] 229 230\n      .. ..$ : int [1:2] 481 482\n      .. ..$ : int [1:2] 73 74\n      .. ..$ : int [1:2] 641 642\n      .. ..$ : int [1:2] 389 390\n      .. ..$ : int [1:2] 799 800\n      .. ..$ : int [1:2] 957 958\n      .. ..$ : int [1:2] 1115 1116\n      .. ..$ : int [1:2] 231 232\n      .. ..$ : int [1:2] 483 484\n      .. ..$ : int [1:2] 75 76\n      .. ..$ : int [1:2] 643 644\n      .. ..$ : int [1:2] 391 392\n      .. ..$ : int [1:2] 801 802\n      .. ..$ : int [1:2] 959 960\n      .. ..$ : int [1:2] 1117 1118\n      .. ..$ : int [1:2] 233 234\n      .. ..$ : int [1:2] 485 486\n      .. ..$ : int [1:2] 77 78\n      .. ..$ : int [1:2] 645 646\n      .. ..$ : int [1:2] 393 394\n      .. ..$ : int [1:2] 803 804\n      .. ..$ : int [1:2] 961 962\n      .. ..$ : int [1:2] 1119 1120\n      .. ..$ : int [1:2] 235 236\n      .. ..$ : int [1:2] 487 488\n      .. ..$ : int [1:2] 79 80\n      .. ..$ : int [1:2] 647 648\n      .. ..$ : int [1:2] 395 396\n      .. ..$ : int [1:2] 805 806\n      .. ..$ : int [1:2] 963 964\n      .. ..$ : int [1:2] 1121 1122\n      .. ..$ : int [1:2] 237 238\n      .. ..$ : int [1:2] 489 490\n      .. ..$ : int [1:2] 81 82\n      .. ..$ : int [1:2] 649 650\n      .. ..$ : int [1:2] 397 398\n      .. ..$ : int [1:2] 807 808\n      .. ..$ : int [1:2] 965 966\n      .. ..$ : int [1:2] 1123 1124\n      .. ..$ : int [1:2] 239 240\n      .. ..$ : int [1:2] 491 492\n      .. ..$ : int [1:2] 83 84\n      .. ..$ : int [1:2] 651 652\n      .. ..$ : int [1:2] 399 400\n      .. ..$ : int [1:2] 809 810\n      .. ..$ : int [1:2] 967 968\n      .. ..$ : int [1:2] 1125 1126\n      .. ..$ : int [1:2] 241 242\n      .. ..$ : int [1:2] 493 494\n      .. ..$ : int [1:2] 85 86\n      .. ..$ : int [1:2] 653 654\n      .. ..$ : int [1:2] 401 402\n      .. ..$ : int [1:2] 811 812\n      .. ..$ : int [1:2] 969 970\n      .. ..$ : int [1:2] 1127 1128\n      .. ..$ : int [1:2] 243 244\n      .. ..$ : int [1:2] 495 496\n      .. ..$ : int [1:2] 87 88\n      .. ..$ : int [1:2] 655 656\n      .. ..$ : int [1:2] 403 404\n      .. ..$ : int [1:2] 813 814\n      .. ..$ : int [1:2] 971 972\n      .. ..$ : int [1:2] 1129 1130\n      .. ..$ : int [1:2] 245 246\n      .. ..$ : int [1:2] 497 498\n      .. ..$ : int [1:2] 89 90\n      .. ..$ : int [1:2] 657 658\n      .. ..$ : int [1:2] 405 406\n      .. .. [list output truncated]\n      .. ..@ ptype: int(0) \n      ..- attr(*, \".drop\")= logi TRUE\n\n# 6 Group samples by target\n\n``` r\n# Group by Sample and Target, then summarize to get unique rows for each sample\ngrouped_df <- combined.fitered_df%>%\n  group_by(Sample, Target) %>%\n  summarize(Cq.Mean = mean(Cq, na.rm = TRUE)) %>%\n  ungroup()\n\nstr(grouped_df)\n```\n\n    tibble [632 × 3] (S3: tbl_df/tbl/data.frame)\n     $ Sample : chr [1:632] \"201\" \"201\" \"201\" \"201\" ...\n     $ Target : chr [1:632] \"ATPsynthase\" \"DNMT1\" \"GAPDH\" \"HSP70\" ...\n     $ Cq.Mean: num [1:632] 24 28.7 23.8 29.3 25.5 ...\n\n# 7 Add life stage and treatment cols\n\n``` r\n# Initialize new columns\ngrouped_df <- grouped_df %>%\n  mutate(life.stage = NA_character_,\n         conditioning.treatment = NA_character_,\n         acute.treatment = NA_character_)\n\n# Loop through each vector\nfor (vec_name in names(groups_list)) {\n  vec <- groups_list[[vec_name]]\n  stage <- strsplit(vec_name, \"\\\\.\")[[1]][1]\n  conditioning_treatment <- strsplit(vec_name, \"\\\\.\")[[1]][2]\n  acute_treatment <- strsplit(vec_name, \"\\\\.\")[[1]][3]\n  \n  # Loop through each row in grouped_df\n  for (i in 1:nrow(grouped_df)) {\n    sample <- grouped_df$Sample[i]\n    \n    # Check if sample is in the vector\n    if (sample %in% vec) {\n      # Update life.stage and treatment columns\n      grouped_df$life.stage[i] <- stage\n      grouped_df$conditioning.treatment[i] <- conditioning_treatment\n      grouped_df$acute.treatment[i] <-acute_treatment\n    }\n  }\n}\n\nstr(grouped_df)\n```\n\n    tibble [632 × 6] (S3: tbl_df/tbl/data.frame)\n     $ Sample                : chr [1:632] \"201\" \"201\" \"201\" \"201\" ...\n     $ Target                : chr [1:632] \"ATPsynthase\" \"DNMT1\" \"GAPDH\" \"HSP70\" ...\n     $ Cq.Mean               : num [1:632] 24 28.7 23.8 29.3 25.5 ...\n     $ life.stage            : chr [1:632] \"seed\" \"seed\" \"seed\" \"seed\" ...\n     $ conditioning.treatment: chr [1:632] \"treated\" \"treated\" \"treated\" \"treated\" ...\n     $ acute.treatment       : chr [1:632] \"ambient\" \"ambient\" \"ambient\" \"ambient\" ...\n\n# 8 Delta Cq to Normalizing Gene\n\n``` r\n# Calculate delta Cq by subtracting GAPDH Cq.Mean from each corresponding Sample Cq.Mean\ndelta_Cq_df <- calculate_delta_Cq(grouped_df)\n\n# Filters out normalizing gene, since no need to compare normalizing gene to itself.\ndelta_Cq_df <- delta_Cq_df %>%\n  filter(!is.na(life.stage), !is.na(Target), Target != \"GAPDH\")\n\nstr(delta_Cq_df)\n```\n\n    tibble [553 × 7] (S3: tbl_df/tbl/data.frame)\n     $ Sample                : chr [1:553] \"201\" \"201\" \"201\" \"201\" ...\n     $ Target                : chr [1:553] \"ATPsynthase\" \"DNMT1\" \"HSP70\" \"HSP90\" ...\n     $ Cq.Mean               : num [1:553] 24 28.7 29.3 25.5 28.9 ...\n     $ life.stage            : chr [1:553] \"seed\" \"seed\" \"seed\" \"seed\" ...\n     $ conditioning.treatment: chr [1:553] \"treated\" \"treated\" \"treated\" \"treated\" ...\n     $ acute.treatment       : chr [1:553] \"ambient\" \"ambient\" \"ambient\" \"ambient\" ...\n     $ delta_Cq              : num [1:553] 0.128 4.882 5.476 1.707 5.02 ...\n\n## 8.1 t-tests\n\n### 8.1.1 Life Stages\n\nThis code does the following:\n\n1.  Extracts the unique life.stage levels from the data frame.\n2.  Generates all possible pairs of life.stage levels using the combn\n    function.\n3.  Iterates over each pair and performs the t-test for each Target.\n    Adds an asterisk column and an asterisk if the p-value is \\<= 0.05.\n    Useful for downstream parsing.\n4.  Stores the results in a list and combines them into a single data\n    frame.\n5.  Adds a comparison column to indicate which life.stage levels were\n    compared.\n\n``` r\n# Extract unique life.stage levels\nunique_life_stages <- unique(delta_Cq_df$life.stage)\n\n# Generate all possible pairs of life.stage levels\nlife_stage_pairs <- combn(unique_life_stages, 2, simplify = FALSE)\n\n# Initialize a list to store results\nlife_stage_t_test_results_list <- list()\n\nfor (pair in life_stage_pairs) {\n  stage1 <- pair[1]\n  stage2 <- pair[2]\n  \n  # Perform t-test for each Target comparing the two life.stage levels\n  t_test_results <- delta_Cq_df %>%\n    filter(life.stage %in% c(stage1, stage2)) %>%\n    group_by(Target) %>%\n    summarise(\n      t_test_result = list(t.test(delta_Cq ~ life.stage))\n    ) %>%\n    ungroup() %>%\n    mutate(\n      estimate_diff = sapply(t_test_result, function(x) x$estimate[1] - x$estimate[2]),\n      p_value = sapply(t_test_result, function(x) x$p.value),\n      asterisk = ifelse(p_value <= 0.05, \"*\", \"\"), # Adds asterisk column and asterisk for p-value.\n      comparison = paste(stage1, \"vs\", stage2, sep = \".\")\n    ) %>%\n    select(!t_test_result)\n  \n  life_stage_t_test_results_list[[paste(stage1, stage2, sep = \".\")]] <- t_test_results\n}\n\n# Combine results into a single data frame\nlife_stage_t_test_results_df <- bind_rows(life_stage_t_test_results_list, .id = \"comparison\")\n\n# View the results\nprint(life_stage_t_test_results_df)\n```\n\n    # A tibble: 42 × 5\n       Target          estimate_diff p_value asterisk comparison   \n       <chr>                   <dbl>   <dbl> <chr>    <chr>        \n     1 ATPsynthase            0.251  0.107   \"\"       seed.adult   \n     2 DNMT1                  0.442  0.147   \"\"       seed.adult   \n     3 HSP70                  0.466  0.365   \"\"       seed.adult   \n     4 HSP90                  0.329  0.163   \"\"       seed.adult   \n     5 VIPERIN               -0.771  0.00645 \"*\"      seed.adult   \n     6 cGAS                   0.393  0.271   \"\"       seed.adult   \n     7 citrate.sythase        0.328  0.132   \"\"       seed.adult   \n     8 ATPsynthase            0.148  0.304   \"\"       seed.juvenile\n     9 DNMT1                  0.0824 0.807   \"\"       seed.juvenile\n    10 HSP70                  0.944  0.0803  \"\"       seed.juvenile\n    # ℹ 32 more rows\n\n### 8.1.2 Conditioning treatments\n\nThis code does the following:\n\n1.  Extracts the unique life.stage levels from the data frame.\n2.  For each life.stage, extracts the unique conditioning.treatment\n    levels.\n3.  Generates all possible pairs of conditioning.treatment levels within\n    each life.stage.\n4.  Iterates over each pair and performs the t-test for each Target.\n    Adds an asterisk column and an asterisk if the p-value is \\<= 0.05.\n    Useful for downstream parsing.\n5.  Stores the results in a list and combines them into a single data\n    frame.\n6.  Adds a comparison column to indicate which life.stage and\n    conditioning.treatment levels were compared.\n\n``` r\n# Extract unique life.stage levels\nunique_life_stages <- unique(delta_Cq_df$life.stage)\n\n# Initialize a list to store results\nconditioning_treatment_t_test_results_list <- list()\n\nfor (stage in unique_life_stages) {\n  # Extract unique conditioning.treatment levels within the current life.stage\n  unique_treatments <- unique(delta_Cq_df %>% filter(life.stage == stage) %>% pull(conditioning.treatment))\n  \n  # Generate all possible pairs of conditioning.treatment levels\n  treatment_pairs <- combn(unique_treatments, 2, simplify = FALSE)\n  \n  for (pair in treatment_pairs) {\n    treatment1 <- pair[1]\n    treatment2 <- pair[2]\n    \n    # Perform t-test for each Target comparing the two conditioning.treatment levels within the current life.stage\n    t_test_results <- delta_Cq_df %>%\n      filter(life.stage == stage, conditioning.treatment %in% c(treatment1, treatment2)) %>%\n      group_by(Target) %>%\n      summarise(\n        t_test_result = list(t.test(delta_Cq ~ conditioning.treatment))\n      ) %>%\n      ungroup() %>%\n      mutate(\n        estimate_diff = sapply(t_test_result, function(x) x$estimate[1] - x$estimate[2]),\n        p_value = sapply(t_test_result, function(x) x$p.value),\n        asterisk = ifelse(p_value <= 0.05, \"*\", \"\"), # Adds asterisk column and asterisk for p-value.\n        comparison = paste(stage, treatment1, \"vs\", treatment2, sep = \".\")\n      ) %>%\n      select(!t_test_result)\n    \n    conditioning_treatment_t_test_results_list[[paste(stage, treatment1, treatment2, sep = \".\")]] <- t_test_results\n  }\n}\n\n# Combine results into a single data frame\nconditioning_treatment_t_test_results_df <- bind_rows(conditioning_treatment_t_test_results_list, .id = \"comparison\")\n\n# View the results\nprint(conditioning_treatment_t_test_results_df)\n```\n\n    # A tibble: 28 × 5\n       Target          estimate_diff p_value asterisk comparison           \n       <chr>                   <dbl>   <dbl> <chr>    <chr>                \n     1 ATPsynthase           -0.345    0.193 \"\"       seed.treated.control \n     2 DNMT1                  0.211    0.701 \"\"       seed.treated.control \n     3 HSP70                 -0.608    0.444 \"\"       seed.treated.control \n     4 HSP90                 -0.150    0.652 \"\"       seed.treated.control \n     5 VIPERIN                0.0507   0.912 \"\"       seed.treated.control \n     6 cGAS                  -0.341    0.623 \"\"       seed.treated.control \n     7 citrate.sythase       -0.335    0.416 \"\"       seed.treated.control \n     8 ATPsynthase            0.0779   0.603 \"\"       adult.treated.control\n     9 DNMT1                  0.312    0.278 \"\"       adult.treated.control\n    10 HSP70                 -0.941    0.177 \"\"       adult.treated.control\n    # ℹ 18 more rows\n\n### 8.1.3 Acute treatments\n\nThis code does the following:\n\n1.  Extracts the unique life.stage levels from the data frame.\n2.  For each life.stage, extracts the unique acute.treatment levels.\n3.  Generates all possible pairs of acute.treatment levels within each\n    life.stage.\n4.  Iterates over each pair and performs the t-test for each Target.\n    Adds an asterisk column and an asterisk if the p-value is \\<= 0.05.\n    Useful for downstream parsing.\n5.  Stores the results in a list and combines them into a single data\n    frame.\n6.  Adds a comparison column to indicate which life.stage and\n    acute.treatment levels were compared.\n\nExcludes `seed` and `spat`, as these were only held at `ambient` for the\nacute treatment.\n\n``` r\n# Extract unique life.stage levels, excluding 'seed' and 'spat'\nunique_life_stages <- unique(delta_Cq_df$life.stage)\nunique_life_stages <- setdiff(unique_life_stages, c(\"seed\", \"spat\"))\n\n# Initialize a list to store results\nacute_treatment_t_test_results_list <- list()\n\nfor (stage in unique_life_stages) {\n  # Extract unique acute.treatment levels within the current life.stage\n  unique_treatments <- unique(delta_Cq_df %>% filter(life.stage == stage) %>% pull(acute.treatment))\n  \n  # Check if there are at least 2 unique treatments\n  if (length(unique_treatments) >= 2) {\n    # Generate all possible pairs of acute.treatment levels\n    treatment_pairs <- combn(unique_treatments, 2, simplify = FALSE)\n    \n    for (pair in treatment_pairs) {\n      treatment1 <- pair[1]\n      treatment2 <- pair[2]\n      \n      # Perform t-test for each Target comparing the two acute.treatment levels within the current life.stage\n      t_test_results <- delta_Cq_df %>%\n        filter(life.stage == stage, acute.treatment %in% c(treatment1, treatment2)) %>%\n        group_by(Target) %>%\n        summarise(\n          t_test_result = list(t.test(delta_Cq ~ acute.treatment))\n        ) %>%\n        ungroup() %>%\n        mutate(\n          estimate_diff = sapply(t_test_result, function(x) x$estimate[1] - x$estimate[2]),\n          p_value = sapply(t_test_result, function(x) x$p.value),\n          asterisk = ifelse(p_value <= 0.05, \"*\", \"\"), # Adds asterisk column and asterisk for p-value.\n          comparison = paste(stage, treatment1, \"vs\", treatment2, sep = \".\")\n        ) %>%\n        select(!t_test_result)\n      \n      acute_treatment_t_test_results_list[[paste(stage, treatment1, treatment2, sep = \".\")]] <- t_test_results\n    }\n  }\n}\n\n# Combine results into a single data frame\nacute_treatment_t_test_results_df <- bind_rows(acute_treatment_t_test_results_list, .id = \"comparison\")\n\n# View the results\nprint(acute_treatment_t_test_results_df)\n```\n\n    # A tibble: 14 × 5\n       Target          estimate_diff p_value asterisk comparison           \n       <chr>                   <dbl>   <dbl> <chr>    <chr>                \n     1 ATPsynthase            0.0605   0.687 \"\"       adult.ambient.high   \n     2 DNMT1                  0.314    0.275 \"\"       adult.ambient.high   \n     3 HSP70                  0.276    0.696 \"\"       adult.ambient.high   \n     4 HSP90                  0.499    0.149 \"\"       adult.ambient.high   \n     5 VIPERIN                0.323    0.251 \"\"       adult.ambient.high   \n     6 cGAS                   0.329    0.200 \"\"       adult.ambient.high   \n     7 citrate.sythase        0.0668   0.622 \"\"       adult.ambient.high   \n     8 ATPsynthase           -0.0370   0.738 \"\"       juvenile.ambient.high\n     9 DNMT1                 -0.672    0.121 \"\"       juvenile.ambient.high\n    10 HSP70                  0.745    0.319 \"\"       juvenile.ambient.high\n    11 HSP90                  0.0450   0.859 \"\"       juvenile.ambient.high\n    12 VIPERIN               -0.424    0.304 \"\"       juvenile.ambient.high\n    13 cGAS                  -0.203    0.474 \"\"       juvenile.ambient.high\n    14 citrate.sythase        0.0399   0.870 \"\"       juvenile.ambient.high\n\n### 8.1.4 Acute within life stage and conditioning\n\n``` r\n# Extract unique life.stage levels, excluding 'seed' and 'spat'\nunique_life_stages <- unique(delta_Cq_df$life.stage)\nunique_life_stages <- setdiff(unique_life_stages, c(\"seed\", \"spat\"))\n\n# Extract unique conditioning.treatment levels\nunique_conditioning_treatments <- unique(delta_Cq_df$conditioning.treatment)\n\n# Initialize a list to store results\nacute_treatment_within_life.stages_conditioning_t_test_results_list <- list()\n\nfor (stage in unique_life_stages) {\n  for (conditioning in unique_conditioning_treatments) {\n    # Extract unique acute.treatment levels within the current life.stage and conditioning.treatment\n    unique_treatments <- unique(delta_Cq_df %>% filter(life.stage == stage, conditioning.treatment == conditioning) %>% pull(acute.treatment))\n    \n    # Check if there are at least 2 unique treatments\n    if (length(unique_treatments) >= 2) {\n      # Generate all possible pairs of acute.treatment levels\n      treatment_pairs <- combn(unique_treatments, 2, simplify = FALSE)\n      \n      for (pair in treatment_pairs) {\n        treatment1 <- pair[1]\n        treatment2 <- pair[2]\n        \n        # Perform t-test for each Target comparing the two acute.treatment levels within the current life.stage and conditioning.treatment\n        t_test_results <- delta_Cq_df %>%\n          filter(life.stage == stage, conditioning.treatment == conditioning, acute.treatment %in% c(treatment1, treatment2)) %>%\n          group_by(Target) %>%\n          summarise(\n            t_test_result = list(t.test(delta_Cq ~ acute.treatment))\n          ) %>%\n          ungroup() %>%\n          mutate(\n            estimate_diff = sapply(t_test_result, function(x) x$estimate[1] - x$estimate[2]),\n            p_value = sapply(t_test_result, function(x) x$p.value),\n            asterisk = ifelse(p_value <= 0.05, \"*\", \"\"), # Adds asterisk column and asterisk for p-value.\n            comparison = paste(stage, conditioning, treatment1, \"vs\", treatment2, sep = \".\")\n          ) %>%\n          select(!t_test_result)\n        \n        acute_treatment_within_life.stages_conditioning_t_test_results_list[[paste(stage, conditioning, treatment1, treatment2, sep = \".\")]] <- t_test_results\n      }\n    }\n  }\n}\n\n# Combine results into a single data frame\nacute_treatment_within_life.stages_conditioning_t_test_results_df <- bind_rows(acute_treatment_within_life.stages_conditioning_t_test_results_list, .id = \"comparison_id\")\n\n# View the results\nprint(acute_treatment_within_life.stages_conditioning_t_test_results_df)\n```\n\n    # A tibble: 28 × 6\n       comparison_id              Target   estimate_diff p_value asterisk comparison\n       <chr>                      <chr>            <dbl>   <dbl> <chr>    <chr>     \n     1 adult.treated.ambient.high ATPsynt…        0.0264   0.893 \"\"       adult.tre…\n     2 adult.treated.ambient.high DNMT1           0.379    0.372 \"\"       adult.tre…\n     3 adult.treated.ambient.high HSP70           0.281    0.739 \"\"       adult.tre…\n     4 adult.treated.ambient.high HSP90           0.0292   0.925 \"\"       adult.tre…\n     5 adult.treated.ambient.high VIPERIN         0.0693   0.872 \"\"       adult.tre…\n     6 adult.treated.ambient.high cGAS            0.0595   0.828 \"\"       adult.tre…\n     7 adult.treated.ambient.high citrate…       -0.176    0.336 \"\"       adult.tre…\n     8 adult.control.high.ambient ATPsynt…        0.0946   0.698 \"\"       adult.con…\n     9 adult.control.high.ambient DNMT1           0.249    0.542 \"\"       adult.con…\n    10 adult.control.high.ambient HSP70           0.271    0.815 \"\"       adult.con…\n    # ℹ 18 more rows\n\n## 8.2 Plotting\n\n### 8.2.1 Delta Cq boxplots\n\n#### 8.2.1.1 Lifestage comparisons\n\n``` r\n# Create box plots for each comparison\nunique_comparisons <- unique(life_stage_t_test_results_df$comparison)\n\nfor (comparison in unique_comparisons) {\n  create_boxplot_delta_Cq(delta_Cq_df, comparison, life_stage_t_test_results_df)\n}\n```\n\n![](01.01-qPCR_files/figure-gfm/delta-Cq-boxplots-lifestage-1.png)\n\n![](01.01-qPCR_files/figure-gfm/delta-Cq-boxplots-lifestage-2.png)\n\n![](01.01-qPCR_files/figure-gfm/delta-Cq-boxplots-lifestage-3.png)\n\n![](01.01-qPCR_files/figure-gfm/delta-Cq-boxplots-lifestage-4.png)\n\n![](01.01-qPCR_files/figure-gfm/delta-Cq-boxplots-lifestage-5.png)\n\n![](01.01-qPCR_files/figure-gfm/delta-Cq-boxplots-lifestage-6.png)\n\n\n\n### 8.2.2 Conditioning comparisons\n\n``` r\n# Create box plots for each comparison\nunique_comparisons <- unique(conditioning_treatment_t_test_results_df$comparison)\n\nfor (comparison in unique_comparisons) {\n  create_boxplot_conditioning(delta_Cq_df, comparison, conditioning_treatment_t_test_results_df)\n}\n```\n\n![](01.01-qPCR_files/figure-gfm/delta-Cq-boxplots-conditioning-1.png)\n\n![](01.01-qPCR_files/figure-gfm/delta-Cq-boxplots-conditioning-2.png)\n\n![](01.01-qPCR_files/figure-gfm/delta-Cq-boxplots-conditioning-3.png)\n\n![](01.01-qPCR_files/figure-gfm/delta-Cq-boxplots-conditioning-4.png)\n\n\n\n### 8.2.3 Acute treatment comparisons\n\n``` r\n# Create box plots for each comparison\nunique_comparisons <- unique(acute_treatment_t_test_results_df$comparison)\n\nfor (comparison in unique_comparisons) {\n  create_boxplot_acute(delta_Cq_df, comparison, acute_treatment_t_test_results_df)\n}\n```\n\n![](01.01-qPCR_files/figure-gfm/delta-Cq-boxplots-acute-treatment-1.png)\n\n![](01.01-qPCR_files/figure-gfm/delta-Cq-boxplots-acute-treatment-2.png)\n\n\n\n### 8.2.4 Acute within life stage conditioning\n\n``` r\n# Loop through each comparison in the t-test results and create box plots\nfor (comparison in unique(acute_treatment_within_life.stages_conditioning_t_test_results_df$comparison)) {\n  create_boxplot_acute_conditioning(delta_Cq_df, comparison, acute_treatment_within_life.stages_conditioning_t_test_results_df)\n}\n```\n\n![](01.01-qPCR_files/figure-gfm/boxplots-acute-treatments-within-life-stages-conditioning-1.png)\n\n![](01.01-qPCR_files/figure-gfm/boxplots-acute-treatments-within-life-stages-conditioning-2.png)\n\n![](01.01-qPCR_files/figure-gfm/boxplots-acute-treatments-within-life-stages-conditioning-3.png)\n\n![](01.01-qPCR_files/figure-gfm/boxplots-acute-treatments-within-life-stages-conditioning-4.png)\n\n\n\n# 9 Delta delta Cq\n\n## 9.1 Calculations\n\n### 9.1.1 Conditioning\n\n``` r\n# Calculate delta_delta_Cq\ndelta_delta_conditioning_fold_change <- delta_Cq_df %>%\n  group_by(life.stage, Target) %>%\n  summarize(\n    treated_delta_Cq = mean(delta_Cq[conditioning.treatment == \"treated\"], na.rm = TRUE),\n    control_delta_Cq = mean(delta_Cq[conditioning.treatment == \"control\"], na.rm = TRUE)\n  ) %>%\n  mutate(delta_delta_Cq = treated_delta_Cq - control_delta_Cq) %>%\n  select(life.stage, Target, delta_delta_Cq)\n\nstr(delta_delta_conditioning_fold_change)\n```\n\n    gropd_df [28 × 3] (S3: grouped_df/tbl_df/tbl/data.frame)\n     $ life.stage    : chr [1:28] \"adult\" \"adult\" \"adult\" \"adult\" ...\n     $ Target        : chr [1:28] \"ATPsynthase\" \"DNMT1\" \"HSP70\" \"HSP90\" ...\n     $ delta_delta_Cq: num [1:28] -0.0779 -0.3116 0.941 0.7639 0.0852 ...\n     - attr(*, \"groups\")= tibble [4 × 2] (S3: tbl_df/tbl/data.frame)\n      ..$ life.stage: chr [1:4] \"adult\" \"juvenile\" \"seed\" \"spat\"\n      ..$ .rows     : list<int> [1:4] \n      .. ..$ : int [1:7] 1 2 3 4 5 6 7\n      .. ..$ : int [1:7] 8 9 10 11 12 13 14\n      .. ..$ : int [1:7] 15 16 17 18 19 20 21\n      .. ..$ : int [1:7] 22 23 24 25 26 27 28\n      .. ..@ ptype: int(0) \n      ..- attr(*, \".drop\")= logi TRUE\n\n### 9.1.2 Acute treatment\n\n``` r\n# Calculate delta_delta_Cq for acute treatment\ndelta_delta_Cq_acute_df <- delta_Cq_df %>%\n  group_by(life.stage, Target, acute.treatment) %>%\n  summarize(\n    treated_delta_Cq = mean(delta_Cq[conditioning.treatment == \"treated\"], na.rm = TRUE),\n    control_delta_Cq = mean(delta_Cq[conditioning.treatment == \"control\"], na.rm = TRUE)\n  ) %>%\n  mutate(delta_delta_Cq = treated_delta_Cq - control_delta_Cq) %>%\n  select(life.stage, Target, acute.treatment, delta_delta_Cq)\n\nstr(delta_delta_Cq_acute_df)\n```\n\n    gropd_df [42 × 4] (S3: grouped_df/tbl_df/tbl/data.frame)\n     $ life.stage     : chr [1:42] \"adult\" \"adult\" \"adult\" \"adult\" ...\n     $ Target         : chr [1:42] \"ATPsynthase\" \"ATPsynthase\" \"DNMT1\" \"DNMT1\" ...\n     $ acute.treatment: chr [1:42] \"ambient\" \"high\" \"ambient\" \"high\" ...\n     $ delta_delta_Cq : num [1:42] -0.112 -0.0438 -0.2467 -0.3765 0.9455 ...\n     - attr(*, \"groups\")= tibble [28 × 3] (S3: tbl_df/tbl/data.frame)\n      ..$ life.stage: chr [1:28] \"adult\" \"adult\" \"adult\" \"adult\" ...\n      ..$ Target    : chr [1:28] \"ATPsynthase\" \"DNMT1\" \"HSP70\" \"HSP90\" ...\n      ..$ .rows     : list<int> [1:28] \n      .. ..$ : int [1:2] 1 2\n      .. ..$ : int [1:2] 3 4\n      .. ..$ : int [1:2] 5 6\n      .. ..$ : int [1:2] 7 8\n      .. ..$ : int [1:2] 9 10\n      .. ..$ : int [1:2] 11 12\n      .. ..$ : int [1:2] 13 14\n      .. ..$ : int [1:2] 15 16\n      .. ..$ : int [1:2] 17 18\n      .. ..$ : int [1:2] 19 20\n      .. ..$ : int [1:2] 21 22\n      .. ..$ : int [1:2] 23 24\n      .. ..$ : int [1:2] 25 26\n      .. ..$ : int [1:2] 27 28\n      .. ..$ : int 29\n      .. ..$ : int 30\n      .. ..$ : int 31\n      .. ..$ : int 32\n      .. ..$ : int 33\n      .. ..$ : int 34\n      .. ..$ : int 35\n      .. ..$ : int 36\n      .. ..$ : int 37\n      .. ..$ : int 38\n      .. ..$ : int 39\n      .. ..$ : int 40\n      .. ..$ : int 41\n      .. ..$ : int 42\n      .. ..@ ptype: int(0) \n      ..- attr(*, \".drop\")= logi TRUE\n\n### 9.1.3 Life stage\n\n``` r\n# Calculate delta_delta_Cq for life stage comparisons\ndelta_delta_Cq_life_stage_df <- delta_Cq_df %>%\n  group_by(Target, life.stage) %>%\n  summarize(mean_delta_Cq = mean(delta_Cq, na.rm = TRUE)) %>%\n  ungroup() %>%\n  pivot_wider(names_from = life.stage, values_from = mean_delta_Cq) %>%\n  mutate(\n    delta_delta_Cq_adult_vs_seed = adult - seed,\n    delta_delta_Cq_spat_vs_seed = spat - seed,\n    delta_delta_Cq_adult_vs_spat = adult - spat\n  ) %>%\n  pivot_longer(cols = starts_with(\"delta_delta_Cq_\"), names_to = \"comparison\", values_to = \"delta_delta_Cq\") %>%\n  filter(!is.na(delta_delta_Cq))\n\n# Display the structure of the resulting data frame\nstr(delta_delta_Cq_life_stage_df)\n```\n\n    tibble [21 × 7] (S3: tbl_df/tbl/data.frame)\n     $ Target        : chr [1:21] \"ATPsynthase\" \"ATPsynthase\" \"ATPsynthase\" \"DNMT1\" ...\n     $ adult         : num [1:21] 0.48 0.48 0.48 6.17 6.17 ...\n     $ juvenile      : num [1:21] 0.378 0.378 0.378 5.808 5.808 ...\n     $ seed          : num [1:21] 0.229 0.229 0.229 5.725 5.725 ...\n     $ spat          : num [1:21] 0.519 0.519 0.519 6.277 6.277 ...\n     $ comparison    : chr [1:21] \"delta_delta_Cq_adult_vs_seed\" \"delta_delta_Cq_spat_vs_seed\" \"delta_delta_Cq_adult_vs_spat\" \"delta_delta_Cq_adult_vs_seed\" ...\n     $ delta_delta_Cq: num [1:21] 0.2508 0.2894 -0.0386 0.4424 0.5511 ...\n\n### 9.1.4 Calculate delta delta acute treatments within lifestage and conditioning\n\n``` r\n# Calculate delta_delta_Cq for acute treatment comparisons within each life stage and conditioning treatment\ndelta_delta_Cq_acute_within_life_stage_conditioning_df <- delta_Cq_df %>%\n  group_by(life.stage, conditioning.treatment, Target, acute.treatment) %>%\n  summarize(mean_delta_Cq = mean(delta_Cq, na.rm = TRUE)) %>%\n  ungroup() %>%\n  pivot_wider(names_from = acute.treatment, values_from = mean_delta_Cq) %>%\n  mutate(delta_delta_Cq_high_vs_ambient = high - ambient) %>%\n  pivot_longer(cols = starts_with(\"delta_delta_Cq_\"), names_to = \"comparison\", values_to = \"delta_delta_Cq\") %>%\n  filter(!is.na(delta_delta_Cq))\n\n# Display the structure of the resulting data frame\nstr(delta_delta_Cq_acute_within_life_stage_conditioning_df)\n```\n\n    tibble [28 × 7] (S3: tbl_df/tbl/data.frame)\n     $ life.stage            : chr [1:28] \"adult\" \"adult\" \"adult\" \"adult\" ...\n     $ conditioning.treatment: chr [1:28] \"control\" \"control\" \"control\" \"control\" ...\n     $ Target                : chr [1:28] \"ATPsynthase\" \"DNMT1\" \"HSP70\" \"HSP90\" ...\n     $ ambient               : num [1:28] 0.566 6.448 3.944 1.259 3.758 ...\n     $ high                  : num [1:28] 0.472 6.199 3.673 0.29 3.181 ...\n     $ comparison            : chr [1:28] \"delta_delta_Cq_high_vs_ambient\" \"delta_delta_Cq_high_vs_ambient\" \"delta_delta_Cq_high_vs_ambient\" \"delta_delta_Cq_high_vs_ambient\" ...\n     $ delta_delta_Cq        : num [1:28] -0.0946 -0.2492 -0.2715 -0.969 -0.5763 ...\n\n### 9.1.5 Calculate the fold change life stage comparison\n\n``` r\n# Calculate fold change and output to a new data frame\nfold_change_life_stage_df <- delta_delta_Cq_life_stage_df %>%\n  mutate(fold_change = 2^(-delta_delta_Cq))\n\n# Display the structure of the resulting data frame\nstr(fold_change_life_stage_df)\n```\n\n    tibble [21 × 8] (S3: tbl_df/tbl/data.frame)\n     $ Target        : chr [1:21] \"ATPsynthase\" \"ATPsynthase\" \"ATPsynthase\" \"DNMT1\" ...\n     $ adult         : num [1:21] 0.48 0.48 0.48 6.17 6.17 ...\n     $ juvenile      : num [1:21] 0.378 0.378 0.378 5.808 5.808 ...\n     $ seed          : num [1:21] 0.229 0.229 0.229 5.725 5.725 ...\n     $ spat          : num [1:21] 0.519 0.519 0.519 6.277 6.277 ...\n     $ comparison    : chr [1:21] \"delta_delta_Cq_adult_vs_seed\" \"delta_delta_Cq_spat_vs_seed\" \"delta_delta_Cq_adult_vs_spat\" \"delta_delta_Cq_adult_vs_seed\" ...\n     $ delta_delta_Cq: num [1:21] 0.2508 0.2894 -0.0386 0.4424 0.5511 ...\n     $ fold_change   : num [1:21] 0.84 0.818 1.027 0.736 0.683 ...\n\n### 9.1.6 Calculate the fold change conditioning comparison\n\n``` r\ndelta_delta_conditioning_fold_change <- delta_delta_conditioning_fold_change %>%\n  mutate(fold_change = 2^(-delta_delta_Cq)) %>% \n  distinct(Target, fold_change)\n\nstr(delta_delta_conditioning_fold_change)\n```\n\n    gropd_df [28 × 3] (S3: grouped_df/tbl_df/tbl/data.frame)\n     $ life.stage : chr [1:28] \"adult\" \"adult\" \"adult\" \"adult\" ...\n     $ Target     : chr [1:28] \"ATPsynthase\" \"DNMT1\" \"HSP70\" \"HSP90\" ...\n     $ fold_change: num [1:28] 1.055 1.241 0.521 0.589 0.943 ...\n     - attr(*, \"groups\")= tibble [4 × 2] (S3: tbl_df/tbl/data.frame)\n      ..$ life.stage: chr [1:4] \"adult\" \"juvenile\" \"seed\" \"spat\"\n      ..$ .rows     : list<int> [1:4] \n      .. ..$ : int [1:7] 1 2 3 4 5 6 7\n      .. ..$ : int [1:7] 8 9 10 11 12 13 14\n      .. ..$ : int [1:7] 15 16 17 18 19 20 21\n      .. ..$ : int [1:7] 22 23 24 25 26 27 28\n      .. ..@ ptype: int(0) \n      ..- attr(*, \".drop\")= logi TRUE\n\n### 9.1.7 Calculate the fold change acute comparison\n\n``` r\n# Calculate fold change for acute treatment\ndelta_delta_acute_fold_change <- delta_delta_Cq_acute_df %>%\n  mutate(fold_change = 2^(-delta_delta_Cq)) %>%\n  distinct(life.stage, Target, acute.treatment, fold_change)\n\n# Display the structure of the resulting data frame\nstr(delta_delta_acute_fold_change)\n```\n\n    gropd_df [42 × 4] (S3: grouped_df/tbl_df/tbl/data.frame)\n     $ life.stage     : chr [1:42] \"adult\" \"adult\" \"adult\" \"adult\" ...\n     $ Target         : chr [1:42] \"ATPsynthase\" \"ATPsynthase\" \"DNMT1\" \"DNMT1\" ...\n     $ acute.treatment: chr [1:42] \"ambient\" \"high\" \"ambient\" \"high\" ...\n     $ fold_change    : num [1:42] 1.081 1.031 1.186 1.298 0.519 ...\n     - attr(*, \"groups\")= tibble [28 × 3] (S3: tbl_df/tbl/data.frame)\n      ..$ life.stage: chr [1:28] \"adult\" \"adult\" \"adult\" \"adult\" ...\n      ..$ Target    : chr [1:28] \"ATPsynthase\" \"DNMT1\" \"HSP70\" \"HSP90\" ...\n      ..$ .rows     : list<int> [1:28] \n      .. ..$ : int [1:2] 1 2\n      .. ..$ : int [1:2] 3 4\n      .. ..$ : int [1:2] 5 6\n      .. ..$ : int [1:2] 7 8\n      .. ..$ : int [1:2] 9 10\n      .. ..$ : int [1:2] 11 12\n      .. ..$ : int [1:2] 13 14\n      .. ..$ : int [1:2] 15 16\n      .. ..$ : int [1:2] 17 18\n      .. ..$ : int [1:2] 19 20\n      .. ..$ : int [1:2] 21 22\n      .. ..$ : int [1:2] 23 24\n      .. ..$ : int [1:2] 25 26\n      .. ..$ : int [1:2] 27 28\n      .. ..$ : int 29\n      .. ..$ : int 30\n      .. ..$ : int 31\n      .. ..$ : int 32\n      .. ..$ : int 33\n      .. ..$ : int 34\n      .. ..$ : int 35\n      .. ..$ : int 36\n      .. ..$ : int 37\n      .. ..$ : int 38\n      .. ..$ : int 39\n      .. ..$ : int 40\n      .. ..$ : int 41\n      .. ..$ : int 42\n      .. ..@ ptype: int(0) \n      ..- attr(*, \".drop\")= logi TRUE\n\n### 9.1.8 Calculate fold change acute treatments within lifestage and conditioning\n\n``` r\n# Calculate fold change for acute treatment comparisons within each life stage and conditioning treatment\nfold_change_acute_within_life_stage_conditioning_df <- delta_delta_Cq_acute_within_life_stage_conditioning_df %>%\n  mutate(fold_change = 2^(-delta_delta_Cq))\n\n# Display the structure of the resulting data frame\nstr(fold_change_acute_within_life_stage_conditioning_df)\n```\n\n    tibble [28 × 8] (S3: tbl_df/tbl/data.frame)\n     $ life.stage            : chr [1:28] \"adult\" \"adult\" \"adult\" \"adult\" ...\n     $ conditioning.treatment: chr [1:28] \"control\" \"control\" \"control\" \"control\" ...\n     $ Target                : chr [1:28] \"ATPsynthase\" \"DNMT1\" \"HSP70\" \"HSP90\" ...\n     $ ambient               : num [1:28] 0.566 6.448 3.944 1.259 3.758 ...\n     $ high                  : num [1:28] 0.472 6.199 3.673 0.29 3.181 ...\n     $ comparison            : chr [1:28] \"delta_delta_Cq_high_vs_ambient\" \"delta_delta_Cq_high_vs_ambient\" \"delta_delta_Cq_high_vs_ambient\" \"delta_delta_Cq_high_vs_ambient\" ...\n     $ delta_delta_Cq        : num [1:28] -0.0946 -0.2492 -0.2715 -0.969 -0.5763 ...\n     $ fold_change           : num [1:28] 1.07 1.19 1.21 1.96 1.49 ...\n\n## 9.2 Plotting fold changes\n\n### 9.2.1 Acute comparisons within lifestage and conditioning\n\n``` r\nlibrary(ggplot2)\n\n# Generate bar plots for each group of comparison within each life stage and conditioning treatment\nplot_list <- fold_change_acute_within_life_stage_conditioning_df %>%\n  split(list(.$life.stage, .$conditioning.treatment, .$comparison)) %>%\n  lapply(function(df) {\n    life_stage <- unique(df$life.stage)\n    conditioning_treatment <- unique(df$conditioning.treatment)\n    comparison_title <- gsub(\"delta_delta_Cq_\", \"\", unique(df$comparison))\n    comparison_title <- gsub(\"_vs_\", \" vs. \", comparison_title)\n    ggplot(df, aes(x = Target, y = fold_change)) +\n      geom_bar(stat = \"identity\") +\n      labs(title = paste(\"Gene Expression -\", life_stage, \"-\", conditioning_treatment, \"-\", comparison_title), \n           x = \"Target\", y = \"Fold Change\") +\n      theme_minimal() +\n      theme(axis.text.x = element_text(angle = 45, hjust = 1))\n  })\n\n# Display the plots\nfor (plot in plot_list) {\n  print(plot)\n}\n```\n\n![](01.01-qPCR_files/figure-gfm/bar-plots-fold-change-acute-within-lifestage-conditioning-1.png)\n\n![](01.01-qPCR_files/figure-gfm/bar-plots-fold-change-acute-within-lifestage-conditioning-2.png)\n\n![](01.01-qPCR_files/figure-gfm/bar-plots-fold-change-acute-within-lifestage-conditioning-3.png)\n\n![](01.01-qPCR_files/figure-gfm/bar-plots-fold-change-acute-within-lifestage-conditioning-4.png)\n\n\n\n### 9.2.2 Life stage comparisons\n\n``` r\n# Generate bar plots for each group of comparison\nplot_list <- fold_change_life_stage_df %>%\n  split(.$comparison) %>%\n  lapply(function(df) {\n    comparison_title <- gsub(\"delta_delta_Cq_\", \"\", unique(df$comparison))\n    comparison_title <- gsub(\"_vs_\", \" vs. \", comparison_title)\n    ggplot(df, aes(x = Target, y = fold_change)) +\n      geom_bar(stat = \"identity\") +\n      labs(title = paste(\"Gene Expression -\", comparison_title), x = \"Target\", y = \"Fold Change\") +\n      theme_minimal() +\n      theme(axis.text.x = element_text(angle = 45, hjust = 1))\n  })\n\n# Display the plots\nfor (plot in plot_list) {\n  print(plot)\n}\n```\n\n![](01.01-qPCR_files/figure-gfm/bar-plots-fold-change-lifestages-1.png)\n\n![](01.01-qPCR_files/figure-gfm/bar-plots-fold-change-lifestages-2.png)\n\n![](01.01-qPCR_files/figure-gfm/bar-plots-fold-change-lifestages-3.png)\n\n\n\n### 9.2.3 Conditioning comparisons\n\n![](01.01-qPCR_files/figure-gfm/barplot-fold-change-conditioning-1.png)\n\n\n\n### 9.2.4 Line plot conditioning comparisons across lifestages\n\n![](01.01-qPCR_files/figure-gfm/lineplot-fold-change-conditioning-1.png)\n\n\n\n### 9.2.5 Acute treatment comparison\n\n![](01.01-qPCR_files/figure-gfm/barplot-fold-change-acute-1.png)\n\n","srcMarkdownNoYaml":"\n\n# INTRO\n\nThis notebook performs pair-wise comparisons of qPCR gene expression,\nnormalized to `GAPDH` expression. It calculates delta Cq, delta delta\nCq, and fold changes in expression. Additionally, it generates box plots\n(delta Cq), and bar plots (fold change expression).\n\nI've provided a summary of the various pair-wise comparisons immediately below, but you might want to just [skip to the plots](#plotting), as the summary _and_ the notebook content is _very_ lengthy.\n\n# SUMMARY\n\n## t-tests (Delta Cq)\n\n### Seed vs. Adult\n\nThese genes had p-values <= 0.05:\n\n- VIPERIN\n\n### Seed vs. Juvenile\n\nThese genes had p-values <= 0.05:\n\n- citrate synthase\n\n- HSP90\n\n### Seed vs. Spat\n\nThese genes had p-values <= 0.05:\n\n- VIPERIN\n\n### Adult vs. Juvenile\n\nThe genes had p-values <= 0.05:\n\n- citrate synthase\n\n- VIPERIN\n\n### Adult vs. Spat\n\nNo genes had p-values <= 0.05\n\n### Juvenile vs. Spat\n\nThe genes had p-values <= 0.05:\n\n- citrate synthase\n\n- VIPERIN\n\n### Seed - Conditioning Treated vs. Control\n\nNo genes had p-values <= 0.05\n\n### Adult - Conditioning Treated vs. Control\n\nThe genes had p-values <= 0.05:\n\n- HSP90\n\n### Juvenile - Conditioning Treated vs. Control\n\nNo genes had p-values <= 0.05\n\n### Spat - Conditioning Treated vs. Control\n\nThe genes had p-values <= 0.05:\n\n- citrate synthase\n\n- DNMT1\n\n### Adult - Acute Ambient vs. High\n\nNo genes had p-values <= 0.05\n\n### Juvenile - Acute Ambient vs. High\n\nNo genes had p-values <= 0.05\n\n### Adult - Conditioning Treated: Acute Ambient vs. High\n\nNo genes had p-values <= 0.05\n\n### Adult - Conditioning Control: Acute Ambient vs. High\n\nNo genes had p-values <= 0.05\n\n### Juvenile - Conditioning Treated: Acute Ambient vs. High\n\nThe genes had p-values <= 0.05:\n\n- HSP70\n\n### Juvenile - Conditioning Control: Acute Ambient vs. High\n\nThe genes had p-values <= 0.05:\n\n- VIPERIN\n\n## Gene Expression (delta delta Cq or fold change)\n\n### Adult - Conditioning Treated: Acute High vs. Ambient\n\n- All genes show elevated expression relative to Ambient.\n\n- Fold change is at similar levels across all genes, with DNMT1 and HSP70 being the highest.\n\n### Juvenile - Conditioning Treated: Acute High vs. Ambient\n\n- All genes show elevated expression relative to Ambient.\n\n- HSP70 shows ~4-fold higher fold change in expression compared to most of the other genes.\n\n- DNMT1 exhibits fold change expression ~1/2 that of most of the other genes.\n\n### Adult - Adult vs. Seed\n\n- All genes show elevated expression relative to Seed.\n\n- VIPERIN exhibits fold change in expression >2-fold higher than the other genes.\n\n### Adult - Adult vs. Spat\n\n- All genes show elevated expression relative to Spat.\n\n- All genes have similar fold changes in expression, with ATP synthase and DNMT1 showing the highest levels of fold change in expression.\n\n### Adult - Spat vs. Seed\n\n- All genes show elevated expression relative to Seed.\n\n- Most genes have similar fold changes in expression.\n\n- VIPERIN exhibits fold change in a expression ~2-fold higher than the other genes.\n\n### Conditioning by Target and Lifestage\n\n- All genes show elevated expression relative to Control.\n\n- VIPERIN, citrate synthase, and ATP synthase show an initial increase in fold change expression from seed to spat life stages, declining to juvenile and adult lifestages.\n\n- HSP90 shows level fold changes in expression across seed, spat, and juvenile lifestages, followed by a decrease in the adult stage.\n\n- DNMT1 exhibits a drastic decrease in fold change expression from seed to spat, followed by a substantial increase from spat to adult.\n\n- cGAS and HSP70 exhibit decreases from seed to spat, followed by a sharp increase from spat to juvenile. This is followed by a moderate decrease from juvenile to adult by cGAS and a sharp decrease in HSP70.\n\n::: {.callout-note}\nThe post below is markdown generated from [01.01-qPCR.Rmd](https://github.com/RobertsLab/project-gigas-carryover/blob/9a32e40ee9739803a3f5b523c40ffc925d9f7472/lifestage_carryover/scripts/01.01-qPCR.Rmd) (commit `9a32e40`).\n:::\n\n\n\n# 1 Description\n\nThis notebook performs pair-wise comparisons of qPCR gene expression,\nnormalized to `GAPDH` expression. It calculates delta Cq, delta delta\nCq, and fold changes in expression. Additionally, it generates box plots\n(delta Cq), and bar plots (fold change expression).\n\n# 2 Set variables\n\n## 2.1 Set sample groups\n\nGroups are named in the following fashion:\n\n`<life.stage>.<conditioning.treatment>.<acute.treatment>`\n\nThis allows for parsing downstream.\n\n::: {.callout-tip}\nBelow is the full set of groups for the *entire experiment*. For\nthe current qPCR analysis, `seed` and `spat` do *not* have acute\ntreatments; just conditioning treatments.\n:::\n\n\n``` r\nseed.control.ambient=c(\"29\", \"40\", \"55\", \"63\", \"69\", \"101\", \"119\", \"122\", \"155\", \"164\", \"187\", \"202\", \"209\", \"214\", \"233\", \"236\", \"275\")\nseed.control.high=c(\"42\", \"59\", \"60\", \"62\", \"86\", \"102\", \"140\", \"176\", \"177\", \"184\", \"192\", \"223\", \"234\", \"243\", \"244\", \"254\", \"264\")\nseed.treated.ambient=c(\"14\", \"48\", \"66\", \"72\", \"89\", \"115\", \"129\", \"138\", \"156\", \"182\", \"191\", \"201\", \"227\", \"239\", \"270\", \"277\", \"280\")\nseed.treated.high=c(\"15\", \"19\", \"24\", \"88\", \"92\", \"105\", \"111\", \"113\", \"120\", \"128\", \"161\", \"200\", \"211\", \"256\", \"257\", \"266\", \"285\")\nspat.control.ambient=c(\"11\", \"30\", \"36\", \"52\", \"77\", \"114\", \"134\", \"142\", \"144\", \"183\", \"193\", \"229\", \"230\", \"231\", \"240\", \"272\", \"287\")\nspat.control.high=c(\"27\", \"74\", \"93\", \"96\", \"97\", \"137\", \"143\", \"153\", \"168\", \"178\", \"189\", \"206\", \"262\", \"274\", \"282\", \"284\", \"289\")\nspat.treated.ambient=c(\"9\", \"13\", \"38\", \"46\", \"47\", \"121\", \"145\", \"151\", \"174\", \"194\", \"197\", \"198\", \"216\", \"235\", \"241\", \"252\", \"291\")\nspat.treated.high=c(\"6\", \"25\", \"50\", \"78\", \"124\", \"126\", \"131\", \"160\", \"163\", \"172\", \"220\", \"226\", \"242\", \"253\", \"296\", \"298\")\njuvenile.control.ambient=c(\"18\", \"57\", \"65\", \"75\", \"79\", \"104\", \"110\", \"123\", \"125\", \"171\", \"175\", \"205\", \"238\", \"273\", \"279\", \"293\", \"317\")\njuvenile.control.high=c(\"12\", \"39\", \"43\", \"49\", \"71\", \"130\", \"141\", \"146\", \"150\", \"170\", \"195\", \"297\", \"301\", \"324\", \"351\", \"355\", \"371\")\njuvenile.treated.ambient=c(\"1\", \"34\", \"64\", \"83\", \"98\", \"147\", \"152\", \"158\", \"162\", \"169\", \"188\", \"271\", \"295\", \"310\", \"357\", \"361\", \"381\")\njuvenile.treated.high=c(\"28\", \"53\", \"61\", \"73\", \"81\", \"106\", \"109\", \"139\", \"149\", \"173\", \"181\", \"213\", \"290\", \"302\", \"311\", \"364\", \"392\")\nadult.control.ambient=c(\"3\", \"5\", \"13*\", \"16\", \"17\", \"80\", \"87\", \"94\", \"148\", \"159\", \"179\", \"180\", \"250\", \"258\", \"268\", \"312\", \"326\", \"330\", \"334\", \"346\", \"360\", \"377\", \"379\", \"386\")\nadult.control.high=c(\"20\", \"23\", \"26\", \"32\", \"33\", \"67\", \"70\", \"90\", \"107\", \"132\", \"135\", \"157\", \"166\", \"186\", \"207\", \"215\", \"248\", \"316\", \"341\", \"344\", \"349\", \"382\", \"394\", \"395\")\nadult.treated.ambient=c(\"7\", \"31\", \"35\", \"37\", \"41\", \"54\", \"84\", \"100\", \"112\", \"116\", \"118\", \"133\", \"154\", \"199\", \"203\", \"204\", \"208\", \"219\", \"294\", \"318\", \"339\", \"353\", \"363\", \"378\")\nadult.treated.high=c(\"21\", \"22\", \"45\", \"82\", \"85\", \"91\", \"95\", \"99\", \"103\", \"108\", \"117\", \"127\", \"165\", \"185\", \"190\", \"196\", \"232\", \"237\", \"245\", \"263\", \"276\", \"306\", \"343\", \"374\")\n```\n\n## 2.2 Assign groups to list\n\n``` r\n# Combine vectors into lists\n# Used for adding treatment info and/or subsetting downstream\n\ngroups_list <- list(juvenile.control.ambient = juvenile.control.ambient,\n                                   juvenile.control.high = juvenile.control.high,\n                                   juvenile.treated.ambient = juvenile.treated.ambient,\n                                   juvenile.treated.high = juvenile.treated.high,\n                                   adult.control.ambient = adult.control.ambient,\n                                   adult.control.high = adult.control.high,\n                                   adult.treated.ambient = adult.treated.ambient,\n                                   adult.treated.high = adult.treated.high,\n                                   seed.control.ambient = seed.control.ambient,\n                                   seed.control.high = seed.control.high,\n                                   seed.treated.ambient = seed.treated.ambient,\n                                   seed.treated.high = seed.treated.high,\n                                   spat.control.ambient = spat.control.ambient,\n                                   spat.control.high = spat.control.high,\n                                   spat.treated.ambient = spat.treated.ambient,\n                                   spat.treated.high = spat.treated.high)\n```\n\n# 3 Functions\n\n## 3.1 Calculate delta Cq\n\nNormalized to designated normalizing gene\n\n``` r\ncalculate_delta_Cq <- function(df) {\n  df <- df %>%\n    group_by(Sample) %>%\n    mutate(delta_Cq = Cq.Mean - Cq.Mean[Target == \"GAPDH\"]) %>%\n    ungroup()\n  \n  return(df)\n}\n```\n\n## 3.2 Create delta Cq boxplots\n\n### 3.2.1 Lifestage comparison\n\n``` r\n# Function to create box plots for each comparison\ncreate_boxplot_delta_Cq <- function(data, comparison, t_test_results) {\n  # Extract life stages from comparison\n  life_stages <- unlist(strsplit(comparison, \"\\\\.\"))\n\n  # Debugging: Print life stages\n  # print(paste(\"Life stages for comparison:\", comparison))\n  # print(life_stages)\n\n  # Filter data for the relevant life stages\n  filtered_data <- data %>%\n    filter(life.stage %in% life_stages)\n\n  # Debugging: Print filtered data\n  # print(\"Filtered data:\")\n  # print(filtered_data)\n\n  # Check if both life stages are included\n  if (!all(life_stages %in% unique(filtered_data$life.stage))) {\n    stop(\"Not all life stages are included in the filtered data\")\n  }\n\n  y_limits <- range(filtered_data$delta_Cq, na.rm = TRUE)\n\n  # Debugging: Print y_limits\n  # print(\"Y limits:\")\n  # print(y_limits)\n\n  # Filter t_test_results for the current comparison\n  t_test_results_filtered <- t_test_results %>%\n    filter(comparison == !!comparison)\n\n  # Debugging: Print filtered t_test_results\n  # print(\"Filtered t_test_results:\")\n  # print(t_test_results_filtered)\n\n  # Filter t_test_results for asterisks\n  t_test_results_with_asterisks <- t_test_results_filtered %>%\n    filter(asterisk != \"\")\n\n  # Debugging: Print t_test_results_with_asterisks\n  # print(\"t_test_results_with_asterisks:\")\n  # print(t_test_results_with_asterisks)\n\n  formatted_title <- paste0(toupper(substring(life_stages[1], 1, 1)), substring(life_stages[1], 2), \n                            \" vs. \", \n                            toupper(substring(life_stages[2], 1, 1)), substring(life_stages[2], 2))\n\n  boxplot <- ggplot(filtered_data, aes(x = Target, y = delta_Cq, fill = life.stage)) +\n    geom_boxplot(position = position_dodge(width = 0.75)) +\n    theme_minimal() +\n    theme(legend.position = \"right\") +\n    scale_fill_manual(values=c(\"darkgray\", \"salmon\", \"lightblue\", \"lightgreen\")) +\n    ylim(y_limits) +\n    labs(x = \"Target\", y = \"Delta Cq\", title = formatted_title) +\n    # Highlighted section: Adds asterisks\n    geom_text(data = t_test_results_with_asterisks, \n              aes(x = Target, y = y_limits[2] - 1, label = asterisk), \n              vjust = -0.5, size = 8, color = \"black\", inherit.aes = FALSE)\n\n  print(boxplot)\n}\n```\n\n### 3.2.2 Conditioning comparisons\n\n1.  Extract Life Stage and Conditioning Treatments:\n\n- The comparison string is split into its components (`life_stage`,\n  `treatment1`, and `treatment2`).\n\n2.  Filter Data:\n\n- The filtered_data data frame is filtered to include only the rows with\n  the relevant life stage and conditioning treatments.\n\n3.  Check for Both Treatments:\n\n- Ensure that both treatments are included in the `filtered_data`.\n\n4.  Filter T-Test Results:\n\n- The `t_test_results_filtered` data frame is filtered for the specific\n  comparison.\n\n- The `t_test_results_with_asterisks` data frame is created to include\n  only the rows with asterisks.\n\n5.  Format the Title:\n\n- The `formatted_title` variable is created by capitalizing the first\n  letter of each component and concatenating them with ” - ” and ” vs. ”\n  in between.\n\n- This should create box plots comparing conditioning treatments within\n  each life stage, with titles formatted as\n  `<life.stage> - Treated vs. Control`.\n\n``` r\n# Function to create box plots for each comparison of conditioning treatments within life stages\ncreate_boxplot_conditioning <- function(data, comparison, t_test_results) {\n  # Extract life stage and conditioning treatments from comparison\n  comparison_parts <- unlist(strsplit(comparison, \"\\\\.\"))\n  life_stage <- comparison_parts[1]\n  treatment1 <- comparison_parts[2]\n  treatment2 <- comparison_parts[3]\n\n  # Debugging: Print life stage and treatments\n  # print(paste(\"Life stage and treatments for comparison:\", comparison))\n  # print(c(life_stage, treatment1, treatment2))\n\n  # Filter data for the relevant life stage and conditioning treatments\n  filtered_data <- data %>%\n    filter(life.stage == life_stage, conditioning.treatment %in% c(treatment1, treatment2))\n\n  # Debugging: Print filtered data\n  # print(\"Filtered data:\")\n  # print(filtered_data)\n\n  # Check if both treatments are included\n  if (!all(c(treatment1, treatment2) %in% unique(filtered_data$conditioning.treatment))) {\n    stop(\"Not all treatments are included in the filtered data\")\n  }\n\n  y_limits <- range(filtered_data$delta_Cq, na.rm = TRUE)\n\n  # Debugging: Print y_limits\n  # print(\"Y limits:\")\n  # print(y_limits)\n\n  # Filter t_test_results for the current comparison\n  t_test_results_filtered <- t_test_results %>%\n    filter(comparison == !!comparison)\n\n  # Debugging: Print filtered t_test_results\n  # print(\"Filtered t_test_results:\")\n  # print(t_test_results_filtered)\n\n  # Filter t_test_results for asterisks\n  t_test_results_with_asterisks <- t_test_results_filtered %>%\n    filter(asterisk != \"\")\n\n  # Debugging: Print t_test_results_with_asterisks\n  # print(\"t_test_results_with_asterisks:\")\n  # print(t_test_results_with_asterisks)\n\n  # Format the title\n  formatted_title <- paste0(toupper(substring(life_stage, 1, 1)), substring(life_stage, 2), \n                            \" - \", \n                            toupper(substring(treatment1, 1, 1)), substring(treatment1, 2), \n                            \" vs. \", \n                            toupper(substring(treatment2, 1, 1)), substring(treatment2, 2))\n\n  boxplot <- ggplot(filtered_data, aes(x = Target, y = delta_Cq, fill = conditioning.treatment)) +\n    geom_boxplot(position = position_dodge(width = 0.75)) +\n    theme_minimal() +\n    theme(legend.position = \"right\") +\n    scale_fill_manual(values=c(\"darkgray\", \"salmon\")) +\n    ylim(y_limits) +\n    labs(x = \"Target\", y = \"Delta Cq\", title = formatted_title) +\n    # Highlighted section: Adds asterisks\n    geom_text(data = t_test_results_with_asterisks, \n              aes(x = Target, y = y_limits[2] - 1, label = asterisk), \n              vjust = -0.5, size = 8, color = \"black\", inherit.aes = FALSE)\n\n  print(boxplot)\n}\n```\n\n### 3.2.3 Acute comparisons\n\n1.  Extract Life Stage and Acute Treatments:\n\n- The comparison string is split into its components (`life_stage`,\n  `treatment1`, and `treatment2`).\n\n2.  Filter Data:\n\n- The `filtered_data` data frame is filtered to include only the rows\n  with the relevant life stage and acute treatments.\n\n3.  Check for Both Treatments:\n\n- Ensure that both treatments are included in the `filtered_data`.\n\n4.  Filter T-Test Results:\n\n- The `t_test_results_filtered` data frame is filtered for the specific\n  comparison.\n\n- The `t_test_results_with_asterisks` data frame is created to include\n  only the rows with asterisks. Format the Title:\n\n5.  The formatted_title variable is created by capitalizing the first\n    letter of each component and concatenating them with ” - ” and ”\n    vs. ” in between.\n\n- This should create box plots comparing acute treatments within each\n  life stage, with titles formatted as\n  `<life.stage> - Ambient vs. High`.\n\n``` r\n# Function to create box plots for each comparison of acute treatments within life stages\ncreate_boxplot_acute <- function(data, comparison, t_test_results) {\n  # Extract life stage and acute treatments from comparison\n  comparison_parts <- unlist(strsplit(comparison, \"\\\\.\"))\n  life_stage <- comparison_parts[1]\n  treatment1 <- comparison_parts[2]\n  treatment2 <- comparison_parts[3]\n\n  # Debugging: Print life stage and treatments\n  # print(paste(\"Life stage and treatments for comparison:\", comparison))\n  # print(c(life_stage, treatment1, treatment2))\n\n  # Filter data for the relevant life stage and acute treatments\n  filtered_data <- data %>%\n    filter(life.stage == life_stage, acute.treatment %in% c(treatment1, treatment2))\n\n  # Debugging: Print filtered data\n  # print(\"Filtered data:\")\n  # print(filtered_data)\n\n  # Check if both treatments are included\n  if (!all(c(treatment1, treatment2) %in% unique(filtered_data$acute.treatment))) {\n    stop(\"Not all treatments are included in the filtered data\")\n  }\n\n  y_limits <- range(filtered_data$delta_Cq, na.rm = TRUE)\n\n  # Debugging: Print y_limits\n  # print(\"Y limits:\")\n  # print(y_limits)\n\n  # Filter t_test_results for the current comparison\n  t_test_results_filtered <- t_test_results %>%\n    filter(comparison == !!comparison)\n\n  # Debugging: Print filtered t_test_results\n  # print(\"Filtered t_test_results:\")\n  # print(t_test_results_filtered)\n\n  # Filter t_test_results for asterisks\n  t_test_results_with_asterisks <- t_test_results_filtered %>%\n    filter(asterisk != \"\")\n\n  # Debugging: Print t_test_results_with_asterisks\n  # print(\"t_test_results_with_asterisks:\")\n  # print(t_test_results_with_asterisks)\n\n  # Format the title\n  formatted_title <- paste0(toupper(substring(life_stage, 1, 1)), substring(life_stage, 2), \n                            \" - \", \n                            toupper(substring(treatment1, 1, 1)), substring(treatment1, 2), \n                            \" vs. \", \n                            toupper(substring(treatment2, 1, 1)), substring(treatment2, 2))\n\n  boxplot <- ggplot(filtered_data, aes(x = Target, y = delta_Cq, fill = acute.treatment)) +\n    geom_boxplot(position = position_dodge(width = 0.75)) +\n    theme_minimal() +\n    theme(legend.position = \"right\") +\n    scale_fill_manual(values=c(\"darkgray\", \"salmon\")) +\n    ylim(y_limits) +\n    labs(x = \"Target\", y = \"Delta Cq\", title = formatted_title) +\n    # Highlighted section: Adds asterisks\n    geom_text(data = t_test_results_with_asterisks, \n              aes(x = Target, y = y_limits[2] - 1, label = asterisk), \n              vjust = -0.5, size = 8, color = \"magenta\", inherit.aes = FALSE)\n\n  print(boxplot)\n}\n```\n\n### 3.2.4 Acute treatements within life stage conditioning\n\n``` r\n# Function to create box plots for each comparison of acute treatments within life stages and conditioning treatments\ncreate_boxplot_acute_conditioning <- function(data, comparison, t_test_results) {\n  # Extract life stage, conditioning treatment, and acute treatments from comparison\n  comparison_parts <- unlist(strsplit(comparison, \"\\\\.\"))\n  life_stage <- comparison_parts[1]\n  conditioning_treatment <- comparison_parts[2]\n  treatment1 <- comparison_parts[3]\n  treatment2 <- comparison_parts[5]\n\n  # Filter data for the relevant life stage, conditioning treatment, and acute treatments\n  filtered_data <- data %>%\n    filter(life.stage == life_stage, conditioning.treatment == conditioning_treatment, acute.treatment %in% c(treatment1, treatment2))\n\n  # Check if both treatments are included\n  if (!all(c(treatment1, treatment2) %in% unique(filtered_data$acute.treatment))) {\n    stop(\"Not all treatments are included in the filtered data\")\n  }\n\n  y_limits <- range(filtered_data$delta_Cq, na.rm = TRUE)\n\n  # Filter t_test_results for the current comparison\n  t_test_results_filtered <- t_test_results %>%\n    filter(comparison == !!comparison)\n\n  # Filter t_test_results for asterisks\n  t_test_results_with_asterisks <- t_test_results_filtered %>%\n    filter(asterisk != \"\")\n\n  # Format the title\n  formatted_title <- paste0(toupper(substring(life_stage, 1, 1)), substring(life_stage, 2), \n                            \" - \", \n                            toupper(substring(conditioning_treatment, 1, 1)), substring(conditioning_treatment, 2), \n                            \" - \", \n                            toupper(substring(treatment1, 1, 1)), substring(treatment1, 2), \n                            \" vs. \", \n                            toupper(substring(treatment2, 1, 1)), substring(treatment2, 2))\n\n  boxplot <- ggplot(filtered_data, aes(x = Target, y = delta_Cq, fill = acute.treatment)) +\n    geom_boxplot(position = position_dodge(width = 0.75)) +\n    theme_minimal() +\n    theme(legend.position = \"right\") +\n    scale_fill_manual(values=c(\"darkgray\", \"salmon\")) +\n    ylim(y_limits) +\n    labs(x = \"Target\", y = \"Delta Cq\", title = formatted_title) +\n    # Adds asterisks\n    geom_text(data = t_test_results_with_asterisks, \n              aes(x = Target, y = y_limits[2] - 1, label = asterisk), \n              vjust = -0.5, size = 8, color = \"black\", inherit.aes = FALSE)\n\n  print(boxplot)\n}\n```\n\n# 4 Read in files\n\n``` r\n# Get a list of all CSV files in the directory with the naming structure \"*Cq-Results.csv\"\ncq_file_list <- list() # Initialize list\ncq_file_list <- list.files(path = cqs_directory, pattern = \"Cq-Results\\\\.csv$\", full.names = TRUE)\n\n# Initialize an empty list to store the data frames\ndata_frames_list <- list()\n\n# Loop through each file and read it into a data frame, then add it to the list\nfor (file in cq_file_list) {\n  data <- read.csv(file, header = TRUE)\n  data$Sample <- as.character(data$Sample)  # Convert Sample column to character type\n  data_frames_list[[file]] <- data\n}\n\n# Combine all data frames into a single data frame\ncombined_df <- bind_rows(data_frames_list, .id = \"data_frame_id\")\n\nstr(combined_df)\n```\n\n    'data.frame':   1920 obs. of  17 variables:\n     $ data_frame_id         : chr  \"../data/qPCR/Cq/sam_2024-12-10_11-47-51_CFX96_GAPDH-02-Quantification-Cq-Results.csv\" \"../data/qPCR/Cq/sam_2024-12-10_11-47-51_CFX96_GAPDH-02-Quantification-Cq-Results.csv\" \"../data/qPCR/Cq/sam_2024-12-10_11-47-51_CFX96_GAPDH-02-Quantification-Cq-Results.csv\" \"../data/qPCR/Cq/sam_2024-12-10_11-47-51_CFX96_GAPDH-02-Quantification-Cq-Results.csv\" ...\n     $ X                     : logi  NA NA NA NA NA NA ...\n     $ Well                  : chr  \"A01\" \"A02\" \"A03\" \"A04\" ...\n     $ Fluor                 : chr  \"SYBR\" \"SYBR\" \"SYBR\" \"SYBR\" ...\n     $ Target                : chr  \"Cg_GAPDH_205_F-355_R (SR IDs: 1172/3)\" \"Cg_GAPDH_205_F-355_R (SR IDs: 1172/3)\" \"Cg_GAPDH_205_F-355_R (SR IDs: 1172/3)\" \"Cg_GAPDH_205_F-355_R (SR IDs: 1172/3)\" ...\n     $ Content               : chr  \"Unkn-01\" \"Unkn-01\" \"Unkn-01\" \"Unkn-02\" ...\n     $ Sample                : chr  \"270\" \"270\" \"270\" \"271\" ...\n     $ Biological.Set.Name   : logi  NA NA NA NA NA NA ...\n     $ Cq                    : num  24.8 24.8 25 24.4 24.3 ...\n     $ Cq.Mean               : num  24.9 24.9 24.9 24.4 24.4 ...\n     $ Cq.Std..Dev           : num  0.1005 0.1005 0.1005 0.0914 0.0914 ...\n     $ Starting.Quantity..SQ.: num  NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ...\n     $ Log.Starting.Quantity : num  NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ...\n     $ SQ.Mean               : num  NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ...\n     $ SQ.Std..Dev           : num  NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ...\n     $ Set.Point             : int  60 60 60 60 60 60 60 60 60 60 ...\n     $ Well.Note             : logi  NA NA NA NA NA NA ...\n\n# 5 Clean data\n\n## 5.1 Replace target names\n\n``` r\n# Remove rows with Sample name \"NTC\"\ncombined_df <- combined_df[combined_df$Sample != \"NTC\", ]\n\n\n# Replace values in the Target column\ncombined_df$Target <- gsub(\"Cg_GAPDH_205_F-355_R \\\\(SR IDs: 1172/3\\\\)\", \"GAPDH\", combined_df$Target)\n\ncombined_df$Target <- gsub(\"Cg_ATPsynthase_F/R \\\\(SR IDs: 1385/6\\\\)\", \"ATPsynthase\", combined_df$Target)\n\ncombined_df$Target <- gsub(\"Cg_cGAS \\\\(SR IDs: 1826/7\\\\)\", \"cGAS\", combined_df$Target)\n\ncombined_df$Target <- gsub(\"Cg_citrate_synthase \\\\(SR IDs: 1383/4\\\\)\", \"citrate.sythase\", combined_df$Target)\n\ncombined_df$Target <- gsub(\"Cg_DNMT1_F \\\\(SR IDs: 1510/1\\\\)\", \"DNMT1\", combined_df$Target)\n\ncombined_df$Target <- gsub(\"Cg_HSP70_F/R \\\\(SR IDs: 598/9\\\\)\", \"HSP70\", combined_df$Target)\n\ncombined_df$Target <- gsub(\"Cg_Hsp90_F/R \\\\(SR IDs: 1532/3\\\\)\", \"HSP90\", combined_df$Target)\n\ncombined_df$Target <- gsub(\"Cg_VIPERIN_F/R \\\\(SR IDs: 1828/9\\\\)\", \"VIPERIN\", combined_df$Target)\n\nstr(combined_df)\n```\n\n    'data.frame':   1908 obs. of  17 variables:\n     $ data_frame_id         : chr  \"../data/qPCR/Cq/sam_2024-12-10_11-47-51_CFX96_GAPDH-02-Quantification-Cq-Results.csv\" \"../data/qPCR/Cq/sam_2024-12-10_11-47-51_CFX96_GAPDH-02-Quantification-Cq-Results.csv\" \"../data/qPCR/Cq/sam_2024-12-10_11-47-51_CFX96_GAPDH-02-Quantification-Cq-Results.csv\" \"../data/qPCR/Cq/sam_2024-12-10_11-47-51_CFX96_GAPDH-02-Quantification-Cq-Results.csv\" ...\n     $ X                     : logi  NA NA NA NA NA NA ...\n     $ Well                  : chr  \"A01\" \"A02\" \"A03\" \"A04\" ...\n     $ Fluor                 : chr  \"SYBR\" \"SYBR\" \"SYBR\" \"SYBR\" ...\n     $ Target                : chr  \"GAPDH\" \"GAPDH\" \"GAPDH\" \"GAPDH\" ...\n     $ Content               : chr  \"Unkn-01\" \"Unkn-01\" \"Unkn-01\" \"Unkn-02\" ...\n     $ Sample                : chr  \"270\" \"270\" \"270\" \"271\" ...\n     $ Biological.Set.Name   : logi  NA NA NA NA NA NA ...\n     $ Cq                    : num  24.8 24.8 25 24.4 24.3 ...\n     $ Cq.Mean               : num  24.9 24.9 24.9 24.4 24.4 ...\n     $ Cq.Std..Dev           : num  0.1005 0.1005 0.1005 0.0914 0.0914 ...\n     $ Starting.Quantity..SQ.: num  NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ...\n     $ Log.Starting.Quantity : num  NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ...\n     $ SQ.Mean               : num  NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ...\n     $ SQ.Std..Dev           : num  NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ...\n     $ Set.Point             : int  60 60 60 60 60 60 60 60 60 60 ...\n     $ Well.Note             : logi  NA NA NA NA NA NA ...\n\n## 5.2 Identify Samples with Cq.Std..Dev \\> 0.5\n\n``` r\n# Filter out rows where Cq.Std..Dev is NA\ncombined_df <- combined_df[!is.na(combined_df$Cq.Std..Dev), ]\n\n# Filter rows where Cq.Std..Dev is greater than 0.5\nhigh_cq_std_dev <- combined_df[combined_df$Cq.Std..Dev > 0.5, ]\n\n# Print the filtered rows with specified columns, without row names\nprint(high_cq_std_dev[, c(\"Target\", \"Sample\", \"Cq\", \"Cq.Std..Dev\")], row.names = FALSE)\n```\n\n              Target Sample       Cq Cq.Std..Dev\n               GAPDH    316 23.94926   8.5684728\n               GAPDH    316 24.14183   8.5684728\n               GAPDH    316 38.88564   8.5684728\n               GAPDH    213 26.98012   2.2910353\n               GAPDH    213 23.00009   2.2910353\n               GAPDH    213 26.95634   2.2910353\n               GAPDH    263 22.42154   0.8731474\n               GAPDH    263 23.77008   0.8731474\n               GAPDH    263 24.05667   0.8731474\n     citrate.sythase    230 24.44066   4.4783429\n     citrate.sythase    230 24.40421   4.4783429\n     citrate.sythase    230 32.17909   4.4783429\n             VIPERIN    227 30.47773   3.5152533\n             VIPERIN    227 30.37738   3.5152533\n             VIPERIN    227 36.51553   3.5152533\n             VIPERIN    245 26.05748   5.1635899\n             VIPERIN    245 34.98192   5.1635899\n             VIPERIN    245 26.01928   5.1635899\n             VIPERIN    341 26.48675   2.9838590\n             VIPERIN    341 31.67235   2.9838590\n             VIPERIN    341 26.52174   2.9838590\n             VIPERIN    344 29.98184   2.3712440\n             VIPERIN    344 25.90358   2.3712440\n             VIPERIN    344 25.84648   2.3712440\n             VIPERIN    355 28.79712   0.5821437\n             VIPERIN    355 29.57428   0.5821437\n             VIPERIN    355 28.43490   0.5821437\n\n## 5.3 Remove bad technical reps\n\n``` r\n# Group by Sample and Target, then filter out the outlier replicate\ncombined.fitered_df<- combined_df %>%\n  group_by(Sample, Target) %>%\n  filter(abs(Cq - mean(Cq, na.rm = TRUE)) <= Cq.Std..Dev)\n\n# Print the filtered data frame\nstr(combined.fitered_df)\n```\n\n    gropd_df [1,264 × 17] (S3: grouped_df/tbl_df/tbl/data.frame)\n     $ data_frame_id         : chr [1:1264] \"../data/qPCR/Cq/sam_2024-12-10_11-47-51_CFX96_GAPDH-02-Quantification-Cq-Results.csv\" \"../data/qPCR/Cq/sam_2024-12-10_11-47-51_CFX96_GAPDH-02-Quantification-Cq-Results.csv\" \"../data/qPCR/Cq/sam_2024-12-10_11-47-51_CFX96_GAPDH-02-Quantification-Cq-Results.csv\" \"../data/qPCR/Cq/sam_2024-12-10_11-47-51_CFX96_GAPDH-02-Quantification-Cq-Results.csv\" ...\n     $ X                     : logi [1:1264] NA NA NA NA NA NA ...\n     $ Well                  : chr [1:1264] \"A01\" \"A02\" \"A04\" \"A06\" ...\n     $ Fluor                 : chr [1:1264] \"SYBR\" \"SYBR\" \"SYBR\" \"SYBR\" ...\n     $ Target                : chr [1:1264] \"GAPDH\" \"GAPDH\" \"GAPDH\" \"GAPDH\" ...\n     $ Content               : chr [1:1264] \"Unkn-01\" \"Unkn-01\" \"Unkn-02\" \"Unkn-02\" ...\n     $ Sample                : chr [1:1264] \"270\" \"270\" \"271\" \"271\" ...\n     $ Biological.Set.Name   : logi [1:1264] NA NA NA NA NA NA ...\n     $ Cq                    : num [1:1264] 24.8 24.8 24.4 24.4 24.2 ...\n     $ Cq.Mean               : num [1:1264] 24.9 24.9 24.4 24.4 23.9 ...\n     $ Cq.Std..Dev           : num [1:1264] 0.1005 0.1005 0.0914 0.0914 0.2866 ...\n     $ Starting.Quantity..SQ.: num [1:1264] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ...\n     $ Log.Starting.Quantity : num [1:1264] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ...\n     $ SQ.Mean               : num [1:1264] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ...\n     $ SQ.Std..Dev           : num [1:1264] NaN NaN NaN NaN NaN NaN NaN NaN NaN NaN ...\n     $ Set.Point             : int [1:1264] 60 60 60 60 60 60 60 60 60 60 ...\n     $ Well.Note             : logi [1:1264] NA NA NA NA NA NA ...\n     - attr(*, \"groups\")= tibble [632 × 3] (S3: tbl_df/tbl/data.frame)\n      ..$ Sample: chr [1:632] \"201\" \"201\" \"201\" \"201\" ...\n      ..$ Target: chr [1:632] \"ATPsynthase\" \"DNMT1\" \"GAPDH\" \"HSP70\" ...\n      ..$ .rows : list<int> [1:632] \n      .. ..$ : int [1:2] 65 66\n      .. ..$ : int [1:2] 633 634\n      .. ..$ : int [1:2] 381 382\n      .. ..$ : int [1:2] 791 792\n      .. ..$ : int [1:2] 949 950\n      .. ..$ : int [1:2] 1107 1108\n      .. ..$ : int [1:2] 223 224\n      .. ..$ : int [1:2] 475 476\n      .. ..$ : int [1:2] 67 68\n      .. ..$ : int [1:2] 635 636\n      .. ..$ : int [1:2] 383 384\n      .. ..$ : int [1:2] 793 794\n      .. ..$ : int [1:2] 951 952\n      .. ..$ : int [1:2] 1109 1110\n      .. ..$ : int [1:2] 225 226\n      .. ..$ : int [1:2] 477 478\n      .. ..$ : int [1:2] 69 70\n      .. ..$ : int [1:2] 637 638\n      .. ..$ : int [1:2] 385 386\n      .. ..$ : int [1:2] 795 796\n      .. ..$ : int [1:2] 953 954\n      .. ..$ : int [1:2] 1111 1112\n      .. ..$ : int [1:2] 227 228\n      .. ..$ : int [1:2] 479 480\n      .. ..$ : int [1:2] 71 72\n      .. ..$ : int [1:2] 639 640\n      .. ..$ : int [1:2] 387 388\n      .. ..$ : int [1:2] 797 798\n      .. ..$ : int [1:2] 955 956\n      .. ..$ : int [1:2] 1113 1114\n      .. ..$ : int [1:2] 229 230\n      .. ..$ : int [1:2] 481 482\n      .. ..$ : int [1:2] 73 74\n      .. ..$ : int [1:2] 641 642\n      .. ..$ : int [1:2] 389 390\n      .. ..$ : int [1:2] 799 800\n      .. ..$ : int [1:2] 957 958\n      .. ..$ : int [1:2] 1115 1116\n      .. ..$ : int [1:2] 231 232\n      .. ..$ : int [1:2] 483 484\n      .. ..$ : int [1:2] 75 76\n      .. ..$ : int [1:2] 643 644\n      .. ..$ : int [1:2] 391 392\n      .. ..$ : int [1:2] 801 802\n      .. ..$ : int [1:2] 959 960\n      .. ..$ : int [1:2] 1117 1118\n      .. ..$ : int [1:2] 233 234\n      .. ..$ : int [1:2] 485 486\n      .. ..$ : int [1:2] 77 78\n      .. ..$ : int [1:2] 645 646\n      .. ..$ : int [1:2] 393 394\n      .. ..$ : int [1:2] 803 804\n      .. ..$ : int [1:2] 961 962\n      .. ..$ : int [1:2] 1119 1120\n      .. ..$ : int [1:2] 235 236\n      .. ..$ : int [1:2] 487 488\n      .. ..$ : int [1:2] 79 80\n      .. ..$ : int [1:2] 647 648\n      .. ..$ : int [1:2] 395 396\n      .. ..$ : int [1:2] 805 806\n      .. ..$ : int [1:2] 963 964\n      .. ..$ : int [1:2] 1121 1122\n      .. ..$ : int [1:2] 237 238\n      .. ..$ : int [1:2] 489 490\n      .. ..$ : int [1:2] 81 82\n      .. ..$ : int [1:2] 649 650\n      .. ..$ : int [1:2] 397 398\n      .. ..$ : int [1:2] 807 808\n      .. ..$ : int [1:2] 965 966\n      .. ..$ : int [1:2] 1123 1124\n      .. ..$ : int [1:2] 239 240\n      .. ..$ : int [1:2] 491 492\n      .. ..$ : int [1:2] 83 84\n      .. ..$ : int [1:2] 651 652\n      .. ..$ : int [1:2] 399 400\n      .. ..$ : int [1:2] 809 810\n      .. ..$ : int [1:2] 967 968\n      .. ..$ : int [1:2] 1125 1126\n      .. ..$ : int [1:2] 241 242\n      .. ..$ : int [1:2] 493 494\n      .. ..$ : int [1:2] 85 86\n      .. ..$ : int [1:2] 653 654\n      .. ..$ : int [1:2] 401 402\n      .. ..$ : int [1:2] 811 812\n      .. ..$ : int [1:2] 969 970\n      .. ..$ : int [1:2] 1127 1128\n      .. ..$ : int [1:2] 243 244\n      .. ..$ : int [1:2] 495 496\n      .. ..$ : int [1:2] 87 88\n      .. ..$ : int [1:2] 655 656\n      .. ..$ : int [1:2] 403 404\n      .. ..$ : int [1:2] 813 814\n      .. ..$ : int [1:2] 971 972\n      .. ..$ : int [1:2] 1129 1130\n      .. ..$ : int [1:2] 245 246\n      .. ..$ : int [1:2] 497 498\n      .. ..$ : int [1:2] 89 90\n      .. ..$ : int [1:2] 657 658\n      .. ..$ : int [1:2] 405 406\n      .. .. [list output truncated]\n      .. ..@ ptype: int(0) \n      ..- attr(*, \".drop\")= logi TRUE\n\n# 6 Group samples by target\n\n``` r\n# Group by Sample and Target, then summarize to get unique rows for each sample\ngrouped_df <- combined.fitered_df%>%\n  group_by(Sample, Target) %>%\n  summarize(Cq.Mean = mean(Cq, na.rm = TRUE)) %>%\n  ungroup()\n\nstr(grouped_df)\n```\n\n    tibble [632 × 3] (S3: tbl_df/tbl/data.frame)\n     $ Sample : chr [1:632] \"201\" \"201\" \"201\" \"201\" ...\n     $ Target : chr [1:632] \"ATPsynthase\" \"DNMT1\" \"GAPDH\" \"HSP70\" ...\n     $ Cq.Mean: num [1:632] 24 28.7 23.8 29.3 25.5 ...\n\n# 7 Add life stage and treatment cols\n\n``` r\n# Initialize new columns\ngrouped_df <- grouped_df %>%\n  mutate(life.stage = NA_character_,\n         conditioning.treatment = NA_character_,\n         acute.treatment = NA_character_)\n\n# Loop through each vector\nfor (vec_name in names(groups_list)) {\n  vec <- groups_list[[vec_name]]\n  stage <- strsplit(vec_name, \"\\\\.\")[[1]][1]\n  conditioning_treatment <- strsplit(vec_name, \"\\\\.\")[[1]][2]\n  acute_treatment <- strsplit(vec_name, \"\\\\.\")[[1]][3]\n  \n  # Loop through each row in grouped_df\n  for (i in 1:nrow(grouped_df)) {\n    sample <- grouped_df$Sample[i]\n    \n    # Check if sample is in the vector\n    if (sample %in% vec) {\n      # Update life.stage and treatment columns\n      grouped_df$life.stage[i] <- stage\n      grouped_df$conditioning.treatment[i] <- conditioning_treatment\n      grouped_df$acute.treatment[i] <-acute_treatment\n    }\n  }\n}\n\nstr(grouped_df)\n```\n\n    tibble [632 × 6] (S3: tbl_df/tbl/data.frame)\n     $ Sample                : chr [1:632] \"201\" \"201\" \"201\" \"201\" ...\n     $ Target                : chr [1:632] \"ATPsynthase\" \"DNMT1\" \"GAPDH\" \"HSP70\" ...\n     $ Cq.Mean               : num [1:632] 24 28.7 23.8 29.3 25.5 ...\n     $ life.stage            : chr [1:632] \"seed\" \"seed\" \"seed\" \"seed\" ...\n     $ conditioning.treatment: chr [1:632] \"treated\" \"treated\" \"treated\" \"treated\" ...\n     $ acute.treatment       : chr [1:632] \"ambient\" \"ambient\" \"ambient\" \"ambient\" ...\n\n# 8 Delta Cq to Normalizing Gene\n\n``` r\n# Calculate delta Cq by subtracting GAPDH Cq.Mean from each corresponding Sample Cq.Mean\ndelta_Cq_df <- calculate_delta_Cq(grouped_df)\n\n# Filters out normalizing gene, since no need to compare normalizing gene to itself.\ndelta_Cq_df <- delta_Cq_df %>%\n  filter(!is.na(life.stage), !is.na(Target), Target != \"GAPDH\")\n\nstr(delta_Cq_df)\n```\n\n    tibble [553 × 7] (S3: tbl_df/tbl/data.frame)\n     $ Sample                : chr [1:553] \"201\" \"201\" \"201\" \"201\" ...\n     $ Target                : chr [1:553] \"ATPsynthase\" \"DNMT1\" \"HSP70\" \"HSP90\" ...\n     $ Cq.Mean               : num [1:553] 24 28.7 29.3 25.5 28.9 ...\n     $ life.stage            : chr [1:553] \"seed\" \"seed\" \"seed\" \"seed\" ...\n     $ conditioning.treatment: chr [1:553] \"treated\" \"treated\" \"treated\" \"treated\" ...\n     $ acute.treatment       : chr [1:553] \"ambient\" \"ambient\" \"ambient\" \"ambient\" ...\n     $ delta_Cq              : num [1:553] 0.128 4.882 5.476 1.707 5.02 ...\n\n## 8.1 t-tests\n\n### 8.1.1 Life Stages\n\nThis code does the following:\n\n1.  Extracts the unique life.stage levels from the data frame.\n2.  Generates all possible pairs of life.stage levels using the combn\n    function.\n3.  Iterates over each pair and performs the t-test for each Target.\n    Adds an asterisk column and an asterisk if the p-value is \\<= 0.05.\n    Useful for downstream parsing.\n4.  Stores the results in a list and combines them into a single data\n    frame.\n5.  Adds a comparison column to indicate which life.stage levels were\n    compared.\n\n``` r\n# Extract unique life.stage levels\nunique_life_stages <- unique(delta_Cq_df$life.stage)\n\n# Generate all possible pairs of life.stage levels\nlife_stage_pairs <- combn(unique_life_stages, 2, simplify = FALSE)\n\n# Initialize a list to store results\nlife_stage_t_test_results_list <- list()\n\nfor (pair in life_stage_pairs) {\n  stage1 <- pair[1]\n  stage2 <- pair[2]\n  \n  # Perform t-test for each Target comparing the two life.stage levels\n  t_test_results <- delta_Cq_df %>%\n    filter(life.stage %in% c(stage1, stage2)) %>%\n    group_by(Target) %>%\n    summarise(\n      t_test_result = list(t.test(delta_Cq ~ life.stage))\n    ) %>%\n    ungroup() %>%\n    mutate(\n      estimate_diff = sapply(t_test_result, function(x) x$estimate[1] - x$estimate[2]),\n      p_value = sapply(t_test_result, function(x) x$p.value),\n      asterisk = ifelse(p_value <= 0.05, \"*\", \"\"), # Adds asterisk column and asterisk for p-value.\n      comparison = paste(stage1, \"vs\", stage2, sep = \".\")\n    ) %>%\n    select(!t_test_result)\n  \n  life_stage_t_test_results_list[[paste(stage1, stage2, sep = \".\")]] <- t_test_results\n}\n\n# Combine results into a single data frame\nlife_stage_t_test_results_df <- bind_rows(life_stage_t_test_results_list, .id = \"comparison\")\n\n# View the results\nprint(life_stage_t_test_results_df)\n```\n\n    # A tibble: 42 × 5\n       Target          estimate_diff p_value asterisk comparison   \n       <chr>                   <dbl>   <dbl> <chr>    <chr>        \n     1 ATPsynthase            0.251  0.107   \"\"       seed.adult   \n     2 DNMT1                  0.442  0.147   \"\"       seed.adult   \n     3 HSP70                  0.466  0.365   \"\"       seed.adult   \n     4 HSP90                  0.329  0.163   \"\"       seed.adult   \n     5 VIPERIN               -0.771  0.00645 \"*\"      seed.adult   \n     6 cGAS                   0.393  0.271   \"\"       seed.adult   \n     7 citrate.sythase        0.328  0.132   \"\"       seed.adult   \n     8 ATPsynthase            0.148  0.304   \"\"       seed.juvenile\n     9 DNMT1                  0.0824 0.807   \"\"       seed.juvenile\n    10 HSP70                  0.944  0.0803  \"\"       seed.juvenile\n    # ℹ 32 more rows\n\n### 8.1.2 Conditioning treatments\n\nThis code does the following:\n\n1.  Extracts the unique life.stage levels from the data frame.\n2.  For each life.stage, extracts the unique conditioning.treatment\n    levels.\n3.  Generates all possible pairs of conditioning.treatment levels within\n    each life.stage.\n4.  Iterates over each pair and performs the t-test for each Target.\n    Adds an asterisk column and an asterisk if the p-value is \\<= 0.05.\n    Useful for downstream parsing.\n5.  Stores the results in a list and combines them into a single data\n    frame.\n6.  Adds a comparison column to indicate which life.stage and\n    conditioning.treatment levels were compared.\n\n``` r\n# Extract unique life.stage levels\nunique_life_stages <- unique(delta_Cq_df$life.stage)\n\n# Initialize a list to store results\nconditioning_treatment_t_test_results_list <- list()\n\nfor (stage in unique_life_stages) {\n  # Extract unique conditioning.treatment levels within the current life.stage\n  unique_treatments <- unique(delta_Cq_df %>% filter(life.stage == stage) %>% pull(conditioning.treatment))\n  \n  # Generate all possible pairs of conditioning.treatment levels\n  treatment_pairs <- combn(unique_treatments, 2, simplify = FALSE)\n  \n  for (pair in treatment_pairs) {\n    treatment1 <- pair[1]\n    treatment2 <- pair[2]\n    \n    # Perform t-test for each Target comparing the two conditioning.treatment levels within the current life.stage\n    t_test_results <- delta_Cq_df %>%\n      filter(life.stage == stage, conditioning.treatment %in% c(treatment1, treatment2)) %>%\n      group_by(Target) %>%\n      summarise(\n        t_test_result = list(t.test(delta_Cq ~ conditioning.treatment))\n      ) %>%\n      ungroup() %>%\n      mutate(\n        estimate_diff = sapply(t_test_result, function(x) x$estimate[1] - x$estimate[2]),\n        p_value = sapply(t_test_result, function(x) x$p.value),\n        asterisk = ifelse(p_value <= 0.05, \"*\", \"\"), # Adds asterisk column and asterisk for p-value.\n        comparison = paste(stage, treatment1, \"vs\", treatment2, sep = \".\")\n      ) %>%\n      select(!t_test_result)\n    \n    conditioning_treatment_t_test_results_list[[paste(stage, treatment1, treatment2, sep = \".\")]] <- t_test_results\n  }\n}\n\n# Combine results into a single data frame\nconditioning_treatment_t_test_results_df <- bind_rows(conditioning_treatment_t_test_results_list, .id = \"comparison\")\n\n# View the results\nprint(conditioning_treatment_t_test_results_df)\n```\n\n    # A tibble: 28 × 5\n       Target          estimate_diff p_value asterisk comparison           \n       <chr>                   <dbl>   <dbl> <chr>    <chr>                \n     1 ATPsynthase           -0.345    0.193 \"\"       seed.treated.control \n     2 DNMT1                  0.211    0.701 \"\"       seed.treated.control \n     3 HSP70                 -0.608    0.444 \"\"       seed.treated.control \n     4 HSP90                 -0.150    0.652 \"\"       seed.treated.control \n     5 VIPERIN                0.0507   0.912 \"\"       seed.treated.control \n     6 cGAS                  -0.341    0.623 \"\"       seed.treated.control \n     7 citrate.sythase       -0.335    0.416 \"\"       seed.treated.control \n     8 ATPsynthase            0.0779   0.603 \"\"       adult.treated.control\n     9 DNMT1                  0.312    0.278 \"\"       adult.treated.control\n    10 HSP70                 -0.941    0.177 \"\"       adult.treated.control\n    # ℹ 18 more rows\n\n### 8.1.3 Acute treatments\n\nThis code does the following:\n\n1.  Extracts the unique life.stage levels from the data frame.\n2.  For each life.stage, extracts the unique acute.treatment levels.\n3.  Generates all possible pairs of acute.treatment levels within each\n    life.stage.\n4.  Iterates over each pair and performs the t-test for each Target.\n    Adds an asterisk column and an asterisk if the p-value is \\<= 0.05.\n    Useful for downstream parsing.\n5.  Stores the results in a list and combines them into a single data\n    frame.\n6.  Adds a comparison column to indicate which life.stage and\n    acute.treatment levels were compared.\n\nExcludes `seed` and `spat`, as these were only held at `ambient` for the\nacute treatment.\n\n``` r\n# Extract unique life.stage levels, excluding 'seed' and 'spat'\nunique_life_stages <- unique(delta_Cq_df$life.stage)\nunique_life_stages <- setdiff(unique_life_stages, c(\"seed\", \"spat\"))\n\n# Initialize a list to store results\nacute_treatment_t_test_results_list <- list()\n\nfor (stage in unique_life_stages) {\n  # Extract unique acute.treatment levels within the current life.stage\n  unique_treatments <- unique(delta_Cq_df %>% filter(life.stage == stage) %>% pull(acute.treatment))\n  \n  # Check if there are at least 2 unique treatments\n  if (length(unique_treatments) >= 2) {\n    # Generate all possible pairs of acute.treatment levels\n    treatment_pairs <- combn(unique_treatments, 2, simplify = FALSE)\n    \n    for (pair in treatment_pairs) {\n      treatment1 <- pair[1]\n      treatment2 <- pair[2]\n      \n      # Perform t-test for each Target comparing the two acute.treatment levels within the current life.stage\n      t_test_results <- delta_Cq_df %>%\n        filter(life.stage == stage, acute.treatment %in% c(treatment1, treatment2)) %>%\n        group_by(Target) %>%\n        summarise(\n          t_test_result = list(t.test(delta_Cq ~ acute.treatment))\n        ) %>%\n        ungroup() %>%\n        mutate(\n          estimate_diff = sapply(t_test_result, function(x) x$estimate[1] - x$estimate[2]),\n          p_value = sapply(t_test_result, function(x) x$p.value),\n          asterisk = ifelse(p_value <= 0.05, \"*\", \"\"), # Adds asterisk column and asterisk for p-value.\n          comparison = paste(stage, treatment1, \"vs\", treatment2, sep = \".\")\n        ) %>%\n        select(!t_test_result)\n      \n      acute_treatment_t_test_results_list[[paste(stage, treatment1, treatment2, sep = \".\")]] <- t_test_results\n    }\n  }\n}\n\n# Combine results into a single data frame\nacute_treatment_t_test_results_df <- bind_rows(acute_treatment_t_test_results_list, .id = \"comparison\")\n\n# View the results\nprint(acute_treatment_t_test_results_df)\n```\n\n    # A tibble: 14 × 5\n       Target          estimate_diff p_value asterisk comparison           \n       <chr>                   <dbl>   <dbl> <chr>    <chr>                \n     1 ATPsynthase            0.0605   0.687 \"\"       adult.ambient.high   \n     2 DNMT1                  0.314    0.275 \"\"       adult.ambient.high   \n     3 HSP70                  0.276    0.696 \"\"       adult.ambient.high   \n     4 HSP90                  0.499    0.149 \"\"       adult.ambient.high   \n     5 VIPERIN                0.323    0.251 \"\"       adult.ambient.high   \n     6 cGAS                   0.329    0.200 \"\"       adult.ambient.high   \n     7 citrate.sythase        0.0668   0.622 \"\"       adult.ambient.high   \n     8 ATPsynthase           -0.0370   0.738 \"\"       juvenile.ambient.high\n     9 DNMT1                 -0.672    0.121 \"\"       juvenile.ambient.high\n    10 HSP70                  0.745    0.319 \"\"       juvenile.ambient.high\n    11 HSP90                  0.0450   0.859 \"\"       juvenile.ambient.high\n    12 VIPERIN               -0.424    0.304 \"\"       juvenile.ambient.high\n    13 cGAS                  -0.203    0.474 \"\"       juvenile.ambient.high\n    14 citrate.sythase        0.0399   0.870 \"\"       juvenile.ambient.high\n\n### 8.1.4 Acute within life stage and conditioning\n\n``` r\n# Extract unique life.stage levels, excluding 'seed' and 'spat'\nunique_life_stages <- unique(delta_Cq_df$life.stage)\nunique_life_stages <- setdiff(unique_life_stages, c(\"seed\", \"spat\"))\n\n# Extract unique conditioning.treatment levels\nunique_conditioning_treatments <- unique(delta_Cq_df$conditioning.treatment)\n\n# Initialize a list to store results\nacute_treatment_within_life.stages_conditioning_t_test_results_list <- list()\n\nfor (stage in unique_life_stages) {\n  for (conditioning in unique_conditioning_treatments) {\n    # Extract unique acute.treatment levels within the current life.stage and conditioning.treatment\n    unique_treatments <- unique(delta_Cq_df %>% filter(life.stage == stage, conditioning.treatment == conditioning) %>% pull(acute.treatment))\n    \n    # Check if there are at least 2 unique treatments\n    if (length(unique_treatments) >= 2) {\n      # Generate all possible pairs of acute.treatment levels\n      treatment_pairs <- combn(unique_treatments, 2, simplify = FALSE)\n      \n      for (pair in treatment_pairs) {\n        treatment1 <- pair[1]\n        treatment2 <- pair[2]\n        \n        # Perform t-test for each Target comparing the two acute.treatment levels within the current life.stage and conditioning.treatment\n        t_test_results <- delta_Cq_df %>%\n          filter(life.stage == stage, conditioning.treatment == conditioning, acute.treatment %in% c(treatment1, treatment2)) %>%\n          group_by(Target) %>%\n          summarise(\n            t_test_result = list(t.test(delta_Cq ~ acute.treatment))\n          ) %>%\n          ungroup() %>%\n          mutate(\n            estimate_diff = sapply(t_test_result, function(x) x$estimate[1] - x$estimate[2]),\n            p_value = sapply(t_test_result, function(x) x$p.value),\n            asterisk = ifelse(p_value <= 0.05, \"*\", \"\"), # Adds asterisk column and asterisk for p-value.\n            comparison = paste(stage, conditioning, treatment1, \"vs\", treatment2, sep = \".\")\n          ) %>%\n          select(!t_test_result)\n        \n        acute_treatment_within_life.stages_conditioning_t_test_results_list[[paste(stage, conditioning, treatment1, treatment2, sep = \".\")]] <- t_test_results\n      }\n    }\n  }\n}\n\n# Combine results into a single data frame\nacute_treatment_within_life.stages_conditioning_t_test_results_df <- bind_rows(acute_treatment_within_life.stages_conditioning_t_test_results_list, .id = \"comparison_id\")\n\n# View the results\nprint(acute_treatment_within_life.stages_conditioning_t_test_results_df)\n```\n\n    # A tibble: 28 × 6\n       comparison_id              Target   estimate_diff p_value asterisk comparison\n       <chr>                      <chr>            <dbl>   <dbl> <chr>    <chr>     \n     1 adult.treated.ambient.high ATPsynt…        0.0264   0.893 \"\"       adult.tre…\n     2 adult.treated.ambient.high DNMT1           0.379    0.372 \"\"       adult.tre…\n     3 adult.treated.ambient.high HSP70           0.281    0.739 \"\"       adult.tre…\n     4 adult.treated.ambient.high HSP90           0.0292   0.925 \"\"       adult.tre…\n     5 adult.treated.ambient.high VIPERIN         0.0693   0.872 \"\"       adult.tre…\n     6 adult.treated.ambient.high cGAS            0.0595   0.828 \"\"       adult.tre…\n     7 adult.treated.ambient.high citrate…       -0.176    0.336 \"\"       adult.tre…\n     8 adult.control.high.ambient ATPsynt…        0.0946   0.698 \"\"       adult.con…\n     9 adult.control.high.ambient DNMT1           0.249    0.542 \"\"       adult.con…\n    10 adult.control.high.ambient HSP70           0.271    0.815 \"\"       adult.con…\n    # ℹ 18 more rows\n\n## 8.2 Plotting\n\n### 8.2.1 Delta Cq boxplots\n\n#### 8.2.1.1 Lifestage comparisons\n\n``` r\n# Create box plots for each comparison\nunique_comparisons <- unique(life_stage_t_test_results_df$comparison)\n\nfor (comparison in unique_comparisons) {\n  create_boxplot_delta_Cq(delta_Cq_df, comparison, life_stage_t_test_results_df)\n}\n```\n\n![](01.01-qPCR_files/figure-gfm/delta-Cq-boxplots-lifestage-1.png)\n\n![](01.01-qPCR_files/figure-gfm/delta-Cq-boxplots-lifestage-2.png)\n\n![](01.01-qPCR_files/figure-gfm/delta-Cq-boxplots-lifestage-3.png)\n\n![](01.01-qPCR_files/figure-gfm/delta-Cq-boxplots-lifestage-4.png)\n\n![](01.01-qPCR_files/figure-gfm/delta-Cq-boxplots-lifestage-5.png)\n\n![](01.01-qPCR_files/figure-gfm/delta-Cq-boxplots-lifestage-6.png)\n\n\n\n### 8.2.2 Conditioning comparisons\n\n``` r\n# Create box plots for each comparison\nunique_comparisons <- unique(conditioning_treatment_t_test_results_df$comparison)\n\nfor (comparison in unique_comparisons) {\n  create_boxplot_conditioning(delta_Cq_df, comparison, conditioning_treatment_t_test_results_df)\n}\n```\n\n![](01.01-qPCR_files/figure-gfm/delta-Cq-boxplots-conditioning-1.png)\n\n![](01.01-qPCR_files/figure-gfm/delta-Cq-boxplots-conditioning-2.png)\n\n![](01.01-qPCR_files/figure-gfm/delta-Cq-boxplots-conditioning-3.png)\n\n![](01.01-qPCR_files/figure-gfm/delta-Cq-boxplots-conditioning-4.png)\n\n\n\n### 8.2.3 Acute treatment comparisons\n\n``` r\n# Create box plots for each comparison\nunique_comparisons <- unique(acute_treatment_t_test_results_df$comparison)\n\nfor (comparison in unique_comparisons) {\n  create_boxplot_acute(delta_Cq_df, comparison, acute_treatment_t_test_results_df)\n}\n```\n\n![](01.01-qPCR_files/figure-gfm/delta-Cq-boxplots-acute-treatment-1.png)\n\n![](01.01-qPCR_files/figure-gfm/delta-Cq-boxplots-acute-treatment-2.png)\n\n\n\n### 8.2.4 Acute within life stage conditioning\n\n``` r\n# Loop through each comparison in the t-test results and create box plots\nfor (comparison in unique(acute_treatment_within_life.stages_conditioning_t_test_results_df$comparison)) {\n  create_boxplot_acute_conditioning(delta_Cq_df, comparison, acute_treatment_within_life.stages_conditioning_t_test_results_df)\n}\n```\n\n![](01.01-qPCR_files/figure-gfm/boxplots-acute-treatments-within-life-stages-conditioning-1.png)\n\n![](01.01-qPCR_files/figure-gfm/boxplots-acute-treatments-within-life-stages-conditioning-2.png)\n\n![](01.01-qPCR_files/figure-gfm/boxplots-acute-treatments-within-life-stages-conditioning-3.png)\n\n![](01.01-qPCR_files/figure-gfm/boxplots-acute-treatments-within-life-stages-conditioning-4.png)\n\n\n\n# 9 Delta delta Cq\n\n## 9.1 Calculations\n\n### 9.1.1 Conditioning\n\n``` r\n# Calculate delta_delta_Cq\ndelta_delta_conditioning_fold_change <- delta_Cq_df %>%\n  group_by(life.stage, Target) %>%\n  summarize(\n    treated_delta_Cq = mean(delta_Cq[conditioning.treatment == \"treated\"], na.rm = TRUE),\n    control_delta_Cq = mean(delta_Cq[conditioning.treatment == \"control\"], na.rm = TRUE)\n  ) %>%\n  mutate(delta_delta_Cq = treated_delta_Cq - control_delta_Cq) %>%\n  select(life.stage, Target, delta_delta_Cq)\n\nstr(delta_delta_conditioning_fold_change)\n```\n\n    gropd_df [28 × 3] (S3: grouped_df/tbl_df/tbl/data.frame)\n     $ life.stage    : chr [1:28] \"adult\" \"adult\" \"adult\" \"adult\" ...\n     $ Target        : chr [1:28] \"ATPsynthase\" \"DNMT1\" \"HSP70\" \"HSP90\" ...\n     $ delta_delta_Cq: num [1:28] -0.0779 -0.3116 0.941 0.7639 0.0852 ...\n     - attr(*, \"groups\")= tibble [4 × 2] (S3: tbl_df/tbl/data.frame)\n      ..$ life.stage: chr [1:4] \"adult\" \"juvenile\" \"seed\" \"spat\"\n      ..$ .rows     : list<int> [1:4] \n      .. ..$ : int [1:7] 1 2 3 4 5 6 7\n      .. ..$ : int [1:7] 8 9 10 11 12 13 14\n      .. ..$ : int [1:7] 15 16 17 18 19 20 21\n      .. ..$ : int [1:7] 22 23 24 25 26 27 28\n      .. ..@ ptype: int(0) \n      ..- attr(*, \".drop\")= logi TRUE\n\n### 9.1.2 Acute treatment\n\n``` r\n# Calculate delta_delta_Cq for acute treatment\ndelta_delta_Cq_acute_df <- delta_Cq_df %>%\n  group_by(life.stage, Target, acute.treatment) %>%\n  summarize(\n    treated_delta_Cq = mean(delta_Cq[conditioning.treatment == \"treated\"], na.rm = TRUE),\n    control_delta_Cq = mean(delta_Cq[conditioning.treatment == \"control\"], na.rm = TRUE)\n  ) %>%\n  mutate(delta_delta_Cq = treated_delta_Cq - control_delta_Cq) %>%\n  select(life.stage, Target, acute.treatment, delta_delta_Cq)\n\nstr(delta_delta_Cq_acute_df)\n```\n\n    gropd_df [42 × 4] (S3: grouped_df/tbl_df/tbl/data.frame)\n     $ life.stage     : chr [1:42] \"adult\" \"adult\" \"adult\" \"adult\" ...\n     $ Target         : chr [1:42] \"ATPsynthase\" \"ATPsynthase\" \"DNMT1\" \"DNMT1\" ...\n     $ acute.treatment: chr [1:42] \"ambient\" \"high\" \"ambient\" \"high\" ...\n     $ delta_delta_Cq : num [1:42] -0.112 -0.0438 -0.2467 -0.3765 0.9455 ...\n     - attr(*, \"groups\")= tibble [28 × 3] (S3: tbl_df/tbl/data.frame)\n      ..$ life.stage: chr [1:28] \"adult\" \"adult\" \"adult\" \"adult\" ...\n      ..$ Target    : chr [1:28] \"ATPsynthase\" \"DNMT1\" \"HSP70\" \"HSP90\" ...\n      ..$ .rows     : list<int> [1:28] \n      .. ..$ : int [1:2] 1 2\n      .. ..$ : int [1:2] 3 4\n      .. ..$ : int [1:2] 5 6\n      .. ..$ : int [1:2] 7 8\n      .. ..$ : int [1:2] 9 10\n      .. ..$ : int [1:2] 11 12\n      .. ..$ : int [1:2] 13 14\n      .. ..$ : int [1:2] 15 16\n      .. ..$ : int [1:2] 17 18\n      .. ..$ : int [1:2] 19 20\n      .. ..$ : int [1:2] 21 22\n      .. ..$ : int [1:2] 23 24\n      .. ..$ : int [1:2] 25 26\n      .. ..$ : int [1:2] 27 28\n      .. ..$ : int 29\n      .. ..$ : int 30\n      .. ..$ : int 31\n      .. ..$ : int 32\n      .. ..$ : int 33\n      .. ..$ : int 34\n      .. ..$ : int 35\n      .. ..$ : int 36\n      .. ..$ : int 37\n      .. ..$ : int 38\n      .. ..$ : int 39\n      .. ..$ : int 40\n      .. ..$ : int 41\n      .. ..$ : int 42\n      .. ..@ ptype: int(0) \n      ..- attr(*, \".drop\")= logi TRUE\n\n### 9.1.3 Life stage\n\n``` r\n# Calculate delta_delta_Cq for life stage comparisons\ndelta_delta_Cq_life_stage_df <- delta_Cq_df %>%\n  group_by(Target, life.stage) %>%\n  summarize(mean_delta_Cq = mean(delta_Cq, na.rm = TRUE)) %>%\n  ungroup() %>%\n  pivot_wider(names_from = life.stage, values_from = mean_delta_Cq) %>%\n  mutate(\n    delta_delta_Cq_adult_vs_seed = adult - seed,\n    delta_delta_Cq_spat_vs_seed = spat - seed,\n    delta_delta_Cq_adult_vs_spat = adult - spat\n  ) %>%\n  pivot_longer(cols = starts_with(\"delta_delta_Cq_\"), names_to = \"comparison\", values_to = \"delta_delta_Cq\") %>%\n  filter(!is.na(delta_delta_Cq))\n\n# Display the structure of the resulting data frame\nstr(delta_delta_Cq_life_stage_df)\n```\n\n    tibble [21 × 7] (S3: tbl_df/tbl/data.frame)\n     $ Target        : chr [1:21] \"ATPsynthase\" \"ATPsynthase\" \"ATPsynthase\" \"DNMT1\" ...\n     $ adult         : num [1:21] 0.48 0.48 0.48 6.17 6.17 ...\n     $ juvenile      : num [1:21] 0.378 0.378 0.378 5.808 5.808 ...\n     $ seed          : num [1:21] 0.229 0.229 0.229 5.725 5.725 ...\n     $ spat          : num [1:21] 0.519 0.519 0.519 6.277 6.277 ...\n     $ comparison    : chr [1:21] \"delta_delta_Cq_adult_vs_seed\" \"delta_delta_Cq_spat_vs_seed\" \"delta_delta_Cq_adult_vs_spat\" \"delta_delta_Cq_adult_vs_seed\" ...\n     $ delta_delta_Cq: num [1:21] 0.2508 0.2894 -0.0386 0.4424 0.5511 ...\n\n### 9.1.4 Calculate delta delta acute treatments within lifestage and conditioning\n\n``` r\n# Calculate delta_delta_Cq for acute treatment comparisons within each life stage and conditioning treatment\ndelta_delta_Cq_acute_within_life_stage_conditioning_df <- delta_Cq_df %>%\n  group_by(life.stage, conditioning.treatment, Target, acute.treatment) %>%\n  summarize(mean_delta_Cq = mean(delta_Cq, na.rm = TRUE)) %>%\n  ungroup() %>%\n  pivot_wider(names_from = acute.treatment, values_from = mean_delta_Cq) %>%\n  mutate(delta_delta_Cq_high_vs_ambient = high - ambient) %>%\n  pivot_longer(cols = starts_with(\"delta_delta_Cq_\"), names_to = \"comparison\", values_to = \"delta_delta_Cq\") %>%\n  filter(!is.na(delta_delta_Cq))\n\n# Display the structure of the resulting data frame\nstr(delta_delta_Cq_acute_within_life_stage_conditioning_df)\n```\n\n    tibble [28 × 7] (S3: tbl_df/tbl/data.frame)\n     $ life.stage            : chr [1:28] \"adult\" \"adult\" \"adult\" \"adult\" ...\n     $ conditioning.treatment: chr [1:28] \"control\" \"control\" \"control\" \"control\" ...\n     $ Target                : chr [1:28] \"ATPsynthase\" \"DNMT1\" \"HSP70\" \"HSP90\" ...\n     $ ambient               : num [1:28] 0.566 6.448 3.944 1.259 3.758 ...\n     $ high                  : num [1:28] 0.472 6.199 3.673 0.29 3.181 ...\n     $ comparison            : chr [1:28] \"delta_delta_Cq_high_vs_ambient\" \"delta_delta_Cq_high_vs_ambient\" \"delta_delta_Cq_high_vs_ambient\" \"delta_delta_Cq_high_vs_ambient\" ...\n     $ delta_delta_Cq        : num [1:28] -0.0946 -0.2492 -0.2715 -0.969 -0.5763 ...\n\n### 9.1.5 Calculate the fold change life stage comparison\n\n``` r\n# Calculate fold change and output to a new data frame\nfold_change_life_stage_df <- delta_delta_Cq_life_stage_df %>%\n  mutate(fold_change = 2^(-delta_delta_Cq))\n\n# Display the structure of the resulting data frame\nstr(fold_change_life_stage_df)\n```\n\n    tibble [21 × 8] (S3: tbl_df/tbl/data.frame)\n     $ Target        : chr [1:21] \"ATPsynthase\" \"ATPsynthase\" \"ATPsynthase\" \"DNMT1\" ...\n     $ adult         : num [1:21] 0.48 0.48 0.48 6.17 6.17 ...\n     $ juvenile      : num [1:21] 0.378 0.378 0.378 5.808 5.808 ...\n     $ seed          : num [1:21] 0.229 0.229 0.229 5.725 5.725 ...\n     $ spat          : num [1:21] 0.519 0.519 0.519 6.277 6.277 ...\n     $ comparison    : chr [1:21] \"delta_delta_Cq_adult_vs_seed\" \"delta_delta_Cq_spat_vs_seed\" \"delta_delta_Cq_adult_vs_spat\" \"delta_delta_Cq_adult_vs_seed\" ...\n     $ delta_delta_Cq: num [1:21] 0.2508 0.2894 -0.0386 0.4424 0.5511 ...\n     $ fold_change   : num [1:21] 0.84 0.818 1.027 0.736 0.683 ...\n\n### 9.1.6 Calculate the fold change conditioning comparison\n\n``` r\ndelta_delta_conditioning_fold_change <- delta_delta_conditioning_fold_change %>%\n  mutate(fold_change = 2^(-delta_delta_Cq)) %>% \n  distinct(Target, fold_change)\n\nstr(delta_delta_conditioning_fold_change)\n```\n\n    gropd_df [28 × 3] (S3: grouped_df/tbl_df/tbl/data.frame)\n     $ life.stage : chr [1:28] \"adult\" \"adult\" \"adult\" \"adult\" ...\n     $ Target     : chr [1:28] \"ATPsynthase\" \"DNMT1\" \"HSP70\" \"HSP90\" ...\n     $ fold_change: num [1:28] 1.055 1.241 0.521 0.589 0.943 ...\n     - attr(*, \"groups\")= tibble [4 × 2] (S3: tbl_df/tbl/data.frame)\n      ..$ life.stage: chr [1:4] \"adult\" \"juvenile\" \"seed\" \"spat\"\n      ..$ .rows     : list<int> [1:4] \n      .. ..$ : int [1:7] 1 2 3 4 5 6 7\n      .. ..$ : int [1:7] 8 9 10 11 12 13 14\n      .. ..$ : int [1:7] 15 16 17 18 19 20 21\n      .. ..$ : int [1:7] 22 23 24 25 26 27 28\n      .. ..@ ptype: int(0) \n      ..- attr(*, \".drop\")= logi TRUE\n\n### 9.1.7 Calculate the fold change acute comparison\n\n``` r\n# Calculate fold change for acute treatment\ndelta_delta_acute_fold_change <- delta_delta_Cq_acute_df %>%\n  mutate(fold_change = 2^(-delta_delta_Cq)) %>%\n  distinct(life.stage, Target, acute.treatment, fold_change)\n\n# Display the structure of the resulting data frame\nstr(delta_delta_acute_fold_change)\n```\n\n    gropd_df [42 × 4] (S3: grouped_df/tbl_df/tbl/data.frame)\n     $ life.stage     : chr [1:42] \"adult\" \"adult\" \"adult\" \"adult\" ...\n     $ Target         : chr [1:42] \"ATPsynthase\" \"ATPsynthase\" \"DNMT1\" \"DNMT1\" ...\n     $ acute.treatment: chr [1:42] \"ambient\" \"high\" \"ambient\" \"high\" ...\n     $ fold_change    : num [1:42] 1.081 1.031 1.186 1.298 0.519 ...\n     - attr(*, \"groups\")= tibble [28 × 3] (S3: tbl_df/tbl/data.frame)\n      ..$ life.stage: chr [1:28] \"adult\" \"adult\" \"adult\" \"adult\" ...\n      ..$ Target    : chr [1:28] \"ATPsynthase\" \"DNMT1\" \"HSP70\" \"HSP90\" ...\n      ..$ .rows     : list<int> [1:28] \n      .. ..$ : int [1:2] 1 2\n      .. ..$ : int [1:2] 3 4\n      .. ..$ : int [1:2] 5 6\n      .. ..$ : int [1:2] 7 8\n      .. ..$ : int [1:2] 9 10\n      .. ..$ : int [1:2] 11 12\n      .. ..$ : int [1:2] 13 14\n      .. ..$ : int [1:2] 15 16\n      .. ..$ : int [1:2] 17 18\n      .. ..$ : int [1:2] 19 20\n      .. ..$ : int [1:2] 21 22\n      .. ..$ : int [1:2] 23 24\n      .. ..$ : int [1:2] 25 26\n      .. ..$ : int [1:2] 27 28\n      .. ..$ : int 29\n      .. ..$ : int 30\n      .. ..$ : int 31\n      .. ..$ : int 32\n      .. ..$ : int 33\n      .. ..$ : int 34\n      .. ..$ : int 35\n      .. ..$ : int 36\n      .. ..$ : int 37\n      .. ..$ : int 38\n      .. ..$ : int 39\n      .. ..$ : int 40\n      .. ..$ : int 41\n      .. ..$ : int 42\n      .. ..@ ptype: int(0) \n      ..- attr(*, \".drop\")= logi TRUE\n\n### 9.1.8 Calculate fold change acute treatments within lifestage and conditioning\n\n``` r\n# Calculate fold change for acute treatment comparisons within each life stage and conditioning treatment\nfold_change_acute_within_life_stage_conditioning_df <- delta_delta_Cq_acute_within_life_stage_conditioning_df %>%\n  mutate(fold_change = 2^(-delta_delta_Cq))\n\n# Display the structure of the resulting data frame\nstr(fold_change_acute_within_life_stage_conditioning_df)\n```\n\n    tibble [28 × 8] (S3: tbl_df/tbl/data.frame)\n     $ life.stage            : chr [1:28] \"adult\" \"adult\" \"adult\" \"adult\" ...\n     $ conditioning.treatment: chr [1:28] \"control\" \"control\" \"control\" \"control\" ...\n     $ Target                : chr [1:28] \"ATPsynthase\" \"DNMT1\" \"HSP70\" \"HSP90\" ...\n     $ ambient               : num [1:28] 0.566 6.448 3.944 1.259 3.758 ...\n     $ high                  : num [1:28] 0.472 6.199 3.673 0.29 3.181 ...\n     $ comparison            : chr [1:28] \"delta_delta_Cq_high_vs_ambient\" \"delta_delta_Cq_high_vs_ambient\" \"delta_delta_Cq_high_vs_ambient\" \"delta_delta_Cq_high_vs_ambient\" ...\n     $ delta_delta_Cq        : num [1:28] -0.0946 -0.2492 -0.2715 -0.969 -0.5763 ...\n     $ fold_change           : num [1:28] 1.07 1.19 1.21 1.96 1.49 ...\n\n## 9.2 Plotting fold changes\n\n### 9.2.1 Acute comparisons within lifestage and conditioning\n\n``` r\nlibrary(ggplot2)\n\n# Generate bar plots for each group of comparison within each life stage and conditioning treatment\nplot_list <- fold_change_acute_within_life_stage_conditioning_df %>%\n  split(list(.$life.stage, .$conditioning.treatment, .$comparison)) %>%\n  lapply(function(df) {\n    life_stage <- unique(df$life.stage)\n    conditioning_treatment <- unique(df$conditioning.treatment)\n    comparison_title <- gsub(\"delta_delta_Cq_\", \"\", unique(df$comparison))\n    comparison_title <- gsub(\"_vs_\", \" vs. \", comparison_title)\n    ggplot(df, aes(x = Target, y = fold_change)) +\n      geom_bar(stat = \"identity\") +\n      labs(title = paste(\"Gene Expression -\", life_stage, \"-\", conditioning_treatment, \"-\", comparison_title), \n           x = \"Target\", y = \"Fold Change\") +\n      theme_minimal() +\n      theme(axis.text.x = element_text(angle = 45, hjust = 1))\n  })\n\n# Display the plots\nfor (plot in plot_list) {\n  print(plot)\n}\n```\n\n![](01.01-qPCR_files/figure-gfm/bar-plots-fold-change-acute-within-lifestage-conditioning-1.png)\n\n![](01.01-qPCR_files/figure-gfm/bar-plots-fold-change-acute-within-lifestage-conditioning-2.png)\n\n![](01.01-qPCR_files/figure-gfm/bar-plots-fold-change-acute-within-lifestage-conditioning-3.png)\n\n![](01.01-qPCR_files/figure-gfm/bar-plots-fold-change-acute-within-lifestage-conditioning-4.png)\n\n\n\n### 9.2.2 Life stage comparisons\n\n``` r\n# Generate bar plots for each group of comparison\nplot_list <- fold_change_life_stage_df %>%\n  split(.$comparison) %>%\n  lapply(function(df) {\n    comparison_title <- gsub(\"delta_delta_Cq_\", \"\", unique(df$comparison))\n    comparison_title <- gsub(\"_vs_\", \" vs. \", comparison_title)\n    ggplot(df, aes(x = Target, y = fold_change)) +\n      geom_bar(stat = \"identity\") +\n      labs(title = paste(\"Gene Expression -\", comparison_title), x = \"Target\", y = \"Fold Change\") +\n      theme_minimal() +\n      theme(axis.text.x = element_text(angle = 45, hjust = 1))\n  })\n\n# Display the plots\nfor (plot in plot_list) {\n  print(plot)\n}\n```\n\n![](01.01-qPCR_files/figure-gfm/bar-plots-fold-change-lifestages-1.png)\n\n![](01.01-qPCR_files/figure-gfm/bar-plots-fold-change-lifestages-2.png)\n\n![](01.01-qPCR_files/figure-gfm/bar-plots-fold-change-lifestages-3.png)\n\n\n\n### 9.2.3 Conditioning comparisons\n\n![](01.01-qPCR_files/figure-gfm/barplot-fold-change-conditioning-1.png)\n\n\n\n### 9.2.4 Line plot conditioning comparisons across lifestages\n\n![](01.01-qPCR_files/figure-gfm/lineplot-fold-change-conditioning-1.png)\n\n\n\n### 9.2.5 Acute treatment comparison\n\n![](01.01-qPCR_files/figure-gfm/barplot-fold-change-acute-1.png)\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","title":"qPCR Analysis - C.gigas Lifestages Carryover","date":"2024-12-20","draft":false,"categories":["2024","Crassostrea gigas","Pacific oyster","qPCR","project-gigas-carryover","lifestage_carryover"]},"extensions":{"book":{"multiFile":true}}}},"draft":false,"projectFormats":["html"]}