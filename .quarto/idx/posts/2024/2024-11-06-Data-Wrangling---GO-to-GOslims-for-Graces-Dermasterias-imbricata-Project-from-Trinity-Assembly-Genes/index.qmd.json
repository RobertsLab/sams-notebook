{"title":"Data Wrangling - GO to GOslims for Graces Dermasterias imbricata Project from Trinity Assembly Genes","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","title":"Data Wrangling - GO to GOslims for Graces Dermasterias imbricata Project from Trinity Assembly Genes","date":"2024-11-06","draft":false,"engine":"knitr","categories":["2024","Dermasterias imbricata","GO","GOslim","gene ontology","Trinity","Leather star"]},"headingText":"1 INTRO","containsRefs":false,"markdown":"\n::: {.callout-note}\nThis notebook consists of a markdown rendering of [01-GO-to-GOslim.Rmd](https://github.com/RobertsLab/code/blob/04a796dda0545340146d694964bcf4abdb626a73/r_projects/sam/20241106-dimb-GO-to-GOslim/code/01-GO-to-GOslim.Rmd) (commit: `04a796d`).\n:::\n\n\n\nThis notebook is setup to [take GO IDs and categorize them into their\ncorresponding\nGOslims](https://github.com/RobertsLab/resources/issues/2012) (GitHub\nIssue). Specifically, it will use the following tab-delimited input\nfile:\n\n- [der_go.tsv](https://gannet.fish.washington.edu/seashell/bu-github/project-pycno-multispecies-2023/output/06-Go-3-species/der_go.tsv)\n\n[Desired output\nformat](https://github.com/RobertsLab/resources/issues/1989#issuecomment-2448757444)\n(GitHub Issue comment) is:\n\n    Term                                                    Count\n    anatomical structure development                        1137\n    signaling                                               600\n    cell differentiation                                    533\n    immune system process                                   331\n    lipid metabolic process                                 212\n\nThis was performed using R, with the following packages:\n\n- GSEABase (Martin Morgan 2017)\n- GO.db (Carlson 2017)\n- tidyverse (Wickham et al. 2019)\n\nIt also relied on gene ontology (GO) information from the [Gene Ontology\nConsortium](https://geneontology.org/) (Ashburner et al. 2000;\nAleksander et al. 2023).\n\n## 1.1 CODE\n\n``` r\nlibrary(GSEABase)\n```\n\n``` r\nlibrary(GO.db)\n```\n\n    ## \n\n``` r\nlibrary(knitr)\nlibrary(tidyverse)\n```\n\n``` r\nknitr::opts_chunk$set(\n  echo = TRUE,         # Display code chunks\n  eval = FALSE,        # Evaluate code chunks\n  warning = FALSE,     # Hide warnings\n  message = FALSE,     # Hide messages\n  comment = \"\"         # Prevents appending '##' to beginning of lines in code output\n)\n```\n\n### 1.1.1 Variables\n\n``` r\n# Column names corresponding to gene name/ID and GO IDs\nGO.ID.column <- \"Gene.Ontology.IDs\"\ngene.ID.column <- \"X1\"\n\n# Relative path or URL to input file\ninput.file <- \"https://gannet.fish.washington.edu/seashell/bu-github/project-pycno-multispecies-2023/output/06-Go-3-species/der_go.tsv\"\n\n\n##### Official GO info - no need to change #####\ngoslims_obo <- \"goslim_generic.obo\"\ngoslims_url <- \"http://current.geneontology.org/ontology/subsets/goslim_generic.obo\"\n```\n\n### 1.1.2 Set GSEAbase location and download `goslim_generic.obo`\n\n``` r\n# Find GSEAbase installation location\ngseabase_location <- find.package(\"GSEABase\")\n\n# Load path to GOslim OBO file\ngoslim_obo_destintation <- file.path(gseabase_location, \"extdata\", goslims_obo, fsep = \"/\")\n\n# Download the GOslim OBO file\ndownload.file(url = goslims_url, destfile = goslim_obo_destintation)\n\n# Loads package files\ngseabase_files <- system.file(\"extdata\", goslims_obo, package=\"GSEABase\")\n```\n\n### 1.1.3 Read in gene/GO file\n\n``` r\nfull.gene.df <- read.csv(file = input.file, header = TRUE, sep = \"\\t\")\n\nstr(full.gene.df)\n```\n\n    'data.frame':   34254 obs. of  25 variables:\n     $ X1                                : chr  \"TRINITY_DN37009_c0_g3_i1\" \"TRINITY_DN37009_c0_g3_i3\" \"TRINITY_DN37035_c0_g1_i1\" \"TRINITY_DN37023_c0_g1_i1\" ...\n     $ X2                                : chr  \"sp\" \"sp\" \"sp\" \"sp\" ...\n     $ X3                                : chr  \"Q9BYN0\" \"Q9BYN0\" \"P21329\" \"P07700\" ...\n     $ X4                                : chr  \"SRXN1_HUMAN\" \"SRXN1_HUMAN\" \"RTJK_DROFU\" \"ADRB1_MELGA\" ...\n     $ X5                                : num  57.6 57.6 28.6 33.3 31.6 ...\n     $ X6                                : int  125 125 147 99 133 49 90 179 85 37 ...\n     $ X7                                : int  47 47 92 65 87 21 47 105 44 13 ...\n     $ X8                                : int  2 2 4 1 3 0 3 7 2 1 ...\n     $ X9                                : int  2822 1720 169 47 473 85 15 1 104 102 ...\n     $ X10                               : int  2448 1346 579 340 84 231 275 513 343 4 ...\n     $ X11                               : int  18 18 613 59 44 374 425 85 64 1097 ...\n     $ X12                               : int  136 136 756 157 175 422 509 246 148 1133 ...\n     $ X13                               : num  1.11e-39 3.47e-40 4.94e-08 6.59e-09 9.86e-12 ...\n     $ X14                               : num  147 147 55.8 55.5 66.6 58.9 49.7 51.6 69.3 46.2 ...\n     $ Reviewed                          : chr  \"reviewed\" \"reviewed\" NA \"reviewed\" ...\n     $ Entry.Name                        : chr  \"SRXN1_HUMAN\" \"SRXN1_HUMAN\" NA \"ADRB1_MELGA\" ...\n     $ Protein.names                     : chr  \"Sulfiredoxin-1 (EC 1.8.98.2)\" \"Sulfiredoxin-1 (EC 1.8.98.2)\" NA \"Beta-1 adrenergic receptor (Beta-1 adrenoreceptor) (Beta-1 adrenoceptor) (Beta-T)\" ...\n     $ Gene.Names                        : chr  \"SRXN1 C20orf139 SRX SRX1\" \"SRXN1 C20orf139 SRX SRX1\" NA \"ADRB1\" ...\n     $ Organism                          : chr  \"Homo sapiens (Human)\" \"Homo sapiens (Human)\" NA \"Meleagris gallopavo (Wild turkey)\" ...\n     $ Length                            : int  137 137 NA 483 483 1056 NA 364 640 1358 ...\n     $ Gene.Ontology..biological.process.: chr  \"cellular response to oxidative stress [GO:0034599]; response to oxidative stress [GO:0006979]\" \"cellular response to oxidative stress [GO:0034599]; response to oxidative stress [GO:0006979]\" NA \"adenylate cyclase-activating adrenergic receptor signaling pathway [GO:0071880]; positive regulation of heart c\"| __truncated__ ...\n     $ Gene.Ontology..cellular.component.: chr  \"cytoplasm [GO:0005737]; cytosol [GO:0005829]; endoplasmic reticulum membrane [GO:0005789]\" \"cytoplasm [GO:0005737]; cytosol [GO:0005829]; endoplasmic reticulum membrane [GO:0005789]\" NA \"early endosome [GO:0005769]; membrane [GO:0016020]; plasma membrane [GO:0005886]\" ...\n     $ Gene.Ontology..GO.                : chr  \"cytoplasm [GO:0005737]; cytosol [GO:0005829]; endoplasmic reticulum membrane [GO:0005789]; ATP binding [GO:0005\"| __truncated__ \"cytoplasm [GO:0005737]; cytosol [GO:0005829]; endoplasmic reticulum membrane [GO:0005789]; ATP binding [GO:0005\"| __truncated__ NA \"early endosome [GO:0005769]; membrane [GO:0016020]; plasma membrane [GO:0005886]; beta1-adrenergic receptor act\"| __truncated__ ...\n     $ Gene.Ontology..molecular.function.: chr  \"ATP binding [GO:0005524]; oxidoreductase activity, acting on a sulfur group of donors [GO:0016667]; sulfiredoxi\"| __truncated__ \"ATP binding [GO:0005524]; oxidoreductase activity, acting on a sulfur group of donors [GO:0016667]; sulfiredoxi\"| __truncated__ NA \"beta1-adrenergic receptor activity [GO:0004940]; identical protein binding [GO:0042802]\" ...\n     $ Gene.Ontology.IDs                 : chr  \"GO:0005524; GO:0005737; GO:0005789; GO:0005829; GO:0006979; GO:0016667; GO:0032542; GO:0034599\" \"GO:0005524; GO:0005737; GO:0005789; GO:0005829; GO:0006979; GO:0016667; GO:0032542; GO:0034599\" NA \"GO:0004940; GO:0005769; GO:0005886; GO:0016020; GO:0042802; GO:0045187; GO:0045823; GO:0071880\" ...\n\n### 1.1.4 Remove rows with NA, remove whitespace in GO IDs column and keep just gene/GO IDs columns\n\n``` r\n# Clean whitespace, filter NA/empty rows, select columns, and split GO terms using column name variables\ngene.GO.df <- full.gene.df %>%\n  mutate(!!GO.ID.column := str_replace_all(.data[[GO.ID.column]], \"\\\\s*;\\\\s*\", \";\")) %>% # Clean up spaces around \";\"\n  filter(!is.na(.data[[gene.ID.column]]) & !is.na(.data[[GO.ID.column]]) & .data[[GO.ID.column]] != \"\") %>% \n  select(all_of(c(gene.ID.column, GO.ID.column)))\n\n\nstr(gene.GO.df)\n```\n\n    'data.frame':   23192 obs. of  2 variables:\n     $ X1               : chr  \"TRINITY_DN37009_c0_g3_i1\" \"TRINITY_DN37009_c0_g3_i3\" \"TRINITY_DN37023_c0_g1_i1\" \"TRINITY_DN37023_c1_g1_i1\" ...\n     $ Gene.Ontology.IDs: chr  \"GO:0005524;GO:0005737;GO:0005789;GO:0005829;GO:0006979;GO:0016667;GO:0032542;GO:0034599\" \"GO:0005524;GO:0005737;GO:0005789;GO:0005829;GO:0006979;GO:0016667;GO:0032542;GO:0034599\" \"GO:0004940;GO:0005769;GO:0005886;GO:0016020;GO:0042802;GO:0045187;GO:0045823;GO:0071880\" \"GO:0004940;GO:0005769;GO:0005886;GO:0016020;GO:0042802;GO:0045187;GO:0045823;GO:0071880\" ...\n\n### 1.1.5 “Flatten” gene and GO IDs\n\nThis flattens the file so all of the GO IDs per gene are separated into\none GO ID per gene per row.\n\n``` r\nflat.gene.GO.df <- gene.GO.df %>% separate_rows(!!sym(GO.ID.column), sep = \";\")\n\nstr(flat.gene.GO.df)\n```\n\n    tibble [363,990 × 2] (S3: tbl_df/tbl/data.frame)\n     $ X1               : chr [1:363990] \"TRINITY_DN37009_c0_g3_i1\" \"TRINITY_DN37009_c0_g3_i1\" \"TRINITY_DN37009_c0_g3_i1\" \"TRINITY_DN37009_c0_g3_i1\" ...\n     $ Gene.Ontology.IDs: chr [1:363990] \"GO:0005524\" \"GO:0005737\" \"GO:0005789\" \"GO:0005829\" ...\n\n### 1.1.6 Group\n\nGroups the genes by GO ID (i.e. lists all genes associated with each\nunique GO ID)\n\n``` r\ngrouped.gene.GO.df <- flat.gene.GO.df %>%\n  group_by(!!sym(GO.ID.column)) %>%\n  summarise(!!gene.ID.column := paste(.data[[gene.ID.column]], collapse = \",\"))\n\nstr(grouped.gene.GO.df)\n```\n\n    tibble [15,068 × 2] (S3: tbl_df/tbl/data.frame)\n     $ Gene.Ontology.IDs: chr [1:15068] \"GO:0000002\" \"GO:0000009\" \"GO:0000012\" \"GO:0000014\" ...\n     $ X1               : chr [1:15068] \"TRINITY_DN12635_c0_g1_i1,TRINITY_DN6578_c1_g1_i2,TRINITY_DN20059_c0_g1_i11,TRINITY_DN20059_c0_g1_i13,TRINITY_DN\"| __truncated__ \"TRINITY_DN3933_c0_g3_i1\" \"TRINITY_DN2179_c0_g7_i1,TRINITY_DN2179_c0_g7_i2,TRINITY_DN8923_c0_g2_i1,TRINITY_DN8283_c0_g1_i3,TRINITY_DN8283_\"| __truncated__ \"TRINITY_DN31365_c0_g1_i1,TRINITY_DN31365_c0_g1_i2,TRINITY_DN53840_c0_g1_i1,TRINITY_DN662_c0_g1_i2,TRINITY_DN149\"| __truncated__ ...\n\n### 1.1.7 Map GO IDs to GOslims\n\nThe mapping steps were derived from this [bioconductor forum\nresponse](https://support.bioconductor.org/p/128407/#128408)\n\n``` r\n# Vector of GO IDs\ngo_ids <- grouped.gene.GO.df[[GO.ID.column]]\n\nstr(go_ids)\n```\n\n     chr [1:15068] \"GO:0000002\" \"GO:0000009\" \"GO:0000012\" \"GO:0000014\" ...\n\n### 1.1.8 Extract GOslims from OBO\n\nCreates new OBO Collection object of just GOslims, based on provided GO\nIDs.\n\n``` r\n# Create GSEAbase GOCollection using `go_ids`\nmyCollection <- GOCollection(go_ids)\n\n# Retrieve GOslims from GO OBO file set\nslim <- getOBOCollection(gseabase_files)\n\nstr(slim)\n```\n\n    Formal class 'OBOCollection' [package \"GSEABase\"] with 7 slots\n      ..@ .stanza     :'data.frame':    153 obs. of  1 variable:\n      .. ..$ value: chr [1:153] \"Root\" \"Term\" \"Term\" \"Term\" ...\n      ..@ .subset     :'data.frame':    22 obs. of  1 variable:\n      .. ..$ value: chr [1:22] \"Rhea list of ChEBI terms representing the major species at pH 7.3.\" \"Term not to be used for direct annotation\" \"Terms planned for obsoletion\" \"AGR slim\" ...\n      ..@ .kv         :'data.frame':    2075 obs. of  3 variables:\n      .. ..$ stanza_id: chr [1:2075] \".__Root__\" \".__Root__\" \".__Root__\" \".__Root__\" ...\n      .. ..$ key      : chr [1:2075] \"format-version\" \"data-version\" \"synonymtypedef\" \"synonymtypedef\" ...\n      .. ..$ value    : chr [1:2075] \"1.2\" \"go/2024-09-08/subsets/goslim_generic.owl\" \"syngo_official_label \\\"label approved by the SynGO project\\\"\" \"systematic_synonym \\\"Systematic synonym\\\" EXACT\" ...\n      ..@ evidenceCode: chr [1:26] \"EXP\" \"IDA\" \"IPI\" \"IMP\" ...\n      ..@ ontology    : chr NA\n      ..@ ids         : chr [1:141] \"GO:0000228\" \"GO:0000278\" \"GO:0000910\" \"GO:0001618\" ...\n      ..@ type        : chr \"OBO\"\n\n### 1.1.9 Get Biological Process (BP) GOslims associated with provided GO IDs.\n\n``` r\n# Retrieve Biological Process (BP) GOslims\nslimdf <- goSlim(myCollection, slim, \"BP\", verbose)\nstr(slimdf)\n```\n\n    'data.frame':   72 obs. of  3 variables:\n     $ Count  : int  93 22 18 554 81 107 31 5 103 58 ...\n     $ Percent: num  0.925 0.219 0.179 5.508 0.805 ...\n     $ Term   : chr  \"mitotic cell cycle\" \"cytokinesis\" \"cytoplasmic translation\" \"immune system process\" ...\n\n### 1.1.10 Map GO to GOslims\n\nPerforms mapping of of GOIDs to GOslims\n\nReturns:\n\n- GOslim IDs (as rownames)\n- GOslim terms\n- Counts of GO IDs matching to corresponding GOslim\n- Percentage of GO IDs matching to corresponding GOslim\n- GOIDs mapped to corresponding GOslim, in a semi-colon delimited format\n\n``` r\n# List of GOslims and all GO IDs from `go_ids`\ngomap <- as.list(GOBPOFFSPRING[rownames(slimdf)])\n\n# Maps `go_ids` to matching GOslims\nmapped <- lapply(gomap, intersect, ids(myCollection))\n\n# Append all mapped GO IDs to `slimdf`\n# `sapply` needed to apply paste() to create semi-colon delimited values\nslimdf$GO.IDs <- sapply(lapply(gomap, intersect, ids(myCollection)), paste, collapse=\";\")\n\n# Remove \"character(0) string from \"GO.IDs\" column\nslimdf$GO.IDs[slimdf$GO.IDs == \"character(0)\"] <- \"\"\n\n# Add self-matching GOIDs to \"GO.IDs\" column, if not present\nfor (go_id in go_ids) {\n  # Check if the go_id is present in the row names\n  if (go_id %in% rownames(slimdf)) {\n    # Check if the go_id is not present in the GO.IDs column\n    # Also removes white space \"trimws()\" and converts all to upper case to handle\n    # any weird, \"invisible\" formatting issues.\n    if (!go_id %in% trimws(toupper(strsplit(slimdf[go_id, \"GO.IDs\"], \";\")[[1]]))) {\n      # Append the go_id to the GO.IDs column with a semi-colon separator\n      if (length(slimdf$GO.IDs) > 0 && nchar(slimdf$GO.IDs[nrow(slimdf)]) > 0) {\n        slimdf[go_id, \"GO.IDs\"] <- paste0(slimdf[go_id, \"GO.IDs\"], \"; \", go_id)\n      } else {\n        slimdf[go_id, \"GO.IDs\"] <- go_id\n      }\n    }\n  }\n}\n\nstr(slimdf)\n```\n\n    'data.frame':   72 obs. of  4 variables:\n     $ Count  : int  93 22 18 554 81 107 31 5 103 58 ...\n     $ Percent: num  0.925 0.219 0.179 5.508 0.805 ...\n     $ Term   : chr  \"mitotic cell cycle\" \"cytokinesis\" \"cytoplasmic translation\" \"immune system process\" ...\n     $ GO.IDs : chr  \"GO:0000022;GO:0000070;GO:0000082;GO:0000086;GO:0000132;GO:0000281;GO:0006977;GO:0007052;GO:0007076;GO:0007079;G\"| __truncated__ \"GO:0000281;GO:0000911;GO:0000915;GO:0007112;GO:0031991;GO:0032465;GO:0032466;GO:0032467;GO:0032506;GO:0033206;G\"| __truncated__ \"GO:0001731;GO:0001732;GO:0002183;GO:0002184;GO:0002188;GO:0002190;GO:0002191;GO:0002192;GO:0140018;GO:0140708;G\"| __truncated__ \"GO:0001768;GO:0001771;GO:0001773;GO:0001774;GO:0001776;GO:0001779;GO:0001780;GO:0001782;GO:0001798;GO:0001805;G\"| __truncated__ ...\n\n### 1.1.11 Flatten GOslims\n\n``` r\n# \"Flatten\" file so each row is single GO ID with corresponding GOslim\n# rownames_to_column needed to retain row name info\nslimdf_separated <- as.data.frame(slimdf %>%\n  rownames_to_column('GOslim') %>%\n  separate_rows(GO.IDs, sep = \";\"))\n\n# Group by unique GO ID\ngrouped_slimdf <- slimdf_separated %>%\n  filter(!is.na(GO.IDs) & GO.IDs != \"\") %>%\n  group_by(GO.IDs) %>%\n  summarize(GOslim = paste(GOslim, collapse = \";\"),\n            Term = paste(Term, collapse = \";\"))\n\n\nstr(grouped_slimdf)\n```\n\n    tibble [6,942 × 3] (S3: tbl_df/tbl/data.frame)\n     $ GO.IDs: chr [1:6942] \" GO:0000278\" \" GO:0002181\" \" GO:0002376\" \" GO:0003014\" ...\n     $ GOslim: chr [1:6942] \"GO:0000278\" \"GO:0002181\" \"GO:0002376\" \"GO:0003014\" ...\n     $ Term  : chr [1:6942] \"mitotic cell cycle\" \"cytoplasmic translation\" \"immune system process\" \"renal system process\" ...\n\n## 1.2 Write slimdf to file\n\n### 1.2.1 Sort and select slmidf\n\nSorts GOslims by `Count`, in descending order and then selects just the\n`Term` and `Count` columns.\n\n``` r\nslimdf.sorted <- slimdf %>% arrange(desc(Count))\n\nslim.count.df <- slimdf.sorted %>% \n  select(Term, Count)\n\nstr(slim.count.df)\n```\n\n    'data.frame':   72 obs. of  2 variables:\n     $ Term : chr  \"anatomical structure development\" \"cell differentiation\" \"signaling\" \"immune system process\" ...\n     $ Count: int  2091 932 908 554 352 306 278 275 264 246 ...\n\n### 1.2.2 Write formatted slim.count.df to file\n\n``` r\nwrite_tsv(slim.count.df, file = \"../output/01-GO-to-GOslim/counts.GOID-per-GOslim_term.tab\")\n```\n\n## 1.3 Count unique Biological Process GO IDs\n\n``` r\n# Flatten the list and count total GO IDs\ntotal_go_ids <- length(unlist(gomap))\n\n# Display the total count\ntotal_go_ids\n```\n\n    [1] 26534\n\n``` r\n# Unlist to extract all GO IDs, then find unique ones and count them\nunique_go_ids <- unique(unlist(gomap))\ntotal_unique_ids <- length(unique_go_ids)\n\n# Display the total count of unique GO IDs\ntotal_unique_ids\n```\n\n    [1] 17913\n\nTotal starting BP GO IDs: 26534\n\nTotal unique BP GO IDs: 17913\n\n# 2 REFERENCES\n\n<div id=\"refs\" class=\"references csl-bib-body hanging-indent\"\nentry-spacing=\"0\">\n\n<div id=\"ref-thegene2023\" class=\"csl-entry\">\n\nAleksander, Suzi A, James Balhoff, Seth Carbon, J Michael Cherry, Harold\nJ Drabkin, Dustin Ebert, Marc Feuermann, et al. 2023. “The Gene Ontology\nKnowledgebase in 2023.” Edited by A Baryshnikova. *GENETICS* 224 (1).\n<https://doi.org/10.1093/genetics/iyad031>.\n\n</div>\n\n<div id=\"ref-ashburner2000\" class=\"csl-entry\">\n\nAshburner, Michael, Catherine A. Ball, Judith A. Blake, David Botstein,\nHeather Butler, J. Michael Cherry, Allan P. Davis, et al. 2000. “Gene\nOntology: Tool for the Unification of Biology.” *Nature Genetics* 25\n(1): 25–29. <https://doi.org/10.1038/75556>.\n\n</div>\n\n<div id=\"ref-carlson2017\" class=\"csl-entry\">\n\nCarlson, Marc. 2017. “GO.db.” <https://doi.org/10.18129/B9.BIOC.GO.DB>.\n\n</div>\n\n<div id=\"ref-martinmorgan2017\" class=\"csl-entry\">\n\nMartin Morgan, Seth Falcon. 2017. “GSEABase.”\n<https://doi.org/10.18129/B9.BIOC.GSEABASE>.\n\n</div>\n\n<div id=\"ref-wickham2019\" class=\"csl-entry\">\n\nWickham, Hadley, Mara Averick, Jennifer Bryan, Winston Chang, Lucy\nMcGowan, Romain François, Garrett Grolemund, et al. 2019. “Welcome to\nthe Tidyverse.” *Journal of Open Source Software* 4 (43): 1686.\n<https://doi.org/10.21105/joss.01686>.\n\n</div>\n\n</div>\n","srcMarkdownNoYaml":"\n::: {.callout-note}\nThis notebook consists of a markdown rendering of [01-GO-to-GOslim.Rmd](https://github.com/RobertsLab/code/blob/04a796dda0545340146d694964bcf4abdb626a73/r_projects/sam/20241106-dimb-GO-to-GOslim/code/01-GO-to-GOslim.Rmd) (commit: `04a796d`).\n:::\n\n\n# 1 INTRO\n\nThis notebook is setup to [take GO IDs and categorize them into their\ncorresponding\nGOslims](https://github.com/RobertsLab/resources/issues/2012) (GitHub\nIssue). Specifically, it will use the following tab-delimited input\nfile:\n\n- [der_go.tsv](https://gannet.fish.washington.edu/seashell/bu-github/project-pycno-multispecies-2023/output/06-Go-3-species/der_go.tsv)\n\n[Desired output\nformat](https://github.com/RobertsLab/resources/issues/1989#issuecomment-2448757444)\n(GitHub Issue comment) is:\n\n    Term                                                    Count\n    anatomical structure development                        1137\n    signaling                                               600\n    cell differentiation                                    533\n    immune system process                                   331\n    lipid metabolic process                                 212\n\nThis was performed using R, with the following packages:\n\n- GSEABase (Martin Morgan 2017)\n- GO.db (Carlson 2017)\n- tidyverse (Wickham et al. 2019)\n\nIt also relied on gene ontology (GO) information from the [Gene Ontology\nConsortium](https://geneontology.org/) (Ashburner et al. 2000;\nAleksander et al. 2023).\n\n## 1.1 CODE\n\n``` r\nlibrary(GSEABase)\n```\n\n``` r\nlibrary(GO.db)\n```\n\n    ## \n\n``` r\nlibrary(knitr)\nlibrary(tidyverse)\n```\n\n``` r\nknitr::opts_chunk$set(\n  echo = TRUE,         # Display code chunks\n  eval = FALSE,        # Evaluate code chunks\n  warning = FALSE,     # Hide warnings\n  message = FALSE,     # Hide messages\n  comment = \"\"         # Prevents appending '##' to beginning of lines in code output\n)\n```\n\n### 1.1.1 Variables\n\n``` r\n# Column names corresponding to gene name/ID and GO IDs\nGO.ID.column <- \"Gene.Ontology.IDs\"\ngene.ID.column <- \"X1\"\n\n# Relative path or URL to input file\ninput.file <- \"https://gannet.fish.washington.edu/seashell/bu-github/project-pycno-multispecies-2023/output/06-Go-3-species/der_go.tsv\"\n\n\n##### Official GO info - no need to change #####\ngoslims_obo <- \"goslim_generic.obo\"\ngoslims_url <- \"http://current.geneontology.org/ontology/subsets/goslim_generic.obo\"\n```\n\n### 1.1.2 Set GSEAbase location and download `goslim_generic.obo`\n\n``` r\n# Find GSEAbase installation location\ngseabase_location <- find.package(\"GSEABase\")\n\n# Load path to GOslim OBO file\ngoslim_obo_destintation <- file.path(gseabase_location, \"extdata\", goslims_obo, fsep = \"/\")\n\n# Download the GOslim OBO file\ndownload.file(url = goslims_url, destfile = goslim_obo_destintation)\n\n# Loads package files\ngseabase_files <- system.file(\"extdata\", goslims_obo, package=\"GSEABase\")\n```\n\n### 1.1.3 Read in gene/GO file\n\n``` r\nfull.gene.df <- read.csv(file = input.file, header = TRUE, sep = \"\\t\")\n\nstr(full.gene.df)\n```\n\n    'data.frame':   34254 obs. of  25 variables:\n     $ X1                                : chr  \"TRINITY_DN37009_c0_g3_i1\" \"TRINITY_DN37009_c0_g3_i3\" \"TRINITY_DN37035_c0_g1_i1\" \"TRINITY_DN37023_c0_g1_i1\" ...\n     $ X2                                : chr  \"sp\" \"sp\" \"sp\" \"sp\" ...\n     $ X3                                : chr  \"Q9BYN0\" \"Q9BYN0\" \"P21329\" \"P07700\" ...\n     $ X4                                : chr  \"SRXN1_HUMAN\" \"SRXN1_HUMAN\" \"RTJK_DROFU\" \"ADRB1_MELGA\" ...\n     $ X5                                : num  57.6 57.6 28.6 33.3 31.6 ...\n     $ X6                                : int  125 125 147 99 133 49 90 179 85 37 ...\n     $ X7                                : int  47 47 92 65 87 21 47 105 44 13 ...\n     $ X8                                : int  2 2 4 1 3 0 3 7 2 1 ...\n     $ X9                                : int  2822 1720 169 47 473 85 15 1 104 102 ...\n     $ X10                               : int  2448 1346 579 340 84 231 275 513 343 4 ...\n     $ X11                               : int  18 18 613 59 44 374 425 85 64 1097 ...\n     $ X12                               : int  136 136 756 157 175 422 509 246 148 1133 ...\n     $ X13                               : num  1.11e-39 3.47e-40 4.94e-08 6.59e-09 9.86e-12 ...\n     $ X14                               : num  147 147 55.8 55.5 66.6 58.9 49.7 51.6 69.3 46.2 ...\n     $ Reviewed                          : chr  \"reviewed\" \"reviewed\" NA \"reviewed\" ...\n     $ Entry.Name                        : chr  \"SRXN1_HUMAN\" \"SRXN1_HUMAN\" NA \"ADRB1_MELGA\" ...\n     $ Protein.names                     : chr  \"Sulfiredoxin-1 (EC 1.8.98.2)\" \"Sulfiredoxin-1 (EC 1.8.98.2)\" NA \"Beta-1 adrenergic receptor (Beta-1 adrenoreceptor) (Beta-1 adrenoceptor) (Beta-T)\" ...\n     $ Gene.Names                        : chr  \"SRXN1 C20orf139 SRX SRX1\" \"SRXN1 C20orf139 SRX SRX1\" NA \"ADRB1\" ...\n     $ Organism                          : chr  \"Homo sapiens (Human)\" \"Homo sapiens (Human)\" NA \"Meleagris gallopavo (Wild turkey)\" ...\n     $ Length                            : int  137 137 NA 483 483 1056 NA 364 640 1358 ...\n     $ Gene.Ontology..biological.process.: chr  \"cellular response to oxidative stress [GO:0034599]; response to oxidative stress [GO:0006979]\" \"cellular response to oxidative stress [GO:0034599]; response to oxidative stress [GO:0006979]\" NA \"adenylate cyclase-activating adrenergic receptor signaling pathway [GO:0071880]; positive regulation of heart c\"| __truncated__ ...\n     $ Gene.Ontology..cellular.component.: chr  \"cytoplasm [GO:0005737]; cytosol [GO:0005829]; endoplasmic reticulum membrane [GO:0005789]\" \"cytoplasm [GO:0005737]; cytosol [GO:0005829]; endoplasmic reticulum membrane [GO:0005789]\" NA \"early endosome [GO:0005769]; membrane [GO:0016020]; plasma membrane [GO:0005886]\" ...\n     $ Gene.Ontology..GO.                : chr  \"cytoplasm [GO:0005737]; cytosol [GO:0005829]; endoplasmic reticulum membrane [GO:0005789]; ATP binding [GO:0005\"| __truncated__ \"cytoplasm [GO:0005737]; cytosol [GO:0005829]; endoplasmic reticulum membrane [GO:0005789]; ATP binding [GO:0005\"| __truncated__ NA \"early endosome [GO:0005769]; membrane [GO:0016020]; plasma membrane [GO:0005886]; beta1-adrenergic receptor act\"| __truncated__ ...\n     $ Gene.Ontology..molecular.function.: chr  \"ATP binding [GO:0005524]; oxidoreductase activity, acting on a sulfur group of donors [GO:0016667]; sulfiredoxi\"| __truncated__ \"ATP binding [GO:0005524]; oxidoreductase activity, acting on a sulfur group of donors [GO:0016667]; sulfiredoxi\"| __truncated__ NA \"beta1-adrenergic receptor activity [GO:0004940]; identical protein binding [GO:0042802]\" ...\n     $ Gene.Ontology.IDs                 : chr  \"GO:0005524; GO:0005737; GO:0005789; GO:0005829; GO:0006979; GO:0016667; GO:0032542; GO:0034599\" \"GO:0005524; GO:0005737; GO:0005789; GO:0005829; GO:0006979; GO:0016667; GO:0032542; GO:0034599\" NA \"GO:0004940; GO:0005769; GO:0005886; GO:0016020; GO:0042802; GO:0045187; GO:0045823; GO:0071880\" ...\n\n### 1.1.4 Remove rows with NA, remove whitespace in GO IDs column and keep just gene/GO IDs columns\n\n``` r\n# Clean whitespace, filter NA/empty rows, select columns, and split GO terms using column name variables\ngene.GO.df <- full.gene.df %>%\n  mutate(!!GO.ID.column := str_replace_all(.data[[GO.ID.column]], \"\\\\s*;\\\\s*\", \";\")) %>% # Clean up spaces around \";\"\n  filter(!is.na(.data[[gene.ID.column]]) & !is.na(.data[[GO.ID.column]]) & .data[[GO.ID.column]] != \"\") %>% \n  select(all_of(c(gene.ID.column, GO.ID.column)))\n\n\nstr(gene.GO.df)\n```\n\n    'data.frame':   23192 obs. of  2 variables:\n     $ X1               : chr  \"TRINITY_DN37009_c0_g3_i1\" \"TRINITY_DN37009_c0_g3_i3\" \"TRINITY_DN37023_c0_g1_i1\" \"TRINITY_DN37023_c1_g1_i1\" ...\n     $ Gene.Ontology.IDs: chr  \"GO:0005524;GO:0005737;GO:0005789;GO:0005829;GO:0006979;GO:0016667;GO:0032542;GO:0034599\" \"GO:0005524;GO:0005737;GO:0005789;GO:0005829;GO:0006979;GO:0016667;GO:0032542;GO:0034599\" \"GO:0004940;GO:0005769;GO:0005886;GO:0016020;GO:0042802;GO:0045187;GO:0045823;GO:0071880\" \"GO:0004940;GO:0005769;GO:0005886;GO:0016020;GO:0042802;GO:0045187;GO:0045823;GO:0071880\" ...\n\n### 1.1.5 “Flatten” gene and GO IDs\n\nThis flattens the file so all of the GO IDs per gene are separated into\none GO ID per gene per row.\n\n``` r\nflat.gene.GO.df <- gene.GO.df %>% separate_rows(!!sym(GO.ID.column), sep = \";\")\n\nstr(flat.gene.GO.df)\n```\n\n    tibble [363,990 × 2] (S3: tbl_df/tbl/data.frame)\n     $ X1               : chr [1:363990] \"TRINITY_DN37009_c0_g3_i1\" \"TRINITY_DN37009_c0_g3_i1\" \"TRINITY_DN37009_c0_g3_i1\" \"TRINITY_DN37009_c0_g3_i1\" ...\n     $ Gene.Ontology.IDs: chr [1:363990] \"GO:0005524\" \"GO:0005737\" \"GO:0005789\" \"GO:0005829\" ...\n\n### 1.1.6 Group\n\nGroups the genes by GO ID (i.e. lists all genes associated with each\nunique GO ID)\n\n``` r\ngrouped.gene.GO.df <- flat.gene.GO.df %>%\n  group_by(!!sym(GO.ID.column)) %>%\n  summarise(!!gene.ID.column := paste(.data[[gene.ID.column]], collapse = \",\"))\n\nstr(grouped.gene.GO.df)\n```\n\n    tibble [15,068 × 2] (S3: tbl_df/tbl/data.frame)\n     $ Gene.Ontology.IDs: chr [1:15068] \"GO:0000002\" \"GO:0000009\" \"GO:0000012\" \"GO:0000014\" ...\n     $ X1               : chr [1:15068] \"TRINITY_DN12635_c0_g1_i1,TRINITY_DN6578_c1_g1_i2,TRINITY_DN20059_c0_g1_i11,TRINITY_DN20059_c0_g1_i13,TRINITY_DN\"| __truncated__ \"TRINITY_DN3933_c0_g3_i1\" \"TRINITY_DN2179_c0_g7_i1,TRINITY_DN2179_c0_g7_i2,TRINITY_DN8923_c0_g2_i1,TRINITY_DN8283_c0_g1_i3,TRINITY_DN8283_\"| __truncated__ \"TRINITY_DN31365_c0_g1_i1,TRINITY_DN31365_c0_g1_i2,TRINITY_DN53840_c0_g1_i1,TRINITY_DN662_c0_g1_i2,TRINITY_DN149\"| __truncated__ ...\n\n### 1.1.7 Map GO IDs to GOslims\n\nThe mapping steps were derived from this [bioconductor forum\nresponse](https://support.bioconductor.org/p/128407/#128408)\n\n``` r\n# Vector of GO IDs\ngo_ids <- grouped.gene.GO.df[[GO.ID.column]]\n\nstr(go_ids)\n```\n\n     chr [1:15068] \"GO:0000002\" \"GO:0000009\" \"GO:0000012\" \"GO:0000014\" ...\n\n### 1.1.8 Extract GOslims from OBO\n\nCreates new OBO Collection object of just GOslims, based on provided GO\nIDs.\n\n``` r\n# Create GSEAbase GOCollection using `go_ids`\nmyCollection <- GOCollection(go_ids)\n\n# Retrieve GOslims from GO OBO file set\nslim <- getOBOCollection(gseabase_files)\n\nstr(slim)\n```\n\n    Formal class 'OBOCollection' [package \"GSEABase\"] with 7 slots\n      ..@ .stanza     :'data.frame':    153 obs. of  1 variable:\n      .. ..$ value: chr [1:153] \"Root\" \"Term\" \"Term\" \"Term\" ...\n      ..@ .subset     :'data.frame':    22 obs. of  1 variable:\n      .. ..$ value: chr [1:22] \"Rhea list of ChEBI terms representing the major species at pH 7.3.\" \"Term not to be used for direct annotation\" \"Terms planned for obsoletion\" \"AGR slim\" ...\n      ..@ .kv         :'data.frame':    2075 obs. of  3 variables:\n      .. ..$ stanza_id: chr [1:2075] \".__Root__\" \".__Root__\" \".__Root__\" \".__Root__\" ...\n      .. ..$ key      : chr [1:2075] \"format-version\" \"data-version\" \"synonymtypedef\" \"synonymtypedef\" ...\n      .. ..$ value    : chr [1:2075] \"1.2\" \"go/2024-09-08/subsets/goslim_generic.owl\" \"syngo_official_label \\\"label approved by the SynGO project\\\"\" \"systematic_synonym \\\"Systematic synonym\\\" EXACT\" ...\n      ..@ evidenceCode: chr [1:26] \"EXP\" \"IDA\" \"IPI\" \"IMP\" ...\n      ..@ ontology    : chr NA\n      ..@ ids         : chr [1:141] \"GO:0000228\" \"GO:0000278\" \"GO:0000910\" \"GO:0001618\" ...\n      ..@ type        : chr \"OBO\"\n\n### 1.1.9 Get Biological Process (BP) GOslims associated with provided GO IDs.\n\n``` r\n# Retrieve Biological Process (BP) GOslims\nslimdf <- goSlim(myCollection, slim, \"BP\", verbose)\nstr(slimdf)\n```\n\n    'data.frame':   72 obs. of  3 variables:\n     $ Count  : int  93 22 18 554 81 107 31 5 103 58 ...\n     $ Percent: num  0.925 0.219 0.179 5.508 0.805 ...\n     $ Term   : chr  \"mitotic cell cycle\" \"cytokinesis\" \"cytoplasmic translation\" \"immune system process\" ...\n\n### 1.1.10 Map GO to GOslims\n\nPerforms mapping of of GOIDs to GOslims\n\nReturns:\n\n- GOslim IDs (as rownames)\n- GOslim terms\n- Counts of GO IDs matching to corresponding GOslim\n- Percentage of GO IDs matching to corresponding GOslim\n- GOIDs mapped to corresponding GOslim, in a semi-colon delimited format\n\n``` r\n# List of GOslims and all GO IDs from `go_ids`\ngomap <- as.list(GOBPOFFSPRING[rownames(slimdf)])\n\n# Maps `go_ids` to matching GOslims\nmapped <- lapply(gomap, intersect, ids(myCollection))\n\n# Append all mapped GO IDs to `slimdf`\n# `sapply` needed to apply paste() to create semi-colon delimited values\nslimdf$GO.IDs <- sapply(lapply(gomap, intersect, ids(myCollection)), paste, collapse=\";\")\n\n# Remove \"character(0) string from \"GO.IDs\" column\nslimdf$GO.IDs[slimdf$GO.IDs == \"character(0)\"] <- \"\"\n\n# Add self-matching GOIDs to \"GO.IDs\" column, if not present\nfor (go_id in go_ids) {\n  # Check if the go_id is present in the row names\n  if (go_id %in% rownames(slimdf)) {\n    # Check if the go_id is not present in the GO.IDs column\n    # Also removes white space \"trimws()\" and converts all to upper case to handle\n    # any weird, \"invisible\" formatting issues.\n    if (!go_id %in% trimws(toupper(strsplit(slimdf[go_id, \"GO.IDs\"], \";\")[[1]]))) {\n      # Append the go_id to the GO.IDs column with a semi-colon separator\n      if (length(slimdf$GO.IDs) > 0 && nchar(slimdf$GO.IDs[nrow(slimdf)]) > 0) {\n        slimdf[go_id, \"GO.IDs\"] <- paste0(slimdf[go_id, \"GO.IDs\"], \"; \", go_id)\n      } else {\n        slimdf[go_id, \"GO.IDs\"] <- go_id\n      }\n    }\n  }\n}\n\nstr(slimdf)\n```\n\n    'data.frame':   72 obs. of  4 variables:\n     $ Count  : int  93 22 18 554 81 107 31 5 103 58 ...\n     $ Percent: num  0.925 0.219 0.179 5.508 0.805 ...\n     $ Term   : chr  \"mitotic cell cycle\" \"cytokinesis\" \"cytoplasmic translation\" \"immune system process\" ...\n     $ GO.IDs : chr  \"GO:0000022;GO:0000070;GO:0000082;GO:0000086;GO:0000132;GO:0000281;GO:0006977;GO:0007052;GO:0007076;GO:0007079;G\"| __truncated__ \"GO:0000281;GO:0000911;GO:0000915;GO:0007112;GO:0031991;GO:0032465;GO:0032466;GO:0032467;GO:0032506;GO:0033206;G\"| __truncated__ \"GO:0001731;GO:0001732;GO:0002183;GO:0002184;GO:0002188;GO:0002190;GO:0002191;GO:0002192;GO:0140018;GO:0140708;G\"| __truncated__ \"GO:0001768;GO:0001771;GO:0001773;GO:0001774;GO:0001776;GO:0001779;GO:0001780;GO:0001782;GO:0001798;GO:0001805;G\"| __truncated__ ...\n\n### 1.1.11 Flatten GOslims\n\n``` r\n# \"Flatten\" file so each row is single GO ID with corresponding GOslim\n# rownames_to_column needed to retain row name info\nslimdf_separated <- as.data.frame(slimdf %>%\n  rownames_to_column('GOslim') %>%\n  separate_rows(GO.IDs, sep = \";\"))\n\n# Group by unique GO ID\ngrouped_slimdf <- slimdf_separated %>%\n  filter(!is.na(GO.IDs) & GO.IDs != \"\") %>%\n  group_by(GO.IDs) %>%\n  summarize(GOslim = paste(GOslim, collapse = \";\"),\n            Term = paste(Term, collapse = \";\"))\n\n\nstr(grouped_slimdf)\n```\n\n    tibble [6,942 × 3] (S3: tbl_df/tbl/data.frame)\n     $ GO.IDs: chr [1:6942] \" GO:0000278\" \" GO:0002181\" \" GO:0002376\" \" GO:0003014\" ...\n     $ GOslim: chr [1:6942] \"GO:0000278\" \"GO:0002181\" \"GO:0002376\" \"GO:0003014\" ...\n     $ Term  : chr [1:6942] \"mitotic cell cycle\" \"cytoplasmic translation\" \"immune system process\" \"renal system process\" ...\n\n## 1.2 Write slimdf to file\n\n### 1.2.1 Sort and select slmidf\n\nSorts GOslims by `Count`, in descending order and then selects just the\n`Term` and `Count` columns.\n\n``` r\nslimdf.sorted <- slimdf %>% arrange(desc(Count))\n\nslim.count.df <- slimdf.sorted %>% \n  select(Term, Count)\n\nstr(slim.count.df)\n```\n\n    'data.frame':   72 obs. of  2 variables:\n     $ Term : chr  \"anatomical structure development\" \"cell differentiation\" \"signaling\" \"immune system process\" ...\n     $ Count: int  2091 932 908 554 352 306 278 275 264 246 ...\n\n### 1.2.2 Write formatted slim.count.df to file\n\n``` r\nwrite_tsv(slim.count.df, file = \"../output/01-GO-to-GOslim/counts.GOID-per-GOslim_term.tab\")\n```\n\n## 1.3 Count unique Biological Process GO IDs\n\n``` r\n# Flatten the list and count total GO IDs\ntotal_go_ids <- length(unlist(gomap))\n\n# Display the total count\ntotal_go_ids\n```\n\n    [1] 26534\n\n``` r\n# Unlist to extract all GO IDs, then find unique ones and count them\nunique_go_ids <- unique(unlist(gomap))\ntotal_unique_ids <- length(unique_go_ids)\n\n# Display the total count of unique GO IDs\ntotal_unique_ids\n```\n\n    [1] 17913\n\nTotal starting BP GO IDs: 26534\n\nTotal unique BP GO IDs: 17913\n\n# 2 REFERENCES\n\n<div id=\"refs\" class=\"references csl-bib-body hanging-indent\"\nentry-spacing=\"0\">\n\n<div id=\"ref-thegene2023\" class=\"csl-entry\">\n\nAleksander, Suzi A, James Balhoff, Seth Carbon, J Michael Cherry, Harold\nJ Drabkin, Dustin Ebert, Marc Feuermann, et al. 2023. “The Gene Ontology\nKnowledgebase in 2023.” Edited by A Baryshnikova. *GENETICS* 224 (1).\n<https://doi.org/10.1093/genetics/iyad031>.\n\n</div>\n\n<div id=\"ref-ashburner2000\" class=\"csl-entry\">\n\nAshburner, Michael, Catherine A. Ball, Judith A. Blake, David Botstein,\nHeather Butler, J. Michael Cherry, Allan P. Davis, et al. 2000. “Gene\nOntology: Tool for the Unification of Biology.” *Nature Genetics* 25\n(1): 25–29. <https://doi.org/10.1038/75556>.\n\n</div>\n\n<div id=\"ref-carlson2017\" class=\"csl-entry\">\n\nCarlson, Marc. 2017. “GO.db.” <https://doi.org/10.18129/B9.BIOC.GO.DB>.\n\n</div>\n\n<div id=\"ref-martinmorgan2017\" class=\"csl-entry\">\n\nMartin Morgan, Seth Falcon. 2017. “GSEABase.”\n<https://doi.org/10.18129/B9.BIOC.GSEABASE>.\n\n</div>\n\n<div id=\"ref-wickham2019\" class=\"csl-entry\">\n\nWickham, Hadley, Mara Averick, Jennifer Bryan, Winston Chang, Lucy\nMcGowan, Romain François, Garrett Grolemund, et al. 2019. “Welcome to\nthe Tidyverse.” *Journal of Open Source Software* 4 (43): 1686.\n<https://doi.org/10.21105/joss.01686>.\n\n</div>\n\n</div>\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","title":"Data Wrangling - GO to GOslims for Graces Dermasterias imbricata Project from Trinity Assembly Genes","date":"2024-11-06","draft":false,"categories":["2024","Dermasterias imbricata","GO","GOslim","gene ontology","Trinity","Leather star"]},"extensions":{"book":{"multiFile":true}}}},"draft":false,"projectFormats":["html"]}