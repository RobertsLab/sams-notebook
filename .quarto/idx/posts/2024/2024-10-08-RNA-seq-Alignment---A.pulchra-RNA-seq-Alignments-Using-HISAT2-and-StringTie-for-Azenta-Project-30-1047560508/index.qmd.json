{"title":"RNA-seq Alignment - A.pulchra RNA-seq Alignments Using HISAT2 and StringTie for Azenta Project 30-1047560508","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","title":"RNA-seq Alignment - A.pulchra RNA-seq Alignments Using HISAT2 and StringTie for Azenta Project 30-1047560508","date":"2024-10-08","draft":false,"engine":"knitr","categories":["2024","30-1047560508","RNA-seq","E5","timeseries_molecular","HISAT2","StringTie","alignment","Acropora pulchra","coral"],"bibliography":"references.bib"},"headingText":"1 INTRODUCTION","containsRefs":false,"markdown":"\n\n::: callout-note\nThis notebook entry is knitted from [`urol-e5/timeseries_molecular/D-Apul/code/02.20-D-Apul-RNAseq-alignment-HiSat2.Rmd`](https://github.com/urol-e5/timeseries_molecular/blob/0f801c0bd0e66eb33aeb8597fe759be44011d1b8/D-Apul/code/02.20-D-Apul-RNAseq-alignment-HiSat2.Rmd) (GitHub), commit `0f801c0`.\n:::\n\n\nThis notebook will align trimmed *A.pulchra* RNA-seq data to the *A.pulchra* genome using [HISAT2](https://github.com/DaehwanKimLab/hisat2) [@kim2019]. Follwed by [StringTie](https://ccb.jhu.edu/software/stringtie/index.shtml?t=manual) [@pertea2016; @pertea2015] for transcript assembly/identification and count matrices for downstream expression analysis with [DESeq2](https://github.com/thelovelab/DESeq2) and/or [Ballgown](https://github.com/alyssafrazee/ballgown).\n\nSince the BAM files produced by this notebook are too large for GitHub, they can be accessed on our server here:\n\n<https://gannet.fish.washington.edu/Atumefaciens/gitrepos/urol-e5/timeseries_molecular/D-Apul/output/02.20-D-Apul-RNAseq-alignment-HiSat2/>\n\nInput(s)\n\n-   Trimmed FastQ files, with format: `*fastp-trim.fq.gz`\n-   HISAT2 genome index: `Apulcrha-genome`\n-   Genome GTF: `Apulchra-genome.gtf`\n-   Sample metadata: `M-multi-species/data/rna_metadata.csv`\n\nOutputs:\n\n- Primary:\n  \n  - `checksums.md5`: MD5 checksum for all files in this directory. Excludes subdirectories.\n  \n  - `apul-gene_count_matrix.csv`: Gene count matrix for use in [DESeq2](https://github.com/thelovelab/DESeq2).\n  \n  - `apul-transcript_count_matrix.csv`: Transcript count matrix for use in [DESeq2](https://github.com/thelovelab/DESeq2). \n  \n  - `prepDE-sample_list.txt`: Sample file list provided as input to StringTie for DESeq2 count matrix generation. Also serves as documentation of which files were used   for this step. \n  \n  - `Apulchra-genome.stringtie.gtf`: Canonical StringTie GTF file compiled from all individual sample GTFs. \n  \n  - `sorted-bams-merged.bam`: Merged (and sorted) BAM consisting of all individual sample BAMs. \n  \n  - `sorted-bams-merged.bam.bai`: BAM index file. Useful for visualizing assemblies in IGV. \n  \n  - `sorted_bams.list`: List file needed for merging of BAMS with samtools. Also serves as documentation of which files were used for this step. \n  \n  - `multiqc_report.html`: MultiQC report aggregating all individual HISAT2 alignment stats and samtools flagstats. \n  \n  \n  - `gtf_list.txt`: List file needed for merging of GTF files with StringTie. Also serves as documentation of which files were used for this step. \n- Individuals: Each subdirectory is labelled based on sample name and each contains individual HISAT2 alignment and StringTie output files. \n  \n  - `<sample_name>_checksums.md5`: MD5 checksums for all files in the directory. \n  \n  - `*.ctab`: Data tables formatted for import into Ballgown. \n  \n  - `<sample_name>.cov_refs.gtf`: StringTie genome reference sequnce coverage GTF. \n  \n  - `<sample_name>.gtf`: StringTie GTF. \n  \n  - `<sample_name>.sorted.bam`: HISAT2 assembly BAM. \n  \n  - `<sample_name>.sorted.bam.bai`: BAM index file. Useful for visualizing assemblies in IGV. \n  \n  - `<sample_name>-hisat2_output.flagstat`: samtools flagstat output file. \n  \n  - `<sample_name>_hisat2.stats`: HISAT2 assembly stats. \n  \n  - `input_fastqs_checksums.md5`: MD5 checksums of files used as input for assembly. Primarily serves as documentation to track/verify which files were actually used.\n\n# 2 Create a Bash variables file\n\nThis allows usage of Bash variables across R Markdown chunks.\n\n``` bash\n{\necho \"#### Assign Variables ####\"\necho \"\"\n\necho \"# Data directories\"\necho 'export timeseries_dir=/home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular'\necho 'export genome_dir=\"${timeseries_dir}/D-Apul/data\"'\necho 'export genome_index_dir=\"${timeseries_dir}/D-Apul/output/02.10-D-Apul-RNAseq-genome-index-HiSat2\"'\necho 'export output_dir_top=\"${timeseries_dir}/D-Apul/output/02.20-D-Apul-RNAseq-alignment-HiSat2\"'\necho 'export trimmed_fastqs_dir=\"${timeseries_dir}/D-Apul/output/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC/trimmed-fastqs\"'\necho 'export trimmed_reads_url=\"https://gannet.fish.washington.edu/Atumefaciens/gitrepos/urol-e5/timeseries_molecular/D-Apul/output/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC/trimmed-fastqs/\"'\necho \"\"\n\necho \"# Location of Hisat2 index files\"\necho \"# Must keep variable name formatting, as it's used by HiSat2\"\necho 'export HISAT2_INDEXES=\"${genome_index_dir}\"'\n\n\necho \"# Input files\"\necho 'export exons=\"${output_dir_top}/Apulchra-genome_hisat2_exons.tab\"'\necho 'export genome_index_name=\"Apulchra-genome\"'\necho 'export genome_gff=\"${genome_dir}/Apulchra-genome.gff\"'\necho 'export genome_fasta=\"${genome_dir}/Apulchra-genome.fa\"'\necho 'export splice_sites=\"${output_dir_top}/Apulchra-genome_hisat2_splice_sites.tab\"'\necho 'export transcripts_gtf=\"${genome_dir}/Apulchra-genome.gtf\"'\n\necho \"# Output files\"\necho 'export gtf_list=\"${output_dir_top}/gtf_list.txt\"'\necho 'export merged_bam=\"${output_dir_top}/sorted-bams-merged.bam\"'\necho \"\"\n\necho \"# Paths to programs\"\necho 'export programs_dir=\"/home/shared\"'\necho 'export hisat2_dir=\"${programs_dir}/hisat2-2.2.1\"'\n\necho 'export hisat2=\"${hisat2_dir}/hisat2\"'\n\necho 'export multiqc=/home/sam/programs/mambaforge/bin/multiqc'\n\necho 'export samtools=\"${programs_dir}/samtools-1.12/samtools\"'\n\necho 'export prepDE=\"${programs_dir}/stringtie-2.2.1.Linux_x86_64/prepDE.py3\"'\necho 'export stringtie=\"${programs_dir}/stringtie-2.2.1.Linux_x86_64/stringtie\"'\n\necho \"\"\n\necho \"# Set FastQ filename patterns\"\necho \"export R1_fastq_pattern='*_R1_*.fq.gz'\"\necho \"export R2_fastq_pattern='*_R2_*.fq.gz'\"\necho \"export trimmed_fastq_pattern='*fastp-trim.fq.gz'\"\necho \"\"\n\necho \"# Set number of CPUs to use\"\necho 'export threads=40'\necho \"\"\n\necho \"# Set average read length - for StringTie prepDE.py\"\necho 'export read_length=125'\necho \"\"\n\n\necho \"## Initialize arrays\"\necho 'export fastq_array_R1=()'\necho 'export fastq_array_R2=()'\necho 'export R1_names_array=()'\necho 'export R2_names_array=()'\necho \"declare -A sample_timepoint_map\"\necho \"\"\n\necho \"# Programs associative array\"\necho \"declare -A programs_array\"\necho \"programs_array=(\"\necho '[hisat2]=\"${hisat2}\" \\'\necho '[multiqc]=\"${multiqc}\" \\'\necho '[prepDE]=\"${prepDE}\" \\'\necho '[samtools]=\"${samtools}\" \\'\necho '[stringtie]=\"${stringtie}\" \\'\necho \")\"\necho \"\"\n\necho \"# Print formatting\"\necho 'export line=\"--------------------------------------------------------\"'\necho \"\"\n} > .bashvars\n\ncat .bashvars\n```\n\n```         \n#### Assign Variables ####\n\n# Data directories\nexport timeseries_dir=/home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular\nexport genome_dir=\"${timeseries_dir}/D-Apul/data\"\nexport genome_index_dir=\"${timeseries_dir}/D-Apul/output/02.10-D-Apul-RNAseq-genome-index-HiSat2\"\nexport output_dir_top=\"${timeseries_dir}/D-Apul/output/02.20-D-Apul-RNAseq-alignment-HiSat2\"\nexport trimmed_fastqs_dir=\"${timeseries_dir}/D-Apul/output/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC/trimmed-fastqs\"\nexport trimmed_reads_url=\"https://gannet.fish.washington.edu/Atumefaciens/gitrepos/urol-e5/timeseries_molecular/D-Apul/output/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC/trimmed-fastqs/\"\n\n# Location of Hisat2 index files\n# Must keep variable name formatting, as it's used by HiSat2\nexport HISAT2_INDEXES=\"${genome_index_dir}\"\n# Input files\nexport exons=\"${output_dir_top}/Apulchra-genome_hisat2_exons.tab\"\nexport genome_index_name=\"Apulchra-genome\"\nexport genome_gff=\"${genome_dir}/Apulchra-genome.gff\"\nexport genome_fasta=\"${genome_dir}/Apulchra-genome.fa\"\nexport splice_sites=\"${output_dir_top}/Apulchra-genome_hisat2_splice_sites.tab\"\nexport transcripts_gtf=\"${genome_dir}/Apulchra-genome.gtf\"\n# Output files\nexport gtf_list=\"${output_dir_top}/gtf_list.txt\"\nexport merged_bam=\"${output_dir_top}/sorted-bams-merged.bam\"\n\n# Paths to programs\nexport programs_dir=\"/home/shared\"\nexport hisat2_dir=\"${programs_dir}/hisat2-2.2.1\"\nexport hisat2=\"${hisat2_dir}/hisat2\"\nexport multiqc=/home/sam/programs/mambaforge/bin/multiqc\nexport samtools=\"${programs_dir}/samtools-1.12/samtools\"\nexport prepDE=\"${programs_dir}/stringtie-2.2.1.Linux_x86_64/prepDE.py3\"\nexport stringtie=\"${programs_dir}/stringtie-2.2.1.Linux_x86_64/stringtie\"\n\n# Set FastQ filename patterns\nexport R1_fastq_pattern='*_R1_*.fq.gz'\nexport R2_fastq_pattern='*_R2_*.fq.gz'\nexport trimmed_fastq_pattern='*fastp-trim.fq.gz'\n\n# Set number of CPUs to use\nexport threads=40\n\n# Set average read length - for StringTie prepDE.py\nexport read_length=125\n\n## Initialize arrays\nexport fastq_array_R1=()\nexport fastq_array_R2=()\nexport R1_names_array=()\nexport R2_names_array=()\ndeclare -A sample_timepoint_map\n\n# Programs associative array\ndeclare -A programs_array\nprograms_array=(\n[hisat2]=\"${hisat2}\" \\\n[multiqc]=\"${multiqc}\" \\\n[prepDE]=\"${prepDE}\" \\\n[samtools]=\"${samtools}\" \\\n[stringtie]=\"${stringtie}\" \\\n)\n\n# Print formatting\nexport line=\"--------------------------------------------------------\"\n```\n\nIf needed, download raw RNA-seq.\n\nChange `eval=FALSE` to `eval=TRUE` to execute the next two chunks to download RNA-seq and then verify MD5 checksums.\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Make output directory if it doesn't exist\nmkdir --parents ${trimmed_fastqs_dir}\n\n# Run wget to retrieve FastQs and MD5 files\nwget \\\n--directory-prefix ${trimmed_fastqs_dir} \\\n--recursive \\\n--no-check-certificate \\\n--continue \\\n--cut-dirs 3 \\\n--no-host-directories \\\n--no-parent \\\n--quiet \\\n--accept=\"*fastp-trim*, *.md5\"\n${trimmed_reads_url}\n\nls -lh \"${trimmed_fastqs_dir}\"\n```\n\nVerify raw read checksums\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\ncd \"${trimmed_fastqs_dir}\"\n\n# Verify checksums\nfor file in *.md5\ndo\n  md5sum --check \"${file}\"\ndone\n```\n\n# 3 Align reads using HISAT2\n\nThis requires usage of the `rna_metadata.csv`\n\nThis step has a lengthy, semi-complex workflow:\n\n1.  Parse `rna_metadata.csv` for *A.pulchra* sample names and time point. This info will be used for downstream file naming and to assing the time point to the read group (`SM:`) in the alignment file.\n2.  Loop through all samples and perform individual alignments using HISAT2.\n3.  HISAT2 output is piped to through multiple samtools tools: flagstat (stats aggregation), sort (creates/sorts BAM), index (creates BAM index). Piping saves time and disk space, by avoiding the generation of large SAM files.\n4.  Loop continues and runs StringTie on sorted BAM file to produce individual GTF file.\n5.  Loop continues and adds GTF path/filename to a list file, which will be used downstream.\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Make output directories, if they don't exist\nmkdir --parents \"${output_dir_top}\"\n\n# Change to ouput directory\ncd \"${output_dir_top}\"\n\n# Create associative array with sample and timepoint\nmetadata=\"../../../M-multi-species/data/rna_metadata.csv\"\n\n# Declare the array\ndeclare -A sample_timepoint_map\n\n# Read the metadata file line by line\nwhile IFS=',' read -r sample_number sample_name plate well_number azenta_sample_name colony_id timepoint sample_type species_strain SampleBuffer; do\n    # Check if the species is \"Acropora pulchra\"\n    if [[ \"${species_strain}\" == \"Acropora pulchra\" ]]; then\n        # Add the Azenta sample name as the key and Timepoint as the value in the associative array\n        sample_timepoint_map[\"${azenta_sample_name}\"]=\"${timepoint}\"\n    fi\ndone < <(tail -n +2 \"${metadata}\") # Skip the header\n\n## Populate trimmed reads arrays\nfastq_array_R1=(\"${trimmed_fastqs_dir}\"/${R1_fastq_pattern})\nfastq_array_R2=(\"${trimmed_fastqs_dir}\"/${R2_fastq_pattern})\n\n############## BEGIN HISAT2 ALIGNMENTS ##############\nfor sample in \"${!sample_timepoint_map[@]}\"\ndo\n\n\n  # Create and switch to dedicated sample directory\n  mkdir --parents \"${sample}\" && cd \"$_\"\n\n  # Create HISAT2 list of fastq R1 files\n  # and generated MD5 checksums file.\n  for fastq in \"${fastq_array_R1[@]}\"\n  do\n    # Parse sample name from FastQ filename\n    fastq_sample=$(echo \"${fastq##*/}\" | awk -F\"[_-]\" '{print $3}')\n    \n    # Process matching FastQ file, based on sample name\n    if [ \"${fastq_sample}\" == \"${sample}\" ]; then\n      \n      # Generate checksum/list of input files used\n      md5sum \"${fastq}\" >> input_fastqs_checksums.md5\n      \n      # Create comma-separated lists of FastQs for HISAT2\n      printf -v joined_R1 '%s,' \"${fastq}\"\n      fastq_list_R1=$(echo \"${joined_R1%,}\")\n    fi\n  done\n\n  # Create HISAT2 list of fastq R1 files\n  # and generated MD5 checksums file.\n  for fastq in \"${fastq_array_R2[@]}\"\n  do\n    # Parse sample name from FastQ filename\n    fastq_sample=$(echo \"${fastq##*/}\" | awk -F\"[_-]\" '{print $3}')\n    \n    # Process matching FastQ file, based on sample name\n    if [ \"${fastq_sample}\" == \"${sample}\" ]; then\n      \n      # Generate checksum/list of input files used\n      md5sum \"${fastq}\" >> input_fastqs_checksums.md5\n\n      # Create comma-separated lists of FastQs for HISAT2\n      printf -v joined_R2 '%s,' \"${fastq}\"\n      fastq_list_R2=$(echo \"${joined_R2%,}\")\n    fi\n  done\n\n\n\n  # HISAT2 alignments\n  # Sets read group info (RG) using samples array\n  \"${programs_array[hisat2]}\" \\\n  -x \"${genome_index_name}\" \\\n  -1 \"${fastq_list_R1}\" \\\n  -2 \"${fastq_list_R2}\" \\\n  --threads \"${threads}\" \\\n  --rg-id \"${sample}\" \\\n  --rg \"SM:\"\"${sample_timepoint_map[$sample]}\" \\\n  2> \"${sample}\"_hisat2.stats \\\n  | tee >(${programs_array[samtools]} flagstat - > \"${sample}\"-hisat2_output.flagstat) \\\n  | ${programs_array[samtools]} sort - -@ \"${threads}\" -O BAM \\\n  | tee \"${sample}\".sorted.bam \\\n  | ${programs_array[samtools]} index - \"${sample}\".sorted.bam.bai\n  \n  \n  # Run stringtie on alignments\n  # Uses \"-B\" option to output tables intended for use in Ballgown\n  # Uses \"-e\" option; recommended when using \"-B\" option.\n  # Limits analysis to only reads alignments matching reference.\n  \"${programs_array[stringtie]}\" \"${sample}\".sorted.bam \\\n  -p \"${threads}\" \\\n  -o \"${sample}\".gtf \\\n  -G \"${genome_gff}\" \\\n  -C \"${sample}.cov_refs.gtf\" \\\n  -B \\\n  -e \n  \n  \n  # Add GTFs to list file, only if non-empty\n  # Identifies GTF files that only have header\n  gtf_lines=$(wc -l < \"${sample}\".gtf )\n  if [ \"${gtf_lines}\" -gt 2 ]; then\n    echo \"$(pwd)/${sample}.gtf\" >> \"${gtf_list}\"\n  fi \n\n  # Generate checksums\n  find ./ -type f -not -name \"*.md5\" -exec md5sum {} \\; > ${sample}_checksums.md5\n  # Move up to orig. working directory\n  cd ..\n\ndone\n```\n\n## 3.1 Review HISAT2 Output\n\nView the resulting directory structure of resulting from the HISAT2/StringTie process.\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Change to ouput directory\ncd \"${output_dir_top}\"\n\n# Display HISAT2 output directory structure\n# with directory (--du) and file sizes (-h)\ntree --du -h\n```\n\n```         \n.\n├── [1.8G]  1A1\n│   ├── [ 553]  1A1_checksums.md5\n│   ├── [4.8M]  1A1.cov_refs.gtf\n│   ├── [ 34M]  1A1.gtf\n│   ├── [ 451]  1A1-hisat2_output.flagstat\n│   ├── [ 637]  1A1_hisat2.stats\n│   ├── [1.7G]  1A1.sorted.bam\n│   ├── [936K]  1A1.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 420]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.8G]  1A10\n│   ├── [ 559]  1A10_checksums.md5\n│   ├── [3.5M]  1A10.cov_refs.gtf\n│   ├── [ 34M]  1A10.gtf\n│   ├── [ 449]  1A10-hisat2_output.flagstat\n│   ├── [ 638]  1A10_hisat2.stats\n│   ├── [1.8G]  1A10.sorted.bam\n│   ├── [779K]  1A10.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.6G]  1A12\n│   ├── [ 559]  1A12_checksums.md5\n│   ├── [8.3M]  1A12.cov_refs.gtf\n│   ├── [ 34M]  1A12.gtf\n│   ├── [ 449]  1A12-hisat2_output.flagstat\n│   ├── [ 636]  1A12_hisat2.stats\n│   ├── [1.5G]  1A12.sorted.bam\n│   ├── [777K]  1A12.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.8G]  1A2\n│   ├── [ 553]  1A2_checksums.md5\n│   ├── [3.1M]  1A2.cov_refs.gtf\n│   ├── [ 34M]  1A2.gtf\n│   ├── [ 449]  1A2-hisat2_output.flagstat\n│   ├── [ 640]  1A2_hisat2.stats\n│   ├── [1.7G]  1A2.sorted.bam\n│   ├── [864K]  1A2.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 420]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.5G]  1A8\n│   ├── [ 553]  1A8_checksums.md5\n│   ├── [6.9M]  1A8.cov_refs.gtf\n│   ├── [ 34M]  1A8.gtf\n│   ├── [ 449]  1A8-hisat2_output.flagstat\n│   ├── [ 637]  1A8_hisat2.stats\n│   ├── [1.5G]  1A8.sorted.bam\n│   ├── [789K]  1A8.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.9G]  1A9\n│   ├── [ 553]  1A9_checksums.md5\n│   ├── [7.2M]  1A9.cov_refs.gtf\n│   ├── [ 34M]  1A9.gtf\n│   ├── [ 450]  1A9-hisat2_output.flagstat\n│   ├── [ 638]  1A9_hisat2.stats\n│   ├── [1.9G]  1A9.sorted.bam\n│   ├── [795K]  1A9.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.8G]  1B1\n│   ├── [ 553]  1B1_checksums.md5\n│   ├── [6.9M]  1B1.cov_refs.gtf\n│   ├── [ 34M]  1B1.gtf\n│   ├── [ 449]  1B1-hisat2_output.flagstat\n│   ├── [ 638]  1B1_hisat2.stats\n│   ├── [1.8G]  1B1.sorted.bam\n│   ├── [824K]  1B1.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 420]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.8G]  1B10\n│   ├── [ 559]  1B10_checksums.md5\n│   ├── [7.0M]  1B10.cov_refs.gtf\n│   ├── [ 34M]  1B10.gtf\n│   ├── [ 449]  1B10-hisat2_output.flagstat\n│   ├── [ 637]  1B10_hisat2.stats\n│   ├── [1.7G]  1B10.sorted.bam\n│   ├── [819K]  1B10.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.8G]  1B2\n│   ├── [ 553]  1B2_checksums.md5\n│   ├── [5.0M]  1B2.cov_refs.gtf\n│   ├── [ 34M]  1B2.gtf\n│   ├── [ 449]  1B2-hisat2_output.flagstat\n│   ├── [ 638]  1B2_hisat2.stats\n│   ├── [1.7G]  1B2.sorted.bam\n│   ├── [814K]  1B2.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [2.0G]  1B5\n│   ├── [ 553]  1B5_checksums.md5\n│   ├── [7.8M]  1B5.cov_refs.gtf\n│   ├── [ 34M]  1B5.gtf\n│   ├── [ 450]  1B5-hisat2_output.flagstat\n│   ├── [ 637]  1B5_hisat2.stats\n│   ├── [1.9G]  1B5.sorted.bam\n│   ├── [919K]  1B5.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [2.0G]  1B9\n│   ├── [ 553]  1B9_checksums.md5\n│   ├── [3.8M]  1B9.cov_refs.gtf\n│   ├── [ 34M]  1B9.gtf\n│   ├── [ 449]  1B9-hisat2_output.flagstat\n│   ├── [ 640]  1B9_hisat2.stats\n│   ├── [1.9G]  1B9.sorted.bam\n│   ├── [832K]  1B9.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.5G]  1C10\n│   ├── [ 559]  1C10_checksums.md5\n│   ├── [4.0M]  1C10.cov_refs.gtf\n│   ├── [ 34M]  1C10.gtf\n│   ├── [ 449]  1C10-hisat2_output.flagstat\n│   ├── [ 636]  1C10_hisat2.stats\n│   ├── [1.4G]  1C10.sorted.bam\n│   ├── [714K]  1C10.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.8G]  1C4\n│   ├── [ 553]  1C4_checksums.md5\n│   ├── [6.8M]  1C4.cov_refs.gtf\n│   ├── [ 34M]  1C4.gtf\n│   ├── [ 450]  1C4-hisat2_output.flagstat\n│   ├── [ 638]  1C4_hisat2.stats\n│   ├── [1.8G]  1C4.sorted.bam\n│   ├── [837K]  1C4.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.9G]  1D10\n│   ├── [ 559]  1D10_checksums.md5\n│   ├── [6.3M]  1D10.cov_refs.gtf\n│   ├── [ 34M]  1D10.gtf\n│   ├── [ 450]  1D10-hisat2_output.flagstat\n│   ├── [ 637]  1D10_hisat2.stats\n│   ├── [1.8G]  1D10.sorted.bam\n│   ├── [848K]  1D10.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.4G]  1D3\n│   ├── [ 553]  1D3_checksums.md5\n│   ├── [4.1M]  1D3.cov_refs.gtf\n│   ├── [ 34M]  1D3.gtf\n│   ├── [ 449]  1D3-hisat2_output.flagstat\n│   ├── [ 636]  1D3_hisat2.stats\n│   ├── [1.3G]  1D3.sorted.bam\n│   ├── [713K]  1D3.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [2.0G]  1D4\n│   ├── [ 553]  1D4_checksums.md5\n│   ├── [4.5M]  1D4.cov_refs.gtf\n│   ├── [ 34M]  1D4.gtf\n│   ├── [ 449]  1D4-hisat2_output.flagstat\n│   ├── [ 638]  1D4_hisat2.stats\n│   ├── [1.9G]  1D4.sorted.bam\n│   ├── [884K]  1D4.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.6G]  1D6\n│   ├── [ 553]  1D6_checksums.md5\n│   ├── [6.8M]  1D6.cov_refs.gtf\n│   ├── [ 34M]  1D6.gtf\n│   ├── [ 449]  1D6-hisat2_output.flagstat\n│   ├── [ 637]  1D6_hisat2.stats\n│   ├── [1.6G]  1D6.sorted.bam\n│   ├── [778K]  1D6.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.5G]  1D8\n│   ├── [ 553]  1D8_checksums.md5\n│   ├── [5.6M]  1D8.cov_refs.gtf\n│   ├── [ 34M]  1D8.gtf\n│   ├── [ 449]  1D8-hisat2_output.flagstat\n│   ├── [ 637]  1D8_hisat2.stats\n│   ├── [1.4G]  1D8.sorted.bam\n│   ├── [688K]  1D8.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.9G]  1D9\n│   ├── [ 553]  1D9_checksums.md5\n│   ├── [2.4M]  1D9.cov_refs.gtf\n│   ├── [ 34M]  1D9.gtf\n│   ├── [ 449]  1D9-hisat2_output.flagstat\n│   ├── [ 640]  1D9_hisat2.stats\n│   ├── [1.8G]  1D9.sorted.bam\n│   ├── [799K]  1D9.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [2.0G]  1E1\n│   ├── [ 553]  1E1_checksums.md5\n│   ├── [5.6M]  1E1.cov_refs.gtf\n│   ├── [ 34M]  1E1.gtf\n│   ├── [ 450]  1E1-hisat2_output.flagstat\n│   ├── [ 638]  1E1_hisat2.stats\n│   ├── [1.9G]  1E1.sorted.bam\n│   ├── [919K]  1E1.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 420]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.6G]  1E3\n│   ├── [ 553]  1E3_checksums.md5\n│   ├── [7.4M]  1E3.cov_refs.gtf\n│   ├── [ 34M]  1E3.gtf\n│   ├── [ 449]  1E3-hisat2_output.flagstat\n│   ├── [ 637]  1E3_hisat2.stats\n│   ├── [1.6G]  1E3.sorted.bam\n│   ├── [783K]  1E3.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.6G]  1E5\n│   ├── [ 553]  1E5_checksums.md5\n│   ├── [6.2M]  1E5.cov_refs.gtf\n│   ├── [ 34M]  1E5.gtf\n│   ├── [ 449]  1E5-hisat2_output.flagstat\n│   ├── [ 637]  1E5_hisat2.stats\n│   ├── [1.5G]  1E5.sorted.bam\n│   ├── [822K]  1E5.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.8G]  1E9\n│   ├── [ 553]  1E9_checksums.md5\n│   ├── [4.4M]  1E9.cov_refs.gtf\n│   ├── [ 34M]  1E9.gtf\n│   ├── [ 449]  1E9-hisat2_output.flagstat\n│   ├── [ 638]  1E9_hisat2.stats\n│   ├── [1.8G]  1E9.sorted.bam\n│   ├── [814K]  1E9.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.6G]  1F11\n│   ├── [ 559]  1F11_checksums.md5\n│   ├── [7.9M]  1F11.cov_refs.gtf\n│   ├── [ 34M]  1F11.gtf\n│   ├── [ 449]  1F11-hisat2_output.flagstat\n│   ├── [ 636]  1F11_hisat2.stats\n│   ├── [1.5G]  1F11.sorted.bam\n│   ├── [745K]  1F11.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.6G]  1F4\n│   ├── [ 553]  1F4_checksums.md5\n│   ├── [7.9M]  1F4.cov_refs.gtf\n│   ├── [ 34M]  1F4.gtf\n│   ├── [ 449]  1F4-hisat2_output.flagstat\n│   ├── [ 637]  1F4_hisat2.stats\n│   ├── [1.5G]  1F4.sorted.bam\n│   ├── [786K]  1F4.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.8G]  1F8\n│   ├── [ 553]  1F8_checksums.md5\n│   ├── [2.9M]  1F8.cov_refs.gtf\n│   ├── [ 34M]  1F8.gtf\n│   ├── [ 449]  1F8-hisat2_output.flagstat\n│   ├── [ 640]  1F8_hisat2.stats\n│   ├── [1.8G]  1F8.sorted.bam\n│   ├── [784K]  1F8.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [2.1G]  1G5\n│   ├── [ 553]  1G5_checksums.md5\n│   ├── [8.5M]  1G5.cov_refs.gtf\n│   ├── [ 34M]  1G5.gtf\n│   ├── [ 450]  1G5-hisat2_output.flagstat\n│   ├── [ 638]  1G5_hisat2.stats\n│   ├── [2.0G]  1G5.sorted.bam\n│   ├── [988K]  1G5.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.6G]  1H11\n│   ├── [ 559]  1H11_checksums.md5\n│   ├── [8.3M]  1H11.cov_refs.gtf\n│   ├── [ 34M]  1H11.gtf\n│   ├── [ 449]  1H11-hisat2_output.flagstat\n│   ├── [ 636]  1H11_hisat2.stats\n│   ├── [1.5G]  1H11.sorted.bam\n│   ├── [778K]  1H11.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   └── [3.7M]  t_data.ctab\n├── [1.3G]  1H12\n│   ├── [ 559]  1H12_checksums.md5\n│   ├── [3.5M]  1H12.cov_refs.gtf\n│   ├── [ 34M]  1H12.gtf\n│   ├── [ 449]  1H12-hisat2_output.flagstat\n│   ├── [ 636]  1H12_hisat2.stats\n│   ├── [1.3G]  1H12.sorted.bam\n│   ├── [698K]  1H12.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.8G]  1H6\n│   ├── [ 553]  1H6_checksums.md5\n│   ├── [2.9M]  1H6.cov_refs.gtf\n│   ├── [ 34M]  1H6.gtf\n│   ├── [ 449]  1H6-hisat2_output.flagstat\n│   ├── [ 640]  1H6_hisat2.stats\n│   ├── [1.8G]  1H6.sorted.bam\n│   ├── [784K]  1H6.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   └── [3.7M]  t_data.ctab\n├── [1.5G]  1H7\n│   ├── [ 553]  1H7_checksums.md5\n│   ├── [7.4M]  1H7.cov_refs.gtf\n│   ├── [ 34M]  1H7.gtf\n│   ├── [ 449]  1H7-hisat2_output.flagstat\n│   ├── [ 637]  1H7_hisat2.stats\n│   ├── [1.5G]  1H7.sorted.bam\n│   ├── [780K]  1H7.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.6G]  1H8\n│   ├── [ 553]  1H8_checksums.md5\n│   ├── [6.6M]  1H8.cov_refs.gtf\n│   ├── [ 34M]  1H8.gtf\n│   ├── [ 449]  1H8-hisat2_output.flagstat\n│   ├── [ 637]  1H8_hisat2.stats\n│   ├── [1.6G]  1H8.sorted.bam\n│   ├── [791K]  1H8.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [2.1G]  2B2\n│   ├── [ 553]  2B2_checksums.md5\n│   ├── [5.3M]  2B2.cov_refs.gtf\n│   ├── [ 34M]  2B2.gtf\n│   ├── [ 450]  2B2-hisat2_output.flagstat\n│   ├── [ 639]  2B2_hisat2.stats\n│   ├── [2.0G]  2B2.sorted.bam\n│   ├── [961K]  2B2.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.8G]  2B3\n│   ├── [ 553]  2B3_checksums.md5\n│   ├── [8.2M]  2B3.cov_refs.gtf\n│   ├── [ 34M]  2B3.gtf\n│   ├── [ 449]  2B3-hisat2_output.flagstat\n│   ├── [ 638]  2B3_hisat2.stats\n│   ├── [1.7G]  2B3.sorted.bam\n│   ├── [818K]  2B3.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.8G]  2C1\n│   ├── [ 553]  2C1_checksums.md5\n│   ├── [4.0M]  2C1.cov_refs.gtf\n│   ├── [ 34M]  2C1.gtf\n│   ├── [ 448]  2C1-hisat2_output.flagstat\n│   ├── [ 638]  2C1_hisat2.stats\n│   ├── [1.7G]  2C1.sorted.bam\n│   ├── [636K]  2C1.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.6G]  2C2\n│   ├── [ 553]  2C2_checksums.md5\n│   ├── [7.6M]  2C2.cov_refs.gtf\n│   ├── [ 34M]  2C2.gtf\n│   ├── [ 450]  2C2-hisat2_output.flagstat\n│   ├── [ 637]  2C2_hisat2.stats\n│   ├── [1.5G]  2C2.sorted.bam\n│   ├── [794K]  2C2.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [2.0G]  2D2\n│   ├── [ 553]  2D2_checksums.md5\n│   ├── [2.9M]  2D2.cov_refs.gtf\n│   ├── [ 34M]  2D2.gtf\n│   ├── [ 449]  2D2-hisat2_output.flagstat\n│   ├── [ 640]  2D2_hisat2.stats\n│   ├── [1.9G]  2D2.sorted.bam\n│   ├── [795K]  2D2.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.4G]  2E2\n│   ├── [ 553]  2E2_checksums.md5\n│   ├── [2.2M]  2E2.cov_refs.gtf\n│   ├── [ 33M]  2E2.gtf\n│   ├── [ 449]  2E2-hisat2_output.flagstat\n│   ├── [ 639]  2E2_hisat2.stats\n│   ├── [1.4G]  2E2.sorted.bam\n│   ├── [632K]  2E2.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [2.6G]  2F1\n│   ├── [ 553]  2F1_checksums.md5\n│   ├── [2.9M]  2F1.cov_refs.gtf\n│   ├── [ 34M]  2F1.gtf\n│   ├── [ 451]  2F1-hisat2_output.flagstat\n│   ├── [ 642]  2F1_hisat2.stats\n│   ├── [2.5G]  2F1.sorted.bam\n│   ├── [980K]  2F1.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.6G]  2G1\n│   ├── [ 553]  2G1_checksums.md5\n│   ├── [6.1M]  2G1.cov_refs.gtf\n│   ├── [ 34M]  2G1.gtf\n│   ├── [ 449]  2G1-hisat2_output.flagstat\n│   ├── [ 637]  2G1_hisat2.stats\n│   ├── [1.6G]  2G1.sorted.bam\n│   ├── [724K]  2G1.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [ 35M]  Apulchra-genome.stringtie.gtf\n├── [5.1M]  apul-gene_count_matrix.csv\n├── [5.2M]  apul-transcript_count_matrix.csv\n├── [ 587]  checksums.md5\n├── [5.1K]  gtf_list.txt\n├── [306K]  multiqc_data\n│   ├── [5.0K]  multiqc_bowtie2.txt\n│   ├── [ 307]  multiqc_citations.txt\n│   ├── [268K]  multiqc_data.json\n│   ├── [2.7K]  multiqc_general_stats.txt\n│   ├── [4.1K]  multiqc.log\n│   ├── [7.7K]  multiqc_samtools_flagstat.txt\n│   └── [ 14K]  multiqc_sources.txt\n├── [1.1M]  multiqc_report.html\n├── [5.2K]  prepDE-sample_list.txt\n├── [ 856]  sorted_bams.list\n├── [ 64G]  sorted-bams-merged.bam\n└── [ 13M]  sorted-bams-merged.bam.bai\n\n 135G used in 41 directories, 535 files\n```\n\n## 3.2 MultiQC alignment rates\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Change to ouput directory\ncd \"${output_dir_top}\"\n\n${programs_array[multiqc]} .\n```\n\n# 4 Merge sorted BAMs\n\nMerge all BAMs to singular BAM for use in transcriptome assembly later, if needed.\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Change to ouput directory\ncd \"${output_dir_top}\"\n\n\n## Create list of sorted BAMs for merging\nfind . -name \"*sorted.bam\" > sorted_bams.list\n\n## Merge sorted BAMs\n${programs_array[samtools]} merge \\\n-b sorted_bams.list \\\n${merged_bam} \\\n--threads ${threads}\n\n## Index merged BAM\n${programs_array[samtools]} index ${merged_bam}\n```\n\n# 5 Create combined GTF\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Change to ouput directory\ncd \"${output_dir_top}\"\n\n\n# Create singular transcript file, using GTF list file\n\"${programs_array[stringtie]}\" --merge \\\n\"${gtf_list}\" \\\n-p \"${threads}\" \\\n-G \"${genome_gff}\" \\\n-o \"${genome_index_name}\".stringtie.gtf\n```\n\n# 6 Create DESeq2 Count Matrices\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Change to ouput directory\ncd \"${output_dir_top}\"\n\n# Create file list for prepDE.py\nwhile read -r line\ndo\n  sample_no_path=${line##*/}\n  sample=${sample_no_path%.*}\n  echo ${sample} ${line}\ndone < gtf_list.txt >> prepDE-sample_list.txt\n\n# Create count matrices for genes and transcripts\n# Compatible with import to DESeq2\npython3 \"${programs_array[prepDE]}\" \\\n--input=prepDE-sample_list.txt \\\n-g apul-gene_count_matrix.csv \\\n-t apul-transcript_count_matrix.csv \\\n--length=${read_length}\n```\n\n# 7 Generate checksums\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Change to ouput directory\ncd \"${output_dir_top}\"\n\n# Uses find command to avoid passing\n# directory names to the md5sum command.\nfind . -maxdepth 1 -type f -exec md5sum {} + \\\n| tee --append checksums.md5\n```\n","srcMarkdownNoYaml":"\n\n::: callout-note\nThis notebook entry is knitted from [`urol-e5/timeseries_molecular/D-Apul/code/02.20-D-Apul-RNAseq-alignment-HiSat2.Rmd`](https://github.com/urol-e5/timeseries_molecular/blob/0f801c0bd0e66eb33aeb8597fe759be44011d1b8/D-Apul/code/02.20-D-Apul-RNAseq-alignment-HiSat2.Rmd) (GitHub), commit `0f801c0`.\n:::\n\n# 1 INTRODUCTION\n\nThis notebook will align trimmed *A.pulchra* RNA-seq data to the *A.pulchra* genome using [HISAT2](https://github.com/DaehwanKimLab/hisat2) [@kim2019]. Follwed by [StringTie](https://ccb.jhu.edu/software/stringtie/index.shtml?t=manual) [@pertea2016; @pertea2015] for transcript assembly/identification and count matrices for downstream expression analysis with [DESeq2](https://github.com/thelovelab/DESeq2) and/or [Ballgown](https://github.com/alyssafrazee/ballgown).\n\nSince the BAM files produced by this notebook are too large for GitHub, they can be accessed on our server here:\n\n<https://gannet.fish.washington.edu/Atumefaciens/gitrepos/urol-e5/timeseries_molecular/D-Apul/output/02.20-D-Apul-RNAseq-alignment-HiSat2/>\n\nInput(s)\n\n-   Trimmed FastQ files, with format: `*fastp-trim.fq.gz`\n-   HISAT2 genome index: `Apulcrha-genome`\n-   Genome GTF: `Apulchra-genome.gtf`\n-   Sample metadata: `M-multi-species/data/rna_metadata.csv`\n\nOutputs:\n\n- Primary:\n  \n  - `checksums.md5`: MD5 checksum for all files in this directory. Excludes subdirectories.\n  \n  - `apul-gene_count_matrix.csv`: Gene count matrix for use in [DESeq2](https://github.com/thelovelab/DESeq2).\n  \n  - `apul-transcript_count_matrix.csv`: Transcript count matrix for use in [DESeq2](https://github.com/thelovelab/DESeq2). \n  \n  - `prepDE-sample_list.txt`: Sample file list provided as input to StringTie for DESeq2 count matrix generation. Also serves as documentation of which files were used   for this step. \n  \n  - `Apulchra-genome.stringtie.gtf`: Canonical StringTie GTF file compiled from all individual sample GTFs. \n  \n  - `sorted-bams-merged.bam`: Merged (and sorted) BAM consisting of all individual sample BAMs. \n  \n  - `sorted-bams-merged.bam.bai`: BAM index file. Useful for visualizing assemblies in IGV. \n  \n  - `sorted_bams.list`: List file needed for merging of BAMS with samtools. Also serves as documentation of which files were used for this step. \n  \n  - `multiqc_report.html`: MultiQC report aggregating all individual HISAT2 alignment stats and samtools flagstats. \n  \n  \n  - `gtf_list.txt`: List file needed for merging of GTF files with StringTie. Also serves as documentation of which files were used for this step. \n- Individuals: Each subdirectory is labelled based on sample name and each contains individual HISAT2 alignment and StringTie output files. \n  \n  - `<sample_name>_checksums.md5`: MD5 checksums for all files in the directory. \n  \n  - `*.ctab`: Data tables formatted for import into Ballgown. \n  \n  - `<sample_name>.cov_refs.gtf`: StringTie genome reference sequnce coverage GTF. \n  \n  - `<sample_name>.gtf`: StringTie GTF. \n  \n  - `<sample_name>.sorted.bam`: HISAT2 assembly BAM. \n  \n  - `<sample_name>.sorted.bam.bai`: BAM index file. Useful for visualizing assemblies in IGV. \n  \n  - `<sample_name>-hisat2_output.flagstat`: samtools flagstat output file. \n  \n  - `<sample_name>_hisat2.stats`: HISAT2 assembly stats. \n  \n  - `input_fastqs_checksums.md5`: MD5 checksums of files used as input for assembly. Primarily serves as documentation to track/verify which files were actually used.\n\n# 2 Create a Bash variables file\n\nThis allows usage of Bash variables across R Markdown chunks.\n\n``` bash\n{\necho \"#### Assign Variables ####\"\necho \"\"\n\necho \"# Data directories\"\necho 'export timeseries_dir=/home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular'\necho 'export genome_dir=\"${timeseries_dir}/D-Apul/data\"'\necho 'export genome_index_dir=\"${timeseries_dir}/D-Apul/output/02.10-D-Apul-RNAseq-genome-index-HiSat2\"'\necho 'export output_dir_top=\"${timeseries_dir}/D-Apul/output/02.20-D-Apul-RNAseq-alignment-HiSat2\"'\necho 'export trimmed_fastqs_dir=\"${timeseries_dir}/D-Apul/output/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC/trimmed-fastqs\"'\necho 'export trimmed_reads_url=\"https://gannet.fish.washington.edu/Atumefaciens/gitrepos/urol-e5/timeseries_molecular/D-Apul/output/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC/trimmed-fastqs/\"'\necho \"\"\n\necho \"# Location of Hisat2 index files\"\necho \"# Must keep variable name formatting, as it's used by HiSat2\"\necho 'export HISAT2_INDEXES=\"${genome_index_dir}\"'\n\n\necho \"# Input files\"\necho 'export exons=\"${output_dir_top}/Apulchra-genome_hisat2_exons.tab\"'\necho 'export genome_index_name=\"Apulchra-genome\"'\necho 'export genome_gff=\"${genome_dir}/Apulchra-genome.gff\"'\necho 'export genome_fasta=\"${genome_dir}/Apulchra-genome.fa\"'\necho 'export splice_sites=\"${output_dir_top}/Apulchra-genome_hisat2_splice_sites.tab\"'\necho 'export transcripts_gtf=\"${genome_dir}/Apulchra-genome.gtf\"'\n\necho \"# Output files\"\necho 'export gtf_list=\"${output_dir_top}/gtf_list.txt\"'\necho 'export merged_bam=\"${output_dir_top}/sorted-bams-merged.bam\"'\necho \"\"\n\necho \"# Paths to programs\"\necho 'export programs_dir=\"/home/shared\"'\necho 'export hisat2_dir=\"${programs_dir}/hisat2-2.2.1\"'\n\necho 'export hisat2=\"${hisat2_dir}/hisat2\"'\n\necho 'export multiqc=/home/sam/programs/mambaforge/bin/multiqc'\n\necho 'export samtools=\"${programs_dir}/samtools-1.12/samtools\"'\n\necho 'export prepDE=\"${programs_dir}/stringtie-2.2.1.Linux_x86_64/prepDE.py3\"'\necho 'export stringtie=\"${programs_dir}/stringtie-2.2.1.Linux_x86_64/stringtie\"'\n\necho \"\"\n\necho \"# Set FastQ filename patterns\"\necho \"export R1_fastq_pattern='*_R1_*.fq.gz'\"\necho \"export R2_fastq_pattern='*_R2_*.fq.gz'\"\necho \"export trimmed_fastq_pattern='*fastp-trim.fq.gz'\"\necho \"\"\n\necho \"# Set number of CPUs to use\"\necho 'export threads=40'\necho \"\"\n\necho \"# Set average read length - for StringTie prepDE.py\"\necho 'export read_length=125'\necho \"\"\n\n\necho \"## Initialize arrays\"\necho 'export fastq_array_R1=()'\necho 'export fastq_array_R2=()'\necho 'export R1_names_array=()'\necho 'export R2_names_array=()'\necho \"declare -A sample_timepoint_map\"\necho \"\"\n\necho \"# Programs associative array\"\necho \"declare -A programs_array\"\necho \"programs_array=(\"\necho '[hisat2]=\"${hisat2}\" \\'\necho '[multiqc]=\"${multiqc}\" \\'\necho '[prepDE]=\"${prepDE}\" \\'\necho '[samtools]=\"${samtools}\" \\'\necho '[stringtie]=\"${stringtie}\" \\'\necho \")\"\necho \"\"\n\necho \"# Print formatting\"\necho 'export line=\"--------------------------------------------------------\"'\necho \"\"\n} > .bashvars\n\ncat .bashvars\n```\n\n```         \n#### Assign Variables ####\n\n# Data directories\nexport timeseries_dir=/home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular\nexport genome_dir=\"${timeseries_dir}/D-Apul/data\"\nexport genome_index_dir=\"${timeseries_dir}/D-Apul/output/02.10-D-Apul-RNAseq-genome-index-HiSat2\"\nexport output_dir_top=\"${timeseries_dir}/D-Apul/output/02.20-D-Apul-RNAseq-alignment-HiSat2\"\nexport trimmed_fastqs_dir=\"${timeseries_dir}/D-Apul/output/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC/trimmed-fastqs\"\nexport trimmed_reads_url=\"https://gannet.fish.washington.edu/Atumefaciens/gitrepos/urol-e5/timeseries_molecular/D-Apul/output/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC/trimmed-fastqs/\"\n\n# Location of Hisat2 index files\n# Must keep variable name formatting, as it's used by HiSat2\nexport HISAT2_INDEXES=\"${genome_index_dir}\"\n# Input files\nexport exons=\"${output_dir_top}/Apulchra-genome_hisat2_exons.tab\"\nexport genome_index_name=\"Apulchra-genome\"\nexport genome_gff=\"${genome_dir}/Apulchra-genome.gff\"\nexport genome_fasta=\"${genome_dir}/Apulchra-genome.fa\"\nexport splice_sites=\"${output_dir_top}/Apulchra-genome_hisat2_splice_sites.tab\"\nexport transcripts_gtf=\"${genome_dir}/Apulchra-genome.gtf\"\n# Output files\nexport gtf_list=\"${output_dir_top}/gtf_list.txt\"\nexport merged_bam=\"${output_dir_top}/sorted-bams-merged.bam\"\n\n# Paths to programs\nexport programs_dir=\"/home/shared\"\nexport hisat2_dir=\"${programs_dir}/hisat2-2.2.1\"\nexport hisat2=\"${hisat2_dir}/hisat2\"\nexport multiqc=/home/sam/programs/mambaforge/bin/multiqc\nexport samtools=\"${programs_dir}/samtools-1.12/samtools\"\nexport prepDE=\"${programs_dir}/stringtie-2.2.1.Linux_x86_64/prepDE.py3\"\nexport stringtie=\"${programs_dir}/stringtie-2.2.1.Linux_x86_64/stringtie\"\n\n# Set FastQ filename patterns\nexport R1_fastq_pattern='*_R1_*.fq.gz'\nexport R2_fastq_pattern='*_R2_*.fq.gz'\nexport trimmed_fastq_pattern='*fastp-trim.fq.gz'\n\n# Set number of CPUs to use\nexport threads=40\n\n# Set average read length - for StringTie prepDE.py\nexport read_length=125\n\n## Initialize arrays\nexport fastq_array_R1=()\nexport fastq_array_R2=()\nexport R1_names_array=()\nexport R2_names_array=()\ndeclare -A sample_timepoint_map\n\n# Programs associative array\ndeclare -A programs_array\nprograms_array=(\n[hisat2]=\"${hisat2}\" \\\n[multiqc]=\"${multiqc}\" \\\n[prepDE]=\"${prepDE}\" \\\n[samtools]=\"${samtools}\" \\\n[stringtie]=\"${stringtie}\" \\\n)\n\n# Print formatting\nexport line=\"--------------------------------------------------------\"\n```\n\nIf needed, download raw RNA-seq.\n\nChange `eval=FALSE` to `eval=TRUE` to execute the next two chunks to download RNA-seq and then verify MD5 checksums.\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Make output directory if it doesn't exist\nmkdir --parents ${trimmed_fastqs_dir}\n\n# Run wget to retrieve FastQs and MD5 files\nwget \\\n--directory-prefix ${trimmed_fastqs_dir} \\\n--recursive \\\n--no-check-certificate \\\n--continue \\\n--cut-dirs 3 \\\n--no-host-directories \\\n--no-parent \\\n--quiet \\\n--accept=\"*fastp-trim*, *.md5\"\n${trimmed_reads_url}\n\nls -lh \"${trimmed_fastqs_dir}\"\n```\n\nVerify raw read checksums\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\ncd \"${trimmed_fastqs_dir}\"\n\n# Verify checksums\nfor file in *.md5\ndo\n  md5sum --check \"${file}\"\ndone\n```\n\n# 3 Align reads using HISAT2\n\nThis requires usage of the `rna_metadata.csv`\n\nThis step has a lengthy, semi-complex workflow:\n\n1.  Parse `rna_metadata.csv` for *A.pulchra* sample names and time point. This info will be used for downstream file naming and to assing the time point to the read group (`SM:`) in the alignment file.\n2.  Loop through all samples and perform individual alignments using HISAT2.\n3.  HISAT2 output is piped to through multiple samtools tools: flagstat (stats aggregation), sort (creates/sorts BAM), index (creates BAM index). Piping saves time and disk space, by avoiding the generation of large SAM files.\n4.  Loop continues and runs StringTie on sorted BAM file to produce individual GTF file.\n5.  Loop continues and adds GTF path/filename to a list file, which will be used downstream.\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Make output directories, if they don't exist\nmkdir --parents \"${output_dir_top}\"\n\n# Change to ouput directory\ncd \"${output_dir_top}\"\n\n# Create associative array with sample and timepoint\nmetadata=\"../../../M-multi-species/data/rna_metadata.csv\"\n\n# Declare the array\ndeclare -A sample_timepoint_map\n\n# Read the metadata file line by line\nwhile IFS=',' read -r sample_number sample_name plate well_number azenta_sample_name colony_id timepoint sample_type species_strain SampleBuffer; do\n    # Check if the species is \"Acropora pulchra\"\n    if [[ \"${species_strain}\" == \"Acropora pulchra\" ]]; then\n        # Add the Azenta sample name as the key and Timepoint as the value in the associative array\n        sample_timepoint_map[\"${azenta_sample_name}\"]=\"${timepoint}\"\n    fi\ndone < <(tail -n +2 \"${metadata}\") # Skip the header\n\n## Populate trimmed reads arrays\nfastq_array_R1=(\"${trimmed_fastqs_dir}\"/${R1_fastq_pattern})\nfastq_array_R2=(\"${trimmed_fastqs_dir}\"/${R2_fastq_pattern})\n\n############## BEGIN HISAT2 ALIGNMENTS ##############\nfor sample in \"${!sample_timepoint_map[@]}\"\ndo\n\n\n  # Create and switch to dedicated sample directory\n  mkdir --parents \"${sample}\" && cd \"$_\"\n\n  # Create HISAT2 list of fastq R1 files\n  # and generated MD5 checksums file.\n  for fastq in \"${fastq_array_R1[@]}\"\n  do\n    # Parse sample name from FastQ filename\n    fastq_sample=$(echo \"${fastq##*/}\" | awk -F\"[_-]\" '{print $3}')\n    \n    # Process matching FastQ file, based on sample name\n    if [ \"${fastq_sample}\" == \"${sample}\" ]; then\n      \n      # Generate checksum/list of input files used\n      md5sum \"${fastq}\" >> input_fastqs_checksums.md5\n      \n      # Create comma-separated lists of FastQs for HISAT2\n      printf -v joined_R1 '%s,' \"${fastq}\"\n      fastq_list_R1=$(echo \"${joined_R1%,}\")\n    fi\n  done\n\n  # Create HISAT2 list of fastq R1 files\n  # and generated MD5 checksums file.\n  for fastq in \"${fastq_array_R2[@]}\"\n  do\n    # Parse sample name from FastQ filename\n    fastq_sample=$(echo \"${fastq##*/}\" | awk -F\"[_-]\" '{print $3}')\n    \n    # Process matching FastQ file, based on sample name\n    if [ \"${fastq_sample}\" == \"${sample}\" ]; then\n      \n      # Generate checksum/list of input files used\n      md5sum \"${fastq}\" >> input_fastqs_checksums.md5\n\n      # Create comma-separated lists of FastQs for HISAT2\n      printf -v joined_R2 '%s,' \"${fastq}\"\n      fastq_list_R2=$(echo \"${joined_R2%,}\")\n    fi\n  done\n\n\n\n  # HISAT2 alignments\n  # Sets read group info (RG) using samples array\n  \"${programs_array[hisat2]}\" \\\n  -x \"${genome_index_name}\" \\\n  -1 \"${fastq_list_R1}\" \\\n  -2 \"${fastq_list_R2}\" \\\n  --threads \"${threads}\" \\\n  --rg-id \"${sample}\" \\\n  --rg \"SM:\"\"${sample_timepoint_map[$sample]}\" \\\n  2> \"${sample}\"_hisat2.stats \\\n  | tee >(${programs_array[samtools]} flagstat - > \"${sample}\"-hisat2_output.flagstat) \\\n  | ${programs_array[samtools]} sort - -@ \"${threads}\" -O BAM \\\n  | tee \"${sample}\".sorted.bam \\\n  | ${programs_array[samtools]} index - \"${sample}\".sorted.bam.bai\n  \n  \n  # Run stringtie on alignments\n  # Uses \"-B\" option to output tables intended for use in Ballgown\n  # Uses \"-e\" option; recommended when using \"-B\" option.\n  # Limits analysis to only reads alignments matching reference.\n  \"${programs_array[stringtie]}\" \"${sample}\".sorted.bam \\\n  -p \"${threads}\" \\\n  -o \"${sample}\".gtf \\\n  -G \"${genome_gff}\" \\\n  -C \"${sample}.cov_refs.gtf\" \\\n  -B \\\n  -e \n  \n  \n  # Add GTFs to list file, only if non-empty\n  # Identifies GTF files that only have header\n  gtf_lines=$(wc -l < \"${sample}\".gtf )\n  if [ \"${gtf_lines}\" -gt 2 ]; then\n    echo \"$(pwd)/${sample}.gtf\" >> \"${gtf_list}\"\n  fi \n\n  # Generate checksums\n  find ./ -type f -not -name \"*.md5\" -exec md5sum {} \\; > ${sample}_checksums.md5\n  # Move up to orig. working directory\n  cd ..\n\ndone\n```\n\n## 3.1 Review HISAT2 Output\n\nView the resulting directory structure of resulting from the HISAT2/StringTie process.\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Change to ouput directory\ncd \"${output_dir_top}\"\n\n# Display HISAT2 output directory structure\n# with directory (--du) and file sizes (-h)\ntree --du -h\n```\n\n```         \n.\n├── [1.8G]  1A1\n│   ├── [ 553]  1A1_checksums.md5\n│   ├── [4.8M]  1A1.cov_refs.gtf\n│   ├── [ 34M]  1A1.gtf\n│   ├── [ 451]  1A1-hisat2_output.flagstat\n│   ├── [ 637]  1A1_hisat2.stats\n│   ├── [1.7G]  1A1.sorted.bam\n│   ├── [936K]  1A1.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 420]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.8G]  1A10\n│   ├── [ 559]  1A10_checksums.md5\n│   ├── [3.5M]  1A10.cov_refs.gtf\n│   ├── [ 34M]  1A10.gtf\n│   ├── [ 449]  1A10-hisat2_output.flagstat\n│   ├── [ 638]  1A10_hisat2.stats\n│   ├── [1.8G]  1A10.sorted.bam\n│   ├── [779K]  1A10.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.6G]  1A12\n│   ├── [ 559]  1A12_checksums.md5\n│   ├── [8.3M]  1A12.cov_refs.gtf\n│   ├── [ 34M]  1A12.gtf\n│   ├── [ 449]  1A12-hisat2_output.flagstat\n│   ├── [ 636]  1A12_hisat2.stats\n│   ├── [1.5G]  1A12.sorted.bam\n│   ├── [777K]  1A12.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.8G]  1A2\n│   ├── [ 553]  1A2_checksums.md5\n│   ├── [3.1M]  1A2.cov_refs.gtf\n│   ├── [ 34M]  1A2.gtf\n│   ├── [ 449]  1A2-hisat2_output.flagstat\n│   ├── [ 640]  1A2_hisat2.stats\n│   ├── [1.7G]  1A2.sorted.bam\n│   ├── [864K]  1A2.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 420]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.5G]  1A8\n│   ├── [ 553]  1A8_checksums.md5\n│   ├── [6.9M]  1A8.cov_refs.gtf\n│   ├── [ 34M]  1A8.gtf\n│   ├── [ 449]  1A8-hisat2_output.flagstat\n│   ├── [ 637]  1A8_hisat2.stats\n│   ├── [1.5G]  1A8.sorted.bam\n│   ├── [789K]  1A8.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.9G]  1A9\n│   ├── [ 553]  1A9_checksums.md5\n│   ├── [7.2M]  1A9.cov_refs.gtf\n│   ├── [ 34M]  1A9.gtf\n│   ├── [ 450]  1A9-hisat2_output.flagstat\n│   ├── [ 638]  1A9_hisat2.stats\n│   ├── [1.9G]  1A9.sorted.bam\n│   ├── [795K]  1A9.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.8G]  1B1\n│   ├── [ 553]  1B1_checksums.md5\n│   ├── [6.9M]  1B1.cov_refs.gtf\n│   ├── [ 34M]  1B1.gtf\n│   ├── [ 449]  1B1-hisat2_output.flagstat\n│   ├── [ 638]  1B1_hisat2.stats\n│   ├── [1.8G]  1B1.sorted.bam\n│   ├── [824K]  1B1.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 420]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.8G]  1B10\n│   ├── [ 559]  1B10_checksums.md5\n│   ├── [7.0M]  1B10.cov_refs.gtf\n│   ├── [ 34M]  1B10.gtf\n│   ├── [ 449]  1B10-hisat2_output.flagstat\n│   ├── [ 637]  1B10_hisat2.stats\n│   ├── [1.7G]  1B10.sorted.bam\n│   ├── [819K]  1B10.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.8G]  1B2\n│   ├── [ 553]  1B2_checksums.md5\n│   ├── [5.0M]  1B2.cov_refs.gtf\n│   ├── [ 34M]  1B2.gtf\n│   ├── [ 449]  1B2-hisat2_output.flagstat\n│   ├── [ 638]  1B2_hisat2.stats\n│   ├── [1.7G]  1B2.sorted.bam\n│   ├── [814K]  1B2.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [2.0G]  1B5\n│   ├── [ 553]  1B5_checksums.md5\n│   ├── [7.8M]  1B5.cov_refs.gtf\n│   ├── [ 34M]  1B5.gtf\n│   ├── [ 450]  1B5-hisat2_output.flagstat\n│   ├── [ 637]  1B5_hisat2.stats\n│   ├── [1.9G]  1B5.sorted.bam\n│   ├── [919K]  1B5.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [2.0G]  1B9\n│   ├── [ 553]  1B9_checksums.md5\n│   ├── [3.8M]  1B9.cov_refs.gtf\n│   ├── [ 34M]  1B9.gtf\n│   ├── [ 449]  1B9-hisat2_output.flagstat\n│   ├── [ 640]  1B9_hisat2.stats\n│   ├── [1.9G]  1B9.sorted.bam\n│   ├── [832K]  1B9.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.5G]  1C10\n│   ├── [ 559]  1C10_checksums.md5\n│   ├── [4.0M]  1C10.cov_refs.gtf\n│   ├── [ 34M]  1C10.gtf\n│   ├── [ 449]  1C10-hisat2_output.flagstat\n│   ├── [ 636]  1C10_hisat2.stats\n│   ├── [1.4G]  1C10.sorted.bam\n│   ├── [714K]  1C10.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.8G]  1C4\n│   ├── [ 553]  1C4_checksums.md5\n│   ├── [6.8M]  1C4.cov_refs.gtf\n│   ├── [ 34M]  1C4.gtf\n│   ├── [ 450]  1C4-hisat2_output.flagstat\n│   ├── [ 638]  1C4_hisat2.stats\n│   ├── [1.8G]  1C4.sorted.bam\n│   ├── [837K]  1C4.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.9G]  1D10\n│   ├── [ 559]  1D10_checksums.md5\n│   ├── [6.3M]  1D10.cov_refs.gtf\n│   ├── [ 34M]  1D10.gtf\n│   ├── [ 450]  1D10-hisat2_output.flagstat\n│   ├── [ 637]  1D10_hisat2.stats\n│   ├── [1.8G]  1D10.sorted.bam\n│   ├── [848K]  1D10.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.4G]  1D3\n│   ├── [ 553]  1D3_checksums.md5\n│   ├── [4.1M]  1D3.cov_refs.gtf\n│   ├── [ 34M]  1D3.gtf\n│   ├── [ 449]  1D3-hisat2_output.flagstat\n│   ├── [ 636]  1D3_hisat2.stats\n│   ├── [1.3G]  1D3.sorted.bam\n│   ├── [713K]  1D3.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [2.0G]  1D4\n│   ├── [ 553]  1D4_checksums.md5\n│   ├── [4.5M]  1D4.cov_refs.gtf\n│   ├── [ 34M]  1D4.gtf\n│   ├── [ 449]  1D4-hisat2_output.flagstat\n│   ├── [ 638]  1D4_hisat2.stats\n│   ├── [1.9G]  1D4.sorted.bam\n│   ├── [884K]  1D4.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.6G]  1D6\n│   ├── [ 553]  1D6_checksums.md5\n│   ├── [6.8M]  1D6.cov_refs.gtf\n│   ├── [ 34M]  1D6.gtf\n│   ├── [ 449]  1D6-hisat2_output.flagstat\n│   ├── [ 637]  1D6_hisat2.stats\n│   ├── [1.6G]  1D6.sorted.bam\n│   ├── [778K]  1D6.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.5G]  1D8\n│   ├── [ 553]  1D8_checksums.md5\n│   ├── [5.6M]  1D8.cov_refs.gtf\n│   ├── [ 34M]  1D8.gtf\n│   ├── [ 449]  1D8-hisat2_output.flagstat\n│   ├── [ 637]  1D8_hisat2.stats\n│   ├── [1.4G]  1D8.sorted.bam\n│   ├── [688K]  1D8.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.9G]  1D9\n│   ├── [ 553]  1D9_checksums.md5\n│   ├── [2.4M]  1D9.cov_refs.gtf\n│   ├── [ 34M]  1D9.gtf\n│   ├── [ 449]  1D9-hisat2_output.flagstat\n│   ├── [ 640]  1D9_hisat2.stats\n│   ├── [1.8G]  1D9.sorted.bam\n│   ├── [799K]  1D9.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [2.0G]  1E1\n│   ├── [ 553]  1E1_checksums.md5\n│   ├── [5.6M]  1E1.cov_refs.gtf\n│   ├── [ 34M]  1E1.gtf\n│   ├── [ 450]  1E1-hisat2_output.flagstat\n│   ├── [ 638]  1E1_hisat2.stats\n│   ├── [1.9G]  1E1.sorted.bam\n│   ├── [919K]  1E1.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 420]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.6G]  1E3\n│   ├── [ 553]  1E3_checksums.md5\n│   ├── [7.4M]  1E3.cov_refs.gtf\n│   ├── [ 34M]  1E3.gtf\n│   ├── [ 449]  1E3-hisat2_output.flagstat\n│   ├── [ 637]  1E3_hisat2.stats\n│   ├── [1.6G]  1E3.sorted.bam\n│   ├── [783K]  1E3.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.6G]  1E5\n│   ├── [ 553]  1E5_checksums.md5\n│   ├── [6.2M]  1E5.cov_refs.gtf\n│   ├── [ 34M]  1E5.gtf\n│   ├── [ 449]  1E5-hisat2_output.flagstat\n│   ├── [ 637]  1E5_hisat2.stats\n│   ├── [1.5G]  1E5.sorted.bam\n│   ├── [822K]  1E5.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.8G]  1E9\n│   ├── [ 553]  1E9_checksums.md5\n│   ├── [4.4M]  1E9.cov_refs.gtf\n│   ├── [ 34M]  1E9.gtf\n│   ├── [ 449]  1E9-hisat2_output.flagstat\n│   ├── [ 638]  1E9_hisat2.stats\n│   ├── [1.8G]  1E9.sorted.bam\n│   ├── [814K]  1E9.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.6G]  1F11\n│   ├── [ 559]  1F11_checksums.md5\n│   ├── [7.9M]  1F11.cov_refs.gtf\n│   ├── [ 34M]  1F11.gtf\n│   ├── [ 449]  1F11-hisat2_output.flagstat\n│   ├── [ 636]  1F11_hisat2.stats\n│   ├── [1.5G]  1F11.sorted.bam\n│   ├── [745K]  1F11.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.6G]  1F4\n│   ├── [ 553]  1F4_checksums.md5\n│   ├── [7.9M]  1F4.cov_refs.gtf\n│   ├── [ 34M]  1F4.gtf\n│   ├── [ 449]  1F4-hisat2_output.flagstat\n│   ├── [ 637]  1F4_hisat2.stats\n│   ├── [1.5G]  1F4.sorted.bam\n│   ├── [786K]  1F4.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.8G]  1F8\n│   ├── [ 553]  1F8_checksums.md5\n│   ├── [2.9M]  1F8.cov_refs.gtf\n│   ├── [ 34M]  1F8.gtf\n│   ├── [ 449]  1F8-hisat2_output.flagstat\n│   ├── [ 640]  1F8_hisat2.stats\n│   ├── [1.8G]  1F8.sorted.bam\n│   ├── [784K]  1F8.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [2.1G]  1G5\n│   ├── [ 553]  1G5_checksums.md5\n│   ├── [8.5M]  1G5.cov_refs.gtf\n│   ├── [ 34M]  1G5.gtf\n│   ├── [ 450]  1G5-hisat2_output.flagstat\n│   ├── [ 638]  1G5_hisat2.stats\n│   ├── [2.0G]  1G5.sorted.bam\n│   ├── [988K]  1G5.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.6G]  1H11\n│   ├── [ 559]  1H11_checksums.md5\n│   ├── [8.3M]  1H11.cov_refs.gtf\n│   ├── [ 34M]  1H11.gtf\n│   ├── [ 449]  1H11-hisat2_output.flagstat\n│   ├── [ 636]  1H11_hisat2.stats\n│   ├── [1.5G]  1H11.sorted.bam\n│   ├── [778K]  1H11.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   └── [3.7M]  t_data.ctab\n├── [1.3G]  1H12\n│   ├── [ 559]  1H12_checksums.md5\n│   ├── [3.5M]  1H12.cov_refs.gtf\n│   ├── [ 34M]  1H12.gtf\n│   ├── [ 449]  1H12-hisat2_output.flagstat\n│   ├── [ 636]  1H12_hisat2.stats\n│   ├── [1.3G]  1H12.sorted.bam\n│   ├── [698K]  1H12.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.8G]  1H6\n│   ├── [ 553]  1H6_checksums.md5\n│   ├── [2.9M]  1H6.cov_refs.gtf\n│   ├── [ 34M]  1H6.gtf\n│   ├── [ 449]  1H6-hisat2_output.flagstat\n│   ├── [ 640]  1H6_hisat2.stats\n│   ├── [1.8G]  1H6.sorted.bam\n│   ├── [784K]  1H6.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   └── [3.7M]  t_data.ctab\n├── [1.5G]  1H7\n│   ├── [ 553]  1H7_checksums.md5\n│   ├── [7.4M]  1H7.cov_refs.gtf\n│   ├── [ 34M]  1H7.gtf\n│   ├── [ 449]  1H7-hisat2_output.flagstat\n│   ├── [ 637]  1H7_hisat2.stats\n│   ├── [1.5G]  1H7.sorted.bam\n│   ├── [780K]  1H7.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.6G]  1H8\n│   ├── [ 553]  1H8_checksums.md5\n│   ├── [6.6M]  1H8.cov_refs.gtf\n│   ├── [ 34M]  1H8.gtf\n│   ├── [ 449]  1H8-hisat2_output.flagstat\n│   ├── [ 637]  1H8_hisat2.stats\n│   ├── [1.6G]  1H8.sorted.bam\n│   ├── [791K]  1H8.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [2.1G]  2B2\n│   ├── [ 553]  2B2_checksums.md5\n│   ├── [5.3M]  2B2.cov_refs.gtf\n│   ├── [ 34M]  2B2.gtf\n│   ├── [ 450]  2B2-hisat2_output.flagstat\n│   ├── [ 639]  2B2_hisat2.stats\n│   ├── [2.0G]  2B2.sorted.bam\n│   ├── [961K]  2B2.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.8G]  2B3\n│   ├── [ 553]  2B3_checksums.md5\n│   ├── [8.2M]  2B3.cov_refs.gtf\n│   ├── [ 34M]  2B3.gtf\n│   ├── [ 449]  2B3-hisat2_output.flagstat\n│   ├── [ 638]  2B3_hisat2.stats\n│   ├── [1.7G]  2B3.sorted.bam\n│   ├── [818K]  2B3.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.8G]  2C1\n│   ├── [ 553]  2C1_checksums.md5\n│   ├── [4.0M]  2C1.cov_refs.gtf\n│   ├── [ 34M]  2C1.gtf\n│   ├── [ 448]  2C1-hisat2_output.flagstat\n│   ├── [ 638]  2C1_hisat2.stats\n│   ├── [1.7G]  2C1.sorted.bam\n│   ├── [636K]  2C1.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 422]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.6G]  2C2\n│   ├── [ 553]  2C2_checksums.md5\n│   ├── [7.6M]  2C2.cov_refs.gtf\n│   ├── [ 34M]  2C2.gtf\n│   ├── [ 450]  2C2-hisat2_output.flagstat\n│   ├── [ 637]  2C2_hisat2.stats\n│   ├── [1.5G]  2C2.sorted.bam\n│   ├── [794K]  2C2.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [2.0G]  2D2\n│   ├── [ 553]  2D2_checksums.md5\n│   ├── [2.9M]  2D2.cov_refs.gtf\n│   ├── [ 34M]  2D2.gtf\n│   ├── [ 449]  2D2-hisat2_output.flagstat\n│   ├── [ 640]  2D2_hisat2.stats\n│   ├── [1.9G]  2D2.sorted.bam\n│   ├── [795K]  2D2.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.4G]  2E2\n│   ├── [ 553]  2E2_checksums.md5\n│   ├── [2.2M]  2E2.cov_refs.gtf\n│   ├── [ 33M]  2E2.gtf\n│   ├── [ 449]  2E2-hisat2_output.flagstat\n│   ├── [ 639]  2E2_hisat2.stats\n│   ├── [1.4G]  2E2.sorted.bam\n│   ├── [632K]  2E2.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [2.6G]  2F1\n│   ├── [ 553]  2F1_checksums.md5\n│   ├── [2.9M]  2F1.cov_refs.gtf\n│   ├── [ 34M]  2F1.gtf\n│   ├── [ 451]  2F1-hisat2_output.flagstat\n│   ├── [ 642]  2F1_hisat2.stats\n│   ├── [2.5G]  2F1.sorted.bam\n│   ├── [980K]  2F1.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.2M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [1.6G]  2G1\n│   ├── [ 553]  2G1_checksums.md5\n│   ├── [6.1M]  2G1.cov_refs.gtf\n│   ├── [ 34M]  2G1.gtf\n│   ├── [ 449]  2G1-hisat2_output.flagstat\n│   ├── [ 637]  2G1_hisat2.stats\n│   ├── [1.6G]  2G1.sorted.bam\n│   ├── [724K]  2G1.sorted.bam.bai\n│   ├── [2.4M]  e2t.ctab\n│   ├── [ 15M]  e_data.ctab\n│   ├── [1.9M]  i2t.ctab\n│   ├── [7.3M]  i_data.ctab\n│   ├── [ 424]  input_fastqs_checksums.md5\n│   └── [3.7M]  t_data.ctab\n├── [ 35M]  Apulchra-genome.stringtie.gtf\n├── [5.1M]  apul-gene_count_matrix.csv\n├── [5.2M]  apul-transcript_count_matrix.csv\n├── [ 587]  checksums.md5\n├── [5.1K]  gtf_list.txt\n├── [306K]  multiqc_data\n│   ├── [5.0K]  multiqc_bowtie2.txt\n│   ├── [ 307]  multiqc_citations.txt\n│   ├── [268K]  multiqc_data.json\n│   ├── [2.7K]  multiqc_general_stats.txt\n│   ├── [4.1K]  multiqc.log\n│   ├── [7.7K]  multiqc_samtools_flagstat.txt\n│   └── [ 14K]  multiqc_sources.txt\n├── [1.1M]  multiqc_report.html\n├── [5.2K]  prepDE-sample_list.txt\n├── [ 856]  sorted_bams.list\n├── [ 64G]  sorted-bams-merged.bam\n└── [ 13M]  sorted-bams-merged.bam.bai\n\n 135G used in 41 directories, 535 files\n```\n\n## 3.2 MultiQC alignment rates\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Change to ouput directory\ncd \"${output_dir_top}\"\n\n${programs_array[multiqc]} .\n```\n\n# 4 Merge sorted BAMs\n\nMerge all BAMs to singular BAM for use in transcriptome assembly later, if needed.\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Change to ouput directory\ncd \"${output_dir_top}\"\n\n\n## Create list of sorted BAMs for merging\nfind . -name \"*sorted.bam\" > sorted_bams.list\n\n## Merge sorted BAMs\n${programs_array[samtools]} merge \\\n-b sorted_bams.list \\\n${merged_bam} \\\n--threads ${threads}\n\n## Index merged BAM\n${programs_array[samtools]} index ${merged_bam}\n```\n\n# 5 Create combined GTF\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Change to ouput directory\ncd \"${output_dir_top}\"\n\n\n# Create singular transcript file, using GTF list file\n\"${programs_array[stringtie]}\" --merge \\\n\"${gtf_list}\" \\\n-p \"${threads}\" \\\n-G \"${genome_gff}\" \\\n-o \"${genome_index_name}\".stringtie.gtf\n```\n\n# 6 Create DESeq2 Count Matrices\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Change to ouput directory\ncd \"${output_dir_top}\"\n\n# Create file list for prepDE.py\nwhile read -r line\ndo\n  sample_no_path=${line##*/}\n  sample=${sample_no_path%.*}\n  echo ${sample} ${line}\ndone < gtf_list.txt >> prepDE-sample_list.txt\n\n# Create count matrices for genes and transcripts\n# Compatible with import to DESeq2\npython3 \"${programs_array[prepDE]}\" \\\n--input=prepDE-sample_list.txt \\\n-g apul-gene_count_matrix.csv \\\n-t apul-transcript_count_matrix.csv \\\n--length=${read_length}\n```\n\n# 7 Generate checksums\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Change to ouput directory\ncd \"${output_dir_top}\"\n\n# Uses find command to avoid passing\n# directory names to the md5sum command.\nfind . -maxdepth 1 -type f -exec md5sum {} + \\\n| tee --append checksums.md5\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","title":"RNA-seq Alignment - A.pulchra RNA-seq Alignments Using HISAT2 and StringTie for Azenta Project 30-1047560508","date":"2024-10-08","draft":false,"categories":["2024","30-1047560508","RNA-seq","E5","timeseries_molecular","HISAT2","StringTie","alignment","Acropora pulchra","coral"],"bibliography":["references.bib"]},"extensions":{"book":{"multiFile":true}}}},"draft":false,"projectFormats":["html"]}