{"title":"FastQC Trimming and QC - A.pulchra RNA-seq from Azenta Project 30-1047560508 Using fastp","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","title":"FastQC Trimming and QC - A.pulchra RNA-seq from Azenta Project 30-1047560508 Using fastp","date":"2024-10-05","draft":false,"engine":"knitr","categories":["2024","RNA-seq","30-1047560508","Azenta","coral","Acropora pulchra","fastp","FastQC","MultiQC","trimming","E5","timeseries_molecular"],"bibliography":"references.bib"},"headingText":"1 Create a Bash variables file","containsRefs":true,"markdown":"\nThis Rmd file trims *A.pulchra* RNA-seq files using [fastp](https://github.com/OpenGene/fastp) [@chen2023], followed by quality checks with [FastQC](https://github.com/s-andrews/FastQC) and [MultiQC](https://multiqc.info/) [@ewels2016].\n\n::: callout-note\nThis notebook entry is knitted from [`urol-e5/timeseries_molecular/D-Apul/code/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC.Rmd`](https://github.com/urol-e5/timeseries_molecular/blob/5245d490fceb30c2ddecdbaa5dead3eccf56be95/D-Apul/code/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC.Rmd) (GitHub), commit `5245d49`.\n:::\n\nThis Rmd file trims *A.pulchra* RNA-seq files using [fastp](https://github.com/OpenGene/fastp) [@chen2023], followed by quality checks with [FastQC](https://github.com/s-andrews/FastQC) and [MultiQC](https://multiqc.info/) [@ewels2016].\n\nExpects input files formatted like so: `<number>--<sample_name>_R[12]_001.fastq.gz`\n\nAll trimmed FastQs produced by this script are here:\n\n[01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC/trimmed-fastqs/](https://gannet.fish.washington.edu/Atumefaciens/gitrepos/urol-e5/timeseries_molecular/D-Apul/output/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC/trimmed-fastqs/)\n\n\nThis allows usage of Bash variables across R Markdown chunks.\n\n``` bash\n{\necho \"#### Assign Variables ####\"\necho \"\"\n\necho \"# Data directories\"\necho 'export timeseries_dir=/home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular'\necho 'export output_dir_top=${timeseries_dir}/D-Apul/output/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC'\necho 'export raw_reads_dir=${timeseries_dir}/D-Apul/data/raw-fastqs'\necho 'export raw_reads_url=\"https://owl.fish.washington.edu/nightingales/E5-coral-time-series/30-1047560508/\"'\necho 'export trimmed_fastqs_dir=${output_dir_top}/trimmed-fastqs'\necho 'export trimmed_fastqc_dir=${output_dir_top}/trimmed-fastqc'\necho \"\"\n\necho \"# Paths to programs\"\necho 'export programs_dir=\"/home/shared\"'\necho 'export fastp=\"${programs_dir}/fastp\"'\necho 'export fastqc=${programs_dir}/FastQC-0.12.1/fastqc'\necho 'export multiqc=/home/sam/programs/mambaforge/bin/multiqc'\necho \"\"\n\necho \"# Set FastQ filename patterns\"\necho \"export fastq_pattern='*.fastq.gz'\"\necho \"export R1_fastq_pattern='*_R1_*.fastq.gz'\"\necho \"export R2_fastq_pattern='*_R2_*.fastq.gz'\"\necho \"export trimmed_fastq_pattern='*fastp-trim.fq.gz'\"\necho \"\"\n\necho \"# Set number of CPUs to use\"\necho 'export threads=40'\necho \"\"\n\n\necho \"## Inititalize arrays\"\necho 'export fastq_array_R1=()'\necho 'export fastq_array_R2=()'\necho 'export raw_fastqs_array=()'\necho 'export R1_names_array=()'\necho 'export R2_names_array=()'\necho \"\"\n\necho \"# Programs associative array\"\necho \"declare -A programs_array\"\necho \"programs_array=(\"\necho '[fastp]=\"${fastp}\" \\'\necho '[fastqc]=\"${fastqc}\" \\'\necho '[multiqc]=\"${multiqc}\" \\'\necho \")\"\necho \"\"\n\necho \"# Print formatting\"\necho 'export line=\"--------------------------------------------------------\"'\necho \"\"\n} > .bashvars\n\ncat .bashvars\n```\n\n```         \n#### Assign Variables ####\n\n# Data directories\nexport timeseries_dir=/home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular\nexport output_dir_top=${timeseries_dir}/D-Apul/output/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC\nexport raw_reads_dir=${timeseries_dir}/D-Apul/data/raw-fastqs\nexport raw_reads_url=\"https://owl.fish.washington.edu/nightingales/E5-coral-time-series/30-1047560508/\"\nexport trimmed_fastqs_dir=${output_dir_top}/trimmed-fastqs\nexport trimmed_fastqc_dir=${output_dir_top}/trimmed-fastqc\n\n# Paths to programs\nexport programs_dir=\"/home/shared\"\nexport fastp=\"${programs_dir}/fastp\"\nexport fastqc=${programs_dir}/FastQC-0.12.1/fastqc\nexport multiqc=/home/sam/programs/mambaforge/bin/multiqc\n\n# Set FastQ filename patterns\nexport fastq_pattern='*.fastq.gz'\nexport R1_fastq_pattern='*_R1_*.fastq.gz'\nexport R2_fastq_pattern='*_R2_*.fastq.gz'\nexport trimmed_fastq_pattern='*fastp-trim.fq.gz'\n\n# Set number of CPUs to use\nexport threads=40\n\n## Inititalize arrays\nexport fastq_array_R1=()\nexport fastq_array_R2=()\nexport raw_fastqs_array=()\nexport R1_names_array=()\nexport R2_names_array=()\n\n# Programs associative array\ndeclare -A programs_array\nprograms_array=(\n[fastp]=\"${fastp}\" \\\n[fastqc]=\"${fastqc}\" \\\n[multiqc]=\"${multiqc}\" \\\n)\n\n# Print formatting\nexport line=\"--------------------------------------------------------\"\n```\n\nIf needed, download raw RNA-seq.\n\nChange `eval=FALSE` to `eval=TRUE` to execute the next two chunks to download RNA-seq and then verify MD5 checksums.\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Make output directory if it doesn't exist\nmkdir --parents ${raw_reads_dir}\n\n# Create list of only A.pulchra sample names\nsample_list=$(awk -F \",\" 'NR > 2 {print $5\"\\t\"$6}' ${timeseries_dir}/data/rna_metadata.csv | awk -F\"[\\t-]\" '$2 == \"ACR\" {print $1}')\n\necho \"\"\necho \"${line}\"\necho \"\"\necho \"Sample list:\"\necho \"\"\necho \"${sample_list}\"\necho \"\"\necho \"${line}\"\necho \"\"\n\n\n# Use printf to format each item for use in wget\nformatted_list=$(printf \"*%s*,\" ${sample_list})\n\n# Remove the trailing comma and append *.md5\nformatted_list=\"${formatted_list%,},*.md5\"\n\n# Output the final wget command\necho \"\"\necho \"${line}\"\necho \"\"\necho \"Formatted wget accept list:\"\necho \"\"\necho \"wget --accept=\\\"$formatted_list\\\"\"\necho \"\"\necho \"${line}\"\necho \"\"\n\n# Run wget to retrieve FastQs and MD5 files\nwget \\\n--directory-prefix ${raw_reads_dir} \\\n--recursive \\\n--no-check-certificate \\\n--continue \\\n--cut-dirs 3 \\\n--no-host-directories \\\n--no-parent \\\n--quiet \\\n--accept=\\\"$formatted_list\\\" ${raw_reads_url}\n\nls -lh \"${raw_reads_dir}\"\n```\n\nVerify raw read checksums\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\ncd \"${raw_reads_dir}\"\n\n# Checksums file contains other files, so this just looks for the sRNAseq files.\nfor file in *.md5\ndo\n  md5sum --check \"${file}\"\ndone\n```\n\n# 2 Fastp Trimming\n\n[fastp](https://github.com/OpenGene/fastp) (Chen 2023) is set to auto-detect Illumina adapters, as well as trim the first 20bp from each read, as past experience shows these first 20bp are more inconsistent than the remainder of the read length.\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Make output directories, if it doesn't exist\nmkdir --parents \"${trimmed_fastqs_dir}\"\n\n# Change to raw reads directory\ncd \"${raw_reads_dir}\"\n\n# Create arrays of fastq R1 files and sample names\nfor fastq in ${R1_fastq_pattern}\ndo\n  fastq_array_R1+=(\"${fastq}\")\n  R1_names_array+=(\"$(echo \"${fastq}\" | awk -F\"_\" '{print $1}')\")\ndone\n\n# Create array of fastq R2 files\nfor fastq in ${R2_fastq_pattern}\ndo\n  fastq_array_R2+=(\"${fastq}\")\n  R2_names_array+=(\"$(echo \"${fastq}\" | awk -F\"_\" '{print $1}')\")\ndone\n\n# Create list of fastq files used in analysis\n# Create MD5 checksum for reference\nif [ ! -f \"${output_dir_top}\"/raw-fastq-checksums.md5 ]; then\nfor fastq in *.gz\n  do\n    md5sum ${fastq} >> \"${output_dir_top}\"/raw-fastq-checksums.md5\n  done\nfi\n\n# Run fastp on files\n# Adds JSON report output for downstream usage by MultiQC\nfor index in \"${!fastq_array_R1[@]}\"\ndo\n  R1_sample_name=$(echo \"${R1_names_array[index]}\")\n  R2_sample_name=$(echo \"${R2_names_array[index]}\")\n  ${fastp} \\\n  --in1 ${fastq_array_R1[index]} \\\n  --in2 ${fastq_array_R2[index]} \\\n  --detect_adapter_for_pe \\\n  --trim_front1 20 \\\n  --trim_front2 20 \\\n  --thread ${threads} \\\n  --html \"${trimmed_fastqs_dir}\"/\"${R1_sample_name}\".fastp-trim.report.html \\\n  --json \"${trimmed_fastqs_dir}\"/\"${R1_sample_name}\".fastp-trim.report.json \\\n  --out1 \"${trimmed_fastqs_dir}\"/\"${R1_sample_name}\"_R1_001.fastp-trim.fq.gz \\\n  --out2 \"${trimmed_fastqs_dir}\"/\"${R2_sample_name}\"_R2_001.fastp-trim.fq.gz \\\n  2>> \"${trimmed_fastqs_dir}\"/fastp.stderr\n\n  # Generate md5 checksums for newly trimmed files\n  cd \"${trimmed_fastqs_dir}\"\n  md5sum \"${R1_sample_name}\"_R1_001.fastp-trim.fq.gz > \"${R1_sample_name}\"_R1_001.fastp-trim.fq.gz.md5\n  md5sum \"${R2_sample_name}\"_R2_001.fastp-trim.fq.gz > \"${R2_sample_name}\"_R2_001.fastp-trim.fq.gz.md5\n  cd -\ndone\n```\n\n# 3 Quality Check with FastQC and MultiQC\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Make output directory if it doesn't exist\nmkdir --parents \"${trimmed_fastqc_dir}\"\n\n############ RUN FASTQC ############\n\n\n# Create array of trimmed FastQs\ntrimmed_fastqs_array=(${trimmed_fastqs_dir}/${trimmed_fastq_pattern})\n\n# Pass array contents to new variable as space-delimited list\ntrimmed_fastqc_list=$(echo \"${trimmed_fastqs_array[*]}\")\n\necho \"Beginning FastQC on trimmed reads...\"\necho \"\"\n\n# Run FastQC\n### NOTE: Do NOT quote raw_fastqc_list\n${programs_array[fastqc]} \\\n--threads ${threads} \\\n--outdir ${trimmed_fastqs_dir} \\\n--quiet \\\n${trimmed_fastqc_list}\n\necho \"FastQC on trimmed reads complete!\"\necho \"\"\n\n############ END FASTQC ############\n\n############ RUN MULTIQC ############\necho \"Beginning MultiQC on trimmed FastQC...\"\necho \"\"\n\n${programs_array[multiqc]} ${trimmed_fastqs_dir} -o ${trimmed_fastqs_dir}\n\necho \"\"\necho \"MultiQC on trimmed FastQs complete.\"\necho \"\"\n\n############ END MULTIQC ############\n\necho \"Removing FastQC zip files.\"\necho \"\"\nrm ${trimmed_fastqs_dir}/*.zip\necho \"FastQC zip files removed.\"\necho \"\"\n```\n\n```         \nBeginning FastQC on trimmed reads...\n\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\nFastQC on trimmed reads complete!\n\nBeginning MultiQC on trimmed FastQC...\n\n\n  /// MultiQC 🔍 | v1.14\n\n|           multiqc | MultiQC Version v1.25.1 now available!\n|           multiqc | Search path : /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/D-Apul/output/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC/trimmed-fastqs\n|         searching | ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 442/442  \n|            fastqc | Found 88 reports\n|           multiqc | Compressing plot data\n|           multiqc | Previous MultiQC output found! Adjusting filenames..\n|           multiqc | Use -f or --force to overwrite existing reports instead\n|           multiqc | Report      : ../output/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC/trimmed-fastqs/multiqc_report_1.html\n|           multiqc | Data        : ../output/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC/trimmed-fastqs/multiqc_data_1\n|           multiqc | MultiQC complete\n|           multiqc | 1 flat-image plot used in the report due to large sample numbers\n|           multiqc | To force interactive plots, use the '--interactive' flag. \nSee the documentation.\n\nMultiQC on trimmed FastQs complete.\n\nRemoving FastQC zip files.\n\nFastQC zip files removed.\n```\n\n::: {#refs .references .csl-bib-body .hanging-indent}\n::: {#ref-chen2023 .csl-entry}\nChen, Shifu. 2023. “Ultrafast One-Pass FASTQ Data Preprocessing, Quality Control, and Deduplication Using Fastp.” *iMeta* 2 (2). <https://doi.org/10.1002/imt2.107>.\n:::\n\n::: {#ref-ewels2016 .csl-entry}\nEwels, Philip, Måns Magnusson, Sverker Lundin, and Max Käller. 2016. “MultiQC: Summarize Analysis Results for Multiple Tools and Samples in a Single Report.” *Bioinformatics* 32 (19): 3047–48. <https://doi.org/10.1093/bioinformatics/btw354>.\n:::\n:::\n","srcMarkdownNoYaml":"\nThis Rmd file trims *A.pulchra* RNA-seq files using [fastp](https://github.com/OpenGene/fastp) [@chen2023], followed by quality checks with [FastQC](https://github.com/s-andrews/FastQC) and [MultiQC](https://multiqc.info/) [@ewels2016].\n\n::: callout-note\nThis notebook entry is knitted from [`urol-e5/timeseries_molecular/D-Apul/code/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC.Rmd`](https://github.com/urol-e5/timeseries_molecular/blob/5245d490fceb30c2ddecdbaa5dead3eccf56be95/D-Apul/code/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC.Rmd) (GitHub), commit `5245d49`.\n:::\n\nThis Rmd file trims *A.pulchra* RNA-seq files using [fastp](https://github.com/OpenGene/fastp) [@chen2023], followed by quality checks with [FastQC](https://github.com/s-andrews/FastQC) and [MultiQC](https://multiqc.info/) [@ewels2016].\n\nExpects input files formatted like so: `<number>--<sample_name>_R[12]_001.fastq.gz`\n\nAll trimmed FastQs produced by this script are here:\n\n[01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC/trimmed-fastqs/](https://gannet.fish.washington.edu/Atumefaciens/gitrepos/urol-e5/timeseries_molecular/D-Apul/output/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC/trimmed-fastqs/)\n\n# 1 Create a Bash variables file\n\nThis allows usage of Bash variables across R Markdown chunks.\n\n``` bash\n{\necho \"#### Assign Variables ####\"\necho \"\"\n\necho \"# Data directories\"\necho 'export timeseries_dir=/home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular'\necho 'export output_dir_top=${timeseries_dir}/D-Apul/output/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC'\necho 'export raw_reads_dir=${timeseries_dir}/D-Apul/data/raw-fastqs'\necho 'export raw_reads_url=\"https://owl.fish.washington.edu/nightingales/E5-coral-time-series/30-1047560508/\"'\necho 'export trimmed_fastqs_dir=${output_dir_top}/trimmed-fastqs'\necho 'export trimmed_fastqc_dir=${output_dir_top}/trimmed-fastqc'\necho \"\"\n\necho \"# Paths to programs\"\necho 'export programs_dir=\"/home/shared\"'\necho 'export fastp=\"${programs_dir}/fastp\"'\necho 'export fastqc=${programs_dir}/FastQC-0.12.1/fastqc'\necho 'export multiqc=/home/sam/programs/mambaforge/bin/multiqc'\necho \"\"\n\necho \"# Set FastQ filename patterns\"\necho \"export fastq_pattern='*.fastq.gz'\"\necho \"export R1_fastq_pattern='*_R1_*.fastq.gz'\"\necho \"export R2_fastq_pattern='*_R2_*.fastq.gz'\"\necho \"export trimmed_fastq_pattern='*fastp-trim.fq.gz'\"\necho \"\"\n\necho \"# Set number of CPUs to use\"\necho 'export threads=40'\necho \"\"\n\n\necho \"## Inititalize arrays\"\necho 'export fastq_array_R1=()'\necho 'export fastq_array_R2=()'\necho 'export raw_fastqs_array=()'\necho 'export R1_names_array=()'\necho 'export R2_names_array=()'\necho \"\"\n\necho \"# Programs associative array\"\necho \"declare -A programs_array\"\necho \"programs_array=(\"\necho '[fastp]=\"${fastp}\" \\'\necho '[fastqc]=\"${fastqc}\" \\'\necho '[multiqc]=\"${multiqc}\" \\'\necho \")\"\necho \"\"\n\necho \"# Print formatting\"\necho 'export line=\"--------------------------------------------------------\"'\necho \"\"\n} > .bashvars\n\ncat .bashvars\n```\n\n```         \n#### Assign Variables ####\n\n# Data directories\nexport timeseries_dir=/home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular\nexport output_dir_top=${timeseries_dir}/D-Apul/output/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC\nexport raw_reads_dir=${timeseries_dir}/D-Apul/data/raw-fastqs\nexport raw_reads_url=\"https://owl.fish.washington.edu/nightingales/E5-coral-time-series/30-1047560508/\"\nexport trimmed_fastqs_dir=${output_dir_top}/trimmed-fastqs\nexport trimmed_fastqc_dir=${output_dir_top}/trimmed-fastqc\n\n# Paths to programs\nexport programs_dir=\"/home/shared\"\nexport fastp=\"${programs_dir}/fastp\"\nexport fastqc=${programs_dir}/FastQC-0.12.1/fastqc\nexport multiqc=/home/sam/programs/mambaforge/bin/multiqc\n\n# Set FastQ filename patterns\nexport fastq_pattern='*.fastq.gz'\nexport R1_fastq_pattern='*_R1_*.fastq.gz'\nexport R2_fastq_pattern='*_R2_*.fastq.gz'\nexport trimmed_fastq_pattern='*fastp-trim.fq.gz'\n\n# Set number of CPUs to use\nexport threads=40\n\n## Inititalize arrays\nexport fastq_array_R1=()\nexport fastq_array_R2=()\nexport raw_fastqs_array=()\nexport R1_names_array=()\nexport R2_names_array=()\n\n# Programs associative array\ndeclare -A programs_array\nprograms_array=(\n[fastp]=\"${fastp}\" \\\n[fastqc]=\"${fastqc}\" \\\n[multiqc]=\"${multiqc}\" \\\n)\n\n# Print formatting\nexport line=\"--------------------------------------------------------\"\n```\n\nIf needed, download raw RNA-seq.\n\nChange `eval=FALSE` to `eval=TRUE` to execute the next two chunks to download RNA-seq and then verify MD5 checksums.\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Make output directory if it doesn't exist\nmkdir --parents ${raw_reads_dir}\n\n# Create list of only A.pulchra sample names\nsample_list=$(awk -F \",\" 'NR > 2 {print $5\"\\t\"$6}' ${timeseries_dir}/data/rna_metadata.csv | awk -F\"[\\t-]\" '$2 == \"ACR\" {print $1}')\n\necho \"\"\necho \"${line}\"\necho \"\"\necho \"Sample list:\"\necho \"\"\necho \"${sample_list}\"\necho \"\"\necho \"${line}\"\necho \"\"\n\n\n# Use printf to format each item for use in wget\nformatted_list=$(printf \"*%s*,\" ${sample_list})\n\n# Remove the trailing comma and append *.md5\nformatted_list=\"${formatted_list%,},*.md5\"\n\n# Output the final wget command\necho \"\"\necho \"${line}\"\necho \"\"\necho \"Formatted wget accept list:\"\necho \"\"\necho \"wget --accept=\\\"$formatted_list\\\"\"\necho \"\"\necho \"${line}\"\necho \"\"\n\n# Run wget to retrieve FastQs and MD5 files\nwget \\\n--directory-prefix ${raw_reads_dir} \\\n--recursive \\\n--no-check-certificate \\\n--continue \\\n--cut-dirs 3 \\\n--no-host-directories \\\n--no-parent \\\n--quiet \\\n--accept=\\\"$formatted_list\\\" ${raw_reads_url}\n\nls -lh \"${raw_reads_dir}\"\n```\n\nVerify raw read checksums\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\ncd \"${raw_reads_dir}\"\n\n# Checksums file contains other files, so this just looks for the sRNAseq files.\nfor file in *.md5\ndo\n  md5sum --check \"${file}\"\ndone\n```\n\n# 2 Fastp Trimming\n\n[fastp](https://github.com/OpenGene/fastp) (Chen 2023) is set to auto-detect Illumina adapters, as well as trim the first 20bp from each read, as past experience shows these first 20bp are more inconsistent than the remainder of the read length.\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Make output directories, if it doesn't exist\nmkdir --parents \"${trimmed_fastqs_dir}\"\n\n# Change to raw reads directory\ncd \"${raw_reads_dir}\"\n\n# Create arrays of fastq R1 files and sample names\nfor fastq in ${R1_fastq_pattern}\ndo\n  fastq_array_R1+=(\"${fastq}\")\n  R1_names_array+=(\"$(echo \"${fastq}\" | awk -F\"_\" '{print $1}')\")\ndone\n\n# Create array of fastq R2 files\nfor fastq in ${R2_fastq_pattern}\ndo\n  fastq_array_R2+=(\"${fastq}\")\n  R2_names_array+=(\"$(echo \"${fastq}\" | awk -F\"_\" '{print $1}')\")\ndone\n\n# Create list of fastq files used in analysis\n# Create MD5 checksum for reference\nif [ ! -f \"${output_dir_top}\"/raw-fastq-checksums.md5 ]; then\nfor fastq in *.gz\n  do\n    md5sum ${fastq} >> \"${output_dir_top}\"/raw-fastq-checksums.md5\n  done\nfi\n\n# Run fastp on files\n# Adds JSON report output for downstream usage by MultiQC\nfor index in \"${!fastq_array_R1[@]}\"\ndo\n  R1_sample_name=$(echo \"${R1_names_array[index]}\")\n  R2_sample_name=$(echo \"${R2_names_array[index]}\")\n  ${fastp} \\\n  --in1 ${fastq_array_R1[index]} \\\n  --in2 ${fastq_array_R2[index]} \\\n  --detect_adapter_for_pe \\\n  --trim_front1 20 \\\n  --trim_front2 20 \\\n  --thread ${threads} \\\n  --html \"${trimmed_fastqs_dir}\"/\"${R1_sample_name}\".fastp-trim.report.html \\\n  --json \"${trimmed_fastqs_dir}\"/\"${R1_sample_name}\".fastp-trim.report.json \\\n  --out1 \"${trimmed_fastqs_dir}\"/\"${R1_sample_name}\"_R1_001.fastp-trim.fq.gz \\\n  --out2 \"${trimmed_fastqs_dir}\"/\"${R2_sample_name}\"_R2_001.fastp-trim.fq.gz \\\n  2>> \"${trimmed_fastqs_dir}\"/fastp.stderr\n\n  # Generate md5 checksums for newly trimmed files\n  cd \"${trimmed_fastqs_dir}\"\n  md5sum \"${R1_sample_name}\"_R1_001.fastp-trim.fq.gz > \"${R1_sample_name}\"_R1_001.fastp-trim.fq.gz.md5\n  md5sum \"${R2_sample_name}\"_R2_001.fastp-trim.fq.gz > \"${R2_sample_name}\"_R2_001.fastp-trim.fq.gz.md5\n  cd -\ndone\n```\n\n# 3 Quality Check with FastQC and MultiQC\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Make output directory if it doesn't exist\nmkdir --parents \"${trimmed_fastqc_dir}\"\n\n############ RUN FASTQC ############\n\n\n# Create array of trimmed FastQs\ntrimmed_fastqs_array=(${trimmed_fastqs_dir}/${trimmed_fastq_pattern})\n\n# Pass array contents to new variable as space-delimited list\ntrimmed_fastqc_list=$(echo \"${trimmed_fastqs_array[*]}\")\n\necho \"Beginning FastQC on trimmed reads...\"\necho \"\"\n\n# Run FastQC\n### NOTE: Do NOT quote raw_fastqc_list\n${programs_array[fastqc]} \\\n--threads ${threads} \\\n--outdir ${trimmed_fastqs_dir} \\\n--quiet \\\n${trimmed_fastqc_list}\n\necho \"FastQC on trimmed reads complete!\"\necho \"\"\n\n############ END FASTQC ############\n\n############ RUN MULTIQC ############\necho \"Beginning MultiQC on trimmed FastQC...\"\necho \"\"\n\n${programs_array[multiqc]} ${trimmed_fastqs_dir} -o ${trimmed_fastqs_dir}\n\necho \"\"\necho \"MultiQC on trimmed FastQs complete.\"\necho \"\"\n\n############ END MULTIQC ############\n\necho \"Removing FastQC zip files.\"\necho \"\"\nrm ${trimmed_fastqs_dir}/*.zip\necho \"FastQC zip files removed.\"\necho \"\"\n```\n\n```         \nBeginning FastQC on trimmed reads...\n\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\napplication/gzip\nFastQC on trimmed reads complete!\n\nBeginning MultiQC on trimmed FastQC...\n\n\n  /// MultiQC 🔍 | v1.14\n\n|           multiqc | MultiQC Version v1.25.1 now available!\n|           multiqc | Search path : /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/D-Apul/output/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC/trimmed-fastqs\n|         searching | ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 442/442  \n|            fastqc | Found 88 reports\n|           multiqc | Compressing plot data\n|           multiqc | Previous MultiQC output found! Adjusting filenames..\n|           multiqc | Use -f or --force to overwrite existing reports instead\n|           multiqc | Report      : ../output/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC/trimmed-fastqs/multiqc_report_1.html\n|           multiqc | Data        : ../output/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC/trimmed-fastqs/multiqc_data_1\n|           multiqc | MultiQC complete\n|           multiqc | 1 flat-image plot used in the report due to large sample numbers\n|           multiqc | To force interactive plots, use the '--interactive' flag. \nSee the documentation.\n\nMultiQC on trimmed FastQs complete.\n\nRemoving FastQC zip files.\n\nFastQC zip files removed.\n```\n\n::: {#refs .references .csl-bib-body .hanging-indent}\n::: {#ref-chen2023 .csl-entry}\nChen, Shifu. 2023. “Ultrafast One-Pass FASTQ Data Preprocessing, Quality Control, and Deduplication Using Fastp.” *iMeta* 2 (2). <https://doi.org/10.1002/imt2.107>.\n:::\n\n::: {#ref-ewels2016 .csl-entry}\nEwels, Philip, Måns Magnusson, Sverker Lundin, and Max Käller. 2016. “MultiQC: Summarize Analysis Results for Multiple Tools and Samples in a Single Report.” *Bioinformatics* 32 (19): 3047–48. <https://doi.org/10.1093/bioinformatics/btw354>.\n:::\n:::\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","title":"FastQC Trimming and QC - A.pulchra RNA-seq from Azenta Project 30-1047560508 Using fastp","date":"2024-10-05","draft":false,"categories":["2024","RNA-seq","30-1047560508","Azenta","coral","Acropora pulchra","fastp","FastQC","MultiQC","trimming","E5","timeseries_molecular"],"bibliography":["references.bib"]},"extensions":{"book":{"multiFile":true}}}},"draft":false,"projectFormats":["html"]}