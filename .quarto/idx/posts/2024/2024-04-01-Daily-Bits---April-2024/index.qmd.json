{"title":"Daily Bits - April 2024","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","title":"Daily Bits - April 2024","date":"2024-04-01","draft":false,"engine":"knitr","categories":["daily bits","2024"]},"headingText":"20240430","containsRefs":false,"markdown":"\n\n### In lab\n\n- Helped Eric get started with qPCR analysis.\n\n- EH&S disposal of [mercuric chloride waste in FTR 228](https://github.com/RobertsLab/resources/issues/1536) (GitHub Issue).\n\n- Replaced Owl's UPS battery (APCRBC123).\n\n- [Dealt with Owl dying](https://github.com/RobertsLab/resources/issues/1882) (GitHub Issue).\n\n- [Shipped Pacific cod tissues for WGNS](../2024-04-30-Samples-Submitted---Pacific-Cod-40-Tissue-Samples-for-WGBS-at-Psomagen/index.qmd) (Notebook).\n\n## 20240429\n\n### [DuMOAR](https://github.com/laurahspencer/DuMOAR) (GitHub repo)\n\n- Continued to look into [`Trinotate`](https://github.com/Trinotate/Trinotate/wiki) annotation [issue where BLASTp results do _not_ have SwissProt IDs(https://github.com/laurahspencer/DuMOAR/issues/44#issuecomment-1977588065)].\n\n  - Issue is related to built-in BLASTp database. FastA headers do _not_ contain SwissProt IDs, Thus, they don't end up in the final annotation report file.\n\n  - Considering \"custom\" BLASTp database created from the full UniProt protein FastA, since I belive the [`Trinotate`](https://github.com/Trinotate/Trinotate/wiki) parsing is based on column numbers in the BLASTp output format 6 (which would contain the SwisProt IDs), as opposed to specifically parsing specifically formatted strings within that output format.\n\n### Singularity Containers\n\n- Related to above, started to explore the use of containers - specifically the [`Trinotate`](https://github.com/Trinotate/Trinotate/wiki) Singularity image.\n\n  - Most confusing aspect is the fact that there are two programs which cannot be included with [`Trinotate`](https://github.com/Trinotate/Trinotate/wiki), due to licensing issues:\n\n    - `signalp6`\n    - `tmhmmv2`\n\n    The main question: How do I access/run these programs if they're not in the container? To do so, I downloaded/installed them on Raven and then I added them to the container's system `$PATH` when starting the container, like so:\n\n    ```bash\n    singularity shell -e \\\n    --env PREPEND_PATH=\"/home/sam/programs/mambaforge/envs/singalp6_env/bin:/home/shared/tmhmm-2.0c/bin:/home/shared/infernal-1.1.5-linux-intel-gcc/binaries:/home/shared/hmmer-3.4/src\" \\\n    /home/shared/containers/trinotate.v4.0.2.simg\n    ```\n\n    This appended the programs on my computer to the beginning of the container's system `$PATH`, thus allowing these programs to be called.\n\n  - Another confusing aspect was how to access locations on my local computer once I was in the container. For example, the user's `$HOME` directory is mounted/bound (i.e. accessible) by default. However, I also needed access to `/home/shared`, but I didn't want to bind this to a directory within the container because then it would superseded the contents of the specified directory in the container. Since I wasn't terribly familiar with the container's structure, nor how to add a directory when starting the container image, I managed to figure out that the current directory from which the user starts the container image is automatically bound. So, I navigated to `/home/shared` first, then started the container with the command shown above. This permitted me to access `/home/shared` and all its subdirectories.\n\n## 20240426\n\n### [DuMOAR](https://github.com/laurahspencer/DuMOAR) (GitHub repo)\n\n- Continued to look into [`Trinotate`](https://github.com/Trinotate/Trinotate/wiki) annotation [issue where BLASTp results do _not_ have SwissProt IDs(https://github.com/laurahspencer/DuMOAR/issues/44#issuecomment-1977588065)].\n\n  - Started to explore newer version of [`Trinotate`](https://github.com/Trinotate/Trinotate/wiki) to see if the issue could be resolved.\n\n## 20240425\n\n### [DuMOAR](https://github.com/laurahspencer/DuMOAR) (GitHub repo)\n\n- Started to look into [`Trinotate`](https://github.com/Trinotate/Trinotate/wiki) annotation [issue where BLASTp results do _not_ have SwissProt IDs(https://github.com/laurahspencer/DuMOAR/issues/44#issuecomment-1977588065)].\n\n## 20240424\n\n### [Coral E5](https://github.com/urol-e5/deep-dive) (GitHub repo)\n\n- Finished up _P.meandrina_ [`miRDeep2`](https://github.com/rajewsky-lab/mirdeep2) with cnidarian miRBase.\n\n## 20240423\n\n### Miscellaneous\n\n- [Resolved degarded storage pool issue with Gannet](../2024-04-23-Computer-Troubleshooting---Gannet-Missing-Storage-Pool/index.qmd).\n\n## 20240422\n\n### [Coral E5](https://github.com/urol-e5/deep-dive) (GitHub repo)\n\n- Worked on _P.meandrina_ stuff:\n\n  - BLASTn with cnidarin miRBase.\n  - [`miRDeep2`](https://github.com/rajewsky-lab/mirdeep2) with cnidarian miRBase.\n\n### Miscellaneous\n\n- ProCard reconcilation junk.\n\n## 20240402\n\n### In lab\n\n- [Filled LN<sub>2</sub> dry shipper and dewar for Arianna](https://github.com/RobertsLab/resources/issues/1861) (GitHub Issue).\n\n- [Showed Zach how to use the plate reader](https://github.com/RobertsLab/resources/issues/1860) (GitHub Issue).\n\n### [Coral E5](https://github.com/urol-e5/deep-dive) (GitHub repo)\n\n- Worked on running pipeline for _A.pulchra_ with agreed upon trimming/merging params.\n\n## 20240401\n\n### [CEABIGR](https://github.com/sr320/ceabigr) (GitHub repo)\n\n- Looked up [Freebayes parameters](https://github.com/sr320/ceabigr/issues/109) (GitHub Issue).\n\n### [Coral E5](https://github.com/urol-e5/deep-dive) (GitHub repo)\n\n- Worked on running pipeline for _A.pulchra_ with agreed upon trimming/merging params.\n\n### Miscellaneous\n\n- [Submitted PO request for cod WGBS at Psomagen](https://github.com/RobertsLab/resources/issues/1786) (GitHub Issue).\n","srcMarkdownNoYaml":"\n## 20240430\n\n### In lab\n\n- Helped Eric get started with qPCR analysis.\n\n- EH&S disposal of [mercuric chloride waste in FTR 228](https://github.com/RobertsLab/resources/issues/1536) (GitHub Issue).\n\n- Replaced Owl's UPS battery (APCRBC123).\n\n- [Dealt with Owl dying](https://github.com/RobertsLab/resources/issues/1882) (GitHub Issue).\n\n- [Shipped Pacific cod tissues for WGNS](../2024-04-30-Samples-Submitted---Pacific-Cod-40-Tissue-Samples-for-WGBS-at-Psomagen/index.qmd) (Notebook).\n\n## 20240429\n\n### [DuMOAR](https://github.com/laurahspencer/DuMOAR) (GitHub repo)\n\n- Continued to look into [`Trinotate`](https://github.com/Trinotate/Trinotate/wiki) annotation [issue where BLASTp results do _not_ have SwissProt IDs(https://github.com/laurahspencer/DuMOAR/issues/44#issuecomment-1977588065)].\n\n  - Issue is related to built-in BLASTp database. FastA headers do _not_ contain SwissProt IDs, Thus, they don't end up in the final annotation report file.\n\n  - Considering \"custom\" BLASTp database created from the full UniProt protein FastA, since I belive the [`Trinotate`](https://github.com/Trinotate/Trinotate/wiki) parsing is based on column numbers in the BLASTp output format 6 (which would contain the SwisProt IDs), as opposed to specifically parsing specifically formatted strings within that output format.\n\n### Singularity Containers\n\n- Related to above, started to explore the use of containers - specifically the [`Trinotate`](https://github.com/Trinotate/Trinotate/wiki) Singularity image.\n\n  - Most confusing aspect is the fact that there are two programs which cannot be included with [`Trinotate`](https://github.com/Trinotate/Trinotate/wiki), due to licensing issues:\n\n    - `signalp6`\n    - `tmhmmv2`\n\n    The main question: How do I access/run these programs if they're not in the container? To do so, I downloaded/installed them on Raven and then I added them to the container's system `$PATH` when starting the container, like so:\n\n    ```bash\n    singularity shell -e \\\n    --env PREPEND_PATH=\"/home/sam/programs/mambaforge/envs/singalp6_env/bin:/home/shared/tmhmm-2.0c/bin:/home/shared/infernal-1.1.5-linux-intel-gcc/binaries:/home/shared/hmmer-3.4/src\" \\\n    /home/shared/containers/trinotate.v4.0.2.simg\n    ```\n\n    This appended the programs on my computer to the beginning of the container's system `$PATH`, thus allowing these programs to be called.\n\n  - Another confusing aspect was how to access locations on my local computer once I was in the container. For example, the user's `$HOME` directory is mounted/bound (i.e. accessible) by default. However, I also needed access to `/home/shared`, but I didn't want to bind this to a directory within the container because then it would superseded the contents of the specified directory in the container. Since I wasn't terribly familiar with the container's structure, nor how to add a directory when starting the container image, I managed to figure out that the current directory from which the user starts the container image is automatically bound. So, I navigated to `/home/shared` first, then started the container with the command shown above. This permitted me to access `/home/shared` and all its subdirectories.\n\n## 20240426\n\n### [DuMOAR](https://github.com/laurahspencer/DuMOAR) (GitHub repo)\n\n- Continued to look into [`Trinotate`](https://github.com/Trinotate/Trinotate/wiki) annotation [issue where BLASTp results do _not_ have SwissProt IDs(https://github.com/laurahspencer/DuMOAR/issues/44#issuecomment-1977588065)].\n\n  - Started to explore newer version of [`Trinotate`](https://github.com/Trinotate/Trinotate/wiki) to see if the issue could be resolved.\n\n## 20240425\n\n### [DuMOAR](https://github.com/laurahspencer/DuMOAR) (GitHub repo)\n\n- Started to look into [`Trinotate`](https://github.com/Trinotate/Trinotate/wiki) annotation [issue where BLASTp results do _not_ have SwissProt IDs(https://github.com/laurahspencer/DuMOAR/issues/44#issuecomment-1977588065)].\n\n## 20240424\n\n### [Coral E5](https://github.com/urol-e5/deep-dive) (GitHub repo)\n\n- Finished up _P.meandrina_ [`miRDeep2`](https://github.com/rajewsky-lab/mirdeep2) with cnidarian miRBase.\n\n## 20240423\n\n### Miscellaneous\n\n- [Resolved degarded storage pool issue with Gannet](../2024-04-23-Computer-Troubleshooting---Gannet-Missing-Storage-Pool/index.qmd).\n\n## 20240422\n\n### [Coral E5](https://github.com/urol-e5/deep-dive) (GitHub repo)\n\n- Worked on _P.meandrina_ stuff:\n\n  - BLASTn with cnidarin miRBase.\n  - [`miRDeep2`](https://github.com/rajewsky-lab/mirdeep2) with cnidarian miRBase.\n\n### Miscellaneous\n\n- ProCard reconcilation junk.\n\n## 20240402\n\n### In lab\n\n- [Filled LN<sub>2</sub> dry shipper and dewar for Arianna](https://github.com/RobertsLab/resources/issues/1861) (GitHub Issue).\n\n- [Showed Zach how to use the plate reader](https://github.com/RobertsLab/resources/issues/1860) (GitHub Issue).\n\n### [Coral E5](https://github.com/urol-e5/deep-dive) (GitHub repo)\n\n- Worked on running pipeline for _A.pulchra_ with agreed upon trimming/merging params.\n\n## 20240401\n\n### [CEABIGR](https://github.com/sr320/ceabigr) (GitHub repo)\n\n- Looked up [Freebayes parameters](https://github.com/sr320/ceabigr/issues/109) (GitHub Issue).\n\n### [Coral E5](https://github.com/urol-e5/deep-dive) (GitHub repo)\n\n- Worked on running pipeline for _A.pulchra_ with agreed upon trimming/merging params.\n\n### Miscellaneous\n\n- [Submitted PO request for cod WGBS at Psomagen](https://github.com/RobertsLab/resources/issues/1786) (GitHub Issue).\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","title":"Daily Bits - April 2024","date":"2024-04-01","draft":false,"categories":["daily bits","2024"]},"extensions":{"book":{"multiFile":true}}}},"draft":false,"projectFormats":["html"]}