{"title":"Bedgraph - Olympia oyster transcriptome (FAIL)","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","date":"2018-09-24 23:23:14+00:00","layout":"post","slug":"bedgraph-olympia-oyster-transcriptome-fail","title":"Bedgraph - Olympia oyster transcriptome (FAIL)","categories":["2018","Miscellaneous"],"tags":["alignment","bedgraph","bedtools","mox","olympia oyster","Ostrea lurida","samtools","transcriptome"]},"headingText":"RESULTS:","containsRefs":false,"markdown":"\n\nProgress on generating [bedgraphs from our Olympia oyster transcriptome](https://github.com/RobertsLab/resources/issues/356) continues.\n\n[Transcriptome assembly with Trinity completed 20180919](https://robertslab.github.io/sams-notebook/posts/2018/2018-09-19-transcriptome-assembly-olympia-oyster-rnaseq-data-with-trinity/).\n\nThen, [aligned the assembled transcriptome to our genome using Bowtie2](https://robertslab.github.io/sams-notebook/posts/2018/2018-09-20-transcriptome-alignment-olympia-oyster-trinity-transcriptome-aligned-to-genome-with-bowtie2/).\n\nFinally, I used BEDTools to convert the BAM to BED to bedgraph.\n\nThis required an initial indexing of our Olympia oyster genome FastA using samtools faidx tool.\n\nSBATCH script file:\n\n\n\n\n\n  * [20180924_oly_RNAseq_bedgraphs.sh](https://owl.fish.washington.edu/Athaliana/20180924_oly_RNAseq_bedgraphs/20180924_oly_RNAseq_bedgraphs.sh)\n\n\n\n\n    \n    <code>\n    #!/bin/bash\n    ## Job Name\n    #SBATCH --job-name=20180924_oly_bedgraphs\n    ## Allocation Definition \n    #SBATCH --account=srlab\n    #SBATCH --partition=srlab\n    ## Resources\n    ## Nodes\n    #SBATCH --nodes=1\n    ## Walltime (days-hours:minutes:seconds format)\n    #SBATCH --time=5-00:00:00\n    ## Memory per node\n    #SBATCH --mem=500G\n    ##turn on e-mail notification\n    #SBATCH --mail-type=ALL\n    #SBATCH --mail-user=samwhite@uw.edu\n    ## Specify the working directory for this job\n    #SBATCH --workdir=/gscratch/scrubbed/samwhite/20180924_oly_RNAseq_bedgraphs\n    \n    # Load Python Mox module for Python module availability\n    \n    module load intel-python3_2017\n    \n    # Document programs in PATH (primarily for program version ID)\n    \n    date >> system_path.log\n    echo \"\" >> system_path.log\n    echo \"System PATH for $SLURM_JOB_ID\" >> system_path.log\n    echo \"\" >> system_path.log\n    printf \"%0.s-\" {1..10} >> system_path.log\n    echo ${PATH} | tr : \\\\n >> system_path.log\n    \n    \n    # Set genome assembly FastA\n    oly_genome_fasta=/gscratch/srlab/sam/data/O_lurida/oly_genome_assemblies/Olurida_v081.fa\n    \n    # Set indexed genome assembly file\n    oly_genome_indexed=/gscratch/srlab/sam/data/O_lurida/oly_genome_assemblies/Olurida_v081.fa.fai\n    \n    # Set sorted transcriptome assembly bam file\n    oly_transcriptome=/gscratch/scrubbed/samwhite/20180919_oly_transcriptome_bowtie2/20180919_Olurida_v081.sorted.bam\n    \n    \n    # Set program paths\n    bedtools=/gscratch/srlab/programs/bedtools-2.27.1/bin\n    samtools=/gscratch/srlab/programs/samtools-1.9/samtools\n    \n    # Index genome FastA\n    ${samtools} faidx ${oly_genome_fasta}\n    \n    # Format indexed genome for bedtools\n    ## Requires only two columns: name<tab>length\n    awk -v OFS='\\t' {'print $1,$2'} ${oly_genome_indexed} > Olurida_v081.fa.fai.genome\n    \n    # Create bed file\n    ${bedtools}/bamToBed \\\n    -i ${oly_transcriptome} \\\n    > 20180924_oly_RNAseq.bam.bed\n    \n    \n    # Create bedgraph\n    ## Reports depth at each position (-bg in bedgraph format) and report regions with zero coverage (-a).\n    ## Screens for portions of reads coming from exons (-split).\n    ## Add genome browser track line to header of bedgraph file.\n    ${bedtools}/genomeCoverageBed \\\n    -i ${PWD}/20180924_oly_RNAseq.bed \\\n    -g Olurida_v081.fa.fai.genome \\\n    -bga \\\n    -split \\\n    -trackline \\\n    > 20180924_oly_RNAseq.bed\n    </code>\n\n\n\nAlignment was done using the following version of the Olympia oyster genome assembly:\n\n\n\n\n\n  * [Olurida_v081.fa](https://owl.fish.washington.edu/halfshell/genomic-databank/Olurida_v081.fa)\n\n\n\n\n\n* * *\n\n\n\n\n\n\n\n\nOutput folder:\n\n\n\n\n\n  * [20180924_oly_RNAseq_bedgraphs/](https://owl.fish.washington.edu/Athaliana/20180924_oly_RNAseq_bedgraphs/)\n\n\n\nIndexed and formatted genome file:\n\n\n\n  * [Olurida_v081.fa.fai.genome](https://owl.fish.washington.edu/Athaliana/20180924_oly_RNAseq_bedgraphs/Olurida_v081.fa.fai.genome)\n\n\n\nBedgraph file (for IGV):\n\n\n\n  * [20180924_oly_RNAseq.bed](https://owl.fish.washington.edu/Athaliana/20180924_oly_RNAseq_bedgraphs/20180924_oly_RNAseq.bed)\n\n\n\n\n\n* * *\n\n\n\nThis doesn't appear to have worked properly. Here's a view of the bedgraph file:\n\n\n    \n    <code>\n    track type=bedGraph\n    Contig0 0   116746  0\n    Contig1 0   87411   0\n    Contig2 0   139250  0\n    Contig3 0   141657  0\n    Contig4 0   95692   0\n    Contig5 0   130522  0\n    Contig6 0   94893   0\n    Contig7 0   109667  0\n    Contig8 0   95943   0\n    </code>\n\n\n\nI'd expect multiple entries for each contig (ideally), indicating start/stop positions for where transcripts align within a given contig. However, this appears to simply be a list of all the genome contigs and their lengths (Start=0, Stop=n).\n\nI would expect to see something li\n\nI'll look into this further and see where this pipeline goes wrong.\n","srcMarkdownNoYaml":"\n\nProgress on generating [bedgraphs from our Olympia oyster transcriptome](https://github.com/RobertsLab/resources/issues/356) continues.\n\n[Transcriptome assembly with Trinity completed 20180919](https://robertslab.github.io/sams-notebook/posts/2018/2018-09-19-transcriptome-assembly-olympia-oyster-rnaseq-data-with-trinity/).\n\nThen, [aligned the assembled transcriptome to our genome using Bowtie2](https://robertslab.github.io/sams-notebook/posts/2018/2018-09-20-transcriptome-alignment-olympia-oyster-trinity-transcriptome-aligned-to-genome-with-bowtie2/).\n\nFinally, I used BEDTools to convert the BAM to BED to bedgraph.\n\nThis required an initial indexing of our Olympia oyster genome FastA using samtools faidx tool.\n\nSBATCH script file:\n\n\n\n\n\n  * [20180924_oly_RNAseq_bedgraphs.sh](https://owl.fish.washington.edu/Athaliana/20180924_oly_RNAseq_bedgraphs/20180924_oly_RNAseq_bedgraphs.sh)\n\n\n\n\n    \n    <code>\n    #!/bin/bash\n    ## Job Name\n    #SBATCH --job-name=20180924_oly_bedgraphs\n    ## Allocation Definition \n    #SBATCH --account=srlab\n    #SBATCH --partition=srlab\n    ## Resources\n    ## Nodes\n    #SBATCH --nodes=1\n    ## Walltime (days-hours:minutes:seconds format)\n    #SBATCH --time=5-00:00:00\n    ## Memory per node\n    #SBATCH --mem=500G\n    ##turn on e-mail notification\n    #SBATCH --mail-type=ALL\n    #SBATCH --mail-user=samwhite@uw.edu\n    ## Specify the working directory for this job\n    #SBATCH --workdir=/gscratch/scrubbed/samwhite/20180924_oly_RNAseq_bedgraphs\n    \n    # Load Python Mox module for Python module availability\n    \n    module load intel-python3_2017\n    \n    # Document programs in PATH (primarily for program version ID)\n    \n    date >> system_path.log\n    echo \"\" >> system_path.log\n    echo \"System PATH for $SLURM_JOB_ID\" >> system_path.log\n    echo \"\" >> system_path.log\n    printf \"%0.s-\" {1..10} >> system_path.log\n    echo ${PATH} | tr : \\\\n >> system_path.log\n    \n    \n    # Set genome assembly FastA\n    oly_genome_fasta=/gscratch/srlab/sam/data/O_lurida/oly_genome_assemblies/Olurida_v081.fa\n    \n    # Set indexed genome assembly file\n    oly_genome_indexed=/gscratch/srlab/sam/data/O_lurida/oly_genome_assemblies/Olurida_v081.fa.fai\n    \n    # Set sorted transcriptome assembly bam file\n    oly_transcriptome=/gscratch/scrubbed/samwhite/20180919_oly_transcriptome_bowtie2/20180919_Olurida_v081.sorted.bam\n    \n    \n    # Set program paths\n    bedtools=/gscratch/srlab/programs/bedtools-2.27.1/bin\n    samtools=/gscratch/srlab/programs/samtools-1.9/samtools\n    \n    # Index genome FastA\n    ${samtools} faidx ${oly_genome_fasta}\n    \n    # Format indexed genome for bedtools\n    ## Requires only two columns: name<tab>length\n    awk -v OFS='\\t' {'print $1,$2'} ${oly_genome_indexed} > Olurida_v081.fa.fai.genome\n    \n    # Create bed file\n    ${bedtools}/bamToBed \\\n    -i ${oly_transcriptome} \\\n    > 20180924_oly_RNAseq.bam.bed\n    \n    \n    # Create bedgraph\n    ## Reports depth at each position (-bg in bedgraph format) and report regions with zero coverage (-a).\n    ## Screens for portions of reads coming from exons (-split).\n    ## Add genome browser track line to header of bedgraph file.\n    ${bedtools}/genomeCoverageBed \\\n    -i ${PWD}/20180924_oly_RNAseq.bed \\\n    -g Olurida_v081.fa.fai.genome \\\n    -bga \\\n    -split \\\n    -trackline \\\n    > 20180924_oly_RNAseq.bed\n    </code>\n\n\n\nAlignment was done using the following version of the Olympia oyster genome assembly:\n\n\n\n\n\n  * [Olurida_v081.fa](https://owl.fish.washington.edu/halfshell/genomic-databank/Olurida_v081.fa)\n\n\n\n\n\n* * *\n\n\n\n\n\n# RESULTS:\n\n\n\nOutput folder:\n\n\n\n\n\n  * [20180924_oly_RNAseq_bedgraphs/](https://owl.fish.washington.edu/Athaliana/20180924_oly_RNAseq_bedgraphs/)\n\n\n\nIndexed and formatted genome file:\n\n\n\n  * [Olurida_v081.fa.fai.genome](https://owl.fish.washington.edu/Athaliana/20180924_oly_RNAseq_bedgraphs/Olurida_v081.fa.fai.genome)\n\n\n\nBedgraph file (for IGV):\n\n\n\n  * [20180924_oly_RNAseq.bed](https://owl.fish.washington.edu/Athaliana/20180924_oly_RNAseq_bedgraphs/20180924_oly_RNAseq.bed)\n\n\n\n\n\n* * *\n\n\n\nThis doesn't appear to have worked properly. Here's a view of the bedgraph file:\n\n\n    \n    <code>\n    track type=bedGraph\n    Contig0 0   116746  0\n    Contig1 0   87411   0\n    Contig2 0   139250  0\n    Contig3 0   141657  0\n    Contig4 0   95692   0\n    Contig5 0   130522  0\n    Contig6 0   94893   0\n    Contig7 0   109667  0\n    Contig8 0   95943   0\n    </code>\n\n\n\nI'd expect multiple entries for each contig (ideally), indicating start/stop positions for where transcripts align within a given contig. However, this appears to simply be a list of all the genome contigs and their lengths (Start=0, Stop=n).\n\nI would expect to see something li\n\nI'll look into this further and see where this pipeline goes wrong.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","date":"2018-09-24 23:23:14+00:00","layout":"post","slug":"bedgraph-olympia-oyster-transcriptome-fail","title":"Bedgraph - Olympia oyster transcriptome (FAIL)","categories":["2018","Miscellaneous"],"tags":["alignment","bedgraph","bedtools","mox","olympia oyster","Ostrea lurida","samtools","transcriptome"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}