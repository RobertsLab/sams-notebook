{"title":"Assembly - Geoduck NovaSeq using SparseAssembler kmer = 101","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","date":"2018-03-27 15:58:42+00:00","layout":"post","slug":"assembly-geoduck-novaseq-using-sparseassembler-kmer-101","title":"Assembly - Geoduck NovaSeq using SparseAssembler kmer = 101","categories":["2018","Geoduck Genome Sequencing"],"tags":["geoduck","NovaSeq","Panopea generosa","QUAST","SparseAssembler"]},"headingText":"Results","containsRefs":false,"markdown":"\n\nThe [prior run used a kmer size of 61](https://robertslab.github.io/sams-notebook/posts/2018/2018-03-22-assembly-geoduck-novaseq-using-sparseassembler-tldr-it-worked/), and the resulting assembly was rather poor (small N50).\n\nFor this run, I arbitrarily increased the kmer size to 101, in hopes that this will improve the assembly.\n\nThe job was run on our Mox node.\n\nHere's the batch script to initiate the job:\n\n[20180322_SparseAssembler_novaseq_geoduck_slurm.sh](https://owl.fish.washington.edu/Athaliana/20180322_SparseAssembler_novaseq_geoduck/20180322_SparseAssembler_novaseq_geoduck_slurm.sh)\n\n\n    \n    <code>\n    #SBATCH --job-name=20180322_sparse_assembler_geo_novaseq\n    ## Allocation Definition \n    #SBATCH --account=srlab\n    #SBATCH --partition=srlab\n    ## Resources\n    ## Nodes (We only get 1, so this is fixed)\n    #SBATCH --nodes=1   \n    ## Walltime (days-hours:minutes:seconds format)\n    #SBATCH --time=30-00:00:00\n    ## Memory per node\n    #SBATCH --mem=500G\n    ##turn on e-mail notification\n    #SBATCH --mail-type=ALL\n    #SBATCH --mail-user=samwhite@uw.edu\n    ## Specify the working directory for this job\n    #SBATCH --workdir=/gscratch/scrubbed/samwhite/20180322_SparseAssembler_novaseq_geoduck\n    \n    /gscratch/srlab/programs/SparseAssembler/SparseAssembler \\\n    LD 0 \\\n    NodeCovTh 1 \\\n    EdgeCovTh 0 \\\n    k 101 \\\n    g 15 \\\n    PathCovTh 100 \\\n    GS 2200000000 \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/AD002_S9_L001_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/AD002_S9_L001_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/AD002_S9_L002_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/AD002_S9_L002_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR005_S4_L001_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR005_S4_L001_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR005_S4_L002_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR005_S4_L002_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR006_S3_L001_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR006_S3_L001_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR006_S3_L002_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR006_S3_L002_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR012_S1_L001_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR012_S1_L001_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR012_S1_L002_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR012_S1_L002_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR013_AD013_S2_L001_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR013_AD013_S2_L001_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR013_AD013_S2_L002_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR013_AD013_S2_L002_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR014_AD014_S5_L001_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR014_AD014_S5_L001_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR014_AD014_S5_L002_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR014_AD014_S5_L002_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR015_AD015_S6_L001_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR015_AD015_S6_L001_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR015_AD015_S6_L002_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR015_AD015_S6_L002_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR019_S7_L001_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR019_S7_L001_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR019_S7_L002_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR019_S7_L002_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR021_S8_L001_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR021_S8_L001_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR021_S8_L002_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR021_S8_L002_R2_001_val_2_val_2.fastq\n    </code>\n\n\n\n\n\n\n\n\nOutput folder: [20180322_SparseAssembler_novaseq_geoduck/](https://owl.fish.washington.edu/Athaliana/20180322_SparseAssembler_novaseq_geoduck/)\n\nThis completed much more quickly than the previous run (kmer = 61). The previous assembly took ~10 days, while this assembly completed in ~4 days!\n\nThe primary output file of interest is this FASTA file:\n\n\n\n\n\n  * [Contigs.txt (12GB)(https://owl.fish.washington.edu/Athaliana/20180322_SparseAssembler_novaseq_geoduck/Contigs.txt)\n\n\n\nIn order to get a rough idea of how this assembly looks, I ran it through [Quast Version: 4.5, 15ca3b9](https://quast.sourceforge.net/quast.html):\n\n`python software/quast-4.5/quast.py \\\n-t 16 \n/mnt/owl/Athaliana/20180322_SparseAssembler_novaseq_geoduck/Contigs.txt`\n\nQuast output folder: [results_2018_03_27_08_25_52/](https://owl.fish.washington.edu/Athaliana/quast_results/results_2018_03_27_08_25_52/)\n\nHere're the stats on the assembly:\n\nQuast output (text): [results_2018_03_27_08_25_52/report.txt](https://owl.fish.washington.edu/Athaliana/quast_results/results_2018_03_27_08_25_52/report.txt)\n\nQuast output (HTML):[results_2018_03_27_08_25_52/report.html](https://owl.fish.washington.edu/Athaliana/quast_results/results_2018_03_27_08_25_52/report.html)\n\n<iframe src=\"https://owl.fish.washington.edu/Athaliana/quast_results/results_2018_03_27_08_25_52/report.html\" width=\"100%\" height=\"2000\" scrolling=\"yes\"></iframe>\n\nThis is definitely a better assembly than [the kmer = 61 assembly](https://robertslab.github.io/sams-notebook/posts/2018/2018-03-22-assembly-geoduck-novaseq-using-sparseassembler-tldr-it-worked/).\n\nN50 = 1149\n\nAlso, there's a single, large contig of 56,361bp, and 54 contigs > 25,000bp. This is good.\n\nAdmittedly, I'm a little surprised (and, disappointed) the N50 is as small as it is. However, we have a pretty decent assembly on our hands!\n\nSince SparseAssembler seems to actually run (and, relatively quickly), I'm very tempted to just throw ALL of our geoduck data at it and see how it turns out...\n","srcMarkdownNoYaml":"\n\nThe [prior run used a kmer size of 61](https://robertslab.github.io/sams-notebook/posts/2018/2018-03-22-assembly-geoduck-novaseq-using-sparseassembler-tldr-it-worked/), and the resulting assembly was rather poor (small N50).\n\nFor this run, I arbitrarily increased the kmer size to 101, in hopes that this will improve the assembly.\n\nThe job was run on our Mox node.\n\nHere's the batch script to initiate the job:\n\n[20180322_SparseAssembler_novaseq_geoduck_slurm.sh](https://owl.fish.washington.edu/Athaliana/20180322_SparseAssembler_novaseq_geoduck/20180322_SparseAssembler_novaseq_geoduck_slurm.sh)\n\n\n    \n    <code>\n    #SBATCH --job-name=20180322_sparse_assembler_geo_novaseq\n    ## Allocation Definition \n    #SBATCH --account=srlab\n    #SBATCH --partition=srlab\n    ## Resources\n    ## Nodes (We only get 1, so this is fixed)\n    #SBATCH --nodes=1   \n    ## Walltime (days-hours:minutes:seconds format)\n    #SBATCH --time=30-00:00:00\n    ## Memory per node\n    #SBATCH --mem=500G\n    ##turn on e-mail notification\n    #SBATCH --mail-type=ALL\n    #SBATCH --mail-user=samwhite@uw.edu\n    ## Specify the working directory for this job\n    #SBATCH --workdir=/gscratch/scrubbed/samwhite/20180322_SparseAssembler_novaseq_geoduck\n    \n    /gscratch/srlab/programs/SparseAssembler/SparseAssembler \\\n    LD 0 \\\n    NodeCovTh 1 \\\n    EdgeCovTh 0 \\\n    k 101 \\\n    g 15 \\\n    PathCovTh 100 \\\n    GS 2200000000 \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/AD002_S9_L001_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/AD002_S9_L001_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/AD002_S9_L002_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/AD002_S9_L002_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR005_S4_L001_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR005_S4_L001_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR005_S4_L002_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR005_S4_L002_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR006_S3_L001_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR006_S3_L001_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR006_S3_L002_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR006_S3_L002_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR012_S1_L001_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR012_S1_L001_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR012_S1_L002_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR012_S1_L002_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR013_AD013_S2_L001_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR013_AD013_S2_L001_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR013_AD013_S2_L002_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR013_AD013_S2_L002_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR014_AD014_S5_L001_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR014_AD014_S5_L001_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR014_AD014_S5_L002_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR014_AD014_S5_L002_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR015_AD015_S6_L001_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR015_AD015_S6_L001_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR015_AD015_S6_L002_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR015_AD015_S6_L002_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR019_S7_L001_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR019_S7_L001_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR019_S7_L002_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR019_S7_L002_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR021_S8_L001_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR021_S8_L001_R2_001_val_2_val_2.fastq \\\n    i1 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR021_S8_L002_R1_001_val_1_val_1.fastq \\\n    i2 /gscratch/scrubbed/samwhite/20180129_trimmed_again/NR021_S8_L002_R2_001_val_2_val_2.fastq\n    </code>\n\n\n\n\n\n##### Results\n\n\n\nOutput folder: [20180322_SparseAssembler_novaseq_geoduck/](https://owl.fish.washington.edu/Athaliana/20180322_SparseAssembler_novaseq_geoduck/)\n\nThis completed much more quickly than the previous run (kmer = 61). The previous assembly took ~10 days, while this assembly completed in ~4 days!\n\nThe primary output file of interest is this FASTA file:\n\n\n\n\n\n  * [Contigs.txt (12GB)(https://owl.fish.washington.edu/Athaliana/20180322_SparseAssembler_novaseq_geoduck/Contigs.txt)\n\n\n\nIn order to get a rough idea of how this assembly looks, I ran it through [Quast Version: 4.5, 15ca3b9](https://quast.sourceforge.net/quast.html):\n\n`python software/quast-4.5/quast.py \\\n-t 16 \n/mnt/owl/Athaliana/20180322_SparseAssembler_novaseq_geoduck/Contigs.txt`\n\nQuast output folder: [results_2018_03_27_08_25_52/](https://owl.fish.washington.edu/Athaliana/quast_results/results_2018_03_27_08_25_52/)\n\nHere're the stats on the assembly:\n\nQuast output (text): [results_2018_03_27_08_25_52/report.txt](https://owl.fish.washington.edu/Athaliana/quast_results/results_2018_03_27_08_25_52/report.txt)\n\nQuast output (HTML):[results_2018_03_27_08_25_52/report.html](https://owl.fish.washington.edu/Athaliana/quast_results/results_2018_03_27_08_25_52/report.html)\n\n<iframe src=\"https://owl.fish.washington.edu/Athaliana/quast_results/results_2018_03_27_08_25_52/report.html\" width=\"100%\" height=\"2000\" scrolling=\"yes\"></iframe>\n\nThis is definitely a better assembly than [the kmer = 61 assembly](https://robertslab.github.io/sams-notebook/posts/2018/2018-03-22-assembly-geoduck-novaseq-using-sparseassembler-tldr-it-worked/).\n\nN50 = 1149\n\nAlso, there's a single, large contig of 56,361bp, and 54 contigs > 25,000bp. This is good.\n\nAdmittedly, I'm a little surprised (and, disappointed) the N50 is as small as it is. However, we have a pretty decent assembly on our hands!\n\nSince SparseAssembler seems to actually run (and, relatively quickly), I'm very tempted to just throw ALL of our geoduck data at it and see how it turns out...\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","date":"2018-03-27 15:58:42+00:00","layout":"post","slug":"assembly-geoduck-novaseq-using-sparseassembler-kmer-101","title":"Assembly - Geoduck NovaSeq using SparseAssembler kmer = 101","categories":["2018","Geoduck Genome Sequencing"],"tags":["geoduck","NovaSeq","Panopea generosa","QUAST","SparseAssembler"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}