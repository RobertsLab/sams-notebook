{"title":"Genome Annotation - Olympia oyster genome using WQ-MAKER Instance on Jetstream","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","date":"2018-08-07 17:44:23+00:00","layout":"post","slug":"genome-annotation-olympia-oyster-genome-using-wq-maker-instance-on-jetstream","title":"Genome Annotation - Olympia oyster genome using WQ-MAKER Instance on Jetstream","categories":["2018","Olympia Oyster Genome Sequencing","annotation","Atmosphere","Cyverse","genome","JetStream","maker","olympia oyster","Ostrea lurida","wq-maker","Xsede"]},"headingText":"Genome file:","containsRefs":false,"markdown":"\n\nYesterday, our [Xsede Startup Application (Google Doc)](https://docs.google.com/document/d/1v4ukb4M3ZY73KaBsYjcmF35pAE2pEGH9AevdXAxCONI/edit?usp=sharing) got approval for 100,000 Service Units (SUs) and 1TB of disk space on Xsede/Atmosphere/Jetstream (or, whatever it's actually called!). The approval happened within an hour of submitting the application!\n\nHere's a copy of the approval notice:\n\n\n\n<blockquote>\n  Dear Dr. Roberts:\n\n  Your recently submitted an XSEDE Startup request has been reviewed and approved.\n\n  PI: Steven Roberts, University of Washington\n\n  Request: Annotation of Olympia oyster (Ostrea lurida) and Pacific geoduck (Panopea generosa) genomes using WQ_MAKER on Jetstream cloud.\n\n  Request Number: MCB180124 (New)\n\n  Start Date: N/A\n  \n  End Date: 2019-08-05\n\n  Awarded Resources: IU/TACC (Jetstream): 100,000.0 SUs\n\n  IU/TACC Storage (Jetstream Storage): 1,000.0 GB\n\n  Allocations Admin Comments:\n\n  The estimated value of these awarded resources is $14,890.00. The allocation of these resources represents a considerable investment by the NSF in advanced computing infrastructure for U.S. The dollar value of your allocation is estimated from the NSF awards supporting the allocated resources.\n\n  If XSEDE Extended Collaborative Support (ECSS) assistance was recommended by the review panel, you will be contacted by the ECSS team within the next two weeks to begin discussing this collaboration.\n\n\n  By default the PI and all co-PIs will be added to the resources awarded. If this is an award on a renewal request, current users will have their account end dates modified to reflect the new end date of this award. PIs, co-PIs, or Allocation Managers can add users to or remove users from resources on this project by logging into the portal (https://portal.xsede.org) and using the 'Add/Remove User' form.\n\n  Share the impact of XSEDE! In exchange for access to the XSEDE ecosystem, we ask that all users let us know what XSEDE has helped you achieve:\n\n\n>\n>\n\n>   * For all publications, please acknowledge use of XSEDE and allocated resources by citing the XSEDE paper and also add your publications to your user profile.\n>\n\n>   * Tell us about your achievements .\n>\n\n>   * Help us improve our reporting by keeping your XSEDE user profile up to date and completing the demographic fields .\n>\n\n\n  For question regarding this decision, please contact help@xsede.org.\n\n  Best regards,\n  XSEDE Resource Allocations Service\n\n  ===========================\n\n  REVIEWER COMMENTS\n\n  ===========================\n\n  Review #0 - Excellent\n\n  Assessment and Summary:\n  Maker is a well-known and fitting workflow for Jetstream. This should be a good use of resources.\n\n  Appropriateness of Methodology:\n\n  _After_ each user on the allocation has logged in, the PI will need to open a ticket via help@xsede.org and request the quota be set per the allocation to 1TB. Please provide the XSEDE portal ID of each user.\n\n  Appropriateness of Computational Research Plan:\n\n  We request that any publications stemming from work done using Jetstream cite us\n\n  Efficient Use of Resources:\n</blockquote>\n\n\n\n\n\n* * *\n\n\n\nWe had a tremendous amount of help from Upendra Devisetty at CyVerse in getting the [Xsede](https://portal.xsede.org) Startup Application written, as well as running WQ-MAKER on Xsede/Atmosphere/Jetstream (or, whatever it's called!).\n\n\n\n* * *\n\n\n\nNow, on to how I got the run going...\n\nI initiated the Olympia oyster genome annotation using a [WQ-MAKER instance (MAKER 2.31.9 with CCTools v3.1) on Jetstream](https://use.jetstream-cloud.org/application/images/492):\n\n![](https://owl.fish.washington.edu/Athaliana/20180807_wq-maker_04.png)\n\n\n\n* * *\n\n\n\nI followed the excellent step-by-step directions here:\n\n\n\n\n\n  * [MAKER 2.31.9 Jetstream Tutorial](https://wiki.cyverse.org/wiki/display/TUT/MAKER+2.31.9+with+CCTOOLS+Jetstream+Tutorial)\n\n\n\nThe \"MASTER\" machine was a \"m1.xlarge\" machine (i.e. CPU: 24, Mem: 60 GB, Disk: 60 GB).\n\nI attached a 1TB volume to the MASTER machine.\n\nI set up the run using 21 \"WORKER\" machines. Twenty WORKERS were \"m1.large\" machines (i.e. CPU: 10, Mem: 30 GB, Disk: 60 GB). The remaining WORKER was set at \"m1.xlarge\" (i.e. CPU: 24, Mem: 60 GB, Disk: 60 GB) to use up the rest of our allocated memory.\n\n![](https://owl.fish.washington.edu/Athaliana/20180807_wq-maker_01.png)\n\n\n\n* * *\n\n\n\nMASTER machine was initialized with the following command:\n\n\n\n    <code>nohup wq_maker -contigs-per-split 1 -cores 1 -memory 2048 -disk 4096 -N wq_maker_oly${USER} -d all -o master.dbg -debug_size_limit=0 -stats test_out_stats.txt > log_file.txt 2>&1 &</code>\n\n\n\nEach WORKER was started with the following command:\n\n\n\n    <code>nohup work_queue_worker -N wq_maker_oly${USER} --cores all --debug-rotate-max=0 -d all -o worker.dbg > log_file_2.txt 2>&1 &</code>\n\n\n\nWhen starting each WORKER, an error message was generated, but this doesn't seem to have any impact on the ability of the program to run:\n\n![](https://owl.fish.washington.edu/Athaliana/20180807_wq-maker_worker_error.png)\n\n\n\n* * *\n\n\n\nI checked on the status of the run and you can see that there are 22 WORKERS and 15,568 files \"WAITING\". BUT, there are 159,429 contigs in our genome FastA!\n\nWhy don't these match??!!\n\nThis is because WQ-MAKER splits the genome FastA into smaller FastA files containg only 10 sequences each. This is why we see 10-fold fewer files being processed than sequences in our genome file.\n\n![](https://owl.fish.washington.edu/Athaliana/20180807_wq-maker_03.png)\n\n\n\n* * *\n\n\n\nHere is the rest of the nitty gritty details:\n\n\n\n\n\n\n\n\n\n\n  * [Olurida_v081.fa](https://owl.fish.washington.edu/halfshell/genomic-databank/Olurida_v081.fa)\n\n\n\n    * See our [Genomic Resources GtiHub wiki for deets](https://github.com/RobertsLab/resources/wiki/Genomic-Resources#ostrea-lurida)\n\n\n\n\n\n\n\n##### Transcriptome file:\n\n\n\n\n\n\n\n  * [Olurida_transcriptome_v3.fasta](https://eagle.fish.washington.edu/cnidarian/Olurida_transcriptome_v3.fasta)\n\n\n\n\n\n##### Proteome files (NCBI):\n\n\n\nThe two FastA files below were concatenated into a single FastA file (`gigas_virginica_ncbi_proteomes.fasta`) for use in WQ-MAKER.\n\n\n\n\n\n  * _Crassostrea gigas_\n\n\n\n    * [GCA_000297895.1_oyster_v9_protein.faa.gz](ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/297/895/GCA_000297895.1_oyster_v9/GCA_000297895.1_oyster_v9_protein.faa.gz)\n\n\n\n\n  * _Crassostrea virginica_\n\n\n\n    * [GCF_002022765.2_C_virginica-3.0_protein.faa.gz](ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/002/022/765/GCF_002022765.2_C_virginica-3.0/GCF_002022765.2_C_virginica-3.0_protein.faa.gz)\n\n\n\n\n\n\n\n##### Maker options control file (maker_opts.ctl):\n\n\n\nThis is a bit difficult to read in this notebook; copy and paste in text editor for easier viewing.\n\nNOTE: Paths to files (e.g. genome FastA) have to be _relative_ paths; cannot be absolute paths!\n\n\n\n    <code>\n    #-----Genome (these are always required)\n    genome=../data/oly_genome/Olurida_v081.fa #genome sequence (fasta file or fasta embeded in GFF3 file)\n    organism_type=eukaryotic #eukaryotic or prokaryotic. Default is eukaryotic\n\n    #-----Re-annotation Using MAKER Derived GFF3\n    maker_gff= #MAKER derived GFF3 file\n    est_pass=0 #use ESTs in maker_gff: 1 = yes, 0 = no\n    altest_pass=0 #use alternate organism ESTs in maker_gff: 1 = yes, 0 = no\n    protein_pass=0 #use protein alignments in maker_gff: 1 = yes, 0 = no\n    rm_pass=0 #use repeats in maker_gff: 1 = yes, 0 = no\n    model_pass=0 #use gene models in maker_gff: 1 = yes, 0 = no\n    pred_pass=0 #use ab-initio predictions in maker_gff: 1 = yes, 0 = no\n    other_pass=0 #passthrough anyything else in maker_gff: 1 = yes, 0 = no\n\n    #-----EST Evidence (for best results provide a file for at least one)\n    est=../data/oly_transcriptome/Olurida_transcriptome_v3.fasta #set of ESTs or assembled mRNA-seq in fasta format\n    altest= #EST/cDNA sequence file in fasta format from an alternate organism\n    est_gff= #aligned ESTs or mRNA-seq from an external GFF3 file\n    altest_gff= #aligned ESTs from a closly relate species in GFF3 format\n\n    #-----Protein Homology Evidence (for best results provide a file for at least one)\n    protein=../data/gigas_virginica_ncbi_proteomes.fasta  #protein sequence file in fasta format (i.e. from mutiple oransisms)\n    protein_gff=  #aligned protein homology evidence from an external GFF3 file\n\n    #-----Repeat Masking (leave values blank to skip repeat masking)\n    model_org=all #select a model organism for RepBase masking in RepeatMasker\n    rmlib= #provide an organism specific repeat library in fasta format for RepeatMasker\n    repeat_protein= #provide a fasta file of transposable element proteins for RepeatRunner\n    rm_gff= #pre-identified repeat elements from an external GFF3 file\n    prok_rm=0 #forces MAKER to repeatmask prokaryotes (no reason to change this), 1 = yes, 0 = no\n    softmask=1 #use soft-masking rather than hard-masking in BLAST (i.e. seg and dust filtering)\n\n    #-----Gene Prediction\n    snaphmm= #SNAP HMM file\n    gmhmm= #GeneMark HMM file\n    augustus_species= #Augustus gene prediction species model\n    fgenesh_par_file= #FGENESH parameter file\n    pred_gff= #ab-initio predictions from an external GFF3 file\n    model_gff= #annotated gene models from an external GFF3 file (annotation pass-through)\n    est2genome=0 #infer gene predictions directly from ESTs, 1 = yes, 0 = no\n    protein2genome=0 #infer predictions from protein homology, 1 = yes, 0 = no\n    trna=0 #find tRNAs with tRNAscan, 1 = yes, 0 = no\n    snoscan_rrna= #rRNA file to have Snoscan find snoRNAs\n    unmask=0 #also run ab-initio prediction programs on unmasked sequence, 1 = yes, 0 = no\n\n    #-----Other Annotation Feature Types (features MAKER doesn't recognize)\n    other_gff= #extra features to pass-through to final MAKER generated GFF3 file\n\n    #-----External Application Behavior Options\n    alt_peptide=C #amino acid used to replace non-standard amino acids in BLAST databases\n    cpus=1 #max number of cpus to use in BLAST and RepeatMasker (not for MPI, leave 1 when using MPI)\n\n    #-----MAKER Behavior Options\n    max_dna_len=100000 #length for dividing up contigs into chunks (increases/decreases memory usage)\n    min_contig=1 #skip genome contigs below this length (under 10kb are often useless)\n\n    pred_flank=200 #flank for extending evidence clusters sent to gene predictors\n    pred_stats=0 #report AED and QI statistics for all predictions as well as models\n    AED_threshold=1 #Maximum Annotation Edit Distance allowed (bound by 0 and 1)\n    min_protein=0 #require at least this many amino acids in predicted proteins\n    alt_splice=0 #Take extra steps to try and find alternative splicing, 1 = yes, 0 = no\n    always_complete=0 #extra steps to force start and stop codons, 1 = yes, 0 = no\n    map_forward=0 #map names and attributes forward from old GFF3 genes, 1 = yes, 0 = no\n    keep_preds=0 #Concordance threshold to add unsupported gene prediction (bound by 0 and 1)\n\n    split_hit=10000 #length for the splitting of hits (expected max intron size for evidence alignments)\n    single_exon=0 #consider single exon EST evidence when generating annotations, 1 = yes, 0 = no\n    single_length=250 #min length required for single exon ESTs if 'single_exon is enabled'\n    correct_est_fusion=0 #limits use of ESTs in annotation to avoid fusion genes\n\n    tries=2 #number of times to try a contig if there is a failure for some reason\n    clean_try=0 #remove all data from previous run before retrying, 1 = yes, 0 = no\n    clean_up=0 #removes theVoid directory with individual analysis files, 1 = yes, 0 = no\n    TMP= #specify a directory other than the system default temporary directory for temporary files\n    </code>\n\n\n\nAfter the run finishes, it will have produced a corresponding GFF file for each scaffold. This is unwieldly, so the GFFs will be merged using the following code:\n\n\n\n    <code>$ gff3_merge -n -d Olurida_v081.maker.output/Olurida_v081_master_datastore_index.log</code>\n\n\n\nAll WORKERS were running as of 07:45 today. As of this posting (~3hrs later), WQ-MAKER had already processed ~45% of the files! Annotation will be finished by the end of today!!! Crazy!\n","srcMarkdownNoYaml":"\n\nYesterday, our [Xsede Startup Application (Google Doc)](https://docs.google.com/document/d/1v4ukb4M3ZY73KaBsYjcmF35pAE2pEGH9AevdXAxCONI/edit?usp=sharing) got approval for 100,000 Service Units (SUs) and 1TB of disk space on Xsede/Atmosphere/Jetstream (or, whatever it's actually called!). The approval happened within an hour of submitting the application!\n\nHere's a copy of the approval notice:\n\n\n\n<blockquote>\n  Dear Dr. Roberts:\n\n  Your recently submitted an XSEDE Startup request has been reviewed and approved.\n\n  PI: Steven Roberts, University of Washington\n\n  Request: Annotation of Olympia oyster (Ostrea lurida) and Pacific geoduck (Panopea generosa) genomes using WQ_MAKER on Jetstream cloud.\n\n  Request Number: MCB180124 (New)\n\n  Start Date: N/A\n  \n  End Date: 2019-08-05\n\n  Awarded Resources: IU/TACC (Jetstream): 100,000.0 SUs\n\n  IU/TACC Storage (Jetstream Storage): 1,000.0 GB\n\n  Allocations Admin Comments:\n\n  The estimated value of these awarded resources is $14,890.00. The allocation of these resources represents a considerable investment by the NSF in advanced computing infrastructure for U.S. The dollar value of your allocation is estimated from the NSF awards supporting the allocated resources.\n\n  If XSEDE Extended Collaborative Support (ECSS) assistance was recommended by the review panel, you will be contacted by the ECSS team within the next two weeks to begin discussing this collaboration.\n\n\n  By default the PI and all co-PIs will be added to the resources awarded. If this is an award on a renewal request, current users will have their account end dates modified to reflect the new end date of this award. PIs, co-PIs, or Allocation Managers can add users to or remove users from resources on this project by logging into the portal (https://portal.xsede.org) and using the 'Add/Remove User' form.\n\n  Share the impact of XSEDE! In exchange for access to the XSEDE ecosystem, we ask that all users let us know what XSEDE has helped you achieve:\n\n\n>\n>\n\n>   * For all publications, please acknowledge use of XSEDE and allocated resources by citing the XSEDE paper and also add your publications to your user profile.\n>\n\n>   * Tell us about your achievements .\n>\n\n>   * Help us improve our reporting by keeping your XSEDE user profile up to date and completing the demographic fields .\n>\n\n\n  For question regarding this decision, please contact help@xsede.org.\n\n  Best regards,\n  XSEDE Resource Allocations Service\n\n  ===========================\n\n  REVIEWER COMMENTS\n\n  ===========================\n\n  Review #0 - Excellent\n\n  Assessment and Summary:\n  Maker is a well-known and fitting workflow for Jetstream. This should be a good use of resources.\n\n  Appropriateness of Methodology:\n\n  _After_ each user on the allocation has logged in, the PI will need to open a ticket via help@xsede.org and request the quota be set per the allocation to 1TB. Please provide the XSEDE portal ID of each user.\n\n  Appropriateness of Computational Research Plan:\n\n  We request that any publications stemming from work done using Jetstream cite us\n\n  Efficient Use of Resources:\n</blockquote>\n\n\n\n\n\n* * *\n\n\n\nWe had a tremendous amount of help from Upendra Devisetty at CyVerse in getting the [Xsede](https://portal.xsede.org) Startup Application written, as well as running WQ-MAKER on Xsede/Atmosphere/Jetstream (or, whatever it's called!).\n\n\n\n* * *\n\n\n\nNow, on to how I got the run going...\n\nI initiated the Olympia oyster genome annotation using a [WQ-MAKER instance (MAKER 2.31.9 with CCTools v3.1) on Jetstream](https://use.jetstream-cloud.org/application/images/492):\n\n![](https://owl.fish.washington.edu/Athaliana/20180807_wq-maker_04.png)\n\n\n\n* * *\n\n\n\nI followed the excellent step-by-step directions here:\n\n\n\n\n\n  * [MAKER 2.31.9 Jetstream Tutorial](https://wiki.cyverse.org/wiki/display/TUT/MAKER+2.31.9+with+CCTOOLS+Jetstream+Tutorial)\n\n\n\nThe \"MASTER\" machine was a \"m1.xlarge\" machine (i.e. CPU: 24, Mem: 60 GB, Disk: 60 GB).\n\nI attached a 1TB volume to the MASTER machine.\n\nI set up the run using 21 \"WORKER\" machines. Twenty WORKERS were \"m1.large\" machines (i.e. CPU: 10, Mem: 30 GB, Disk: 60 GB). The remaining WORKER was set at \"m1.xlarge\" (i.e. CPU: 24, Mem: 60 GB, Disk: 60 GB) to use up the rest of our allocated memory.\n\n![](https://owl.fish.washington.edu/Athaliana/20180807_wq-maker_01.png)\n\n\n\n* * *\n\n\n\nMASTER machine was initialized with the following command:\n\n\n\n    <code>nohup wq_maker -contigs-per-split 1 -cores 1 -memory 2048 -disk 4096 -N wq_maker_oly${USER} -d all -o master.dbg -debug_size_limit=0 -stats test_out_stats.txt > log_file.txt 2>&1 &</code>\n\n\n\nEach WORKER was started with the following command:\n\n\n\n    <code>nohup work_queue_worker -N wq_maker_oly${USER} --cores all --debug-rotate-max=0 -d all -o worker.dbg > log_file_2.txt 2>&1 &</code>\n\n\n\nWhen starting each WORKER, an error message was generated, but this doesn't seem to have any impact on the ability of the program to run:\n\n![](https://owl.fish.washington.edu/Athaliana/20180807_wq-maker_worker_error.png)\n\n\n\n* * *\n\n\n\nI checked on the status of the run and you can see that there are 22 WORKERS and 15,568 files \"WAITING\". BUT, there are 159,429 contigs in our genome FastA!\n\nWhy don't these match??!!\n\nThis is because WQ-MAKER splits the genome FastA into smaller FastA files containg only 10 sequences each. This is why we see 10-fold fewer files being processed than sequences in our genome file.\n\n![](https://owl.fish.washington.edu/Athaliana/20180807_wq-maker_03.png)\n\n\n\n* * *\n\n\n\nHere is the rest of the nitty gritty details:\n\n\n\n##### Genome file:\n\n\n\n\n\n\n\n  * [Olurida_v081.fa](https://owl.fish.washington.edu/halfshell/genomic-databank/Olurida_v081.fa)\n\n\n\n    * See our [Genomic Resources GtiHub wiki for deets](https://github.com/RobertsLab/resources/wiki/Genomic-Resources#ostrea-lurida)\n\n\n\n\n\n\n\n##### Transcriptome file:\n\n\n\n\n\n\n\n  * [Olurida_transcriptome_v3.fasta](https://eagle.fish.washington.edu/cnidarian/Olurida_transcriptome_v3.fasta)\n\n\n\n\n\n##### Proteome files (NCBI):\n\n\n\nThe two FastA files below were concatenated into a single FastA file (`gigas_virginica_ncbi_proteomes.fasta`) for use in WQ-MAKER.\n\n\n\n\n\n  * _Crassostrea gigas_\n\n\n\n    * [GCA_000297895.1_oyster_v9_protein.faa.gz](ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/297/895/GCA_000297895.1_oyster_v9/GCA_000297895.1_oyster_v9_protein.faa.gz)\n\n\n\n\n  * _Crassostrea virginica_\n\n\n\n    * [GCF_002022765.2_C_virginica-3.0_protein.faa.gz](ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/002/022/765/GCF_002022765.2_C_virginica-3.0/GCF_002022765.2_C_virginica-3.0_protein.faa.gz)\n\n\n\n\n\n\n\n##### Maker options control file (maker_opts.ctl):\n\n\n\nThis is a bit difficult to read in this notebook; copy and paste in text editor for easier viewing.\n\nNOTE: Paths to files (e.g. genome FastA) have to be _relative_ paths; cannot be absolute paths!\n\n\n\n    <code>\n    #-----Genome (these are always required)\n    genome=../data/oly_genome/Olurida_v081.fa #genome sequence (fasta file or fasta embeded in GFF3 file)\n    organism_type=eukaryotic #eukaryotic or prokaryotic. Default is eukaryotic\n\n    #-----Re-annotation Using MAKER Derived GFF3\n    maker_gff= #MAKER derived GFF3 file\n    est_pass=0 #use ESTs in maker_gff: 1 = yes, 0 = no\n    altest_pass=0 #use alternate organism ESTs in maker_gff: 1 = yes, 0 = no\n    protein_pass=0 #use protein alignments in maker_gff: 1 = yes, 0 = no\n    rm_pass=0 #use repeats in maker_gff: 1 = yes, 0 = no\n    model_pass=0 #use gene models in maker_gff: 1 = yes, 0 = no\n    pred_pass=0 #use ab-initio predictions in maker_gff: 1 = yes, 0 = no\n    other_pass=0 #passthrough anyything else in maker_gff: 1 = yes, 0 = no\n\n    #-----EST Evidence (for best results provide a file for at least one)\n    est=../data/oly_transcriptome/Olurida_transcriptome_v3.fasta #set of ESTs or assembled mRNA-seq in fasta format\n    altest= #EST/cDNA sequence file in fasta format from an alternate organism\n    est_gff= #aligned ESTs or mRNA-seq from an external GFF3 file\n    altest_gff= #aligned ESTs from a closly relate species in GFF3 format\n\n    #-----Protein Homology Evidence (for best results provide a file for at least one)\n    protein=../data/gigas_virginica_ncbi_proteomes.fasta  #protein sequence file in fasta format (i.e. from mutiple oransisms)\n    protein_gff=  #aligned protein homology evidence from an external GFF3 file\n\n    #-----Repeat Masking (leave values blank to skip repeat masking)\n    model_org=all #select a model organism for RepBase masking in RepeatMasker\n    rmlib= #provide an organism specific repeat library in fasta format for RepeatMasker\n    repeat_protein= #provide a fasta file of transposable element proteins for RepeatRunner\n    rm_gff= #pre-identified repeat elements from an external GFF3 file\n    prok_rm=0 #forces MAKER to repeatmask prokaryotes (no reason to change this), 1 = yes, 0 = no\n    softmask=1 #use soft-masking rather than hard-masking in BLAST (i.e. seg and dust filtering)\n\n    #-----Gene Prediction\n    snaphmm= #SNAP HMM file\n    gmhmm= #GeneMark HMM file\n    augustus_species= #Augustus gene prediction species model\n    fgenesh_par_file= #FGENESH parameter file\n    pred_gff= #ab-initio predictions from an external GFF3 file\n    model_gff= #annotated gene models from an external GFF3 file (annotation pass-through)\n    est2genome=0 #infer gene predictions directly from ESTs, 1 = yes, 0 = no\n    protein2genome=0 #infer predictions from protein homology, 1 = yes, 0 = no\n    trna=0 #find tRNAs with tRNAscan, 1 = yes, 0 = no\n    snoscan_rrna= #rRNA file to have Snoscan find snoRNAs\n    unmask=0 #also run ab-initio prediction programs on unmasked sequence, 1 = yes, 0 = no\n\n    #-----Other Annotation Feature Types (features MAKER doesn't recognize)\n    other_gff= #extra features to pass-through to final MAKER generated GFF3 file\n\n    #-----External Application Behavior Options\n    alt_peptide=C #amino acid used to replace non-standard amino acids in BLAST databases\n    cpus=1 #max number of cpus to use in BLAST and RepeatMasker (not for MPI, leave 1 when using MPI)\n\n    #-----MAKER Behavior Options\n    max_dna_len=100000 #length for dividing up contigs into chunks (increases/decreases memory usage)\n    min_contig=1 #skip genome contigs below this length (under 10kb are often useless)\n\n    pred_flank=200 #flank for extending evidence clusters sent to gene predictors\n    pred_stats=0 #report AED and QI statistics for all predictions as well as models\n    AED_threshold=1 #Maximum Annotation Edit Distance allowed (bound by 0 and 1)\n    min_protein=0 #require at least this many amino acids in predicted proteins\n    alt_splice=0 #Take extra steps to try and find alternative splicing, 1 = yes, 0 = no\n    always_complete=0 #extra steps to force start and stop codons, 1 = yes, 0 = no\n    map_forward=0 #map names and attributes forward from old GFF3 genes, 1 = yes, 0 = no\n    keep_preds=0 #Concordance threshold to add unsupported gene prediction (bound by 0 and 1)\n\n    split_hit=10000 #length for the splitting of hits (expected max intron size for evidence alignments)\n    single_exon=0 #consider single exon EST evidence when generating annotations, 1 = yes, 0 = no\n    single_length=250 #min length required for single exon ESTs if 'single_exon is enabled'\n    correct_est_fusion=0 #limits use of ESTs in annotation to avoid fusion genes\n\n    tries=2 #number of times to try a contig if there is a failure for some reason\n    clean_try=0 #remove all data from previous run before retrying, 1 = yes, 0 = no\n    clean_up=0 #removes theVoid directory with individual analysis files, 1 = yes, 0 = no\n    TMP= #specify a directory other than the system default temporary directory for temporary files\n    </code>\n\n\n\nAfter the run finishes, it will have produced a corresponding GFF file for each scaffold. This is unwieldly, so the GFFs will be merged using the following code:\n\n\n\n    <code>$ gff3_merge -n -d Olurida_v081.maker.output/Olurida_v081_master_datastore_index.log</code>\n\n\n\nAll WORKERS were running as of 07:45 today. As of this posting (~3hrs later), WQ-MAKER had already processed ~45% of the files! Annotation will be finished by the end of today!!! Crazy!\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","date":"2018-08-07 17:44:23+00:00","layout":"post","slug":"genome-annotation-olympia-oyster-genome-using-wq-maker-instance-on-jetstream","title":"Genome Annotation - Olympia oyster genome using WQ-MAKER Instance on Jetstream","categories":["2018","Olympia Oyster Genome Sequencing","annotation","Atmosphere","Cyverse","genome","JetStream","maker","olympia oyster","Ostrea lurida","wq-maker","Xsede"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}