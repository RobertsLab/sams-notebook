{"title":"Trimming - P.tuahiniensis RNA-seq Trimming and QC with fastp FastQC and MultiQC for E5 timeseries_molecular Project","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","title":"Trimming - P.tuahiniensis RNA-seq Trimming and QC with fastp FastQC and MultiQC for E5 timeseries_molecular Project","date":"2025-02-24","draft":false,"engine":"knitr","categories":["2025","Pocillopora tuahiniensis","E5","trimming","fastp","FastQC","MultiQC","RNAseq","timeseries_molecular"]},"headingText":"INTRO","containsRefs":false,"markdown":"\n\nI [previously ran FastQC and MultiQC quality checks (20250220)](../2025-02-20-FastQC-MultiQC---P.tuahiniensis-RNA-seq-Data-for-timeseries_molecular-Project/index.qmd) (Notebook) on the _P.tuahiniensis_ raw RNA-seq data [received 20240926](../../2024/2024-09-26-Data-Received---E5-Coral-Time-Series-RNA-seq-Azenta-Project-30-1047560508/index.qmd) (Notebook), as part of [urol-e5/timeseries_molecular](https://github.com/urol-e5/timeseries_molecular) (GitHub repo).\n\n::: {.callout-note}\nThe contents below are from markdown knitted from [`01.00-F-Ptua-RNAseq-trimming-fastp-FastQC-MultiQC.md`](https://github.com/urol-e5/timeseries_molecular/blob/f2d8235d179d4321b44d0ed7c747d991723f1722/F-Ptua/code/01.00-F-Ptua-RNAseq-trimming-fastp-FastQC-MultiQC.md) (commit `f2d8235`).\n:::\n\n\n\n# 1 Background\n\nThis Rmd file trims *P.tuahiniensis* RNAseq files using\n[fastp](https://github.com/OpenGene/fastp) (Chen 2023), followed by\nquality checks with [FastQC](https://github.com/s-andrews/FastQC) and\n[MultiQC](https://multiqc.info/)(Ewels et al. 2016).\n\nBased off of the initial FastQC/MultiQC, we trimmed 15bp from each read.\n\n## 1.1 Inputs\n\nRaw WGBS FastQ files with the following pattern:\n\n- `*.fastq.gz`\n\n  - Expects input files formatted like so:\n    `<species_abbreviation>-<colony_ID>-<timepoint>_R[12]_001.fastq.gz`\n\n<div class=\"callout-note\">\n\nIf one needs to download the raw FastQs, please see\n[00.00-F-Ptua-RNAseq-reads-FastQC-MultiQC.Rmd](./00.00-F-Ptua-RNAseq-reads-FastQC-MultiQC.Rmd)\n\n</div>\n\n## 1.2 Outputs\n\nThe expected outputs will be:\n\n- `*_fastqc.html`: Individual FastQC reports.\n\n- `*fastp-trim*.fq.gz`: Trimmed FastQ files.\n\n- `*.md5`: Individual MD5 checksums for trimmed FastQs.\n\n- `*.fastp-trim.report.html`: Individual fastp trimming reports. HTML\n  format.\n\n- `*.fastp-trim.report.json`: Individual fastp trimming reports. JSON\n  format.\n\n- `multiqc_report.html`: A summary report of the alignment results\n  generated by [MultiQC](https://github.com/MultiQC/MultiQC), in HTML\n  format.\n\n  - Due to the large file sizes of FastQs, these cannot be hosted in the\n    [timeseries_molecular GitHub\n    repo](https://github.com/urol-e5/timeseries_molecular/tree/main). As\n    such these files are available for download here:\n\n- <https://gannet.fish.washington.edu/Atumefaciens/gitrepos/urol-e5/timeseries_molecular/F-Ptua/output/01.00-F-Ptua-RNAseq-trimming-fastp-FastQC-MultiQC/>\n\n# 2 Create a Bash variables file\n\nThis allows usage of Bash variables across R Markdown chunks.\n\n``` bash\n{\necho \"#### Assign Variables ####\"\necho \"\"\n\necho \"# Data directories\"\necho 'export timeseries_dir=/home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular'\necho 'export output_dir_top=${timeseries_dir}/F-Ptua/output/01.00-F-Ptua-RNAseq-trimming-fastp-FastQC-MultiQC'\necho 'export raw_reads_dir=${timeseries_dir}/F-Ptua/data/rnaseq-raw-fastqs'\necho \"\"\n\necho \"# Paths to programs\"\necho 'export programs_dir=\"/home/shared\"'\necho 'export fastp=\"${programs_dir}/fastp\"'\necho 'export fastqc=${programs_dir}/FastQC-0.12.1/fastqc'\necho 'export multiqc=/home/sam/programs/mambaforge/bin/multiqc'\necho \"\"\n\necho \"# Set FastQ filename patterns\"\necho \"export fastq_pattern='*.fastq.gz'\"\necho \"export R1_fastq_pattern='*_R1_*.fastq.gz'\"\necho \"export R2_fastq_pattern='*_R2_*.fastq.gz'\"\necho \"export trimmed_fastq_pattern='*fastp-trim.fq.gz'\"\necho \"\"\n\necho \"# Set number of CPUs to use\"\necho 'export threads=40'\necho \"\"\n\n\necho \"## Inititalize arrays\"\necho 'export fastq_array_R1=()'\necho 'export fastq_array_R2=()'\necho 'export raw_fastqs_array=()'\necho 'export R1_names_array=()'\necho 'export R2_names_array=()'\necho \"\"\n\necho \"# Programs associative array\"\necho \"declare -A programs_array\"\necho \"programs_array=(\"\necho '[fastp]=\"${fastp}\" \\'\necho '[fastqc]=\"${fastqc}\" \\'\necho '[multiqc]=\"${multiqc}\" \\'\necho \")\"\necho \"\"\n\necho \"# Print formatting\"\necho 'export line=\"--------------------------------------------------------\"'\necho \"\"\n} > .bashvars\n\ncat .bashvars\n```\n\n    #### Assign Variables ####\n\n    # Data directories\n    export timeseries_dir=/home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular\n    export output_dir_top=${timeseries_dir}/F-Ptua/output/01.00-F-Ptua-RNAseq-trimming-fastp-FastQC-MultiQC\n    export raw_reads_dir=${timeseries_dir}/F-Ptua/data/rnaseq-raw-fastqs\n\n    # Paths to programs\n    export programs_dir=\"/home/shared\"\n    export fastp=\"${programs_dir}/fastp\"\n    export fastqc=${programs_dir}/FastQC-0.12.1/fastqc\n    export multiqc=/home/sam/programs/mambaforge/bin/multiqc\n\n    # Set FastQ filename patterns\n    export fastq_pattern='*.fastq.gz'\n    export R1_fastq_pattern='*_R1_*.fastq.gz'\n    export R2_fastq_pattern='*_R2_*.fastq.gz'\n    export trimmed_fastq_pattern='*fastp-trim.fq.gz'\n\n    # Set number of CPUs to use\n    export threads=40\n\n    ## Inititalize arrays\n    export fastq_array_R1=()\n    export fastq_array_R2=()\n    export raw_fastqs_array=()\n    export R1_names_array=()\n    export R2_names_array=()\n\n    # Programs associative array\n    declare -A programs_array\n    programs_array=(\n    [fastp]=\"${fastp}\" \\\n    [fastqc]=\"${fastqc}\" \\\n    [multiqc]=\"${multiqc}\" \\\n    )\n\n    # Print formatting\n    export line=\"--------------------------------------------------------\"\n\n# 3 Fastp Trimming\n\n[fastp](https://github.com/OpenGene/fastp) (Chen 2023) is set to\nauto-detect Illumina adapters, as well as trim the first 15bp from each\nread, as past experience shows these first 15bp are more inconsistent\nthan the remainder of the read length.\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Make output directories, if it doesn't exist\nmkdir --parents \"${output_dir_top}\"\n\n# Change to raw reads directory\ncd \"${raw_reads_dir}\"\n\n# Create arrays of fastq R1 files and sample names\nfor fastq in ${R1_fastq_pattern}\ndo\n  fastq_array_R1+=(\"${fastq}\")\n  R1_names_array+=(\"$(echo \"${fastq}\" | awk -F\"_\" '{print $1}')\")\ndone\n\n# Create array of fastq R2 files\nfor fastq in ${R2_fastq_pattern}\ndo\n  fastq_array_R2+=(\"${fastq}\")\n  R2_names_array+=(\"$(echo \"${fastq}\" | awk -F\"_\" '{print $1}')\")\ndone\n\n# Create list of fastq files used in analysis\n# Create MD5 checksum for reference\nif [ ! -f \"${output_dir_top}\"/raw-fastq-checksums.md5 ]; then\nfor fastq in *.gz\n  do\n    md5sum ${fastq} >> \"${output_dir_top}\"/raw-fastq-checksums.md5\n  done\nfi\n\n# Run fastp on files\n# Adds JSON report output for downstream usage by MultiQC\nfor index in \"${!fastq_array_R1[@]}\"\ndo\n  R1_sample_name=$(echo \"${R1_names_array[index]}\")\n  R2_sample_name=$(echo \"${R2_names_array[index]}\")\n  ${fastp} \\\n  --in1 ${fastq_array_R1[index]} \\\n  --in2 ${fastq_array_R2[index]} \\\n  --detect_adapter_for_pe \\\n  --trim_poly_g \\\n  --trim_poly_x \\\n  --trim_front1 15 \\\n  --trim_front2 15 \\\n  --thread ${threads} \\\n  --html \"${output_dir_top}\"/\"${R1_sample_name}\".fastp-trim.report.html \\\n  --json \"${output_dir_top}\"/\"${R1_sample_name}\".fastp-trim.report.json \\\n  --out1 \"${output_dir_top}\"/\"${R1_sample_name}\"_R1_001.fastp-trim.fq.gz \\\n  --out2 \"${output_dir_top}\"/\"${R2_sample_name}\"_R2_001.fastp-trim.fq.gz \\\n  2>> \"${output_dir_top}\"/fastp.stderr\n\n  # Generate md5 checksums for newly trimmed files\n  cd \"${output_dir_top}\"\n  md5sum \"${R1_sample_name}\"_R1_001.fastp-trim.fq.gz > \"${R1_sample_name}\"_R1_001.fastp-trim.fq.gz.md5\n  md5sum \"${R2_sample_name}\"_R2_001.fastp-trim.fq.gz > \"${R2_sample_name}\"_R2_001.fastp-trim.fq.gz.md5\n  cd -\ndone\n```\n\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n\n# 4 Quality Check with FastQC and MultiQC\n\n## 4.1 FastQC\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\ncd \"${output_dir_top}\"\n\n############ RUN FASTQC ############\n\n\n# Create array of trimmed FastQs\ntrimmed_fastqs_array=(${trimmed_fastq_pattern})\n\n# Pass array contents to new variable as space-delimited list\ntrimmed_fastqc_list=$(echo \"${trimmed_fastqs_array[*]}\")\n\necho \"Beginning FastQC on trimmed reads...\"\necho \"\"\n\n# Run FastQC\n### NOTE: Do NOT quote raw_fastqc_list\n${fastqc} \\\n--threads ${threads} \\\n--outdir \"${output_dir_top}\" \\\n--quiet \\\n${trimmed_fastqc_list}\n\necho \"FastQC on trimmed reads complete!\"\necho \"\"\n\n############ END FASTQC ############\n```\n\n    Beginning FastQC on trimmed reads...\n\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    FastQC on trimmed reads complete!\n\n## 4.2 MultiQC\n\nUses `--cl-config \"sp: { fastp: { fn: '*report.json' } }\"` to update the\nMultiQC search pattern for the fastp module.\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n\ncd \"${output_dir_top}\"\n\n${programs_array[multiqc]} . \\\n--cl-config \"sp: { fastp: { fn: '*report.json' } }\" \\\n--interactive\n\n# Remove zip files\nrm *_fastqc.zip\n```\n\n      /// MultiQC 🔍 | v1.14\n\n    |           multiqc | MultiQC Version v1.27 now available!\n    |           multiqc | Search path : /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/output/01.00-F-Ptua-RNAseq-trimming-fastp-FastQC-MultiQC\n    |         searching | ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 392/392  \n    |             fastp | Found 39 reports\n    |            fastqc | Found 78 reports\n    |           multiqc | Compressing plot data\n    |           multiqc | Report      : multiqc_report.html\n    |           multiqc | Data        : multiqc_data\n    |           multiqc | MultiQC complete\n\n\n# RESULTS\n\nTrimming is okay (not great). The level of polyA sequqence still present in reads, despite the use of the `--trim_poly_x` (which should handle removal of polyA sequences...) in [`fastp`](https://github.com/OpenGene/fastp) is a bit disappointing.\n\nMultiQC report:\n\n- [01.00-F-Ptua-RNAseq-trimming-fastp-FastQC-MultiQC/multiqc_report.html](https://github.com/urol-e5/timeseries_molecular/blob/f2d8235d179d4321b44d0ed7c747d991723f1722/F-Ptua/output/01.00-F-Ptua-RNAseq-trimming-fastp-FastQC-MultiQC/multiqc_report.html) (GitHub repo)\n\n![MultiQC screencap showing post-trimming Sequence Content.](./20250224-ptua-rnaseq-trimmed-multiqc-plot-sequence-content.png){fig-alt=\"Screenshot of trimmed MultiQC per base sequence content plot.\"}\n\n\n![MultiQC screencap showing persistent polyA sequence in post-trimming Adapter Content.](./20250224-ptua-rnaseq-trimmed-multiqc-plot-adapter-content.png){fig-alt=\"MultiQC screencap showing persistent polyA sequence in post-trimming Adapter Content.\"}\n\n# 5 References\n\n<div id=\"refs\" class=\"references csl-bib-body hanging-indent\">\n\n<div id=\"ref-chen2023\" class=\"csl-entry\">\n\nChen, Shifu. 2023. “Ultrafast One-Pass FASTQ Data Preprocessing, Quality\nControl, and Deduplication Using Fastp.” *iMeta* 2 (2).\n<https://doi.org/10.1002/imt2.107>.\n\n</div>\n\n<div id=\"ref-ewels2016\" class=\"csl-entry\">\n\nEwels, Philip, Måns Magnusson, Sverker Lundin, and Max Käller. 2016.\n“MultiQC: Summarize Analysis Results for Multiple Tools and Samples in a\nSingle Report.” *Bioinformatics* 32 (19): 3047–48.\n<https://doi.org/10.1093/bioinformatics/btw354>.\n\n</div>\n\n</div>","srcMarkdownNoYaml":"\n# INTRO\n\nI [previously ran FastQC and MultiQC quality checks (20250220)](../2025-02-20-FastQC-MultiQC---P.tuahiniensis-RNA-seq-Data-for-timeseries_molecular-Project/index.qmd) (Notebook) on the _P.tuahiniensis_ raw RNA-seq data [received 20240926](../../2024/2024-09-26-Data-Received---E5-Coral-Time-Series-RNA-seq-Azenta-Project-30-1047560508/index.qmd) (Notebook), as part of [urol-e5/timeseries_molecular](https://github.com/urol-e5/timeseries_molecular) (GitHub repo).\n\n::: {.callout-note}\nThe contents below are from markdown knitted from [`01.00-F-Ptua-RNAseq-trimming-fastp-FastQC-MultiQC.md`](https://github.com/urol-e5/timeseries_molecular/blob/f2d8235d179d4321b44d0ed7c747d991723f1722/F-Ptua/code/01.00-F-Ptua-RNAseq-trimming-fastp-FastQC-MultiQC.md) (commit `f2d8235`).\n:::\n\n\n\n# 1 Background\n\nThis Rmd file trims *P.tuahiniensis* RNAseq files using\n[fastp](https://github.com/OpenGene/fastp) (Chen 2023), followed by\nquality checks with [FastQC](https://github.com/s-andrews/FastQC) and\n[MultiQC](https://multiqc.info/)(Ewels et al. 2016).\n\nBased off of the initial FastQC/MultiQC, we trimmed 15bp from each read.\n\n## 1.1 Inputs\n\nRaw WGBS FastQ files with the following pattern:\n\n- `*.fastq.gz`\n\n  - Expects input files formatted like so:\n    `<species_abbreviation>-<colony_ID>-<timepoint>_R[12]_001.fastq.gz`\n\n<div class=\"callout-note\">\n\nIf one needs to download the raw FastQs, please see\n[00.00-F-Ptua-RNAseq-reads-FastQC-MultiQC.Rmd](./00.00-F-Ptua-RNAseq-reads-FastQC-MultiQC.Rmd)\n\n</div>\n\n## 1.2 Outputs\n\nThe expected outputs will be:\n\n- `*_fastqc.html`: Individual FastQC reports.\n\n- `*fastp-trim*.fq.gz`: Trimmed FastQ files.\n\n- `*.md5`: Individual MD5 checksums for trimmed FastQs.\n\n- `*.fastp-trim.report.html`: Individual fastp trimming reports. HTML\n  format.\n\n- `*.fastp-trim.report.json`: Individual fastp trimming reports. JSON\n  format.\n\n- `multiqc_report.html`: A summary report of the alignment results\n  generated by [MultiQC](https://github.com/MultiQC/MultiQC), in HTML\n  format.\n\n  - Due to the large file sizes of FastQs, these cannot be hosted in the\n    [timeseries_molecular GitHub\n    repo](https://github.com/urol-e5/timeseries_molecular/tree/main). As\n    such these files are available for download here:\n\n- <https://gannet.fish.washington.edu/Atumefaciens/gitrepos/urol-e5/timeseries_molecular/F-Ptua/output/01.00-F-Ptua-RNAseq-trimming-fastp-FastQC-MultiQC/>\n\n# 2 Create a Bash variables file\n\nThis allows usage of Bash variables across R Markdown chunks.\n\n``` bash\n{\necho \"#### Assign Variables ####\"\necho \"\"\n\necho \"# Data directories\"\necho 'export timeseries_dir=/home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular'\necho 'export output_dir_top=${timeseries_dir}/F-Ptua/output/01.00-F-Ptua-RNAseq-trimming-fastp-FastQC-MultiQC'\necho 'export raw_reads_dir=${timeseries_dir}/F-Ptua/data/rnaseq-raw-fastqs'\necho \"\"\n\necho \"# Paths to programs\"\necho 'export programs_dir=\"/home/shared\"'\necho 'export fastp=\"${programs_dir}/fastp\"'\necho 'export fastqc=${programs_dir}/FastQC-0.12.1/fastqc'\necho 'export multiqc=/home/sam/programs/mambaforge/bin/multiqc'\necho \"\"\n\necho \"# Set FastQ filename patterns\"\necho \"export fastq_pattern='*.fastq.gz'\"\necho \"export R1_fastq_pattern='*_R1_*.fastq.gz'\"\necho \"export R2_fastq_pattern='*_R2_*.fastq.gz'\"\necho \"export trimmed_fastq_pattern='*fastp-trim.fq.gz'\"\necho \"\"\n\necho \"# Set number of CPUs to use\"\necho 'export threads=40'\necho \"\"\n\n\necho \"## Inititalize arrays\"\necho 'export fastq_array_R1=()'\necho 'export fastq_array_R2=()'\necho 'export raw_fastqs_array=()'\necho 'export R1_names_array=()'\necho 'export R2_names_array=()'\necho \"\"\n\necho \"# Programs associative array\"\necho \"declare -A programs_array\"\necho \"programs_array=(\"\necho '[fastp]=\"${fastp}\" \\'\necho '[fastqc]=\"${fastqc}\" \\'\necho '[multiqc]=\"${multiqc}\" \\'\necho \")\"\necho \"\"\n\necho \"# Print formatting\"\necho 'export line=\"--------------------------------------------------------\"'\necho \"\"\n} > .bashvars\n\ncat .bashvars\n```\n\n    #### Assign Variables ####\n\n    # Data directories\n    export timeseries_dir=/home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular\n    export output_dir_top=${timeseries_dir}/F-Ptua/output/01.00-F-Ptua-RNAseq-trimming-fastp-FastQC-MultiQC\n    export raw_reads_dir=${timeseries_dir}/F-Ptua/data/rnaseq-raw-fastqs\n\n    # Paths to programs\n    export programs_dir=\"/home/shared\"\n    export fastp=\"${programs_dir}/fastp\"\n    export fastqc=${programs_dir}/FastQC-0.12.1/fastqc\n    export multiqc=/home/sam/programs/mambaforge/bin/multiqc\n\n    # Set FastQ filename patterns\n    export fastq_pattern='*.fastq.gz'\n    export R1_fastq_pattern='*_R1_*.fastq.gz'\n    export R2_fastq_pattern='*_R2_*.fastq.gz'\n    export trimmed_fastq_pattern='*fastp-trim.fq.gz'\n\n    # Set number of CPUs to use\n    export threads=40\n\n    ## Inititalize arrays\n    export fastq_array_R1=()\n    export fastq_array_R2=()\n    export raw_fastqs_array=()\n    export R1_names_array=()\n    export R2_names_array=()\n\n    # Programs associative array\n    declare -A programs_array\n    programs_array=(\n    [fastp]=\"${fastp}\" \\\n    [fastqc]=\"${fastqc}\" \\\n    [multiqc]=\"${multiqc}\" \\\n    )\n\n    # Print formatting\n    export line=\"--------------------------------------------------------\"\n\n# 3 Fastp Trimming\n\n[fastp](https://github.com/OpenGene/fastp) (Chen 2023) is set to\nauto-detect Illumina adapters, as well as trim the first 15bp from each\nread, as past experience shows these first 15bp are more inconsistent\nthan the remainder of the read length.\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Make output directories, if it doesn't exist\nmkdir --parents \"${output_dir_top}\"\n\n# Change to raw reads directory\ncd \"${raw_reads_dir}\"\n\n# Create arrays of fastq R1 files and sample names\nfor fastq in ${R1_fastq_pattern}\ndo\n  fastq_array_R1+=(\"${fastq}\")\n  R1_names_array+=(\"$(echo \"${fastq}\" | awk -F\"_\" '{print $1}')\")\ndone\n\n# Create array of fastq R2 files\nfor fastq in ${R2_fastq_pattern}\ndo\n  fastq_array_R2+=(\"${fastq}\")\n  R2_names_array+=(\"$(echo \"${fastq}\" | awk -F\"_\" '{print $1}')\")\ndone\n\n# Create list of fastq files used in analysis\n# Create MD5 checksum for reference\nif [ ! -f \"${output_dir_top}\"/raw-fastq-checksums.md5 ]; then\nfor fastq in *.gz\n  do\n    md5sum ${fastq} >> \"${output_dir_top}\"/raw-fastq-checksums.md5\n  done\nfi\n\n# Run fastp on files\n# Adds JSON report output for downstream usage by MultiQC\nfor index in \"${!fastq_array_R1[@]}\"\ndo\n  R1_sample_name=$(echo \"${R1_names_array[index]}\")\n  R2_sample_name=$(echo \"${R2_names_array[index]}\")\n  ${fastp} \\\n  --in1 ${fastq_array_R1[index]} \\\n  --in2 ${fastq_array_R2[index]} \\\n  --detect_adapter_for_pe \\\n  --trim_poly_g \\\n  --trim_poly_x \\\n  --trim_front1 15 \\\n  --trim_front2 15 \\\n  --thread ${threads} \\\n  --html \"${output_dir_top}\"/\"${R1_sample_name}\".fastp-trim.report.html \\\n  --json \"${output_dir_top}\"/\"${R1_sample_name}\".fastp-trim.report.json \\\n  --out1 \"${output_dir_top}\"/\"${R1_sample_name}\"_R1_001.fastp-trim.fq.gz \\\n  --out2 \"${output_dir_top}\"/\"${R2_sample_name}\"_R2_001.fastp-trim.fq.gz \\\n  2>> \"${output_dir_top}\"/fastp.stderr\n\n  # Generate md5 checksums for newly trimmed files\n  cd \"${output_dir_top}\"\n  md5sum \"${R1_sample_name}\"_R1_001.fastp-trim.fq.gz > \"${R1_sample_name}\"_R1_001.fastp-trim.fq.gz.md5\n  md5sum \"${R2_sample_name}\"_R2_001.fastp-trim.fq.gz > \"${R2_sample_name}\"_R2_001.fastp-trim.fq.gz.md5\n  cd -\ndone\n```\n\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n    /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/data/rnaseq-raw-fastqs\n\n# 4 Quality Check with FastQC and MultiQC\n\n## 4.1 FastQC\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\ncd \"${output_dir_top}\"\n\n############ RUN FASTQC ############\n\n\n# Create array of trimmed FastQs\ntrimmed_fastqs_array=(${trimmed_fastq_pattern})\n\n# Pass array contents to new variable as space-delimited list\ntrimmed_fastqc_list=$(echo \"${trimmed_fastqs_array[*]}\")\n\necho \"Beginning FastQC on trimmed reads...\"\necho \"\"\n\n# Run FastQC\n### NOTE: Do NOT quote raw_fastqc_list\n${fastqc} \\\n--threads ${threads} \\\n--outdir \"${output_dir_top}\" \\\n--quiet \\\n${trimmed_fastqc_list}\n\necho \"FastQC on trimmed reads complete!\"\necho \"\"\n\n############ END FASTQC ############\n```\n\n    Beginning FastQC on trimmed reads...\n\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    application/gzip\n    FastQC on trimmed reads complete!\n\n## 4.2 MultiQC\n\nUses `--cl-config \"sp: { fastp: { fn: '*report.json' } }\"` to update the\nMultiQC search pattern for the fastp module.\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n\ncd \"${output_dir_top}\"\n\n${programs_array[multiqc]} . \\\n--cl-config \"sp: { fastp: { fn: '*report.json' } }\" \\\n--interactive\n\n# Remove zip files\nrm *_fastqc.zip\n```\n\n      /// MultiQC 🔍 | v1.14\n\n    |           multiqc | MultiQC Version v1.27 now available!\n    |           multiqc | Search path : /home/shared/8TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular/F-Ptua/output/01.00-F-Ptua-RNAseq-trimming-fastp-FastQC-MultiQC\n    |         searching | ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 100% 392/392  \n    |             fastp | Found 39 reports\n    |            fastqc | Found 78 reports\n    |           multiqc | Compressing plot data\n    |           multiqc | Report      : multiqc_report.html\n    |           multiqc | Data        : multiqc_data\n    |           multiqc | MultiQC complete\n\n\n# RESULTS\n\nTrimming is okay (not great). The level of polyA sequqence still present in reads, despite the use of the `--trim_poly_x` (which should handle removal of polyA sequences...) in [`fastp`](https://github.com/OpenGene/fastp) is a bit disappointing.\n\nMultiQC report:\n\n- [01.00-F-Ptua-RNAseq-trimming-fastp-FastQC-MultiQC/multiqc_report.html](https://github.com/urol-e5/timeseries_molecular/blob/f2d8235d179d4321b44d0ed7c747d991723f1722/F-Ptua/output/01.00-F-Ptua-RNAseq-trimming-fastp-FastQC-MultiQC/multiqc_report.html) (GitHub repo)\n\n![MultiQC screencap showing post-trimming Sequence Content.](./20250224-ptua-rnaseq-trimmed-multiqc-plot-sequence-content.png){fig-alt=\"Screenshot of trimmed MultiQC per base sequence content plot.\"}\n\n\n![MultiQC screencap showing persistent polyA sequence in post-trimming Adapter Content.](./20250224-ptua-rnaseq-trimmed-multiqc-plot-adapter-content.png){fig-alt=\"MultiQC screencap showing persistent polyA sequence in post-trimming Adapter Content.\"}\n\n# 5 References\n\n<div id=\"refs\" class=\"references csl-bib-body hanging-indent\">\n\n<div id=\"ref-chen2023\" class=\"csl-entry\">\n\nChen, Shifu. 2023. “Ultrafast One-Pass FASTQ Data Preprocessing, Quality\nControl, and Deduplication Using Fastp.” *iMeta* 2 (2).\n<https://doi.org/10.1002/imt2.107>.\n\n</div>\n\n<div id=\"ref-ewels2016\" class=\"csl-entry\">\n\nEwels, Philip, Måns Magnusson, Sverker Lundin, and Max Käller. 2016.\n“MultiQC: Summarize Analysis Results for Multiple Tools and Samples in a\nSingle Report.” *Bioinformatics* 32 (19): 3047–48.\n<https://doi.org/10.1093/bioinformatics/btw354>.\n\n</div>\n\n</div>"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","title":"Trimming - P.tuahiniensis RNA-seq Trimming and QC with fastp FastQC and MultiQC for E5 timeseries_molecular Project","date":"2025-02-24","draft":false,"categories":["2025","Pocillopora tuahiniensis","E5","trimming","fastp","FastQC","MultiQC","RNAseq","timeseries_molecular"]},"extensions":{"book":{"multiFile":true}}}},"draft":false,"projectFormats":["html"]}