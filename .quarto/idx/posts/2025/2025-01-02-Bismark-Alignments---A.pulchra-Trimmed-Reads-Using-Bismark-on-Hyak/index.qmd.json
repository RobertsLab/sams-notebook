{"title":"Bismark Alignments - A.pulchra Trimmed Reads Using Bismark on Hyak","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","title":"Bismark Alignments - A.pulchra Trimmed Reads Using Bismark on Hyak","date":"2025-01-02","draft":false,"engine":"knitr","categories":["2025","Bismark","Acropora pulchra","coral","timeseries_molecular","E5","klone","hyak","alignment","WGBS"],"image":"/posts/2025/2025-01-02-Bismark-Alignments---A.pulchra-Trimmed-Reads-Using-Bismark-on-Hyak/20250102-apul-bismark-alignments-klone-array-01.png"},"headingText":"INTRO","containsRefs":false,"markdown":"\n\nThis notebook is part of the coral E5 [timeseries_molecular project](https://github.com/urol-e5/timeseries_molecular) (GitHub repo). Due to the desire to have some preliminary data to use for a presentation, [Steven wanted the alignment of _A.pulchra_ UNTRIMMED reads](https://github.com/RobertsLab/resources/issues/2063#issue-2764616293)(GitHub Issue). However, when initially getting code setup/tweaked, I initiated [trimming in the meantime on ](../2025-01-02-Trimming---A.pulchra-WGBS-with-fastp-FastQC-and-MultiQC-on-Raven/index.qmd), so just ended up using the _trimmed_ reads. To aid with speed, performed alignments using Bismark on the Hyak computing cluster running an array of nodes on the `coenv` cluster. This is technically frowned upon, but seeing as this was during a holiday week, it seemed like there was no other activity, so I just went for it!\n\n# METHODS\n\n:::: {.callout-important}\nWhen launching the SLURM job, you can initiate the array to automatically calculate the appropriate number of nodes by using Bash calculations.\n\nThe file `fastq_pairs.txt` has to exist before execution!\n\nHere's how the array jobs were launched:\n\n```bash\nsbatch --array=1-$(wc -l < ../output/01.20-D-Apul-WGBS-trimming-fastp-FastQC-MultiQC/fastq_pairs.txt) 02.20-D-Apul-WGBS-alignment-SLURM-job.sh\n```\n\n:::\n\nThis approach required two scripts:\n\n- Job script\n\n  - [02.20-D-Apul-WGBS-alignment-SLURM_array-bismark.sh](https://github.com/urol-e5/timeseries_molecular/blob/04746494c0dad822c683367ec264a7f86875695d/D-Apul/code/02.20-D-Apul-WGBS-alignment-SLURM_array-bismark.sh) (GitHub repo; commit `0474649`)\n\n    - This script is executed by each node so that each node operates on unique FastQ pairs.\n\n```bash\n#!/bin/bash\n\n# This script is designed to be called by a SLURM script which\n# runs this script across an array of HPC nodes.\n\n### IMPORTANT ###\n\n# INPUT FILES\nrepo_dir=\"/gscratch/srlab/sam/gitrepos/urol-e5/timeseries_molecular\"\ntrimmed_fastqs_dir=\"${repo_dir}/D-Apul/output/01.20-D-Apul-WGBS-trimming-fastp-FastQC-MultiQC\"\nbisulfite_genome_dir=\"${repo_dir}/D-Apul/data\"\n\n# OUTPUT FILES\noutput_dir_top=\"${repo_dir}/D-Apul/output/02.20-D-Apul-WGBS-alignment-SLURM_array-bismark\"\n\n# PARAMETERS\nbowtie2_min_score=\"L,0,-0.6\"\n\n# CPU threads\n# Bismark already spawns multiple instances and additional threads are multiplicative.\"\nbismark_threads=5\n\n###################################################################################\n\n\n## SET ARRAY TASKS ##\ncd \"${output_dir_top}\"\n\n# Get the FastQ file pair for this task\n# the `p` sets the line number to process\n# which corresponds to the array task ID\npair=$(sed -n \"${SLURM_ARRAY_TASK_ID}p\" \"${trimmed_fastqs_dir}/fastq_pairs.txt\")\n\necho \"Contents of pair:\"\necho \"${pair}\"\necho \"\"\n\nR1_file=$(echo $pair | awk '{print $1}')\nR2_file=$(echo $pair | awk '{print $2}')\n\n# Get just the sample name (excludes the _R[12]_001*)\nsample_name=$(echo \"$R1_file\" | awk -F\"_\" '{print $1}')\n\n# Check if R1_file and R2_file are not empty\nif [ -z \"$R1_file\" ] || [ -z \"$R2_file\" ]; then\n  echo \"Error: R1_file or R2_file is empty. Exiting.\"\n  exit 1\nfi\n\n# Check if sample_name is not empty\nif [ -z \"$sample_name\" ]; then\n  echo \"Error: sample_name is empty. Exiting.\"\n  exit 1\nfi\n\necho \"Contents of sample_name: ${sample_name}\"\necho \"\"\n\n\n## RUN BISMARK ALIGNMENTS ##\nbismark \\\n--genome ${bisulfite_genome_dir} \\\n--score_min \"${bowtie2_min_score}\" \\\n--parallel \"${bismark_threads}\" \\\n--non_directional \\\n--gzip \\\n-p \"${bismark_threads}\" \\\n-1 ${trimmed_fastqs_dir}/${R1_file} \\\n-2 ${trimmed_fastqs_dir}/${R2_file} \\\n--output_dir \"${output_dir_top}\" \\\n2> \"${output_dir_top}\"/${sample_name}-${SLURM_ARRAY_TASK_ID}-bismark_summary.txt\n```\n\n- SLURM script:\n\n  - [02.20-D-Apul-WGBS-alignment-SLURM-job.sh](https://github.com/urol-e5/timeseries_molecular/blob/9d9b9b462074d5dae839a6b22447a0199ddc5b99/D-Apul/code/02.20-D-Apul-WGBS-alignment-SLURM-job.sh) (GitHub repo; commit `9d9b9b4`)\n\n    - This is the SLURM script which controls the SLURM job parameters.\n\n```bash\n#!/bin/bash\n#SBATCH --job-name=bismark_job_array\n#SBATCH --account=coenv\n#SBATCH --partition=cpu-g2\n#SBATCH --output=bismark_job_%A_%a.out\n#SBATCH --error=bismark_job_%A_%a.err\n#SBATCH --ntasks=1\n#SBATCH --cpus-per-task=20\n#SBATCH --mem=100G\n#SBATCH --time=72:00:00\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/srlab/sam/gitrepos/urol-e5/timeseries_molecular/D-Apul/output/02.20-D-Apul-WGBS-alignment-SLURM_array-bismark/\n\n# Execute Roberts Lab bioinformatics container\n# Binds home directory\n# Binds /gscratch directory\n# Directory bindings allow outputs to be written to the hard drive.\n\n# Executes Bismark alignment using 02.01-bismark-bowtie2-alignment-SLURM-array.sh script.\n\n# To execute this SLURM script as an array, start the script with the following command:\n\n# sbatch --array=1-$(wc -l < ../output/01.20-D-Apul-WGBS-trimming-fastp-FastQC-MultiQC/fastq_pairs.txt) 02.20-D-Apul-WGBS-alignment-SLURM-job.sh\n\n# IMPORTANT: Requires fastq_pairs.txt to exist prior to submission!\napptainer exec \\\n--home \"$PWD\" \\\n--bind /mmfs1/home/ \\\n--bind /gscratch \\\n/gscratch/srlab/sr320/srlab-bioinformatics-container-586bf21.sif \\\n/gscratch/srlab/sam/gitrepos/urol-e5/timeseries_molecular/D-Apul/code/02.20-D-Apul-WGBS-alignment-SLURM_array-bismark.sh\n```","srcMarkdownNoYaml":"\n# INTRO\n\nThis notebook is part of the coral E5 [timeseries_molecular project](https://github.com/urol-e5/timeseries_molecular) (GitHub repo). Due to the desire to have some preliminary data to use for a presentation, [Steven wanted the alignment of _A.pulchra_ UNTRIMMED reads](https://github.com/RobertsLab/resources/issues/2063#issue-2764616293)(GitHub Issue). However, when initially getting code setup/tweaked, I initiated [trimming in the meantime on ](../2025-01-02-Trimming---A.pulchra-WGBS-with-fastp-FastQC-and-MultiQC-on-Raven/index.qmd), so just ended up using the _trimmed_ reads. To aid with speed, performed alignments using Bismark on the Hyak computing cluster running an array of nodes on the `coenv` cluster. This is technically frowned upon, but seeing as this was during a holiday week, it seemed like there was no other activity, so I just went for it!\n\n# METHODS\n\n:::: {.callout-important}\nWhen launching the SLURM job, you can initiate the array to automatically calculate the appropriate number of nodes by using Bash calculations.\n\nThe file `fastq_pairs.txt` has to exist before execution!\n\nHere's how the array jobs were launched:\n\n```bash\nsbatch --array=1-$(wc -l < ../output/01.20-D-Apul-WGBS-trimming-fastp-FastQC-MultiQC/fastq_pairs.txt) 02.20-D-Apul-WGBS-alignment-SLURM-job.sh\n```\n\n:::\n\nThis approach required two scripts:\n\n- Job script\n\n  - [02.20-D-Apul-WGBS-alignment-SLURM_array-bismark.sh](https://github.com/urol-e5/timeseries_molecular/blob/04746494c0dad822c683367ec264a7f86875695d/D-Apul/code/02.20-D-Apul-WGBS-alignment-SLURM_array-bismark.sh) (GitHub repo; commit `0474649`)\n\n    - This script is executed by each node so that each node operates on unique FastQ pairs.\n\n```bash\n#!/bin/bash\n\n# This script is designed to be called by a SLURM script which\n# runs this script across an array of HPC nodes.\n\n### IMPORTANT ###\n\n# INPUT FILES\nrepo_dir=\"/gscratch/srlab/sam/gitrepos/urol-e5/timeseries_molecular\"\ntrimmed_fastqs_dir=\"${repo_dir}/D-Apul/output/01.20-D-Apul-WGBS-trimming-fastp-FastQC-MultiQC\"\nbisulfite_genome_dir=\"${repo_dir}/D-Apul/data\"\n\n# OUTPUT FILES\noutput_dir_top=\"${repo_dir}/D-Apul/output/02.20-D-Apul-WGBS-alignment-SLURM_array-bismark\"\n\n# PARAMETERS\nbowtie2_min_score=\"L,0,-0.6\"\n\n# CPU threads\n# Bismark already spawns multiple instances and additional threads are multiplicative.\"\nbismark_threads=5\n\n###################################################################################\n\n\n## SET ARRAY TASKS ##\ncd \"${output_dir_top}\"\n\n# Get the FastQ file pair for this task\n# the `p` sets the line number to process\n# which corresponds to the array task ID\npair=$(sed -n \"${SLURM_ARRAY_TASK_ID}p\" \"${trimmed_fastqs_dir}/fastq_pairs.txt\")\n\necho \"Contents of pair:\"\necho \"${pair}\"\necho \"\"\n\nR1_file=$(echo $pair | awk '{print $1}')\nR2_file=$(echo $pair | awk '{print $2}')\n\n# Get just the sample name (excludes the _R[12]_001*)\nsample_name=$(echo \"$R1_file\" | awk -F\"_\" '{print $1}')\n\n# Check if R1_file and R2_file are not empty\nif [ -z \"$R1_file\" ] || [ -z \"$R2_file\" ]; then\n  echo \"Error: R1_file or R2_file is empty. Exiting.\"\n  exit 1\nfi\n\n# Check if sample_name is not empty\nif [ -z \"$sample_name\" ]; then\n  echo \"Error: sample_name is empty. Exiting.\"\n  exit 1\nfi\n\necho \"Contents of sample_name: ${sample_name}\"\necho \"\"\n\n\n## RUN BISMARK ALIGNMENTS ##\nbismark \\\n--genome ${bisulfite_genome_dir} \\\n--score_min \"${bowtie2_min_score}\" \\\n--parallel \"${bismark_threads}\" \\\n--non_directional \\\n--gzip \\\n-p \"${bismark_threads}\" \\\n-1 ${trimmed_fastqs_dir}/${R1_file} \\\n-2 ${trimmed_fastqs_dir}/${R2_file} \\\n--output_dir \"${output_dir_top}\" \\\n2> \"${output_dir_top}\"/${sample_name}-${SLURM_ARRAY_TASK_ID}-bismark_summary.txt\n```\n\n- SLURM script:\n\n  - [02.20-D-Apul-WGBS-alignment-SLURM-job.sh](https://github.com/urol-e5/timeseries_molecular/blob/9d9b9b462074d5dae839a6b22447a0199ddc5b99/D-Apul/code/02.20-D-Apul-WGBS-alignment-SLURM-job.sh) (GitHub repo; commit `9d9b9b4`)\n\n    - This is the SLURM script which controls the SLURM job parameters.\n\n```bash\n#!/bin/bash\n#SBATCH --job-name=bismark_job_array\n#SBATCH --account=coenv\n#SBATCH --partition=cpu-g2\n#SBATCH --output=bismark_job_%A_%a.out\n#SBATCH --error=bismark_job_%A_%a.err\n#SBATCH --ntasks=1\n#SBATCH --cpus-per-task=20\n#SBATCH --mem=100G\n#SBATCH --time=72:00:00\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/srlab/sam/gitrepos/urol-e5/timeseries_molecular/D-Apul/output/02.20-D-Apul-WGBS-alignment-SLURM_array-bismark/\n\n# Execute Roberts Lab bioinformatics container\n# Binds home directory\n# Binds /gscratch directory\n# Directory bindings allow outputs to be written to the hard drive.\n\n# Executes Bismark alignment using 02.01-bismark-bowtie2-alignment-SLURM-array.sh script.\n\n# To execute this SLURM script as an array, start the script with the following command:\n\n# sbatch --array=1-$(wc -l < ../output/01.20-D-Apul-WGBS-trimming-fastp-FastQC-MultiQC/fastq_pairs.txt) 02.20-D-Apul-WGBS-alignment-SLURM-job.sh\n\n# IMPORTANT: Requires fastq_pairs.txt to exist prior to submission!\napptainer exec \\\n--home \"$PWD\" \\\n--bind /mmfs1/home/ \\\n--bind /gscratch \\\n/gscratch/srlab/sr320/srlab-bioinformatics-container-586bf21.sif \\\n/gscratch/srlab/sam/gitrepos/urol-e5/timeseries_molecular/D-Apul/code/02.20-D-Apul-WGBS-alignment-SLURM_array-bismark.sh\n```"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","title":"Bismark Alignments - A.pulchra Trimmed Reads Using Bismark on Hyak","date":"2025-01-02","draft":false,"categories":["2025","Bismark","Acropora pulchra","coral","timeseries_molecular","E5","klone","hyak","alignment","WGBS"],"image":"/posts/2025/2025-01-02-Bismark-Alignments---A.pulchra-Trimmed-Reads-Using-Bismark-on-Hyak/20250102-apul-bismark-alignments-klone-array-01.png"},"extensions":{"book":{"multiFile":true}}}},"draft":false,"projectFormats":["html"]}