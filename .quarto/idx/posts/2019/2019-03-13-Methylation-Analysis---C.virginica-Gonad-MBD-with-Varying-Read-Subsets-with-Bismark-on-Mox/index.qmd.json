{"title":"Methylation Analysis - C.virginica Gonad MBD with Varying Read Subsets with Bismark on Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"Methylation Analysis - C.virginica Gonad MBD with Varying Read Subsets with Bismark on Mox","date":"2019-03-13 15:12","tags":["mox","bismark","Crassostrea virginica","eastern oyster","MBD"],"categories":["2019","Miscellaneous"]},"headingText":"Job Name","containsRefs":false,"markdown":"\nSteven asked for the following analysis in [this GitHub Issue](https://github.com/RobertsLab/resources/issues/609) using Yaamini's _C.virginica_ MBD samples:\n\n> - Average read count for a single library\n> - 50% of average read count for a single library\n> - All data\n> - 50% of all data\n\n> Questions to addressed\n> Mean CpG Coverage\n> % CpG Coverage at 5x\n> % CpG Coverage at 10x\n> Any \"Report\" information automatically calculated by Bismark.\n\n[I made a bisulfite converted genome](https://robertslab.github.io/sams-notebook/posts/2019/2019-03-12-Data-Management---Create-C.virginica-Bisulfite-Genome-with-Bismark-on-Mox/) using the NCBI GCF_002022765.2_C_virginica-3.0 version.\n\nSet up the following SBATCH script to run on Mox:\n\n- [20190312_cvir_gonad_bismark.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20190312_cvir_gonad_bismark.sh) (GitHub)\n\n_NOTE_: It seems as though the if/else statement didn't work properly and resulted in a duplicated analysis of the \"half total reads\". The \"total reads\" will be run independently.\n\n_2nd NOTE_: Actually, the \"problem\" was that I was calculating read counts based on combining R1 and R2 reads. However, Bismark uses the subsetting option to run on read pairs (i.e. -u 1000 would run 1000 read pairs which is 2000 reads). So, my usage was incorrect. Fixed and re-ran.\n\n_3rd NOTE_: I generated cytosine coverage files after the fact on a Mox build node and it is not part of the SBATCH script. I ran the following command in each of the Bismark output folders:\n\n```\n/gscratch/srlab/programs/Bismark-0.21.0_dev/coverage2cytosine \\\ncvir_bsseq_all_pe_R1_bismark_bt2_pe.bismark.cov.gz  \\\n--output bismark_cytosine_coverage.txt \\\n--genome_folder /gscratch/srlab/sam/data/C_virginica/genomes/GCF_002022765.2_C_virginica-3.0\n```\n\n<pre><code>\n#!/bin/bash\n#SBATCH --job-name=bismark\n## Allocation Definition\n#SBATCH --account=coenv\n#SBATCH --partition=coenv\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=10-00:00:00\n## Memory per node\n#SBATCH --mem=120G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --workdir=/gscratch/scrubbed/samwhite/outputs/20190312_cvir_gonad_bismark\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n# Document programs in PATH (primarily for program version ID)\n\ndate >> system_path.log\necho \"\" >> system_path.log\necho \"System PATH for $SLURM_JOB_ID\" >> system_path.log\necho \"\" >> system_path.log\nprintf \"%0.s-\" {1..10} >> system_path.log\necho ${PATH} | tr : \\\\n >> system_path.log\n\n\n# Directories and programs\nwd=$(pwd)\nbismark_dir=\"/gscratch/srlab/programs/Bismark-0.19.0\"\nbowtie2_dir=\"/gscratch/srlab/programs/bowtie2-2.3.4.1-linux-x86_64/\"\nsamtools=\"/gscratch/srlab/programs/samtools-1.9/samtools\"\nreads_dir=\"/gscratch/srlab/sam/data/C_virginica/bsseq\"\n\n## genomes\n\ngenome=\"/gscratch/srlab/sam/data/C_virginica/genomes/GCF_002022765.2_C_virginica-3.0/\"\n\n## Concatenated FastQ Files\nR1=\"${wd}/cvir_bsseq_all_pe_R1.fastq.gz\"\nR2=\"${wd}/cvir_bsseq_all_pe_R2.fastq.gz\"\n\n## FastQ files lists\n### FastQ files were previously trimmed in preparation for use with Bismark:\n### https://robertslab.github.io/sams-notebook/posts/2018/2018-04-11-trimgalorefastqcmultiqc-trim-10bp-53-ends-c-virginica-mbd-bs-seq-fastq-data/\nR1_list=\"${wd}/cvir_bsseq_pe_all_R1.list\"\nR2_list=\"${wd}/cvir_bsseq_pe_all_R2.list\"\n\n# Initialize variables\ntotal_reads=0\navg_reads=0\nhalf_avg_reads=0\nhalf_total_reads=0\nreads_set_array=()\nR1_array=()\nR2_array=()\n\n\n## Save FastQ files to arrays\nR1_array=(${reads_dir}/*_R1_*.fq.gz)\nR2_array=(${reads_dir}/*_R2_*.fq.gz)\n\n# Number of libraries by counting elements in array\nnum_libs=$(echo ${#R1_array[@]})\n\n# Add names to array\n## Two IMPORTANT notes:\n## 1. The \"total reads\" must be the last element of the array.\n## 2. The order of this array must match the \"reads_set_array\" below!\nreads_set_names_array=(\"avg_reads\" \"half_avg_reads\" \"half_total_reads\" \"total_reads\")\n\n# Check for existence of previous concatenation\n# If they exist, delete them\n\nfor file in ${R1} ${R1_list} ${R2} ${R2_list} library_counts.txt\ndo\n  if [ -e ${file} ]; then\n    rm ${file}\n  fi\ndone\n\n\nprintf \"%s\\t%s\\n\\n\" \"LIBRARY\" \"COUNT\" >> library_counts.txt\n\n# Determine total reads counts from all libraries\n## Iterates through arrays and determines read counts\n## by counting lines in FastQ and dividing by 4.\n## Each loop adds the read1 read counts to the total\n## Only uses R1 because Bismark interprets subsetting value as read pairs\nfor fastq in \"${!R1_array[@]}\"\ndo\n  lib_count=0\n  R1_fastq=${R1_array[fastq]}\n  lib_name=$(echo ${R1_fastq} | awk -F'_' '{ print $3 }')\n  R1_count=$(echo $(zcat ${R1_fastq} | wc -l)/4 | bc)\n  lib_count=$(echo ${R1_count})\n  printf \"%s%s\\t%s\\n\" \"library_\" \"${lib_name}\" \"${lib_count}\" >> library_counts.txt\n  total_reads=$(echo ${R1_count} + ${total_reads}| bc)\ndone\n\n# Calcuations for different read amounts desired for analysis.\navg_reads=$(echo ${total_reads}/${num_libs} | bc)\nhalf_avg_reads=$(echo \"${avg_reads} / 2\" | bc)\nhalf_total_reads=$(echo \"${total_reads} / 2\" | bc)\n\n\n# Store calculated values in array\n## IMPORTANT note:\n## The order of this array must match \"reads_set_names_array\" above!\nreads_set_array=(${avg_reads} ${half_avg_reads} ${half_total_reads} ${total_reads})\n\n# Loop to record counts/calculations\nfor name in ${!reads_set_names_array[@]}\ndo\n  count_name=${reads_set_names_array[name]}\n  counts=${reads_set_array[name]}\n  printf \"%s\\t%s\\n\" \"${count_name}\" \"${counts}\" >> library_counts.txt\ndone\n\n# Concatenate R1 reads and generate lists of FastQs\nfor fastq in ${reads_dir}/*R1*.gz\ndo\n  echo ${fastq} >> ${R1_list}\n  cat ${fastq} >> ${R1}\ndone\n\n# Concatenate R2 reads and generate lists of FastQs\nfor fastq in ${reads_dir}/*R2*.gz\ndo\n  echo ${fastq} >> ${R2_list}\n  cat ${fastq} >> ${R2}\ndone\n\n# Run bismark using bisulftie-converted genome\n# Converted genome from 20190222 by me:\n# https://robertslab.github.io/sams-notebook/posts/2019/2019-02-21-Data-Management---Create-C.virginica-Bisulfite-Genome-wit-Bismark-on-Mox/\n## Loops through the various read sets\n## performs each analysis in respective subdirectory\n## When loop encounters last element of the array, then Bismark is run without the\n## -u subsetting option.\nfor set in \"${!reads_set_names_array[@]}\"\ndo\n  set_name=${reads_set_names_array[set]}\n  reads_set=${reads_set_array[set]}\n  mkdir ${set_name}_bismark\n  cd ${set_name}_bismark\n  if [ ${set} -eq $(( ${#reads_set_names_array[@]} - 1 )) ]; then\n    ${bismark_dir}/bismark \\\n    --path_to_bowtie ${bowtie2_dir} \\\n    --genome ${genome} \\\n    --non_directional \\\n    --score_min L,0,-0.6 \\\n    -p 28 \\\n    -1 ${R1} \\\n    -2 ${R2} \\\n    2> ${set_name}_summary.txt\n  else\n    ${bismark_dir}/bismark \\\n    --path_to_bowtie ${bowtie2_dir} \\\n    --genome ${genome} \\\n    --non_directional \\\n    --score_min L,0,-0.6 \\\n    -u ${reads_set} \\\n    -p 28 \\\n    -1 ${R1} \\\n    -2 ${R2} \\\n    2> ${set_name}_summary.txt\n  fi\n  # Methylation extraction\n\n  ${bismark_dir}/bismark_methylation_extractor \\\n  --bedgraph \\\n  --counts \\\n  --scaffolds \\\n  --remove_spaces \\\n  --multicore 28 \\\n  --buffer_size 75% \\\n  *.bam\n\n  # Bismark processing report\n\n  ${bismark_dir}/bismark2report\n\n  #Bismark summary report\n\n  ${bismark_dir}/bismark2summary\n\n  # Sort files for methylkit and IGV\n\n  find *.bam \\\n  | xargs basename -s .bam \\\n  | xargs -I{} ${samtools} \\\n  sort \\\n  --threads 28 \\\n  {}.bam \\\n  -o {}.sorted.bam\n\n  # Index sorted files for IGV\n  # The \"-@ 28\" below specifies number of CPU threads to use.\n\n  find *.sorted.bam \\\n  | xargs basename -s .sorted.bam \\\n  | xargs -I{} ${samtools} \\\n  index -@ 28 \\\n  {}.sorted.bam\n  cd ${wd}\ndone\n</code></pre>\n\n---\n\n### RESULTS\n\nThis took a pretty long  time to run (6days 16hrs):\n\n![6 days, 16hrs runtime](https://raw.githubusercontent.com/RobertsLab/sams-notebook/master/images/screencaps/20190320_bismark_complete.png)\n\n\nAdditionally, I don't have the time at the moment to actually finish the analysis to evaluate differences in coverage. I'm posting notebook entry to make data available (belatedly) and will get some sort of comparison analysis done in the near future...\n\nOutput folder:\n\n- [20190312_cvir_gonad_bismark/](http://gannet.fish.washington.edu/Atumefaciens/20190312_cvir_gonad_bismark/)\n\nSummary reports for each of the configurations (HTML):\n\n- [avg_reads_bismark/bismark_summary_report.html](http://gannet.fish.washington.edu/Atumefaciens/20190312_cvir_gonad_bismark/avg_reads_bismark/bismark_summary_report.html)\n\n  - 27,591,427 reads\n\n  - 28.9% unique alignments\n\n  - 73.6% methylated CpG\n\n- [half_avg_reads_bismark/bismark_summary_report.html](http://gannet.fish.washington.edu/Atumefaciens/20190312_cvir_gonad_bismark/half_avg_reads_bismark/bismark_summary_report.html)\n\n  - 55,182,854 reads\n\n  - 36.8% unique alignments\n\n  - 73.4% methylated CpG\n\n- [half_total_reads_bismark/bismark_summary_report.html](http://gannet.fish.washington.edu/Atumefaciens/20190312_cvir_gonad_bismark/half_total_reads_bismark/bismark_summary_report.html)\n\n  - 137,957,136 reads\n\n  - 31.3% unique alignments\n\n  - 75.2% methylated CpG\n\n- [http://gannet.fish.washington.edu/Atumefaciens/20190312_cvir_gonad_bismark/total_reads_bismark/bismark_summary_report.html](http://gannet.fish.washington.edu/Atumefaciens/20190312_cvir_gonad_bismark/total_reads_bismark/)\n\n  - 275,914,272 reads\n\n  - 32.8% unique alignments\n\n  - 75.5% methylated CpG\n","srcMarkdownNoYaml":"\nSteven asked for the following analysis in [this GitHub Issue](https://github.com/RobertsLab/resources/issues/609) using Yaamini's _C.virginica_ MBD samples:\n\n> - Average read count for a single library\n> - 50% of average read count for a single library\n> - All data\n> - 50% of all data\n\n> Questions to addressed\n> Mean CpG Coverage\n> % CpG Coverage at 5x\n> % CpG Coverage at 10x\n> Any \"Report\" information automatically calculated by Bismark.\n\n[I made a bisulfite converted genome](https://robertslab.github.io/sams-notebook/posts/2019/2019-03-12-Data-Management---Create-C.virginica-Bisulfite-Genome-with-Bismark-on-Mox/) using the NCBI GCF_002022765.2_C_virginica-3.0 version.\n\nSet up the following SBATCH script to run on Mox:\n\n- [20190312_cvir_gonad_bismark.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20190312_cvir_gonad_bismark.sh) (GitHub)\n\n_NOTE_: It seems as though the if/else statement didn't work properly and resulted in a duplicated analysis of the \"half total reads\". The \"total reads\" will be run independently.\n\n_2nd NOTE_: Actually, the \"problem\" was that I was calculating read counts based on combining R1 and R2 reads. However, Bismark uses the subsetting option to run on read pairs (i.e. -u 1000 would run 1000 read pairs which is 2000 reads). So, my usage was incorrect. Fixed and re-ran.\n\n_3rd NOTE_: I generated cytosine coverage files after the fact on a Mox build node and it is not part of the SBATCH script. I ran the following command in each of the Bismark output folders:\n\n```\n/gscratch/srlab/programs/Bismark-0.21.0_dev/coverage2cytosine \\\ncvir_bsseq_all_pe_R1_bismark_bt2_pe.bismark.cov.gz  \\\n--output bismark_cytosine_coverage.txt \\\n--genome_folder /gscratch/srlab/sam/data/C_virginica/genomes/GCF_002022765.2_C_virginica-3.0\n```\n\n<pre><code>\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=bismark\n## Allocation Definition\n#SBATCH --account=coenv\n#SBATCH --partition=coenv\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=10-00:00:00\n## Memory per node\n#SBATCH --mem=120G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --workdir=/gscratch/scrubbed/samwhite/outputs/20190312_cvir_gonad_bismark\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n# Document programs in PATH (primarily for program version ID)\n\ndate >> system_path.log\necho \"\" >> system_path.log\necho \"System PATH for $SLURM_JOB_ID\" >> system_path.log\necho \"\" >> system_path.log\nprintf \"%0.s-\" {1..10} >> system_path.log\necho ${PATH} | tr : \\\\n >> system_path.log\n\n\n# Directories and programs\nwd=$(pwd)\nbismark_dir=\"/gscratch/srlab/programs/Bismark-0.19.0\"\nbowtie2_dir=\"/gscratch/srlab/programs/bowtie2-2.3.4.1-linux-x86_64/\"\nsamtools=\"/gscratch/srlab/programs/samtools-1.9/samtools\"\nreads_dir=\"/gscratch/srlab/sam/data/C_virginica/bsseq\"\n\n## genomes\n\ngenome=\"/gscratch/srlab/sam/data/C_virginica/genomes/GCF_002022765.2_C_virginica-3.0/\"\n\n## Concatenated FastQ Files\nR1=\"${wd}/cvir_bsseq_all_pe_R1.fastq.gz\"\nR2=\"${wd}/cvir_bsseq_all_pe_R2.fastq.gz\"\n\n## FastQ files lists\n### FastQ files were previously trimmed in preparation for use with Bismark:\n### https://robertslab.github.io/sams-notebook/posts/2018/2018-04-11-trimgalorefastqcmultiqc-trim-10bp-53-ends-c-virginica-mbd-bs-seq-fastq-data/\nR1_list=\"${wd}/cvir_bsseq_pe_all_R1.list\"\nR2_list=\"${wd}/cvir_bsseq_pe_all_R2.list\"\n\n# Initialize variables\ntotal_reads=0\navg_reads=0\nhalf_avg_reads=0\nhalf_total_reads=0\nreads_set_array=()\nR1_array=()\nR2_array=()\n\n\n## Save FastQ files to arrays\nR1_array=(${reads_dir}/*_R1_*.fq.gz)\nR2_array=(${reads_dir}/*_R2_*.fq.gz)\n\n# Number of libraries by counting elements in array\nnum_libs=$(echo ${#R1_array[@]})\n\n# Add names to array\n## Two IMPORTANT notes:\n## 1. The \"total reads\" must be the last element of the array.\n## 2. The order of this array must match the \"reads_set_array\" below!\nreads_set_names_array=(\"avg_reads\" \"half_avg_reads\" \"half_total_reads\" \"total_reads\")\n\n# Check for existence of previous concatenation\n# If they exist, delete them\n\nfor file in ${R1} ${R1_list} ${R2} ${R2_list} library_counts.txt\ndo\n  if [ -e ${file} ]; then\n    rm ${file}\n  fi\ndone\n\n\nprintf \"%s\\t%s\\n\\n\" \"LIBRARY\" \"COUNT\" >> library_counts.txt\n\n# Determine total reads counts from all libraries\n## Iterates through arrays and determines read counts\n## by counting lines in FastQ and dividing by 4.\n## Each loop adds the read1 read counts to the total\n## Only uses R1 because Bismark interprets subsetting value as read pairs\nfor fastq in \"${!R1_array[@]}\"\ndo\n  lib_count=0\n  R1_fastq=${R1_array[fastq]}\n  lib_name=$(echo ${R1_fastq} | awk -F'_' '{ print $3 }')\n  R1_count=$(echo $(zcat ${R1_fastq} | wc -l)/4 | bc)\n  lib_count=$(echo ${R1_count})\n  printf \"%s%s\\t%s\\n\" \"library_\" \"${lib_name}\" \"${lib_count}\" >> library_counts.txt\n  total_reads=$(echo ${R1_count} + ${total_reads}| bc)\ndone\n\n# Calcuations for different read amounts desired for analysis.\navg_reads=$(echo ${total_reads}/${num_libs} | bc)\nhalf_avg_reads=$(echo \"${avg_reads} / 2\" | bc)\nhalf_total_reads=$(echo \"${total_reads} / 2\" | bc)\n\n\n# Store calculated values in array\n## IMPORTANT note:\n## The order of this array must match \"reads_set_names_array\" above!\nreads_set_array=(${avg_reads} ${half_avg_reads} ${half_total_reads} ${total_reads})\n\n# Loop to record counts/calculations\nfor name in ${!reads_set_names_array[@]}\ndo\n  count_name=${reads_set_names_array[name]}\n  counts=${reads_set_array[name]}\n  printf \"%s\\t%s\\n\" \"${count_name}\" \"${counts}\" >> library_counts.txt\ndone\n\n# Concatenate R1 reads and generate lists of FastQs\nfor fastq in ${reads_dir}/*R1*.gz\ndo\n  echo ${fastq} >> ${R1_list}\n  cat ${fastq} >> ${R1}\ndone\n\n# Concatenate R2 reads and generate lists of FastQs\nfor fastq in ${reads_dir}/*R2*.gz\ndo\n  echo ${fastq} >> ${R2_list}\n  cat ${fastq} >> ${R2}\ndone\n\n# Run bismark using bisulftie-converted genome\n# Converted genome from 20190222 by me:\n# https://robertslab.github.io/sams-notebook/posts/2019/2019-02-21-Data-Management---Create-C.virginica-Bisulfite-Genome-wit-Bismark-on-Mox/\n## Loops through the various read sets\n## performs each analysis in respective subdirectory\n## When loop encounters last element of the array, then Bismark is run without the\n## -u subsetting option.\nfor set in \"${!reads_set_names_array[@]}\"\ndo\n  set_name=${reads_set_names_array[set]}\n  reads_set=${reads_set_array[set]}\n  mkdir ${set_name}_bismark\n  cd ${set_name}_bismark\n  if [ ${set} -eq $(( ${#reads_set_names_array[@]} - 1 )) ]; then\n    ${bismark_dir}/bismark \\\n    --path_to_bowtie ${bowtie2_dir} \\\n    --genome ${genome} \\\n    --non_directional \\\n    --score_min L,0,-0.6 \\\n    -p 28 \\\n    -1 ${R1} \\\n    -2 ${R2} \\\n    2> ${set_name}_summary.txt\n  else\n    ${bismark_dir}/bismark \\\n    --path_to_bowtie ${bowtie2_dir} \\\n    --genome ${genome} \\\n    --non_directional \\\n    --score_min L,0,-0.6 \\\n    -u ${reads_set} \\\n    -p 28 \\\n    -1 ${R1} \\\n    -2 ${R2} \\\n    2> ${set_name}_summary.txt\n  fi\n  # Methylation extraction\n\n  ${bismark_dir}/bismark_methylation_extractor \\\n  --bedgraph \\\n  --counts \\\n  --scaffolds \\\n  --remove_spaces \\\n  --multicore 28 \\\n  --buffer_size 75% \\\n  *.bam\n\n  # Bismark processing report\n\n  ${bismark_dir}/bismark2report\n\n  #Bismark summary report\n\n  ${bismark_dir}/bismark2summary\n\n  # Sort files for methylkit and IGV\n\n  find *.bam \\\n  | xargs basename -s .bam \\\n  | xargs -I{} ${samtools} \\\n  sort \\\n  --threads 28 \\\n  {}.bam \\\n  -o {}.sorted.bam\n\n  # Index sorted files for IGV\n  # The \"-@ 28\" below specifies number of CPU threads to use.\n\n  find *.sorted.bam \\\n  | xargs basename -s .sorted.bam \\\n  | xargs -I{} ${samtools} \\\n  index -@ 28 \\\n  {}.sorted.bam\n  cd ${wd}\ndone\n</code></pre>\n\n---\n\n### RESULTS\n\nThis took a pretty long  time to run (6days 16hrs):\n\n![6 days, 16hrs runtime](https://raw.githubusercontent.com/RobertsLab/sams-notebook/master/images/screencaps/20190320_bismark_complete.png)\n\n\nAdditionally, I don't have the time at the moment to actually finish the analysis to evaluate differences in coverage. I'm posting notebook entry to make data available (belatedly) and will get some sort of comparison analysis done in the near future...\n\nOutput folder:\n\n- [20190312_cvir_gonad_bismark/](http://gannet.fish.washington.edu/Atumefaciens/20190312_cvir_gonad_bismark/)\n\nSummary reports for each of the configurations (HTML):\n\n- [avg_reads_bismark/bismark_summary_report.html](http://gannet.fish.washington.edu/Atumefaciens/20190312_cvir_gonad_bismark/avg_reads_bismark/bismark_summary_report.html)\n\n  - 27,591,427 reads\n\n  - 28.9% unique alignments\n\n  - 73.6% methylated CpG\n\n- [half_avg_reads_bismark/bismark_summary_report.html](http://gannet.fish.washington.edu/Atumefaciens/20190312_cvir_gonad_bismark/half_avg_reads_bismark/bismark_summary_report.html)\n\n  - 55,182,854 reads\n\n  - 36.8% unique alignments\n\n  - 73.4% methylated CpG\n\n- [half_total_reads_bismark/bismark_summary_report.html](http://gannet.fish.washington.edu/Atumefaciens/20190312_cvir_gonad_bismark/half_total_reads_bismark/bismark_summary_report.html)\n\n  - 137,957,136 reads\n\n  - 31.3% unique alignments\n\n  - 75.2% methylated CpG\n\n- [http://gannet.fish.washington.edu/Atumefaciens/20190312_cvir_gonad_bismark/total_reads_bismark/bismark_summary_report.html](http://gannet.fish.washington.edu/Atumefaciens/20190312_cvir_gonad_bismark/total_reads_bismark/)\n\n  - 275,914,272 reads\n\n  - 32.8% unique alignments\n\n  - 75.5% methylated CpG\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"Methylation Analysis - C.virginica Gonad MBD with Varying Read Subsets with Bismark on Mox","date":"2019-03-13 15:12","tags":["mox","bismark","Crassostrea virginica","eastern oyster","MBD"],"categories":["2019","Miscellaneous"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}