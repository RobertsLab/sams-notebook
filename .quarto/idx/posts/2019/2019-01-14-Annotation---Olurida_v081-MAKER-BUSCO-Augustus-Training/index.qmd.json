{"title":"Annotation - Olurida_v081 MAKER BUSCO (eukaryota_odb9) Augustus Training Submitted to Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"Annotation - Olurida_v081 MAKER BUSCO (eukaryota_odb9) Augustus Training Submitted to Mox","date":"2019-01-14 15:52","tags":["Ostrea lurida","Olympia oyster","MAKER","BUSCO","Augustus","annotation","mox","Olurida_v081"],"categories":["2019","Olympia Oyster Genome Sequencing"]},"headingText":"Job Name","containsRefs":false,"markdown":"\n[I've previously run MAKER, followed by two round of SNAP gene predictions](https://robertslab.github.io/sams-notebook/posts/2018/2018-11-27-Annotation---Olurida_v081-MAKER-on-Mox/) and now I'm going to throw a BUSCO/Augustus gene training & prediction in the mix to see how it compares. In order to do so, I've followed [this GitHub Gist on using MAKER/SNAP/BUSCO/Augustus](https://gist.github.com/darencard/bb1001ac1532dd4225b030cf0cd61ce2) as a guide on what the process should entail.\n\nI'm not entirely sure how long this will take to run, but initial glance at the output indicates that it is unable to use the two nodes I requested (as it has a message about only using maximum of 28 threads), so it will only use a single node, even though this job has reserved two nodes (whoops!).\n\nRan with the following:\n\nSpecies:\n\n- human\n\nBUSCO database:\n\n- ```eukaryota_odb9```\n\nSBATCH script (GitHub):\n\n- [20190114_oly_busco_augustus.sh\n (commit cf1b973)](https://github.com/RobertsLab/sams-notebook/blob/cf1b9737a9ff4c6468ad7903073bd3dd18859ef3/sbatch_scripts/20190114_oly_busco_augustus.sh)\n\n<pre><code>\n#!/bin/bash\n#SBATCH --job-name=busco\n## Allocation Definition\n#SBATCH --account=coenv\n#SBATCH --partition=coenv\n## Resources\n## Nodes\n#SBATCH --nodes=2\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=15-00:00:00\n## Memory per node\n#SBATCH --mem=120G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --workdir=/gscratch/scrubbed/samwhite/outputs/20190114_oly_busco_augustus\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n# Load Open MPI module for parallel, multi-node processing\n\nmodule load icc_19-ompi_3.1.2\n\n# SegFault fix?\nexport THREADS_DAEMON_MODEL=1\n\n# Document programs in PATH (primarily for program version ID)\n\ndate >> system_path.log\necho \"\" >> system_path.log\necho \"System PATH for $SLURM_JOB_ID\" >> system_path.log\necho \"\" >> system_path.log\nprintf \"%0.s-\" {1..10} >> system_path.log\necho ${PATH} | tr : \\\\n >> system_path.log\n\n\n## Establish variables for more readable code\nwd=$(pwd)\n\nbedtools=/gscratch/srlab/programs/bedtools-2.27.1/bin/bedtools\nbusco=/gscratch/srlab/programs/busco-v3/scripts/run_BUSCO.py\nbusco_db=/gscratch/srlab/sam/data/databases/BUSCO/eukaryota_odb9\nbusco_config_default=/gscratch/srlab/programs/busco-v3/config/config.ini.default\nbusco_config_ini=${wd}/config.ini\nmaker_dir=/gscratch/scrubbed/samwhite/outputs/20181127_oly_maker_genome_annotation\noly_genome=/gscratch/srlab/sam/data/O_lurida/oly_genome_assemblies/Olurida_v081/Olurida_v081.fa\noly_maker_gff=/gscratch/srlab/sam/data/O_lurida/oly_genome_assemblies/Olurida_v081/Olurida_v081.maker.all.noseqs.gff\nblast_dir=/gscratch/srlab/programs/ncbi-blast-2.8.1+/bin\naugustus_bin=/gscratch/srlab/programs/Augustus-3.3.2/bin\naugustus_scripts=/gscratch/srlab/programs/Augustus-3.3.2/scripts\naugustus_config_dir=${wd}/augustus/config\naugustus_orig_config_dir=/gscratch/srlab/programs/Augustus-3.3.2/config\nhmm_dir=/gscratch/srlab/programs/hmmer-3.2.1/src\n\n\n\n# Export BUSCO config file location\nexport BUSCO_CONFIG_FILE=\"${busco_config_ini}\"\n\n# Export Augustus variable\nexport PATH=\"${augustus_bin}:$PATH\"\nexport PATH=\"${augustus_scripts}:$PATH\"\nexport AUGUSTUS_CONFIG_PATH=\"${augustus_config_dir}\"\n\n\n\n# Subset transcripts and include +/- 1000bp on each side.\n## Reduces amount of data used for training - don't need crazy amounts to properly train gene models\nawk -v OFS=\"\\t\" '{ if ($3 == \"mRNA\") print $1, $4, $5 }' ${oly_maker_gff} | \\\nawk -v OFS=\"\\t\" '{ if ($2 < 1000) print $1, \"0\", $3+1000; else print $1, $2-1000, $3+1000 }' | \\\n${bedtools} getfasta -fi ${oly_genome} \\\n-bed - \\\n-fo Olurida_v081.all.maker.transcripts1000.fasta\n\ncp Olurida_v081.all.maker.transcripts1000.fasta ${maker_dir}\ncp ${busco_config_default} ${busco_config_ini}\n\nmkdir augustus\ncp -pr ${augustus_orig_config_dir} ${augustus_config_dir}\n\n# Edit BUSCO config file\n## Set paths to various programs\n### The use of the % symbol sets the delimiter sed uses for arguments.\n### Normally, the delimiter that most examples use is a slash \"/\".\n### But, we need to expand the variables into a full path with slashes, which screws up sed.\n### Thus, the use of % symbol instead (it could be any character that is NOT present in the expanded variable; doesn't have to be \"%\").\n\nsed -i \"/^tblastn_path/ s%tblastn_path = /usr/bin/%path = ${blast_dir}%\" \"${busco_config_ini}\"\nsed -i \"/^makeblastdb_path/ s%makeblastdb_path = /usr/bin/%path = ${blast_dir}%\" \"${busco_config_ini}\"\nsed -i \"/^augustus_path/ s%augustus_path = /home/osboxes/BUSCOVM/augustus/augustus-3.2.2/bin/%path = ${augustus_bin}%\" \"${busco_config_ini}\"\nsed -i \"/^etraining_path/ s%etraining_path = /home/osboxes/BUSCOVM/augustus/augustus-3.2.2/bin/%path = ${augustus_bin}%\" \"${busco_config_ini}\"\nsed -i \"/^gff2gbSmallDNA_path/ s%gff2gbSmallDNA_path = /home/osboxes/BUSCOVM/augustus/augustus-3.2.2/scripts/%path = ${augustus_scripts}%\" \"${busco_config_ini}\"\nsed -i \"/^new_species_path/ s%new_species_path = /home/osboxes/BUSCOVM/augustus/augustus-3.2.2/scripts/%path = ${augustus_scripts}%\" \"${busco_config_ini}\"\nsed -i \"/^optimize_augustus_path/ s%optimize_augustus_path = /home/osboxes/BUSCOVM/augustus/augustus-3.2.2/scripts/%path = ${augustus_scripts}%\" \"${busco_config_ini}\"\nsed -i \"/^hmmsearch_path/ s%hmmsearch_path = /home/osboxes/BUSCOVM/hmmer/hmmer-3.1b2-linux-intel-ia32/binaries/%path = ${hmm_dir}%\" \"${busco_config_ini}\"\n\n\n# Run BUSCO/Augustus training\n${busco} \\\n--in Olurida_v081.all.maker.transcripts1000.fasta \\\n--out Olurida_maker_busco \\\n--lineage_path ${busco_db} \\\n--mode genome \\\n--cpu 56 \\\n--long \\\n--species human \\\n--tarzip \\\n--augustus_parameters='--progress=true'\n\n</code></pre>\n\n---\n\n# RESULTS\n\nWell, that was quick! Run time was ~45mins.\n\n\nOutput folder:\n\n- [20190114_oly_busco_augustus/](https://gannet.fish.washington.edu/Atumefaciens/20190114_oly_busco_augustus/)\n\nBUSCO config file (txt)\n- [20190114_oly_busco_augustus/config.ini](https://gannet.fish.washington.edu/Atumefaciens/20190114_oly_busco_augustus/config.ini)\n\nBUSCO short summary file (txt):\n\n- [20190114_oly_busco_augustus/run_Olurida_maker_busco/short_summary_Olurida_maker_busco.txt](https://gannet.fish.washington.edu/Atumefaciens/20190114_oly_busco_augustus/run_Olurida_maker_busco/short_summary_Olurida_maker_busco.txt)\n\n<pre><code>\n# BUSCO version is: 3.0.2\n# The lineage dataset is: eukaryota_odb9 (Creation date: 2016-11-02, number of species: 100, number of BUSCOs: 303)\n# To reproduce this run: python /gscratch/srlab/programs/busco-v3/scripts/run_BUSCO.py -i Olurida_v081.all.maker.transcripts1000.fasta -o Olurida_maker_busco -l /gscratch/srlab/sam/data/databases/BUSCO/eukaryota_odb9/ -m genome -c 56 --long -z -sp human --augustus_parameters '--progress=true'\n#\n# Summarized benchmarking in BUSCO notation for file Olurida_v081.all.maker.transcripts1000.fasta\n# BUSCO was run in mode: genome\n\n\tC:32.1%[S:31.4%,D:0.7%],F:12.5%,M:55.4%,n:303\n\n\t97\tComplete BUSCOs (C)\n\t95\tComplete and single-copy BUSCOs (S)\n\t2\tComplete and duplicated BUSCOs (D)\n\t38\tFragmented BUSCOs (F)\n\t168\tMissing BUSCOs (M)\n\t303\tTotal BUSCO groups searched\n</code></pre>\n\nWell, this suggests this assembly is incomplete. Ideally, one would expect 100% complete BUSCOs in a complete assembly. This only has 32.1% complete BUSCOs. Might we need to do more sequencing?\n\nI'll re-run this using the ```metazoa_odb9``` BUSCO database and see how it compares.\n","srcMarkdownNoYaml":"\n[I've previously run MAKER, followed by two round of SNAP gene predictions](https://robertslab.github.io/sams-notebook/posts/2018/2018-11-27-Annotation---Olurida_v081-MAKER-on-Mox/) and now I'm going to throw a BUSCO/Augustus gene training & prediction in the mix to see how it compares. In order to do so, I've followed [this GitHub Gist on using MAKER/SNAP/BUSCO/Augustus](https://gist.github.com/darencard/bb1001ac1532dd4225b030cf0cd61ce2) as a guide on what the process should entail.\n\nI'm not entirely sure how long this will take to run, but initial glance at the output indicates that it is unable to use the two nodes I requested (as it has a message about only using maximum of 28 threads), so it will only use a single node, even though this job has reserved two nodes (whoops!).\n\nRan with the following:\n\nSpecies:\n\n- human\n\nBUSCO database:\n\n- ```eukaryota_odb9```\n\nSBATCH script (GitHub):\n\n- [20190114_oly_busco_augustus.sh\n (commit cf1b973)](https://github.com/RobertsLab/sams-notebook/blob/cf1b9737a9ff4c6468ad7903073bd3dd18859ef3/sbatch_scripts/20190114_oly_busco_augustus.sh)\n\n<pre><code>\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=busco\n## Allocation Definition\n#SBATCH --account=coenv\n#SBATCH --partition=coenv\n## Resources\n## Nodes\n#SBATCH --nodes=2\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=15-00:00:00\n## Memory per node\n#SBATCH --mem=120G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --workdir=/gscratch/scrubbed/samwhite/outputs/20190114_oly_busco_augustus\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n# Load Open MPI module for parallel, multi-node processing\n\nmodule load icc_19-ompi_3.1.2\n\n# SegFault fix?\nexport THREADS_DAEMON_MODEL=1\n\n# Document programs in PATH (primarily for program version ID)\n\ndate >> system_path.log\necho \"\" >> system_path.log\necho \"System PATH for $SLURM_JOB_ID\" >> system_path.log\necho \"\" >> system_path.log\nprintf \"%0.s-\" {1..10} >> system_path.log\necho ${PATH} | tr : \\\\n >> system_path.log\n\n\n## Establish variables for more readable code\nwd=$(pwd)\n\nbedtools=/gscratch/srlab/programs/bedtools-2.27.1/bin/bedtools\nbusco=/gscratch/srlab/programs/busco-v3/scripts/run_BUSCO.py\nbusco_db=/gscratch/srlab/sam/data/databases/BUSCO/eukaryota_odb9\nbusco_config_default=/gscratch/srlab/programs/busco-v3/config/config.ini.default\nbusco_config_ini=${wd}/config.ini\nmaker_dir=/gscratch/scrubbed/samwhite/outputs/20181127_oly_maker_genome_annotation\noly_genome=/gscratch/srlab/sam/data/O_lurida/oly_genome_assemblies/Olurida_v081/Olurida_v081.fa\noly_maker_gff=/gscratch/srlab/sam/data/O_lurida/oly_genome_assemblies/Olurida_v081/Olurida_v081.maker.all.noseqs.gff\nblast_dir=/gscratch/srlab/programs/ncbi-blast-2.8.1+/bin\naugustus_bin=/gscratch/srlab/programs/Augustus-3.3.2/bin\naugustus_scripts=/gscratch/srlab/programs/Augustus-3.3.2/scripts\naugustus_config_dir=${wd}/augustus/config\naugustus_orig_config_dir=/gscratch/srlab/programs/Augustus-3.3.2/config\nhmm_dir=/gscratch/srlab/programs/hmmer-3.2.1/src\n\n\n\n# Export BUSCO config file location\nexport BUSCO_CONFIG_FILE=\"${busco_config_ini}\"\n\n# Export Augustus variable\nexport PATH=\"${augustus_bin}:$PATH\"\nexport PATH=\"${augustus_scripts}:$PATH\"\nexport AUGUSTUS_CONFIG_PATH=\"${augustus_config_dir}\"\n\n\n\n# Subset transcripts and include +/- 1000bp on each side.\n## Reduces amount of data used for training - don't need crazy amounts to properly train gene models\nawk -v OFS=\"\\t\" '{ if ($3 == \"mRNA\") print $1, $4, $5 }' ${oly_maker_gff} | \\\nawk -v OFS=\"\\t\" '{ if ($2 < 1000) print $1, \"0\", $3+1000; else print $1, $2-1000, $3+1000 }' | \\\n${bedtools} getfasta -fi ${oly_genome} \\\n-bed - \\\n-fo Olurida_v081.all.maker.transcripts1000.fasta\n\ncp Olurida_v081.all.maker.transcripts1000.fasta ${maker_dir}\ncp ${busco_config_default} ${busco_config_ini}\n\nmkdir augustus\ncp -pr ${augustus_orig_config_dir} ${augustus_config_dir}\n\n# Edit BUSCO config file\n## Set paths to various programs\n### The use of the % symbol sets the delimiter sed uses for arguments.\n### Normally, the delimiter that most examples use is a slash \"/\".\n### But, we need to expand the variables into a full path with slashes, which screws up sed.\n### Thus, the use of % symbol instead (it could be any character that is NOT present in the expanded variable; doesn't have to be \"%\").\n\nsed -i \"/^tblastn_path/ s%tblastn_path = /usr/bin/%path = ${blast_dir}%\" \"${busco_config_ini}\"\nsed -i \"/^makeblastdb_path/ s%makeblastdb_path = /usr/bin/%path = ${blast_dir}%\" \"${busco_config_ini}\"\nsed -i \"/^augustus_path/ s%augustus_path = /home/osboxes/BUSCOVM/augustus/augustus-3.2.2/bin/%path = ${augustus_bin}%\" \"${busco_config_ini}\"\nsed -i \"/^etraining_path/ s%etraining_path = /home/osboxes/BUSCOVM/augustus/augustus-3.2.2/bin/%path = ${augustus_bin}%\" \"${busco_config_ini}\"\nsed -i \"/^gff2gbSmallDNA_path/ s%gff2gbSmallDNA_path = /home/osboxes/BUSCOVM/augustus/augustus-3.2.2/scripts/%path = ${augustus_scripts}%\" \"${busco_config_ini}\"\nsed -i \"/^new_species_path/ s%new_species_path = /home/osboxes/BUSCOVM/augustus/augustus-3.2.2/scripts/%path = ${augustus_scripts}%\" \"${busco_config_ini}\"\nsed -i \"/^optimize_augustus_path/ s%optimize_augustus_path = /home/osboxes/BUSCOVM/augustus/augustus-3.2.2/scripts/%path = ${augustus_scripts}%\" \"${busco_config_ini}\"\nsed -i \"/^hmmsearch_path/ s%hmmsearch_path = /home/osboxes/BUSCOVM/hmmer/hmmer-3.1b2-linux-intel-ia32/binaries/%path = ${hmm_dir}%\" \"${busco_config_ini}\"\n\n\n# Run BUSCO/Augustus training\n${busco} \\\n--in Olurida_v081.all.maker.transcripts1000.fasta \\\n--out Olurida_maker_busco \\\n--lineage_path ${busco_db} \\\n--mode genome \\\n--cpu 56 \\\n--long \\\n--species human \\\n--tarzip \\\n--augustus_parameters='--progress=true'\n\n</code></pre>\n\n---\n\n# RESULTS\n\nWell, that was quick! Run time was ~45mins.\n\n\nOutput folder:\n\n- [20190114_oly_busco_augustus/](https://gannet.fish.washington.edu/Atumefaciens/20190114_oly_busco_augustus/)\n\nBUSCO config file (txt)\n- [20190114_oly_busco_augustus/config.ini](https://gannet.fish.washington.edu/Atumefaciens/20190114_oly_busco_augustus/config.ini)\n\nBUSCO short summary file (txt):\n\n- [20190114_oly_busco_augustus/run_Olurida_maker_busco/short_summary_Olurida_maker_busco.txt](https://gannet.fish.washington.edu/Atumefaciens/20190114_oly_busco_augustus/run_Olurida_maker_busco/short_summary_Olurida_maker_busco.txt)\n\n<pre><code>\n# BUSCO version is: 3.0.2\n# The lineage dataset is: eukaryota_odb9 (Creation date: 2016-11-02, number of species: 100, number of BUSCOs: 303)\n# To reproduce this run: python /gscratch/srlab/programs/busco-v3/scripts/run_BUSCO.py -i Olurida_v081.all.maker.transcripts1000.fasta -o Olurida_maker_busco -l /gscratch/srlab/sam/data/databases/BUSCO/eukaryota_odb9/ -m genome -c 56 --long -z -sp human --augustus_parameters '--progress=true'\n#\n# Summarized benchmarking in BUSCO notation for file Olurida_v081.all.maker.transcripts1000.fasta\n# BUSCO was run in mode: genome\n\n\tC:32.1%[S:31.4%,D:0.7%],F:12.5%,M:55.4%,n:303\n\n\t97\tComplete BUSCOs (C)\n\t95\tComplete and single-copy BUSCOs (S)\n\t2\tComplete and duplicated BUSCOs (D)\n\t38\tFragmented BUSCOs (F)\n\t168\tMissing BUSCOs (M)\n\t303\tTotal BUSCO groups searched\n</code></pre>\n\nWell, this suggests this assembly is incomplete. Ideally, one would expect 100% complete BUSCOs in a complete assembly. This only has 32.1% complete BUSCOs. Might we need to do more sequencing?\n\nI'll re-run this using the ```metazoa_odb9``` BUSCO database and see how it compares.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"Annotation - Olurida_v081 MAKER BUSCO (eukaryota_odb9) Augustus Training Submitted to Mox","date":"2019-01-14 15:52","tags":["Ostrea lurida","Olympia oyster","MAKER","BUSCO","Augustus","annotation","mox","Olurida_v081"],"categories":["2019","Olympia Oyster Genome Sequencing"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}