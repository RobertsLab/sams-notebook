{"title":"Genome Annotation - Pgenerosa_v074 MAKER on Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"Genome Annotation - Pgenerosa_v074 MAKER on Mox","date":"2019-07-01 10:29","tags":["Panopea generosa","geoduck","MAKER","mox","annotation","genome","v074"],"categories":["2019","Geoduck Genome Sequencing"]},"headingText":"Transcriptome FastA files (links to notebook entries):","containsRefs":false,"markdown":"\n[I previously created a subset of the Pgenerosa_v070 genome assembly](https://robertslab.github.io/sams-notebook/posts/2019/2019-06-25-Data-Wrangling---FastA-Subsetting-of-Pgenerosa_v070.fa-Using-samtools-faidx/) that contains just the largest 18 scaffolds (these scaffolds were produced by Phase Genomics, utilizing some Hi-C sequencing). The new subsetted genome is labeled as [Pgenerosa_v074.fa](http://owl.fish.washington.edu/halfshell/genomic-databank/Pgenerosa_v074.fa) (914MB).\n\nAs part of that, [Steven wanted this version annotated using MAKER](https://github.com/RobertsLab/resources/issues/707).\n\nThis will perform the following:\n\n- one round of MAKER gene model predictions\n- two rounds of SNAP gene model training/predictions\n- renaming of gene models to NCBI-standardized convention\n- functional characterization of protein models (via BLASTp)\n- functional characterization of protein domains (via InterProScan5)\n\nHere are a list of the input files used for the various components of the MAKER annotation:\n\n\n- [ctenidia](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Ctenidia-with-HiSeq-and-NovaSeq-Data-on-Mox/)\n- [gonad](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Gonad-HiSeq-and-NovaSeq-Data-on-Mox/)\n- [heart](https://robertslab.github.io/sams-notebook/posts/2019/2019-02-15-Transcriptome-Assembly---Geoduck-Tissue-Specific-Assembly-Heart/)\n- [EPI99 (larvae)](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Larvae-Day5-EPI99-with-HiSeq-and-NovaSeq-Data-on-Mox/)\n- [EPI115 (juvenile)](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Juvenile-Super-Low-OA-EPI115-with-HiSeq-Data-on-Mox/)\n- [EPI116 (juvenile)](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Juvenile-Super-Low-OA-EPI116-with-HiSeq-Data-on-Mox/)\n- [EPI123 (juvenile)](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Juvenile-Ambient-OA-EPI123-with-HiSeq-Data-on-Mox/)\n- [EPI124 (juvenile)](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Juvenile-Ambient-OA-EPI124-with-HiSeq-and-NovaSeq-Data-on-Mox/)\n\n#### NCBI Protein FastA files\n- NCBI _Crassostrea gigas_ proteome (downloaded 20181119): `GCA_000297895.1_oyster_v9_protein.faa`\n\n- NCBI _Crassostrea virginica_ proteome (downloaded 20181119): `GCF_002022765.2_C_virginica-3.0_protein.faa`\n\n- SwissProt BLASTp database(downloaded 20190109): uniprot_sprot.fasta\n\n#### TransDecoder protein FastA files (links to notebook entries)\n- [singular proteome](https://robertslab.github.io/sams-notebook/posts/2018/2018-11-21-Annotation---Geoduck-Transcritpome-with-TransDecoder/)\n- [ctenidia](https://robertslab.github.io/sams-notebook/posts/2019/2019-06-27-Transcriptome-Annotation---Geoduck-Ctenidia-with-Transdecoder-on-Mox/)\n- [EPI99 (larvae)](https://robertslab.github.io/sams-notebook/posts/2019/2019-06-27-Transcriptome-Annotation---Geoduck-Larvae-Day5-EPI99-with-Transdecoder-on-Mox/)\n- [EPI115 (juvenile)](https://robertslab.github.io/sams-notebook/posts/2019/2019-06-27-Transcriptome-Annotation---Geoduck-Juvenile-Super-Low-OA-EPI115-with-Transdecoder-on-Mox/)\n- [EPI116 (juvenile)](https://robertslab.github.io/sams-notebook/posts/2019/2019-06-27-Transcriptome-Annotation---Geoduck-Juvenile-Super-Low-OA-EPI116-with-Transdecoder-on-Mox/)\n- [EPI123 (juvenile)](https://robertslab.github.io/sams-notebook/posts/2019/2019-06-27-Transcriptome-Annotation---Geoduck-Juvenile-Ambient-OA-EPI123-with-Transdecoder-on-Mox/)\n- [EPI124 (juvenile)](https://robertslab.github.io/sams-notebook/posts/2019/2019-06-27-Transcriptome-Annotation---Geoduck-Juvenile-Ambient-OA-EPI124-with-Transdecoder-on-Mox/)\n- [gonad](https://robertslab.github.io/sams-notebook/posts/2019/2019-06-27-Transcriptome-Annotation---Geoduck-Gonad-with-Transdecoder-on-Mox/)\n- [heart](https://robertslab.github.io/sams-notebook/posts/2019/2019-03-18-Transcriptome-Annotation---Geoduck-Heart-with-Transdecoder-on-Mox/)\n\n#### Repeats Files\n- [RepeatModeler library](https://robertslab.github.io/sams-notebook/posts/2019/2019-06-26-RepeatModeler---Pgenerosa_v074-for-MAKER-Annotation-on-Emu/)\n\n- [RepeatMasker GFF](https://robertslab.github.io/sams-notebook/posts/2019/2019-06-26-RepeatMasker---Pgenerosa_v074-for-Transposable-Element-ID-on-Roadrunner/)\n\n\nSBATCH script (GitHub):\n\n- [20190701_pgen_maker_v074_annotation.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20190701_pgen_maker_v074_annotation.sh)\n\n```shell\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=maker_pgen074\n## Allocation Definition\n#SBATCH --account=coenv\n#SBATCH --partition=coenv\n## Resources\n## Nodes\n#SBATCH --nodes=2\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=40-00:00:00\n## Memory per node\n#SBATCH --mem=120G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --workdir=/gscratch/scrubbed/samwhite/outputs/20190701_pgen_maker_v074_annotation\n\n# Exit if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n# Load Open MPI module for parallel, multi-node processing\n\nmodule load icc_19-ompi_3.1.2\n\n# SegFault fix?\nexport THREADS_DAEMON_MODEL=1\n\n# Document programs in PATH (primarily for program version ID)\n\ndate >> system_path.log\necho \"\" >> system_path.log\necho \"System PATH for $SLURM_JOB_ID\" >> system_path.log\necho \"\" >> system_path.log\nprintf \"%0.s-\" {1..10} >> system_path.log\necho \"${PATH}\" | tr : \\\\n >> system_path.log\n\n# Add BLAST to system PATH\nexport PATH=$PATH:/gscratch/srlab/programs/ncbi-blast-2.6.0+/bin\nexport BLASTDB=/gscratch/srlab/blastdbs/UniProtKB_20181008\n\n\n## Establish variables for more readable code\n\nwd=$(pwd)\nmaker_dir=/gscratch/srlab/programs/maker-2.31.10/bin\nsnap_dir=/gscratch/srlab/programs/maker-2.31.10/exe/snap\n\n### Paths to Maker binaries\n\nmaker=${maker_dir}/maker\ngff3_merge=${maker_dir}/gff3_merge\nmaker2zff=${maker_dir}/maker2zff\nfathom=${snap_dir}/fathom\nforge=${snap_dir}/forge\nhmmassembler=${snap_dir}/hmm-assembler.pl\nfasta_merge=${maker_dir}/fasta_merge\nmap_ids=${maker_dir}/maker_map_ids\nmap_gff_ids=${maker_dir}/map_gff_ids\nmap_fasta_ids=${maker_dir}/map_fasta_ids\nfunctional_fasta=${maker_dir}/maker_functional_fasta\nfunctional_gff=${maker_dir}/maker_functional_gff\nipr_update_gff=${maker_dir}/ipr_update_gff\niprscan2gff3=${maker_dir}/iprscan2gff3\n\nblastp_dir=${wd}/blastp_annotation\nmaker_blastp=${wd}/blastp_annotation/blastp.outfmt6\nmaker_prot_fasta=${wd}/snap02/Pgenerosa_v074_snap02.all.maker.proteins.fasta\nmaker_prot_fasta_renamed=${wd}/snap02/Pgenerosa_v074_snap02.all.maker.proteins.renamed.fasta\nmaker_transcripts_fasta=${wd}/snap02/Pgenerosa_v074_snap02.all.maker.transcripts.fasta\nmaker_transcripts_fasta_renamed=${wd}/snap02/Pgenerosa_v074_snap02.all.maker.transcripts.renamed.fasta\nsnap02_gff=${wd}/snap02/Pgenerosa_v074_snap02.all.gff\nsnap02_gff_renamed=${wd}/snap02/Pgenerosa_v074_snap02.all.renamed.gff\nput_func_gff=Pgenerosa_v074_genome_snap02.all.renamed.putative_function.gff\nput_func_prot=Pgenerosa_v074_genome_snap02.all.maker.proteins.renamed.putative_function.fasta\nput_func_trans=Pgenerosa_v074_genome_snap02.all.maker.transcripts.renamed.putative_function.fasta\nput_domain_gff=Pgenerosa_v074_genome_snap02.all.renamed.putative_function.domain_added.gff\nips_dir=${wd}/interproscan_annotation\nips_base=Pgenerosa_v074_maker_proteins_ips\nips_name=Pgenerosa_v074_maker_proteins_ips.tsv\nid_map=${wd}/snap02/Pgenerosa_v074_genome.map\nips_domains=Pgenerosa_v074_genome_snap02.all.renamed.visible_ips_domains.gff\n\n## Path to blastp\nblastp=/gscratch/srlab/programs/ncbi-blast-2.6.0+/bin/blastp\n\n## Path to InterProScan5\ninterproscan=/gscratch/srlab/programs/interproscan-5.31-70.0/interproscan.sh\n\n## Store path to options control file\nmaker_opts_file=./maker_opts.ctl\n\n### Path to genome FastA file\ngenome=/gscratch/srlab/sam/data/P_generosa/genomes/Pgenerosa_v074.fa\n\n### Paths to transcriptome FastA files\nctendia_transcriptome=/gscratch/srlab/sam/data/P_generosa/transcriptomes/ctenidia/Trinity.fasta\ngonad_transcriptome=/gscratch/srlab/sam/data/P_generosa/transcriptomes/gonad/Trinity.fasta\nheart_transcriptome=/gscratch/srlab/sam/data/P_generosa/transcriptomes/heart/Trinity.fasta\nEPI99_transcriptome=/gscratch/srlab/sam/data/P_generosa/transcriptomes/larvae/EPI99/Trinity.fasta\nEPI115_transcriptome=/gscratch/srlab/sam/data/P_generosa/transcriptomes/juvenile/EPI115/Trinity.fasta\nEPI116_transcriptome=/gscratch/srlab/sam/data/P_generosa/transcriptomes/juvenile/EPI116/Trinity.fasta\nEPI123_transcriptome=/gscratch/srlab/sam/data/P_generosa/transcriptomes/juvenile/EPI123/Trinity.fasta\nEPI124_transcriptome=/gscratch/srlab/sam/data/P_generosa/transcriptomes/juvenile/EPI124/Trinity.fasta\n\n### Path to Crassotrea gigas NCBI protein FastA\ngigas_proteome=/gscratch/srlab/sam/data/C_gigas/gigas_ncbi_protein/GCA_000297895.1_oyster_v9_protein.faa\n\n### Path to Crassostrea virginica NCBI protein FastA\nvirginica_proteome=/gscratch/srlab/sam/data/C_virginica/virginica_ncbi_protein/GCF_002022765.2_C_virginica-3.0_protein.faa\n\n### Path to Panopea generosa TransDecoder protein FastAs\npanopea_td_proteome=/gscratch/srlab/sam/data/P_generosa/proteomes/20180827_trinity_geoduck.fasta.transdecoder.pep\npgen_td_ctenidia_proteome=/gscratch/srlab/sam/data/P_generosa/proteomes/ctenidia/Trinity.fasta.transdecoder.pep\npgen_td_larvae_EPI99_proteome=/gscratch/srlab/sam/data/P_generosa/proteomes/larvae/EPI99/Trinity.fasta.transdecoder.pep\npgen_td_juv_EPI115_proteome=/gscratch/srlab/sam/data/P_generosa/proteomes/juvenile/EPI115/Trinity.fasta.transdecoder.pep\npgen_td_juv_EPI116_proteome=/gscratch/srlab/sam/data/P_generosa/proteomes/juvenile/EPI116/Trinity.fasta.transdecoder.pep\npgen_td_juv_EPI123_proteome=/gscratch/srlab/sam/data/P_generosa/proteomes/juvenile/EPI123/Trinity.fasta.transdecoder.pep\npgen_td_juv_EPI124_proteome=/gscratch/srlab/sam/data/P_generosa/proteomes/juvenile/EPI124/Trinity.fasta.transdecoder.pep\npgen_td_gonad_proteome=/gscratch/srlab/sam/data/P_generosa/proteomes/gonad/Trinity.fasta.transdecoder.pep\npgen_td_heart_proteome=/gscratch/srlab/sam/data/P_generosa/proteomes/heart/Trinity.fasta.transdecoder.pep\n\n\n### Path to P.generosa-specific RepeatModeler library\nrepeat_library=/gscratch/srlab/sam/data/P_generosa/repeats/Pgenerosa_v074-families.fa\n\n### Path to P.generosa-specific RepeatMasker GFF\nrm_gff=/gscratch/srlab/sam/data/P_generosa/repeats/Pgenerosa_v074.fa.out.gff\n\n### Path to SwissProt database for BLASTp\nsp_db_blastp=/gscratch/srlab/blastdbs/UniProtKB_20190109/uniprot_sprot.fasta\n\n\n## Make directories\nmkdir blastp_annotation\nmkdir interproscan_annotation\nmkdir snap01\nmkdir snap02\n\n\n## Create Maker control files needed for running Maker, only if it doesn't already exist and then edit it.\n### Edit options file\n### Set paths to P.generosa genome and transcriptome.\n### Set path to combined C. gigas, C.virginica, P.generosa proteomes.\n### The use of the % symbol sets the delimiter sed uses for arguments.\n### Normally, the delimiter that most examples use is a slash \"/\".\n### But, we need to expand the variables into a full path with slashes, which screws up sed.\n### Thus, the use of % symbol instead (it could be any character that is NOT present in the expanded variable; doesn't have to be \"%\").\nif [ ! -e maker_opts.ctl ]; then\n  $maker -CTL\n  sed -i \"/^genome=/ s% %$genome %\" \"$maker_opts_file\"\n\n  # Set transcriptomes to use\n  sed -i \"/^est=/ s% %\\\n  ${ctendia_transcriptome},\\\n  ${gonad_transcriptome},\\\n  ${heart_transcriptome},\\\n  ${EPI99_transcriptome},\\\n  ${EPI115_transcriptome},\\\n  ${EPI116_transcriptome},\\\n  ${EPI123_transcriptome},\\\n  ${EPI124_transcriptome} %\" \\\n  \"$maker_opts_file\"\n\n  # Set proteomes to use\n  sed -i \"/^protein=/ s% %\\\n  ${gigas_proteome},\\\n  ${panopea_td_proteome},\\\n  ${pgen_td_ctenidia_proteome},\\\n  ${pgen_td_gonad_proteome},\\\n  ${pgen_td_heart_proteome},\\\n  ${pgen_td_juv_EPI115_proteome},\\\n  ${pgen_td_juv_EPI116_proteome},\\\n  ${pgen_td_juv_EPI123_proteome},\\\n  ${pgen_td_juv_EPI124_proteome},\\\n  ${pgen_td_larvae_EPI99_proteome},\\\n  ${virginica_proteome} \\\n  %\" \\\n  \"$maker_opts_file\"\n\n  # Set RepeatModeler library to use\n  sed -i \"/^rmlib=/ s% %$repeat_library %\" \"$maker_opts_file\"\n\n  # Set RepeatMasker GFF to use\n  sed -i \"/^rm_gff=/ s% %${rm_gff} %\" \"$maker_opts_file\"\n\n  # Set est2ggenome to 1 - tells MAKER to use transcriptome FastAs\n  sed -i \"/^est2genome=0/ s/est2genome=0/est2genome=1/\" \"$maker_opts_file\"\n\n  # Set protein2genome to 1 - tells MAKER to use protein FastAs\n  sed -i \"/^protein2genome=0/ s/protein2genome=0/protein2genome=1/\" \"$maker_opts_file\"\nfi\n\n\n## Run Maker\n### Specify number of nodes to use.\nmpiexec -n 56 $maker\n\n## Merge gffs\n${gff3_merge} -d Pgenerosa_v074.maker.output/Pgenerosa_v074_master_datastore_index.log\n\n## GFF with no FastA in footer\n${gff3_merge} -n -s -d Pgenerosa_v074.maker.output/Pgenerosa_v074_master_datastore_index.log > Pgenerosa_v074.maker.all.noseqs.gff\n\n## Merge all FastAs\n${fasta_merge} -d Pgenerosa_v074.maker.output/Pgenerosa_v074_master_datastore_index.log\n\n## Extract GFF alignments for use in subsequent MAKER rounds\n### Transcript alignments\nawk '{ if ($2 == \"est2genome\") print $0 }' Pgenerosa_v074.maker.all.noseqs.gff > Pgenerosa_v074.maker.all.noseqs.est2genome.gff\n### Protein alignments\nawk '{ if ($2 == \"protein2genome\") print $0 }' Pgenerosa_v074.maker.all.noseqs.gff > Pgenerosa_v074.maker.all.noseqs.protein2genome.gff\n### Repeat alignments\nawk '{ if ($2 ~ \"repeat\") print $0 }' Pgenerosa_v074.maker.all.noseqs.gff > Pgenerosa_v074.maker.all.noseqs.repeats.gff\n\n## Run SNAP training, round 1\ncd \"${wd}\"\ncd snap01\n${maker2zff} ../Pgenerosa_v074.all.gff\n${fathom} -categorize 1000 genome.ann genome.dna\n${fathom} -export 1000 -plus uni.ann uni.dna\n${forge} export.ann export.dna\n${hmmassembler} genome . > Pgenerosa_v074_snap01.hmm\n\n## Initiate second Maker run.\n### Copy initial maker control files and\n### Default gene prediction settings are 0 (i.e. don't generate Maker gene predictions)\n### - use GFF subsets generated in first round of MAKER\n### - set location of snaphmm file to use for gene prediction\n### Percent symbols used below are the sed delimiters, instead of the default \"/\",\n### due to the need to use file paths.\nif [ ! -e maker_opts.ctl ]; then\n  $maker -CTL\n  sed -i \"/^genome=/ s% %$genome %\" maker_opts.ctl\n\n  # Set transcriptomes to use\n  sed -i \"/^est=/ s% %\\\n  ${ctendia_transcriptome},\\\n  ${gonad_transcriptome},\\\n  ${heart_transcriptome},\\\n  ${EPI99_transcriptome},\\\n  ${EPI115_transcriptome},\\\n  ${EPI116_transcriptome},\\\n  ${EPI123_transcriptome},\\\n  ${EPI124_transcriptome} %\" \\\n  \"$maker_opts_file\"\n\n  # Set proteomes to use\n  sed -i \"/^protein=/ s% %\\\n  ${gigas_proteome},\\\n  ${panopea_td_proteome},\\\n  ${pgen_td_ctenidia_proteome},\\\n  ${pgen_td_gonad_proteome},\\\n  ${pgen_td_heart_proteome},\\\n  ${pgen_td_juv_EPI115_proteome},\\\n  ${pgen_td_juv_EPI116_proteome},\\\n  ${pgen_td_juv_EPI123_proteome},\\\n  ${pgen_td_juv_EPI124_proteome},\\\n  ${pgen_td_larvae_EPI99_proteome},\\\n  ${virginica_proteome} \\\n  %\" \\\n  \"$maker_opts_file\"\n\n  # Set RepeatModeler library to use\n  sed -i \"/^rmlib=/ s% %$repeat_library %\" \"$maker_opts_file\"\n\n  sed -i \"/^est_gff=/ s% %../Pgenerosa_v074.maker.all.noseqs.est2genome.gff %\" maker_opts.ctl\n  sed -i \"/^protein_gff=/ s% %../Pgenerosa_v074.maker.all.noseqs.protein2genome.gff %\" maker_opts.ctl\n  sed -i \"/^rm_gff=/ s% %../Pgenerosa_v074.maker.all.noseqs.repeats.gff %\" maker_opts.ctl\n  sed -i \"/^snaphmm=/ s% %Pgenerosa_v074_snap01.hmm %\" maker_opts.ctl\nfi\n\n## Run Maker\n### Set basename of files and specify number of CPUs to use\nmpiexec -n 56 $maker \\\n-base Pgenerosa_v074_snap01\n\n## Merge gffs\n${gff3_merge} -d Pgenerosa_v074_snap01.maker.output/Pgenerosa_v074_snap01_master_datastore_index.log\n\n## GFF with no FastA in footer\n${gff3_merge} -n -s -d Pgenerosa_v074_snap01.maker.output/Pgenerosa_v074_snap01_master_datastore_index.log > Pgenerosa_v074_snap01.maker.all.noseqs.gff\n\n## Run SNAP training, round 2\ncd \"${wd}\"\ncd snap02\n${maker2zff} ../snap01/Pgenerosa_v074_snap01.all.gff\n${fathom} -categorize 1000 genome.ann genome.dna\n${fathom} -export 1000 -plus uni.ann uni.dna\n${forge} export.ann export.dna\n${hmmassembler} genome . > Pgenerosa_v074_snap02.hmm\n\n## Initiate third and final Maker run.\n\nif [ ! -e maker_opts.ctl ]; then\n  $maker -CTL\n  sed -i \"/^genome=/ s% %$genome %\" maker_opts.ctl\n\n  # Set transcriptomes to use\n  sed -i \"/^est=/ s% %\\\n  ${ctendia_transcriptome},\\\n  ${gonad_transcriptome},\\\n  ${heart_transcriptome},\\\n  ${EPI99_transcriptome},\\\n  ${EPI115_transcriptome},\\\n  ${EPI116_transcriptome},\\\n  ${EPI123_transcriptome},\\\n  ${EPI124_transcriptome} %\" \\\n  \"$maker_opts_file\"\n\n  # Set proteomes to use\n  sed -i \"/^protein=/ s% %\\\n  ${gigas_proteome},\\\n  ${panopea_td_proteome},\\\n  ${pgen_td_ctenidia_proteome},\\\n  ${pgen_td_gonad_proteome},\\\n  ${pgen_td_heart_proteome},\\\n  ${pgen_td_juv_EPI115_proteome},\\\n  ${pgen_td_juv_EPI116_proteome},\\\n  ${pgen_td_juv_EPI123_proteome},\\\n  ${pgen_td_juv_EPI124_proteome},\\\n  ${pgen_td_larvae_EPI99_proteome},\\\n  ${virginica_proteome} \\\n  %\" \\\n  \"$maker_opts_file\"\n\n  # Set RepeatModeler library to use\n  sed -i \"/^rmlib=/ s% %$repeat_library %\" \"$maker_opts_file\"\n\n  sed -i \"/^est_gff=/ s% %../Pgenerosa_v074.maker.all.noseqs.est2genome.gff %\" maker_opts.ctl\n  sed -i \"/^protein_gff=/ s% %../Pgenerosa_v074.maker.all.noseqs.protein2genome.gff %\" maker_opts.ctl\n  sed -i \"/^rm_gff=/ s% %../Pgenerosa_v074.maker.all.noseqs.repeats.gff %\" maker_opts.ctl\n  sed -i \"/^snaphmm=/ s% %Pgenerosa_v074_snap02.hmm %\" maker_opts.ctl\nfi\n\n## Run Maker\n### Set basename of files and specify number of CPUs to use\nmpiexec -n 56 $maker \\\n-base Pgenerosa_v074_snap02\n\n## Merge gffs\n${gff3_merge} \\\n-d Pgenerosa_v074_snap02.maker.output/Pgenerosa_v074_snap02_master_datastore_index.log\n\n## GFF with no FastA in footer\n${gff3_merge} -n -s -d Pgenerosa_v074_snap02.maker.output/Pgenerosa_v074_snap02_master_datastore_index.log > Pgenerosa_v074_snap02.maker.all.noseqs.gff\n\n## Merge FastAs\n${fasta_merge} \\\n-d Pgenerosa_v074_snap02.maker.output/Pgenerosa_v074_snap02_master_datastore_index.log\n\n# Create copies of files for mapping\ncp \"${maker_prot_fasta}\" \"${maker_prot_fasta_renamed}\"\ncp \"${maker_transcripts_fasta}\" \"${maker_transcripts_fasta_renamed}\"\ncp \"${snap02_gff}\" \"${snap02_gff_renamed}\"\n\n# Map IDs\n## Change gene names\n${map_ids} \\\n--prefix PGEN_ \\\n--justify 8 \\\n\"${snap02_gff}\" \\\n> \"${id_map}\"\n\n## Map GFF IDs\n${map_gff_ids} \\\n\"${id_map}\" \\\n\"${snap02_gff_renamed}\"\n\n## Map FastAs\n### Proteins\n${map_fasta_ids} \\\n\"${id_map}\" \\\n\"${maker_prot_fasta_renamed}\"\n\n### Transcripts\n${map_fasta_ids} \\\n\"${id_map}\" \\\n\"${maker_transcripts_fasta_renamed}\"\n\n# Run InterProScan 5\n## disable-precalc since this requires external database access (which Mox does not allow)\ncd \"${ips_dir}\"\n\n${interproscan} \\\n--input \"${maker_prot_fasta_renamed}\" \\\n--goterms \\\n--output-file-base ${ips_base} \\\n--disable-precalc\n\n# Run BLASTp\ncd \"${blastp_dir}\"\n\n${blastp} \\\n-query \"${maker_prot_fasta_renamed}\" \\\n-db ${sp_db_blastp} \\\n-out \"${maker_blastp}\" \\\n-max_target_seqs 1 \\\n-evalue 1e-6 \\\n-outfmt 6 \\\n-num_threads 28\n\n\n# Functional annotations\n\ncd \"${wd}\"\n\n## Add putative gene functions\n### GFF\n${functional_gff} \\\n${sp_db_blastp} \\\n\"${maker_blastp}\" \\\n\"${snap02_gff_renamed}\" \\\n> ${put_func_gff}\n\n### Proteins\n${functional_fasta} \\\n${sp_db_blastp} \\\n\"${maker_blastp}\" \\\n\"${maker_prot_fasta_renamed}\" \\\n> ${put_func_prot}\n\n### Transcripts\n${functional_fasta} \\\n${sp_db_blastp} \\\n\"${maker_blastp}\" \\\n\"${maker_transcripts_fasta_renamed}\" \\\n> ${put_func_trans}\n\n## Add InterProScan domain info\n### Add searchable tags\n${ipr_update_gff} \\\n${put_func_gff} \\\n\"${ips_dir}\"/${ips_name} \\\n> ${put_domain_gff}\n\n### Add viewable features for genome browsers (JBrowse, Gbrowse, Web Apollo)\n${iprscan2gff3} \\\n\"${ips_dir}\"/${ips_name} \\\n\"${snap02_gff_renamed}\" \\\n> ${ips_domains}\n```\n\n---\n\n# RESULTS\n\nOutput folder:\n\nWell, this ran relatively quickly: A little over seven days.\n\n![Pgenerosa_v074 MAKER runtime screencap](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20190702_maker_pgen074_runtime.png?raw=true)\n\n- [20190701_pgen_maker_v074_annotation/](https://gannet.fish.washington.edu/Atumefaciens/20190701_pgen_maker_v074_annotation/) (519MB)\n\nThe important files:\n\n- [Pgenerosa_v074_genome_snap02.all.renamed.putative_function.domain_added.gff](https://gannet.fish.washington.edu/Atumefaciens/20190701_pgen_maker_v074_annotation/Pgenerosa_v074_genome_snap02.all.renamed.putative_function.domain_added.gff)\n  - GFF file with all contigs annotated with putative functions and functional domains.\n  - _INCLUDES SEQUENCE FASTAS AT END OF FILE!_\n  - Generated with one round of MAKER gene prediction, followed by two rounds of SNAP _ab-initio_ gene prediction.\n  - MD5: 5a17f8dd40d534a544bec166c1b0c8be\n\n\n- [Pgenerosa_v074_genome_snap02.all.maker.proteins.renamed.putative_function.fasta](https://gannet.fish.washington.edu/Atumefaciens/20190701_pgen_maker_v074_annotation/Pgenerosa_v074_genome_snap02.all.maker.proteins.renamed.putative_function.fasta) (902KB)\n  - Annotated proteins FastA file.\n  - Generated with one round of MAKER gene prediction, followed by two rounds of SNAP _ab-initio_ gene prediction.\n\n\n- [Pgenerosa_v074_genome_snap02.all.maker.transcripts.renamed.putative_function.fasta](https://gannet.fish.washington.edu/Atumefaciens/20190701_pgen_maker_v074_annotation/Pgenerosa_v074_genome_snap02.all.maker.transcripts.renamed.putative_function.fasta) (2.5MB)\n  - Annotated transcripts FastA file.\n  - Generated with one round of MAKER gene prediction, followed by two rounds of SNAP _ab-initio_ gene prediction.\n\nI should've just split the GFF as part of the Mox SBATCH script, but I didn't so I did it locally on my computer. Here are the commands for splitting the GFF. All the GFF files have been addeed to our [Genomic Resources wiki](https://github.com/RobertsLab/resources/wiki/Genomic-Resources) (GitHub).\n\n- CDS GFF:\n\n  - [Pgenerosa_v074.CDS.gff](http://owl.fish.washington.edu/halfshell/genomic-databank/Pgenerosa_v074.CDS.gff) (1.3MB)\n  - MD5: `0585919b6d819efee8c86fb3bdc104b6`\n\n```shell\nawk 'BEGIN { print \"##gff-version 3\" ; } $3 == \"CDS\" {print}' \\\nPgenerosa_v074_genome_snap02.all.renamed.putative_function.domain_added.gff \\\n> Pgenerosa_v074.CDS.gff\n```\n\n\n- exon GFF:\n\n  - [Pgenerosa_v074.exon.gff](http://owl.fish.washington.edu/halfshell/genomic-databank/Pgenerosa_v074.exon.gff) (1.4MB)\n  - MD5: `92c1419894fb252d7c913313c725f3d5`\n\n```shell\nawk 'BEGIN { print \"##gff-version 3\" ; } $3 == \"exon\" {print}' \\\nPgenerosa_v074_genome_snap02.all.renamed.putative_function.domain_added.gff \\\n> Pgenerosa_v074.exon.gff\n```\n\n- gene GFF:\n\n  - [Pgenerosa_v074.gene.gff](http://owl.fish.washington.edu/halfshell/genomic-databank/Pgenerosa_v074.gene.gff)\n  - MD5: `8bf8bb60ce5fc42f2dfad2b5ae236abb`\n\n```shell\nawk 'BEGIN { print \"##gff-version 3\" ; } $3 == \"gene\" {print}' \\\nPgenerosa_v074_genome_snap02.all.renamed.putative_function.domain_added.gff \\\n> Pgenerosa_v074.gene.gff\n```\n\n- mRNA GFF:\n\n  - [Pgenerosa_v074.mRNA.gff](http://owl.fish.washington.edu/halfshell/genomic-databank/Pgenerosa_v074.mRNA.gff)\n  - MD5: `d1a6aba21b60f109510ee2399e03fb2c`\n\n```shell\nawk 'BEGIN { print \"##gff-version 3\" ; } $3 == \"mRNA\" {print}' \\\nPgenerosa_v074_genome_snap02.all.renamed.putative_function.domain_added.gff \\\n> Pgenerosa_v074.mRNA.gff\n```\nWith all of that out of the way, a cursory glance at the results are, honestly, quite shocking. A quick `grep -c \">\"` on the FastA files reveals:\n\n- 1712 proteins/transcripts\n\nThis is compared to 53,035 proteins/transcripts identified/annotated in [the Pgenerosa_v070 annotation](https://robertslab.github.io/sams-notebook/posts/2019/2019-02-28-Genome-Annotation---Pgenerosa_v070-MAKER-on-Mox/transcripts in the [Pgenerosa_v071 annotation](https://robertslab.github.io/sams-notebook/2019/02/13/Genome-Annotation-Pgenerosa_v71-with-MAKER-on-Mox/) (only contigs >10kbp).\n\nAdditionally, annotations only occur on 2 out of 18 scaffolds: \n- PGA_scaffold_17\n- PGA_scaffold_18.\n\nSurprisingly, these two scaffolds comprise two of the three shortest (35Mbp and 28Mbp) of the 18 scaffolds subjected to annotation.\n\nSo, what does this mean? A few thoughts/conjectures in no particular order or prioritization:\n\n1. Limiting to the longest 18 scaffolds [chosen to create this Pgenerosa_v074 subset](https://robertslab.github.io/sams-notebook/posts/2019/2019-06-25-Data-Wrangling---FastA-Subsetting-of-Pgenerosa_v070.fa-Using-samtools-faidx/) was the wrong approach. Looking back at the [GitHub issue where scaffold selection was discussed](https://github.com/RobertsLab/resources/issues/705) reveals the apparent confusion with which assembly provided by Phase Genomics is the proper assembly to use. However, that discussion seems to agree that the \"manually curated\" version of their genome assembly (which is what was used here) is the proper one to use.\n\n2. Something went awry in the annotation. This will be difficult/impossible to assess, particularly since two of the scaffolds were successfully annotated. If two worked, why wouldn't the other 16? All 18 scaffolds were presented to MAKER as a single multi-FastA file. Presumably, each individual FastA would be processed by MAKER in the same way.\n\n3. The data is real and the majority of genes in the _P.generosa_ genome lie outside of these large scaffolds. If this is the case, this means that there are _lengthy_ stretches of DNA that do not have readily-identifiable genomic features. It also suggests that, overall, the assembly we have (Pgenerosa_v070) is quite fragmented.\n\n\nSo, to assess some of this (particularly points 2 and 3 above), I decided to look at the three annotations we have for _P.generosa_ using IGV on some of the 18 scaffolds that are present in each of the three previous assembly variations we've annotated with MAKER.\n\n#### PGA_scaffold_1\n\nNo annotations found by any of the three different annotations. Surprising, as this is the single longest scaffold in each of the three assemblies (89 Mbp)\n\n![IGV comparison of PGA_scaffold_1](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20190701_igv_compare_scaffold1.png?raw=true)\n\n---\n\n#### PGA_scaffold_3\n\nAnnotations only appear in the Pgenerosa_v070 assembly.\n\n![IGV comparison of PGA_scaffold_3](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20190701_igv_compare_scaffold3.png?raw=true)\n\n---\n\n#### PGA_scaffold_18\n\nAnnotations are found in each of the three assemblies.\n\n![IGV comparison of PGA_scaffold_18](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20190701_igv_compare_scaffold18.png?raw=true)\n\n---\n\nYeesh, so what do those IGV alignments tell us?\n\n1. The single longest scaffold appears to have no identifiable genomic features, as no annotations are present in any of the various assemblies. That's a pretty lengthy stretch of DNA to not have anything there. Caveat: haven't looked at transposable elements, nor other repeats. Is it possible that an 89Mbp stretch of DNA could be comprised solely of low-complexity sequence?\n\n2. The annotation process appears to be inconsistent. This is troublesome. Although this comes with a catch: I did not use the exact same data for each of the three annotations. For example, the Pgenerosa_v070 and Pgenerosa_v071 annotations used the singular _P.generosa_ transcriptome assembly ([from 20180827](https://robertslab.github.io/sams-notebook/posts/2018/2018-09-04-transcriptome-assembly-geoduck-rnaseq-data/))for EST evidence, whereas the Pgenerosa_v074 annotation utilized tissue-specific transcriptome assemblies (from 20190409) and Transdecoder peptide data from each of these assemblies. Could these changes account for the differences we see? Oddly, and this thought is solely based on the limited IGV comparisons posted above, it seems like the fewer the overall number of sequences in an assembly, the fewer annotations MAKER is able to generate within any given scaffold.\n\nNow what?\n\nWell, I have the Pgenerosa_v074 assembly currently running on [the Genome Sequence Annotation Server (GenSAS)](https://www.gensas.org) using most of the same files that I used for MAKER on Mox (exceptions are repeat masking/modeling files - those steps will be run on GenSAS). It will be interesting to see how the MAKER and GenSAS annotations compare.\n\nI could also re-run the Pgenerosa_v071 annotation using the exact same files as Pgenerosa_v074 on GenSAS, as the files I need are already on their servers and it will be trivial to initiate the annotation process...\n","srcMarkdownNoYaml":"\n[I previously created a subset of the Pgenerosa_v070 genome assembly](https://robertslab.github.io/sams-notebook/posts/2019/2019-06-25-Data-Wrangling---FastA-Subsetting-of-Pgenerosa_v070.fa-Using-samtools-faidx/) that contains just the largest 18 scaffolds (these scaffolds were produced by Phase Genomics, utilizing some Hi-C sequencing). The new subsetted genome is labeled as [Pgenerosa_v074.fa](http://owl.fish.washington.edu/halfshell/genomic-databank/Pgenerosa_v074.fa) (914MB).\n\nAs part of that, [Steven wanted this version annotated using MAKER](https://github.com/RobertsLab/resources/issues/707).\n\nThis will perform the following:\n\n- one round of MAKER gene model predictions\n- two rounds of SNAP gene model training/predictions\n- renaming of gene models to NCBI-standardized convention\n- functional characterization of protein models (via BLASTp)\n- functional characterization of protein domains (via InterProScan5)\n\nHere are a list of the input files used for the various components of the MAKER annotation:\n\n\n#### Transcriptome FastA files (links to notebook entries):\n- [ctenidia](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Ctenidia-with-HiSeq-and-NovaSeq-Data-on-Mox/)\n- [gonad](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Gonad-HiSeq-and-NovaSeq-Data-on-Mox/)\n- [heart](https://robertslab.github.io/sams-notebook/posts/2019/2019-02-15-Transcriptome-Assembly---Geoduck-Tissue-Specific-Assembly-Heart/)\n- [EPI99 (larvae)](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Larvae-Day5-EPI99-with-HiSeq-and-NovaSeq-Data-on-Mox/)\n- [EPI115 (juvenile)](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Juvenile-Super-Low-OA-EPI115-with-HiSeq-Data-on-Mox/)\n- [EPI116 (juvenile)](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Juvenile-Super-Low-OA-EPI116-with-HiSeq-Data-on-Mox/)\n- [EPI123 (juvenile)](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Juvenile-Ambient-OA-EPI123-with-HiSeq-Data-on-Mox/)\n- [EPI124 (juvenile)](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Juvenile-Ambient-OA-EPI124-with-HiSeq-and-NovaSeq-Data-on-Mox/)\n\n#### NCBI Protein FastA files\n- NCBI _Crassostrea gigas_ proteome (downloaded 20181119): `GCA_000297895.1_oyster_v9_protein.faa`\n\n- NCBI _Crassostrea virginica_ proteome (downloaded 20181119): `GCF_002022765.2_C_virginica-3.0_protein.faa`\n\n- SwissProt BLASTp database(downloaded 20190109): uniprot_sprot.fasta\n\n#### TransDecoder protein FastA files (links to notebook entries)\n- [singular proteome](https://robertslab.github.io/sams-notebook/posts/2018/2018-11-21-Annotation---Geoduck-Transcritpome-with-TransDecoder/)\n- [ctenidia](https://robertslab.github.io/sams-notebook/posts/2019/2019-06-27-Transcriptome-Annotation---Geoduck-Ctenidia-with-Transdecoder-on-Mox/)\n- [EPI99 (larvae)](https://robertslab.github.io/sams-notebook/posts/2019/2019-06-27-Transcriptome-Annotation---Geoduck-Larvae-Day5-EPI99-with-Transdecoder-on-Mox/)\n- [EPI115 (juvenile)](https://robertslab.github.io/sams-notebook/posts/2019/2019-06-27-Transcriptome-Annotation---Geoduck-Juvenile-Super-Low-OA-EPI115-with-Transdecoder-on-Mox/)\n- [EPI116 (juvenile)](https://robertslab.github.io/sams-notebook/posts/2019/2019-06-27-Transcriptome-Annotation---Geoduck-Juvenile-Super-Low-OA-EPI116-with-Transdecoder-on-Mox/)\n- [EPI123 (juvenile)](https://robertslab.github.io/sams-notebook/posts/2019/2019-06-27-Transcriptome-Annotation---Geoduck-Juvenile-Ambient-OA-EPI123-with-Transdecoder-on-Mox/)\n- [EPI124 (juvenile)](https://robertslab.github.io/sams-notebook/posts/2019/2019-06-27-Transcriptome-Annotation---Geoduck-Juvenile-Ambient-OA-EPI124-with-Transdecoder-on-Mox/)\n- [gonad](https://robertslab.github.io/sams-notebook/posts/2019/2019-06-27-Transcriptome-Annotation---Geoduck-Gonad-with-Transdecoder-on-Mox/)\n- [heart](https://robertslab.github.io/sams-notebook/posts/2019/2019-03-18-Transcriptome-Annotation---Geoduck-Heart-with-Transdecoder-on-Mox/)\n\n#### Repeats Files\n- [RepeatModeler library](https://robertslab.github.io/sams-notebook/posts/2019/2019-06-26-RepeatModeler---Pgenerosa_v074-for-MAKER-Annotation-on-Emu/)\n\n- [RepeatMasker GFF](https://robertslab.github.io/sams-notebook/posts/2019/2019-06-26-RepeatMasker---Pgenerosa_v074-for-Transposable-Element-ID-on-Roadrunner/)\n\n\nSBATCH script (GitHub):\n\n- [20190701_pgen_maker_v074_annotation.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20190701_pgen_maker_v074_annotation.sh)\n\n```shell\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=maker_pgen074\n## Allocation Definition\n#SBATCH --account=coenv\n#SBATCH --partition=coenv\n## Resources\n## Nodes\n#SBATCH --nodes=2\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=40-00:00:00\n## Memory per node\n#SBATCH --mem=120G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --workdir=/gscratch/scrubbed/samwhite/outputs/20190701_pgen_maker_v074_annotation\n\n# Exit if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n# Load Open MPI module for parallel, multi-node processing\n\nmodule load icc_19-ompi_3.1.2\n\n# SegFault fix?\nexport THREADS_DAEMON_MODEL=1\n\n# Document programs in PATH (primarily for program version ID)\n\ndate >> system_path.log\necho \"\" >> system_path.log\necho \"System PATH for $SLURM_JOB_ID\" >> system_path.log\necho \"\" >> system_path.log\nprintf \"%0.s-\" {1..10} >> system_path.log\necho \"${PATH}\" | tr : \\\\n >> system_path.log\n\n# Add BLAST to system PATH\nexport PATH=$PATH:/gscratch/srlab/programs/ncbi-blast-2.6.0+/bin\nexport BLASTDB=/gscratch/srlab/blastdbs/UniProtKB_20181008\n\n\n## Establish variables for more readable code\n\nwd=$(pwd)\nmaker_dir=/gscratch/srlab/programs/maker-2.31.10/bin\nsnap_dir=/gscratch/srlab/programs/maker-2.31.10/exe/snap\n\n### Paths to Maker binaries\n\nmaker=${maker_dir}/maker\ngff3_merge=${maker_dir}/gff3_merge\nmaker2zff=${maker_dir}/maker2zff\nfathom=${snap_dir}/fathom\nforge=${snap_dir}/forge\nhmmassembler=${snap_dir}/hmm-assembler.pl\nfasta_merge=${maker_dir}/fasta_merge\nmap_ids=${maker_dir}/maker_map_ids\nmap_gff_ids=${maker_dir}/map_gff_ids\nmap_fasta_ids=${maker_dir}/map_fasta_ids\nfunctional_fasta=${maker_dir}/maker_functional_fasta\nfunctional_gff=${maker_dir}/maker_functional_gff\nipr_update_gff=${maker_dir}/ipr_update_gff\niprscan2gff3=${maker_dir}/iprscan2gff3\n\nblastp_dir=${wd}/blastp_annotation\nmaker_blastp=${wd}/blastp_annotation/blastp.outfmt6\nmaker_prot_fasta=${wd}/snap02/Pgenerosa_v074_snap02.all.maker.proteins.fasta\nmaker_prot_fasta_renamed=${wd}/snap02/Pgenerosa_v074_snap02.all.maker.proteins.renamed.fasta\nmaker_transcripts_fasta=${wd}/snap02/Pgenerosa_v074_snap02.all.maker.transcripts.fasta\nmaker_transcripts_fasta_renamed=${wd}/snap02/Pgenerosa_v074_snap02.all.maker.transcripts.renamed.fasta\nsnap02_gff=${wd}/snap02/Pgenerosa_v074_snap02.all.gff\nsnap02_gff_renamed=${wd}/snap02/Pgenerosa_v074_snap02.all.renamed.gff\nput_func_gff=Pgenerosa_v074_genome_snap02.all.renamed.putative_function.gff\nput_func_prot=Pgenerosa_v074_genome_snap02.all.maker.proteins.renamed.putative_function.fasta\nput_func_trans=Pgenerosa_v074_genome_snap02.all.maker.transcripts.renamed.putative_function.fasta\nput_domain_gff=Pgenerosa_v074_genome_snap02.all.renamed.putative_function.domain_added.gff\nips_dir=${wd}/interproscan_annotation\nips_base=Pgenerosa_v074_maker_proteins_ips\nips_name=Pgenerosa_v074_maker_proteins_ips.tsv\nid_map=${wd}/snap02/Pgenerosa_v074_genome.map\nips_domains=Pgenerosa_v074_genome_snap02.all.renamed.visible_ips_domains.gff\n\n## Path to blastp\nblastp=/gscratch/srlab/programs/ncbi-blast-2.6.0+/bin/blastp\n\n## Path to InterProScan5\ninterproscan=/gscratch/srlab/programs/interproscan-5.31-70.0/interproscan.sh\n\n## Store path to options control file\nmaker_opts_file=./maker_opts.ctl\n\n### Path to genome FastA file\ngenome=/gscratch/srlab/sam/data/P_generosa/genomes/Pgenerosa_v074.fa\n\n### Paths to transcriptome FastA files\nctendia_transcriptome=/gscratch/srlab/sam/data/P_generosa/transcriptomes/ctenidia/Trinity.fasta\ngonad_transcriptome=/gscratch/srlab/sam/data/P_generosa/transcriptomes/gonad/Trinity.fasta\nheart_transcriptome=/gscratch/srlab/sam/data/P_generosa/transcriptomes/heart/Trinity.fasta\nEPI99_transcriptome=/gscratch/srlab/sam/data/P_generosa/transcriptomes/larvae/EPI99/Trinity.fasta\nEPI115_transcriptome=/gscratch/srlab/sam/data/P_generosa/transcriptomes/juvenile/EPI115/Trinity.fasta\nEPI116_transcriptome=/gscratch/srlab/sam/data/P_generosa/transcriptomes/juvenile/EPI116/Trinity.fasta\nEPI123_transcriptome=/gscratch/srlab/sam/data/P_generosa/transcriptomes/juvenile/EPI123/Trinity.fasta\nEPI124_transcriptome=/gscratch/srlab/sam/data/P_generosa/transcriptomes/juvenile/EPI124/Trinity.fasta\n\n### Path to Crassotrea gigas NCBI protein FastA\ngigas_proteome=/gscratch/srlab/sam/data/C_gigas/gigas_ncbi_protein/GCA_000297895.1_oyster_v9_protein.faa\n\n### Path to Crassostrea virginica NCBI protein FastA\nvirginica_proteome=/gscratch/srlab/sam/data/C_virginica/virginica_ncbi_protein/GCF_002022765.2_C_virginica-3.0_protein.faa\n\n### Path to Panopea generosa TransDecoder protein FastAs\npanopea_td_proteome=/gscratch/srlab/sam/data/P_generosa/proteomes/20180827_trinity_geoduck.fasta.transdecoder.pep\npgen_td_ctenidia_proteome=/gscratch/srlab/sam/data/P_generosa/proteomes/ctenidia/Trinity.fasta.transdecoder.pep\npgen_td_larvae_EPI99_proteome=/gscratch/srlab/sam/data/P_generosa/proteomes/larvae/EPI99/Trinity.fasta.transdecoder.pep\npgen_td_juv_EPI115_proteome=/gscratch/srlab/sam/data/P_generosa/proteomes/juvenile/EPI115/Trinity.fasta.transdecoder.pep\npgen_td_juv_EPI116_proteome=/gscratch/srlab/sam/data/P_generosa/proteomes/juvenile/EPI116/Trinity.fasta.transdecoder.pep\npgen_td_juv_EPI123_proteome=/gscratch/srlab/sam/data/P_generosa/proteomes/juvenile/EPI123/Trinity.fasta.transdecoder.pep\npgen_td_juv_EPI124_proteome=/gscratch/srlab/sam/data/P_generosa/proteomes/juvenile/EPI124/Trinity.fasta.transdecoder.pep\npgen_td_gonad_proteome=/gscratch/srlab/sam/data/P_generosa/proteomes/gonad/Trinity.fasta.transdecoder.pep\npgen_td_heart_proteome=/gscratch/srlab/sam/data/P_generosa/proteomes/heart/Trinity.fasta.transdecoder.pep\n\n\n### Path to P.generosa-specific RepeatModeler library\nrepeat_library=/gscratch/srlab/sam/data/P_generosa/repeats/Pgenerosa_v074-families.fa\n\n### Path to P.generosa-specific RepeatMasker GFF\nrm_gff=/gscratch/srlab/sam/data/P_generosa/repeats/Pgenerosa_v074.fa.out.gff\n\n### Path to SwissProt database for BLASTp\nsp_db_blastp=/gscratch/srlab/blastdbs/UniProtKB_20190109/uniprot_sprot.fasta\n\n\n## Make directories\nmkdir blastp_annotation\nmkdir interproscan_annotation\nmkdir snap01\nmkdir snap02\n\n\n## Create Maker control files needed for running Maker, only if it doesn't already exist and then edit it.\n### Edit options file\n### Set paths to P.generosa genome and transcriptome.\n### Set path to combined C. gigas, C.virginica, P.generosa proteomes.\n### The use of the % symbol sets the delimiter sed uses for arguments.\n### Normally, the delimiter that most examples use is a slash \"/\".\n### But, we need to expand the variables into a full path with slashes, which screws up sed.\n### Thus, the use of % symbol instead (it could be any character that is NOT present in the expanded variable; doesn't have to be \"%\").\nif [ ! -e maker_opts.ctl ]; then\n  $maker -CTL\n  sed -i \"/^genome=/ s% %$genome %\" \"$maker_opts_file\"\n\n  # Set transcriptomes to use\n  sed -i \"/^est=/ s% %\\\n  ${ctendia_transcriptome},\\\n  ${gonad_transcriptome},\\\n  ${heart_transcriptome},\\\n  ${EPI99_transcriptome},\\\n  ${EPI115_transcriptome},\\\n  ${EPI116_transcriptome},\\\n  ${EPI123_transcriptome},\\\n  ${EPI124_transcriptome} %\" \\\n  \"$maker_opts_file\"\n\n  # Set proteomes to use\n  sed -i \"/^protein=/ s% %\\\n  ${gigas_proteome},\\\n  ${panopea_td_proteome},\\\n  ${pgen_td_ctenidia_proteome},\\\n  ${pgen_td_gonad_proteome},\\\n  ${pgen_td_heart_proteome},\\\n  ${pgen_td_juv_EPI115_proteome},\\\n  ${pgen_td_juv_EPI116_proteome},\\\n  ${pgen_td_juv_EPI123_proteome},\\\n  ${pgen_td_juv_EPI124_proteome},\\\n  ${pgen_td_larvae_EPI99_proteome},\\\n  ${virginica_proteome} \\\n  %\" \\\n  \"$maker_opts_file\"\n\n  # Set RepeatModeler library to use\n  sed -i \"/^rmlib=/ s% %$repeat_library %\" \"$maker_opts_file\"\n\n  # Set RepeatMasker GFF to use\n  sed -i \"/^rm_gff=/ s% %${rm_gff} %\" \"$maker_opts_file\"\n\n  # Set est2ggenome to 1 - tells MAKER to use transcriptome FastAs\n  sed -i \"/^est2genome=0/ s/est2genome=0/est2genome=1/\" \"$maker_opts_file\"\n\n  # Set protein2genome to 1 - tells MAKER to use protein FastAs\n  sed -i \"/^protein2genome=0/ s/protein2genome=0/protein2genome=1/\" \"$maker_opts_file\"\nfi\n\n\n## Run Maker\n### Specify number of nodes to use.\nmpiexec -n 56 $maker\n\n## Merge gffs\n${gff3_merge} -d Pgenerosa_v074.maker.output/Pgenerosa_v074_master_datastore_index.log\n\n## GFF with no FastA in footer\n${gff3_merge} -n -s -d Pgenerosa_v074.maker.output/Pgenerosa_v074_master_datastore_index.log > Pgenerosa_v074.maker.all.noseqs.gff\n\n## Merge all FastAs\n${fasta_merge} -d Pgenerosa_v074.maker.output/Pgenerosa_v074_master_datastore_index.log\n\n## Extract GFF alignments for use in subsequent MAKER rounds\n### Transcript alignments\nawk '{ if ($2 == \"est2genome\") print $0 }' Pgenerosa_v074.maker.all.noseqs.gff > Pgenerosa_v074.maker.all.noseqs.est2genome.gff\n### Protein alignments\nawk '{ if ($2 == \"protein2genome\") print $0 }' Pgenerosa_v074.maker.all.noseqs.gff > Pgenerosa_v074.maker.all.noseqs.protein2genome.gff\n### Repeat alignments\nawk '{ if ($2 ~ \"repeat\") print $0 }' Pgenerosa_v074.maker.all.noseqs.gff > Pgenerosa_v074.maker.all.noseqs.repeats.gff\n\n## Run SNAP training, round 1\ncd \"${wd}\"\ncd snap01\n${maker2zff} ../Pgenerosa_v074.all.gff\n${fathom} -categorize 1000 genome.ann genome.dna\n${fathom} -export 1000 -plus uni.ann uni.dna\n${forge} export.ann export.dna\n${hmmassembler} genome . > Pgenerosa_v074_snap01.hmm\n\n## Initiate second Maker run.\n### Copy initial maker control files and\n### Default gene prediction settings are 0 (i.e. don't generate Maker gene predictions)\n### - use GFF subsets generated in first round of MAKER\n### - set location of snaphmm file to use for gene prediction\n### Percent symbols used below are the sed delimiters, instead of the default \"/\",\n### due to the need to use file paths.\nif [ ! -e maker_opts.ctl ]; then\n  $maker -CTL\n  sed -i \"/^genome=/ s% %$genome %\" maker_opts.ctl\n\n  # Set transcriptomes to use\n  sed -i \"/^est=/ s% %\\\n  ${ctendia_transcriptome},\\\n  ${gonad_transcriptome},\\\n  ${heart_transcriptome},\\\n  ${EPI99_transcriptome},\\\n  ${EPI115_transcriptome},\\\n  ${EPI116_transcriptome},\\\n  ${EPI123_transcriptome},\\\n  ${EPI124_transcriptome} %\" \\\n  \"$maker_opts_file\"\n\n  # Set proteomes to use\n  sed -i \"/^protein=/ s% %\\\n  ${gigas_proteome},\\\n  ${panopea_td_proteome},\\\n  ${pgen_td_ctenidia_proteome},\\\n  ${pgen_td_gonad_proteome},\\\n  ${pgen_td_heart_proteome},\\\n  ${pgen_td_juv_EPI115_proteome},\\\n  ${pgen_td_juv_EPI116_proteome},\\\n  ${pgen_td_juv_EPI123_proteome},\\\n  ${pgen_td_juv_EPI124_proteome},\\\n  ${pgen_td_larvae_EPI99_proteome},\\\n  ${virginica_proteome} \\\n  %\" \\\n  \"$maker_opts_file\"\n\n  # Set RepeatModeler library to use\n  sed -i \"/^rmlib=/ s% %$repeat_library %\" \"$maker_opts_file\"\n\n  sed -i \"/^est_gff=/ s% %../Pgenerosa_v074.maker.all.noseqs.est2genome.gff %\" maker_opts.ctl\n  sed -i \"/^protein_gff=/ s% %../Pgenerosa_v074.maker.all.noseqs.protein2genome.gff %\" maker_opts.ctl\n  sed -i \"/^rm_gff=/ s% %../Pgenerosa_v074.maker.all.noseqs.repeats.gff %\" maker_opts.ctl\n  sed -i \"/^snaphmm=/ s% %Pgenerosa_v074_snap01.hmm %\" maker_opts.ctl\nfi\n\n## Run Maker\n### Set basename of files and specify number of CPUs to use\nmpiexec -n 56 $maker \\\n-base Pgenerosa_v074_snap01\n\n## Merge gffs\n${gff3_merge} -d Pgenerosa_v074_snap01.maker.output/Pgenerosa_v074_snap01_master_datastore_index.log\n\n## GFF with no FastA in footer\n${gff3_merge} -n -s -d Pgenerosa_v074_snap01.maker.output/Pgenerosa_v074_snap01_master_datastore_index.log > Pgenerosa_v074_snap01.maker.all.noseqs.gff\n\n## Run SNAP training, round 2\ncd \"${wd}\"\ncd snap02\n${maker2zff} ../snap01/Pgenerosa_v074_snap01.all.gff\n${fathom} -categorize 1000 genome.ann genome.dna\n${fathom} -export 1000 -plus uni.ann uni.dna\n${forge} export.ann export.dna\n${hmmassembler} genome . > Pgenerosa_v074_snap02.hmm\n\n## Initiate third and final Maker run.\n\nif [ ! -e maker_opts.ctl ]; then\n  $maker -CTL\n  sed -i \"/^genome=/ s% %$genome %\" maker_opts.ctl\n\n  # Set transcriptomes to use\n  sed -i \"/^est=/ s% %\\\n  ${ctendia_transcriptome},\\\n  ${gonad_transcriptome},\\\n  ${heart_transcriptome},\\\n  ${EPI99_transcriptome},\\\n  ${EPI115_transcriptome},\\\n  ${EPI116_transcriptome},\\\n  ${EPI123_transcriptome},\\\n  ${EPI124_transcriptome} %\" \\\n  \"$maker_opts_file\"\n\n  # Set proteomes to use\n  sed -i \"/^protein=/ s% %\\\n  ${gigas_proteome},\\\n  ${panopea_td_proteome},\\\n  ${pgen_td_ctenidia_proteome},\\\n  ${pgen_td_gonad_proteome},\\\n  ${pgen_td_heart_proteome},\\\n  ${pgen_td_juv_EPI115_proteome},\\\n  ${pgen_td_juv_EPI116_proteome},\\\n  ${pgen_td_juv_EPI123_proteome},\\\n  ${pgen_td_juv_EPI124_proteome},\\\n  ${pgen_td_larvae_EPI99_proteome},\\\n  ${virginica_proteome} \\\n  %\" \\\n  \"$maker_opts_file\"\n\n  # Set RepeatModeler library to use\n  sed -i \"/^rmlib=/ s% %$repeat_library %\" \"$maker_opts_file\"\n\n  sed -i \"/^est_gff=/ s% %../Pgenerosa_v074.maker.all.noseqs.est2genome.gff %\" maker_opts.ctl\n  sed -i \"/^protein_gff=/ s% %../Pgenerosa_v074.maker.all.noseqs.protein2genome.gff %\" maker_opts.ctl\n  sed -i \"/^rm_gff=/ s% %../Pgenerosa_v074.maker.all.noseqs.repeats.gff %\" maker_opts.ctl\n  sed -i \"/^snaphmm=/ s% %Pgenerosa_v074_snap02.hmm %\" maker_opts.ctl\nfi\n\n## Run Maker\n### Set basename of files and specify number of CPUs to use\nmpiexec -n 56 $maker \\\n-base Pgenerosa_v074_snap02\n\n## Merge gffs\n${gff3_merge} \\\n-d Pgenerosa_v074_snap02.maker.output/Pgenerosa_v074_snap02_master_datastore_index.log\n\n## GFF with no FastA in footer\n${gff3_merge} -n -s -d Pgenerosa_v074_snap02.maker.output/Pgenerosa_v074_snap02_master_datastore_index.log > Pgenerosa_v074_snap02.maker.all.noseqs.gff\n\n## Merge FastAs\n${fasta_merge} \\\n-d Pgenerosa_v074_snap02.maker.output/Pgenerosa_v074_snap02_master_datastore_index.log\n\n# Create copies of files for mapping\ncp \"${maker_prot_fasta}\" \"${maker_prot_fasta_renamed}\"\ncp \"${maker_transcripts_fasta}\" \"${maker_transcripts_fasta_renamed}\"\ncp \"${snap02_gff}\" \"${snap02_gff_renamed}\"\n\n# Map IDs\n## Change gene names\n${map_ids} \\\n--prefix PGEN_ \\\n--justify 8 \\\n\"${snap02_gff}\" \\\n> \"${id_map}\"\n\n## Map GFF IDs\n${map_gff_ids} \\\n\"${id_map}\" \\\n\"${snap02_gff_renamed}\"\n\n## Map FastAs\n### Proteins\n${map_fasta_ids} \\\n\"${id_map}\" \\\n\"${maker_prot_fasta_renamed}\"\n\n### Transcripts\n${map_fasta_ids} \\\n\"${id_map}\" \\\n\"${maker_transcripts_fasta_renamed}\"\n\n# Run InterProScan 5\n## disable-precalc since this requires external database access (which Mox does not allow)\ncd \"${ips_dir}\"\n\n${interproscan} \\\n--input \"${maker_prot_fasta_renamed}\" \\\n--goterms \\\n--output-file-base ${ips_base} \\\n--disable-precalc\n\n# Run BLASTp\ncd \"${blastp_dir}\"\n\n${blastp} \\\n-query \"${maker_prot_fasta_renamed}\" \\\n-db ${sp_db_blastp} \\\n-out \"${maker_blastp}\" \\\n-max_target_seqs 1 \\\n-evalue 1e-6 \\\n-outfmt 6 \\\n-num_threads 28\n\n\n# Functional annotations\n\ncd \"${wd}\"\n\n## Add putative gene functions\n### GFF\n${functional_gff} \\\n${sp_db_blastp} \\\n\"${maker_blastp}\" \\\n\"${snap02_gff_renamed}\" \\\n> ${put_func_gff}\n\n### Proteins\n${functional_fasta} \\\n${sp_db_blastp} \\\n\"${maker_blastp}\" \\\n\"${maker_prot_fasta_renamed}\" \\\n> ${put_func_prot}\n\n### Transcripts\n${functional_fasta} \\\n${sp_db_blastp} \\\n\"${maker_blastp}\" \\\n\"${maker_transcripts_fasta_renamed}\" \\\n> ${put_func_trans}\n\n## Add InterProScan domain info\n### Add searchable tags\n${ipr_update_gff} \\\n${put_func_gff} \\\n\"${ips_dir}\"/${ips_name} \\\n> ${put_domain_gff}\n\n### Add viewable features for genome browsers (JBrowse, Gbrowse, Web Apollo)\n${iprscan2gff3} \\\n\"${ips_dir}\"/${ips_name} \\\n\"${snap02_gff_renamed}\" \\\n> ${ips_domains}\n```\n\n---\n\n# RESULTS\n\nOutput folder:\n\nWell, this ran relatively quickly: A little over seven days.\n\n![Pgenerosa_v074 MAKER runtime screencap](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20190702_maker_pgen074_runtime.png?raw=true)\n\n- [20190701_pgen_maker_v074_annotation/](https://gannet.fish.washington.edu/Atumefaciens/20190701_pgen_maker_v074_annotation/) (519MB)\n\nThe important files:\n\n- [Pgenerosa_v074_genome_snap02.all.renamed.putative_function.domain_added.gff](https://gannet.fish.washington.edu/Atumefaciens/20190701_pgen_maker_v074_annotation/Pgenerosa_v074_genome_snap02.all.renamed.putative_function.domain_added.gff)\n  - GFF file with all contigs annotated with putative functions and functional domains.\n  - _INCLUDES SEQUENCE FASTAS AT END OF FILE!_\n  - Generated with one round of MAKER gene prediction, followed by two rounds of SNAP _ab-initio_ gene prediction.\n  - MD5: 5a17f8dd40d534a544bec166c1b0c8be\n\n\n- [Pgenerosa_v074_genome_snap02.all.maker.proteins.renamed.putative_function.fasta](https://gannet.fish.washington.edu/Atumefaciens/20190701_pgen_maker_v074_annotation/Pgenerosa_v074_genome_snap02.all.maker.proteins.renamed.putative_function.fasta) (902KB)\n  - Annotated proteins FastA file.\n  - Generated with one round of MAKER gene prediction, followed by two rounds of SNAP _ab-initio_ gene prediction.\n\n\n- [Pgenerosa_v074_genome_snap02.all.maker.transcripts.renamed.putative_function.fasta](https://gannet.fish.washington.edu/Atumefaciens/20190701_pgen_maker_v074_annotation/Pgenerosa_v074_genome_snap02.all.maker.transcripts.renamed.putative_function.fasta) (2.5MB)\n  - Annotated transcripts FastA file.\n  - Generated with one round of MAKER gene prediction, followed by two rounds of SNAP _ab-initio_ gene prediction.\n\nI should've just split the GFF as part of the Mox SBATCH script, but I didn't so I did it locally on my computer. Here are the commands for splitting the GFF. All the GFF files have been addeed to our [Genomic Resources wiki](https://github.com/RobertsLab/resources/wiki/Genomic-Resources) (GitHub).\n\n- CDS GFF:\n\n  - [Pgenerosa_v074.CDS.gff](http://owl.fish.washington.edu/halfshell/genomic-databank/Pgenerosa_v074.CDS.gff) (1.3MB)\n  - MD5: `0585919b6d819efee8c86fb3bdc104b6`\n\n```shell\nawk 'BEGIN { print \"##gff-version 3\" ; } $3 == \"CDS\" {print}' \\\nPgenerosa_v074_genome_snap02.all.renamed.putative_function.domain_added.gff \\\n> Pgenerosa_v074.CDS.gff\n```\n\n\n- exon GFF:\n\n  - [Pgenerosa_v074.exon.gff](http://owl.fish.washington.edu/halfshell/genomic-databank/Pgenerosa_v074.exon.gff) (1.4MB)\n  - MD5: `92c1419894fb252d7c913313c725f3d5`\n\n```shell\nawk 'BEGIN { print \"##gff-version 3\" ; } $3 == \"exon\" {print}' \\\nPgenerosa_v074_genome_snap02.all.renamed.putative_function.domain_added.gff \\\n> Pgenerosa_v074.exon.gff\n```\n\n- gene GFF:\n\n  - [Pgenerosa_v074.gene.gff](http://owl.fish.washington.edu/halfshell/genomic-databank/Pgenerosa_v074.gene.gff)\n  - MD5: `8bf8bb60ce5fc42f2dfad2b5ae236abb`\n\n```shell\nawk 'BEGIN { print \"##gff-version 3\" ; } $3 == \"gene\" {print}' \\\nPgenerosa_v074_genome_snap02.all.renamed.putative_function.domain_added.gff \\\n> Pgenerosa_v074.gene.gff\n```\n\n- mRNA GFF:\n\n  - [Pgenerosa_v074.mRNA.gff](http://owl.fish.washington.edu/halfshell/genomic-databank/Pgenerosa_v074.mRNA.gff)\n  - MD5: `d1a6aba21b60f109510ee2399e03fb2c`\n\n```shell\nawk 'BEGIN { print \"##gff-version 3\" ; } $3 == \"mRNA\" {print}' \\\nPgenerosa_v074_genome_snap02.all.renamed.putative_function.domain_added.gff \\\n> Pgenerosa_v074.mRNA.gff\n```\nWith all of that out of the way, a cursory glance at the results are, honestly, quite shocking. A quick `grep -c \">\"` on the FastA files reveals:\n\n- 1712 proteins/transcripts\n\nThis is compared to 53,035 proteins/transcripts identified/annotated in [the Pgenerosa_v070 annotation](https://robertslab.github.io/sams-notebook/posts/2019/2019-02-28-Genome-Annotation---Pgenerosa_v070-MAKER-on-Mox/transcripts in the [Pgenerosa_v071 annotation](https://robertslab.github.io/sams-notebook/2019/02/13/Genome-Annotation-Pgenerosa_v71-with-MAKER-on-Mox/) (only contigs >10kbp).\n\nAdditionally, annotations only occur on 2 out of 18 scaffolds: \n- PGA_scaffold_17\n- PGA_scaffold_18.\n\nSurprisingly, these two scaffolds comprise two of the three shortest (35Mbp and 28Mbp) of the 18 scaffolds subjected to annotation.\n\nSo, what does this mean? A few thoughts/conjectures in no particular order or prioritization:\n\n1. Limiting to the longest 18 scaffolds [chosen to create this Pgenerosa_v074 subset](https://robertslab.github.io/sams-notebook/posts/2019/2019-06-25-Data-Wrangling---FastA-Subsetting-of-Pgenerosa_v070.fa-Using-samtools-faidx/) was the wrong approach. Looking back at the [GitHub issue where scaffold selection was discussed](https://github.com/RobertsLab/resources/issues/705) reveals the apparent confusion with which assembly provided by Phase Genomics is the proper assembly to use. However, that discussion seems to agree that the \"manually curated\" version of their genome assembly (which is what was used here) is the proper one to use.\n\n2. Something went awry in the annotation. This will be difficult/impossible to assess, particularly since two of the scaffolds were successfully annotated. If two worked, why wouldn't the other 16? All 18 scaffolds were presented to MAKER as a single multi-FastA file. Presumably, each individual FastA would be processed by MAKER in the same way.\n\n3. The data is real and the majority of genes in the _P.generosa_ genome lie outside of these large scaffolds. If this is the case, this means that there are _lengthy_ stretches of DNA that do not have readily-identifiable genomic features. It also suggests that, overall, the assembly we have (Pgenerosa_v070) is quite fragmented.\n\n\nSo, to assess some of this (particularly points 2 and 3 above), I decided to look at the three annotations we have for _P.generosa_ using IGV on some of the 18 scaffolds that are present in each of the three previous assembly variations we've annotated with MAKER.\n\n#### PGA_scaffold_1\n\nNo annotations found by any of the three different annotations. Surprising, as this is the single longest scaffold in each of the three assemblies (89 Mbp)\n\n![IGV comparison of PGA_scaffold_1](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20190701_igv_compare_scaffold1.png?raw=true)\n\n---\n\n#### PGA_scaffold_3\n\nAnnotations only appear in the Pgenerosa_v070 assembly.\n\n![IGV comparison of PGA_scaffold_3](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20190701_igv_compare_scaffold3.png?raw=true)\n\n---\n\n#### PGA_scaffold_18\n\nAnnotations are found in each of the three assemblies.\n\n![IGV comparison of PGA_scaffold_18](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20190701_igv_compare_scaffold18.png?raw=true)\n\n---\n\nYeesh, so what do those IGV alignments tell us?\n\n1. The single longest scaffold appears to have no identifiable genomic features, as no annotations are present in any of the various assemblies. That's a pretty lengthy stretch of DNA to not have anything there. Caveat: haven't looked at transposable elements, nor other repeats. Is it possible that an 89Mbp stretch of DNA could be comprised solely of low-complexity sequence?\n\n2. The annotation process appears to be inconsistent. This is troublesome. Although this comes with a catch: I did not use the exact same data for each of the three annotations. For example, the Pgenerosa_v070 and Pgenerosa_v071 annotations used the singular _P.generosa_ transcriptome assembly ([from 20180827](https://robertslab.github.io/sams-notebook/posts/2018/2018-09-04-transcriptome-assembly-geoduck-rnaseq-data/))for EST evidence, whereas the Pgenerosa_v074 annotation utilized tissue-specific transcriptome assemblies (from 20190409) and Transdecoder peptide data from each of these assemblies. Could these changes account for the differences we see? Oddly, and this thought is solely based on the limited IGV comparisons posted above, it seems like the fewer the overall number of sequences in an assembly, the fewer annotations MAKER is able to generate within any given scaffold.\n\nNow what?\n\nWell, I have the Pgenerosa_v074 assembly currently running on [the Genome Sequence Annotation Server (GenSAS)](https://www.gensas.org) using most of the same files that I used for MAKER on Mox (exceptions are repeat masking/modeling files - those steps will be run on GenSAS). It will be interesting to see how the MAKER and GenSAS annotations compare.\n\nI could also re-run the Pgenerosa_v071 annotation using the exact same files as Pgenerosa_v074 on GenSAS, as the files I need are already on their servers and it will be trivial to initiate the annotation process...\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"Genome Annotation - Pgenerosa_v074 MAKER on Mox","date":"2019-07-01 10:29","tags":["Panopea generosa","geoduck","MAKER","mox","annotation","genome","v074"],"categories":["2019","Geoduck Genome Sequencing"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}