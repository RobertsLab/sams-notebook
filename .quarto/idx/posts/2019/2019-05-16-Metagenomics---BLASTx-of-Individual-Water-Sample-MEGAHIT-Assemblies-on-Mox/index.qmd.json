{"title":"Metagenomics - BLASTx of Individual Water Sample MEGAHIT Assemblies on Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"Metagenomics - BLASTx of Individual Water Sample MEGAHIT Assemblies on Mox","date":"2019-05-16 14:47","tags":["metagenomics","Panopea generosa","geoduck","mox","blastx"],"categories":["2019","Miscellaneous"]},"headingText":"RESULTS","containsRefs":false,"markdown":"\nAfter a meeting on this project yesterda, we decided to try a few things to continue with various approaches to assessing the metagenome. One of the approaches is to run BLASTx on the individual water sample MEGAHIT assemblies [from 20190327 ](https://robertslab.github.io/sams-notebook/posts/2019/2019-03-27-Metagenome-Assemblies---P.generosa-Water-Samples-Trimmed-HiSeqX-Data-Using-Megahit-on-Mox/) and obtain taxonomy info for them, so that's what I did here.\n\nHere's how the sample names breakdown:\n\n| Sample | Develomental Stage (days post-fertilization) | pH Treatment |\n|--------|-------------------------|--------------|\n| MG1    | 13                      | 8.2          |\n| MG2    | 17                      | 8.2          |\n| MG3    | 6                       | 7.1          |\n| MG5    | 10                      | 8.2          |\n| MG6    | 13                      | 7.1          |\n| MG7    | 17                      | 7.1          |\n\nSBATCH script (GitHub):\n\n- [20190516_metagenomics_pgen_blastx.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20190516_metagenomics_pgen_blastx.sh)\n\n```shell\n    #!/bin/bash\n    ## Job Name\n    #SBATCH --job-name=blastx_metagenomics\n    ## Allocation Definition\n    #SBATCH --account=coenv\n    #SBATCH --partition=coenv\n    ## Resources\n    ## Nodes\n    #SBATCH --nodes=1\n    ## Walltime (days-hours:minutes:seconds format)\n    #SBATCH --time=25-00:00:00\n    ## Memory per node\n    #SBATCH --mem=120G\n    ##turn on e-mail notification\n    #SBATCH --mail-type=ALL\n    #SBATCH --mail-user=samwhite@uw.edu\n    ## Specify the working directory for this job\n    #SBATCH --workdir=/gscratch/scrubbed/samwhite/outputs/20190516_metagenomics_pgen_blastx\n\n    # Exit script if any command fails\n    set -e\n\n    # Load Python Mox module for Python module availability\n\n    module load intel-python3_2017\n\n    # Document programs in PATH (primarily for program version ID)\n\n    date >> system_path.log\n    echo \"\" >> system_path.log\n    echo \"System PATH for $SLURM_JOB_ID\" >> system_path.log\n    echo \"\" >> system_path.log\n    printf \"%0.s-\" {1..10} >> system_path.log\n    echo \"${PATH}\" | tr : \\\\n >> system_path.log\n\n\n    threads=28\n\n    # Paths to programs\n    blast_dir=\"/gscratch/srlab/programs/ncbi-blast-2.8.1+/bin\"\n    blastx=\"${blast_dir}/blastx\"\n\n\n    # Paths to blastdbs\n    blastdb_dir=\"/gscratch/srlab/blastdbs/ncbi-sp-v5\"\n    blast_db=\"${blastdb_dir}/swissprot_v5\"\n\n\n    # Input files\n    fasta_dir=\"/gscratch/srlab/sam/data/metagenomics/P_generosa/assemblies\"\n\n\n    ## Inititalize arrays\n    fasta_array=()\n    names_array=()\n\n    # Export BLAST database directory\n    export BLASTDB=${blastdb_dir}\n\n    # Create array of FastA files\n    # Create array of sample names\n    ## Uses parameter substitution to strip leading path from filename\n    for fasta in ${fasta_dir}/MG*.fa\n    do\n      fasta_array+=(${fasta})\n      names_array+=($(echo \"${fasta#${fasta_dir}/}\" | awk -F\".\" '{print $1}'))\n    done\n\n    # Loop through arrays to customize sample names\n    # and run BLASTx on each FastA\n    for index in \"${!names_array[@]}\"\n    do\n      # Loops through sample names and appends appropriate treatment to each sample name\n      sample_name=$(echo \"${names_array[index]}\")\n      if [ \"${sample_name}\" == \"MG1\" ] \\\n      || [ \"${sample_name}\" == \"MG2\" ] \\\n      || [ \"${sample_name}\" == \"MG5\" ]\n      then\n        sample_name=\"${sample_name}\"_pH82\n      else\n        sample_name=\"${sample_name}\"_pH71\n      fi\n\n      # Create list of input FastA files\n      echo \"${fasta}\" >> input.fasta.list.txt\n\n      # Run BLASTx on each FastA\n      ${blastx} \\\n      -query \"${fasta_array[index]}\" \\\n      -db ${blast_db} \\\n      -max_hsps 1 \\\n      -max_target_seqs 1 \\\n      -outfmt \"6 std staxid ssciname\" \\\n      -evalue 1e-10 \\\n      -num_threads ${threads} \\\n      > \"${sample_name}\".blastx.outfmt6\n    done\n```\n\n---\n\n\nActually took longer than I thought it would (almost six days - essentially one day per sample):\n\n![screencap of job runtime](https://github.com/RobertsLab/sams-notebook/raw/master/images/screencaps/20190522_metagenomics_blastx_runtime.png)\n\nOutput folder:\n\n- [20190516_metagenomics_pgen_blastx](http://gannet.fish.washington.edu/Atumefaciens/20190516_metagenomics_pgen_blastx)\n\nBLAST output files (Output format 6, plus taxids and scientific names):\n\n- [MG1_pH82.blastx.outfmt6](http://gannet.fish.washington.edu/Atumefaciens/20190516_metagenomics_pgen_blastx/MG1_pH82.blastx.outfmt6)\n\n- [MG2_pH82.blastx.outfmt6](http://gannet.fish.washington.edu/Atumefaciens/20190516_metagenomics_pgen_blastx/MG2_pH82.blastx.outfmt6)\n\n- [MG3_pH71.blastx.outfmt6](http://gannet.fish.washington.edu/Atumefaciens/20190516_metagenomics_pgen_blastx/MG3_pH71.blastx.outfmt6)\n\n- [MG5_pH82.blastx.outfmt6](http://gannet.fish.washington.edu/Atumefaciens/20190516_metagenomics_pgen_blastx/MG5_pH82.blastx.outfmt6)\n\n- [MG6_pH71.blastx.outfmt6](http://gannet.fish.washington.edu/Atumefaciens/20190516_metagenomics_pgen_blastx/MG6_pH71.blastx.outfmt6)\n\n- [MG7_pH71.blastx.outfmt6](http://gannet.fish.washington.edu/Atumefaciens/20190516_metagenomics_pgen_blastx/MG7_pH71.blastx.outfmt6)\n\n\nI'll tackle some analysis of this data in a different notebook entry.\n","srcMarkdownNoYaml":"\nAfter a meeting on this project yesterda, we decided to try a few things to continue with various approaches to assessing the metagenome. One of the approaches is to run BLASTx on the individual water sample MEGAHIT assemblies [from 20190327 ](https://robertslab.github.io/sams-notebook/posts/2019/2019-03-27-Metagenome-Assemblies---P.generosa-Water-Samples-Trimmed-HiSeqX-Data-Using-Megahit-on-Mox/) and obtain taxonomy info for them, so that's what I did here.\n\nHere's how the sample names breakdown:\n\n| Sample | Develomental Stage (days post-fertilization) | pH Treatment |\n|--------|-------------------------|--------------|\n| MG1    | 13                      | 8.2          |\n| MG2    | 17                      | 8.2          |\n| MG3    | 6                       | 7.1          |\n| MG5    | 10                      | 8.2          |\n| MG6    | 13                      | 7.1          |\n| MG7    | 17                      | 7.1          |\n\nSBATCH script (GitHub):\n\n- [20190516_metagenomics_pgen_blastx.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20190516_metagenomics_pgen_blastx.sh)\n\n```shell\n    #!/bin/bash\n    ## Job Name\n    #SBATCH --job-name=blastx_metagenomics\n    ## Allocation Definition\n    #SBATCH --account=coenv\n    #SBATCH --partition=coenv\n    ## Resources\n    ## Nodes\n    #SBATCH --nodes=1\n    ## Walltime (days-hours:minutes:seconds format)\n    #SBATCH --time=25-00:00:00\n    ## Memory per node\n    #SBATCH --mem=120G\n    ##turn on e-mail notification\n    #SBATCH --mail-type=ALL\n    #SBATCH --mail-user=samwhite@uw.edu\n    ## Specify the working directory for this job\n    #SBATCH --workdir=/gscratch/scrubbed/samwhite/outputs/20190516_metagenomics_pgen_blastx\n\n    # Exit script if any command fails\n    set -e\n\n    # Load Python Mox module for Python module availability\n\n    module load intel-python3_2017\n\n    # Document programs in PATH (primarily for program version ID)\n\n    date >> system_path.log\n    echo \"\" >> system_path.log\n    echo \"System PATH for $SLURM_JOB_ID\" >> system_path.log\n    echo \"\" >> system_path.log\n    printf \"%0.s-\" {1..10} >> system_path.log\n    echo \"${PATH}\" | tr : \\\\n >> system_path.log\n\n\n    threads=28\n\n    # Paths to programs\n    blast_dir=\"/gscratch/srlab/programs/ncbi-blast-2.8.1+/bin\"\n    blastx=\"${blast_dir}/blastx\"\n\n\n    # Paths to blastdbs\n    blastdb_dir=\"/gscratch/srlab/blastdbs/ncbi-sp-v5\"\n    blast_db=\"${blastdb_dir}/swissprot_v5\"\n\n\n    # Input files\n    fasta_dir=\"/gscratch/srlab/sam/data/metagenomics/P_generosa/assemblies\"\n\n\n    ## Inititalize arrays\n    fasta_array=()\n    names_array=()\n\n    # Export BLAST database directory\n    export BLASTDB=${blastdb_dir}\n\n    # Create array of FastA files\n    # Create array of sample names\n    ## Uses parameter substitution to strip leading path from filename\n    for fasta in ${fasta_dir}/MG*.fa\n    do\n      fasta_array+=(${fasta})\n      names_array+=($(echo \"${fasta#${fasta_dir}/}\" | awk -F\".\" '{print $1}'))\n    done\n\n    # Loop through arrays to customize sample names\n    # and run BLASTx on each FastA\n    for index in \"${!names_array[@]}\"\n    do\n      # Loops through sample names and appends appropriate treatment to each sample name\n      sample_name=$(echo \"${names_array[index]}\")\n      if [ \"${sample_name}\" == \"MG1\" ] \\\n      || [ \"${sample_name}\" == \"MG2\" ] \\\n      || [ \"${sample_name}\" == \"MG5\" ]\n      then\n        sample_name=\"${sample_name}\"_pH82\n      else\n        sample_name=\"${sample_name}\"_pH71\n      fi\n\n      # Create list of input FastA files\n      echo \"${fasta}\" >> input.fasta.list.txt\n\n      # Run BLASTx on each FastA\n      ${blastx} \\\n      -query \"${fasta_array[index]}\" \\\n      -db ${blast_db} \\\n      -max_hsps 1 \\\n      -max_target_seqs 1 \\\n      -outfmt \"6 std staxid ssciname\" \\\n      -evalue 1e-10 \\\n      -num_threads ${threads} \\\n      > \"${sample_name}\".blastx.outfmt6\n    done\n```\n\n---\n\n# RESULTS\n\nActually took longer than I thought it would (almost six days - essentially one day per sample):\n\n![screencap of job runtime](https://github.com/RobertsLab/sams-notebook/raw/master/images/screencaps/20190522_metagenomics_blastx_runtime.png)\n\nOutput folder:\n\n- [20190516_metagenomics_pgen_blastx](http://gannet.fish.washington.edu/Atumefaciens/20190516_metagenomics_pgen_blastx)\n\nBLAST output files (Output format 6, plus taxids and scientific names):\n\n- [MG1_pH82.blastx.outfmt6](http://gannet.fish.washington.edu/Atumefaciens/20190516_metagenomics_pgen_blastx/MG1_pH82.blastx.outfmt6)\n\n- [MG2_pH82.blastx.outfmt6](http://gannet.fish.washington.edu/Atumefaciens/20190516_metagenomics_pgen_blastx/MG2_pH82.blastx.outfmt6)\n\n- [MG3_pH71.blastx.outfmt6](http://gannet.fish.washington.edu/Atumefaciens/20190516_metagenomics_pgen_blastx/MG3_pH71.blastx.outfmt6)\n\n- [MG5_pH82.blastx.outfmt6](http://gannet.fish.washington.edu/Atumefaciens/20190516_metagenomics_pgen_blastx/MG5_pH82.blastx.outfmt6)\n\n- [MG6_pH71.blastx.outfmt6](http://gannet.fish.washington.edu/Atumefaciens/20190516_metagenomics_pgen_blastx/MG6_pH71.blastx.outfmt6)\n\n- [MG7_pH71.blastx.outfmt6](http://gannet.fish.washington.edu/Atumefaciens/20190516_metagenomics_pgen_blastx/MG7_pH71.blastx.outfmt6)\n\n\nI'll tackle some analysis of this data in a different notebook entry.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"Metagenomics - BLASTx of Individual Water Sample MEGAHIT Assemblies on Mox","date":"2019-05-16 14:47","tags":["metagenomics","Panopea generosa","geoduck","mox","blastx"],"categories":["2019","Miscellaneous"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}