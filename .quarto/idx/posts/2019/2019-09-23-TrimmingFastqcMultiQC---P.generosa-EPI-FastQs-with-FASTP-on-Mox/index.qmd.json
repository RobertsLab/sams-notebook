{"title":"Trimming/FastQC/MultiQC - P.generosa EPI FastQs with FASTP on Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"Trimming/FastQC/MultiQC - P.generosa EPI FastQs with FASTP on Mox","date":"2019-09-23 14:19","tags":["Panopea generosa","geoduck","fastp","trimming"],"categories":["2019","Miscellaneous"]},"headingText":"Rsync P.generosa EPI files and then run SBATCH script for hard trimming.","containsRefs":false,"markdown":"\nSteven noticed that the [M-Bias plots generated by Bismark from these files](https://github.com/RobertsLab/resources/issues/408#issuecomment-534180697) was a little wonky and asked that I try trimming them a bit more. The files were originally quality/adaptor [trimmed with TrimGalore! on 20180516](https://robertslab.github.io/sams-notebook/posts/2018/2018-05-16-trimgalorefastqcmultiqc-trimgalore-rrbs-geoduck-bs-seq-fastq-data-directional/).\n\nI decided to use some trimming software called [fastp](https://github.com/OpenGene/fastp), since it had a lot of options (including trimming without the need for quality filtering/trimming, as well as being multi-threaded).\n\nLooking at the M-Bias plots and the original FastQC assessment, I opted to trim the first 20bp from the 5' end of all reads.\n\nI followed this up with FastQC and MultiQC.\n\nUse the following Bash script to initiate file transfer to Mox and call the SBATCH script:\n\n```shell\n#!/bin/bash\n\n\nrsync -av --progress owl:/volume1/web/Athaliana/20180516_geoduck_trimgalore_rrbs/*.fq.gz .\n\n\nsbatch 20190923_pgen_fastp_EPI_trimming.sh\n```\n\n\nSBATCH script (GitHub):\n\n- [20190923_pgen_fastp_EPI_trimming.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20190923_pgen_fastp_EPI_trimming.sh)\n\n```shell\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=pgen_fastp_trimming_EPI\n## Allocation Definition\n#SBATCH --account=coenv\n#SBATCH --partition=coenv\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=10-00:00:00\n## Memory per node\n#SBATCH --mem=120G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20190923_pgen_fastp_EPI_trimming\n\n\n# This script is called by 20190923_pgen_EPI_rsync.sh. That script transfers the FastQ files\n# to the working directory from: https://owl.fish.washington.edu/Athaliana/20180516_geoduck_trimgalore_rrbs\n\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n# Document programs in PATH (primarily for program version ID)\n\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n\n# Set number of CPUs to use\nthreads=28\n\n# Set number of nucleotides to hard trim\nnum_nucs_trim=20\n\n\n# Paths to programs\nfastp=/gscratch/srlab/programs/fastp-0.20.0/fastp\n\n\n## Inititalize arrays\nfastq_array_R1=()\nfastq_array_R2=()\nR1_names_array=()\nR2_names_array=()\n\n# Create array of fastq R1 files\nfor fastq in *R1*.gz\ndo\n  fastq_array_R1+=(\"${fastq}\")\ndone\n\n# Create array of fastq R2 files\nfor fastq in *R2*.gz\ndo\n  fastq_array_R2+=(\"${fastq}\")\ndone\n\n\n# Create array of sample names\n## Uses awk to parse out sample name from filename\nfor R1_fastq in *R1*.gz\ndo\n  R1_names_array+=($(echo \"${R1_fastq}\" | awk -F\".\" '{print $1}'))\ndone\n\n# Create array of sample names\n## Uses awk to parse out sample name from filename\nfor R2_fastq in *R2*.gz\ndo\n  R2_names_array+=($(echo \"${R2_fastq}\" | awk -F\".\" '{print $1}'))\ndone\n\n# Create list of fastq files used in analysis\n## Uses parameter substitution to strip leading path from filename\nfor fastq in *.gz\ndo\n  echo \"${fastq}\" >> fastq.list.txt\ndone\n\n# Run fastp on files and trim set number of nucleotides from 5' end of reads\nfor index in \"${!fastq_array_R1[@]}\"\ndo\n  R1_sample_name=$(echo \"${R1_names_array[index]}\")\n\tR2_sample_name=$(echo \"${R2_names_array[index]}\")\n\t${fastp} \\\n\t--in1 \"${fastq_array_R1[index]}\" \\\n\t--in2 \"${fastq_array_R2[index]}\" \\\n\t--disable_quality_filtering \\\n\t--disable_length_filtering \\\n\t--disable_adapter_trimming \\\n\t--trim_front1 ${num_nucs_trim} \\\n\t--trim_front2 ${num_nucs_trim} \\\n\t--thread ${threads} \\\n\t--out1 \"${R1_sample_name}\".20bp-trim.fq.gz \\\n\t--out2 \"${R2_sample_name}\".20bp-trim.fq.gz\n\t# Remove original FastQ files\n\trm \"${fastq_array_R1[index]}\" \"${fastq_array_R2[index]}\"\ndone\n```\n\n---\n\n# RESULTS\n\nThis was pretty quick, ~2.75hrs:\n\n![fastp runtime screencap](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20190923_fastp_trimming_EPI_runtime.png?raw=true)\n\nOutput folder:\n\n- [20190923_pgen_fastp_EPI_trimming/](https://gannet.fish.washington.edu/Atumefaciens/20190923_pgen_fastp_EPI_trimming/)\n\n\nfastp report (HTML):\n\n- [20190923_pgen_fastp_EPI_trimming/fastp.html](https://gannet.fish.washington.edu/Atumefaciens/20190923_pgen_fastp_EPI_trimming/fastp.html)\n\n\nMultiQC report (HTML):\n\n- [20190923_pgen_fastp_EPI_trimming/multiqc_report.html](https://gannet.fish.washington.edu/Atumefaciens/20190923_pgen_fastp_EPI_trimming/multiqc_report.html)\n\n\nFirstly, it turns out that [fastp](https://github.com/OpenGene/fastp) is pretty awesome! It automatically generates a summary HTML file with before and after trimming data, similar to that of FastQC. Had I realized this, I might not have bothered with FastQC...\n\nAnyway, with that being said, this is how the before/after look for Read 1s via the fastp HTML:\n\n##### BEFORE\n![fastp sequence quality plots before](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20190923_fastp_trimming_EPI_before.png?raw=true)\n\n---\n\n##### AFTER\n![fastp sequence quality plots before](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20190923_fastp_trimming_EPI_after.png?raw=true)\n","srcMarkdownNoYaml":"\nSteven noticed that the [M-Bias plots generated by Bismark from these files](https://github.com/RobertsLab/resources/issues/408#issuecomment-534180697) was a little wonky and asked that I try trimming them a bit more. The files were originally quality/adaptor [trimmed with TrimGalore! on 20180516](https://robertslab.github.io/sams-notebook/posts/2018/2018-05-16-trimgalorefastqcmultiqc-trimgalore-rrbs-geoduck-bs-seq-fastq-data-directional/).\n\nI decided to use some trimming software called [fastp](https://github.com/OpenGene/fastp), since it had a lot of options (including trimming without the need for quality filtering/trimming, as well as being multi-threaded).\n\nLooking at the M-Bias plots and the original FastQC assessment, I opted to trim the first 20bp from the 5' end of all reads.\n\nI followed this up with FastQC and MultiQC.\n\nUse the following Bash script to initiate file transfer to Mox and call the SBATCH script:\n\n```shell\n#!/bin/bash\n\n## Rsync P.generosa EPI files and then run SBATCH script for hard trimming.\n\nrsync -av --progress owl:/volume1/web/Athaliana/20180516_geoduck_trimgalore_rrbs/*.fq.gz .\n\n\nsbatch 20190923_pgen_fastp_EPI_trimming.sh\n```\n\n\nSBATCH script (GitHub):\n\n- [20190923_pgen_fastp_EPI_trimming.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20190923_pgen_fastp_EPI_trimming.sh)\n\n```shell\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=pgen_fastp_trimming_EPI\n## Allocation Definition\n#SBATCH --account=coenv\n#SBATCH --partition=coenv\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=10-00:00:00\n## Memory per node\n#SBATCH --mem=120G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20190923_pgen_fastp_EPI_trimming\n\n\n# This script is called by 20190923_pgen_EPI_rsync.sh. That script transfers the FastQ files\n# to the working directory from: https://owl.fish.washington.edu/Athaliana/20180516_geoduck_trimgalore_rrbs\n\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n# Document programs in PATH (primarily for program version ID)\n\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n\n# Set number of CPUs to use\nthreads=28\n\n# Set number of nucleotides to hard trim\nnum_nucs_trim=20\n\n\n# Paths to programs\nfastp=/gscratch/srlab/programs/fastp-0.20.0/fastp\n\n\n## Inititalize arrays\nfastq_array_R1=()\nfastq_array_R2=()\nR1_names_array=()\nR2_names_array=()\n\n# Create array of fastq R1 files\nfor fastq in *R1*.gz\ndo\n  fastq_array_R1+=(\"${fastq}\")\ndone\n\n# Create array of fastq R2 files\nfor fastq in *R2*.gz\ndo\n  fastq_array_R2+=(\"${fastq}\")\ndone\n\n\n# Create array of sample names\n## Uses awk to parse out sample name from filename\nfor R1_fastq in *R1*.gz\ndo\n  R1_names_array+=($(echo \"${R1_fastq}\" | awk -F\".\" '{print $1}'))\ndone\n\n# Create array of sample names\n## Uses awk to parse out sample name from filename\nfor R2_fastq in *R2*.gz\ndo\n  R2_names_array+=($(echo \"${R2_fastq}\" | awk -F\".\" '{print $1}'))\ndone\n\n# Create list of fastq files used in analysis\n## Uses parameter substitution to strip leading path from filename\nfor fastq in *.gz\ndo\n  echo \"${fastq}\" >> fastq.list.txt\ndone\n\n# Run fastp on files and trim set number of nucleotides from 5' end of reads\nfor index in \"${!fastq_array_R1[@]}\"\ndo\n  R1_sample_name=$(echo \"${R1_names_array[index]}\")\n\tR2_sample_name=$(echo \"${R2_names_array[index]}\")\n\t${fastp} \\\n\t--in1 \"${fastq_array_R1[index]}\" \\\n\t--in2 \"${fastq_array_R2[index]}\" \\\n\t--disable_quality_filtering \\\n\t--disable_length_filtering \\\n\t--disable_adapter_trimming \\\n\t--trim_front1 ${num_nucs_trim} \\\n\t--trim_front2 ${num_nucs_trim} \\\n\t--thread ${threads} \\\n\t--out1 \"${R1_sample_name}\".20bp-trim.fq.gz \\\n\t--out2 \"${R2_sample_name}\".20bp-trim.fq.gz\n\t# Remove original FastQ files\n\trm \"${fastq_array_R1[index]}\" \"${fastq_array_R2[index]}\"\ndone\n```\n\n---\n\n# RESULTS\n\nThis was pretty quick, ~2.75hrs:\n\n![fastp runtime screencap](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20190923_fastp_trimming_EPI_runtime.png?raw=true)\n\nOutput folder:\n\n- [20190923_pgen_fastp_EPI_trimming/](https://gannet.fish.washington.edu/Atumefaciens/20190923_pgen_fastp_EPI_trimming/)\n\n\nfastp report (HTML):\n\n- [20190923_pgen_fastp_EPI_trimming/fastp.html](https://gannet.fish.washington.edu/Atumefaciens/20190923_pgen_fastp_EPI_trimming/fastp.html)\n\n\nMultiQC report (HTML):\n\n- [20190923_pgen_fastp_EPI_trimming/multiqc_report.html](https://gannet.fish.washington.edu/Atumefaciens/20190923_pgen_fastp_EPI_trimming/multiqc_report.html)\n\n\nFirstly, it turns out that [fastp](https://github.com/OpenGene/fastp) is pretty awesome! It automatically generates a summary HTML file with before and after trimming data, similar to that of FastQC. Had I realized this, I might not have bothered with FastQC...\n\nAnyway, with that being said, this is how the before/after look for Read 1s via the fastp HTML:\n\n##### BEFORE\n![fastp sequence quality plots before](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20190923_fastp_trimming_EPI_before.png?raw=true)\n\n---\n\n##### AFTER\n![fastp sequence quality plots before](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20190923_fastp_trimming_EPI_after.png?raw=true)\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"Trimming/FastQC/MultiQC - P.generosa EPI FastQs with FASTP on Mox","date":"2019-09-23 14:19","tags":["Panopea generosa","geoduck","fastp","trimming"],"categories":["2019","Miscellaneous"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}