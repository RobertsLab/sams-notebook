{"title":"Genome Annotation - Pgenerosa_v71 with MAKER on Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"Genome Annotation - Pgenerosa_v71 with MAKER on Mox","date":"2019-02-13 07:50","tags":["mox","MAKER","Panopea generosa","geoduck","Pgenerosa_v71","annotation"],"categories":["2019","Miscellaneous"]},"headingText":"Job Name","containsRefs":false,"markdown":"\nWith the [P.generosa v070 annotation](https://robertslab.github.io/sams-notebook/posts/2019/2019-01-15-Annotation-Geoduck-Genome-with-MAKER-Submitted-to-Mox/) taking a very long time (due to the genome/transcriptome sizes, and, hitting some snags in the script I put together), Steven asked if I could [subset the genome](https://robertslab.github.io/sams-notebook/2019/02/11/Sequence-Subsetting-Pgenerosa_v70-Genome-Assembly-with-faidx/) and annotate the [v071 assembly (>10kbp subset)](http://owl.fish.washington.edu/halfshell/genomic-databank/Pgenerosa_v071.fasta) in order to have some annotations to use for some talks coming up ASLO ([in this GitHub issue](https://github.com/RobertsLab/resources/issues/573)).\n\nAfter a number of fixes, I finally got the annotation to run to completion. Here's the SBATCH script used to run on Mox:\n\n- [20190213_geoduck_maker_genome_annotation.sh](https://gannet.fish.washington.edu/Atumefaciens/20190213_geoduck_maker_genome_annotation/20190213_geoduck_maker_genome_annotation.sh)\n\n<pre><code>\n#!/bin/bash\n#SBATCH --job-name=maker\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=2\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=25-00:00:00\n## Memory per node\n#SBATCH --mem=120G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --workdir=/gscratch/scrubbed/samwhite/outputs/20190213_geoduck_maker_genome_annotation\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n# Load Open MPI module for parallel, multi-node processing\n\nmodule load icc_19-ompi_3.1.2\n\n# SegFault fix?\nexport THREADS_DAEMON_MODEL=1\n\n# Document programs in PATH (primarily for program version ID)\n\ndate >> system_path.log\necho \"\" >> system_path.log\necho \"System PATH for $SLURM_JOB_ID\" >> system_path.log\necho \"\" >> system_path.log\nprintf \"%0.s-\" {1..10} >> system_path.log\necho ${PATH} | tr : \\\\n >> system_path.log\n\n# Add BLAST to system PATH\nexport PATH=$PATH:/gscratch/srlab/programs/ncbi-blast-2.6.0+/bin\nexport BLASTDB=/gscratch/srlab/blastdbs/UniProtKB_20181008\n\n\n## Establish variables for more readable code\n\nwd=$(pwd)\nmaker_dir=/gscratch/srlab/programs/maker-2.31.10/bin\nsnap_dir=/gscratch/srlab/programs/maker-2.31.10/exe/snap\n\n### Paths to Maker binaries\n\nmaker=${maker_dir}/maker\ngff3_merge=${maker_dir}/gff3_merge\nmaker2zff=${maker_dir}/maker2zff\nfathom=${snap_dir}/fathom\nforge=${snap_dir}/forge\nhmmassembler=${snap_dir}/hmm-assembler.pl\nfasta_merge=${maker_dir}/fasta_merge\nmap_ids=${maker_dir}/maker_map_ids\nmap_gff_ids=${maker_dir}/map_gff_ids\nmap_fasta_ids=${maker_dir}/map_fasta_ids\nfunctional_fasta=${maker_dir}/maker_functional_fasta\nfunctional_gff=${maker_dir}/maker_functional_gff\nipr_update_gff=${maker_dir}/ipr_update_gff\niprscan2gff3=${maker_dir}/iprscan2gff3\n\nblastp_dir=${wd}/blastp_annotation\nmaker_blastp=${wd}/blastp_annotation/blastp.outfmt6\nmaker_prot_fasta=${wd}/snap02/Pgenerosa_v071_snap02.all.maker.proteins.fasta\nmaker_prot_fasta_renamed=${wd}/snap02/Pgenerosa_v071_snap02.all.maker.proteins.renamed.fasta\nmaker_transcripts_fasta=${wd}/snap02/Pgenerosa_v071_snap02.all.maker.transcripts.fasta\nmaker_transcripts_fasta_renamed=${wd}/snap02/Pgenerosa_v071_snap02.all.maker.transcripts.renamed.fasta\nsnap01_est_gff=${wd}/snap01/Pgenerosa_v071_snap01.maker.all.noseqs.est2genome.gff\nsnap02_gff=${wd}/snap02/Pgenerosa_v071_snap02.all.gff\nsnap02_gff_renamed=${wd}/snap02/Pgenerosa_v071_snap02.all.renamed.gff\nsnap01_protein_gff=${wd}/snap01/Pgenerosa_v071_snap01.maker.all.noseqs.protein2genome.gff\nsnap01_rm_gff=${wd}/snap01/Pgenerosa_v071_snap01.maker.all.noseqs.repeats.gff\nput_func_gff=Pgenerosa_v071_genome_snap02.all.renamed.putative_function.gff\nput_func_prot=Pgenerosa_v071_genome_snap02.all.maker.proteins.renamed.putative_function.fasta\nput_func_trans=Pgenerosa_v071_genome_snap02.all.maker.transcripts.renamed.putative_function.fasta\nput_domain_gff=Pgenerosa_v071_genome_snap02.all.renamed.putative_function.domain_added.gff\nips_dir=${wd}/interproscan_annotation\nips_base=Pgenerosa_v071_maker_proteins_ips\nips_name=Pgenerosa_v071_maker_proteins_ips.tsv\nid_map=${wd}/snap02/Pgenerosa_v071_genome.map\nips_domains=Pgenerosa_v071_genome_snap02.all.renamed.visible_ips_domains.gff\n\n## Path to blastp\nblastp=/gscratch/srlab/programs/ncbi-blast-2.6.0+/bin/blastp\n\n## Path to InterProScan5\ninterproscan=/gscratch/srlab/programs/interproscan-5.31-70.0/interproscan.sh\n\n## Store path to options control file\nmaker_opts_file=./maker_opts.ctl\n\n### Path to genome FastA file\ngenome=/gscratch/srlab/sam/data/P_generosa/generosa_genomes/Pgenerosa_v071.fasta\n\n### Path to transcriptome FastA file\ntranscriptome=/gscratch/srlab/sam/data/P_generosa/generosa_transcriptomes/20180827_trinity_geoduck.fasta\n\n### Path to Crassotrea gigas NCBI protein FastA\ngigas_proteome=/gscratch/srlab/sam/data/C_gigas/gigas_ncbi_protein/GCA_000297895.1_oyster_v9_protein.faa\n\n### Path to Crassostrea virginica NCBI protein FastA\nvirginica_proteome=/gscratch/srlab/sam/data/C_virginica/virginica_ncbi_protein/GCF_002022765.2_C_virginica-3.0_protein.faa\n\n### Path to Panopea generosa TransDecoder protein FastA\npanopea_td_proteome=/gscratch/srlab/sam/data/P_generosa/generosa_proteomes/20180827_trinity_geoduck.fasta.transdecoder.pep\n\n### Path to concatenated NCBI prteins FastA\ncombined_proteomes=${wd}/combined_proteomes.fasta\n\n### Path to P.generosa-specific repeat library\nrepeat_library=/gscratch/srlab/sam/data/P_generosa/generosa_repeats/Pgenerosa_v070-families.fa\n\n### Path to SwissProt database for BLASTp\nsp_db_blastp=/gscratch/srlab/blastdbs/UniProtKB_20190109/uniprot_sprot.fasta\n\n\n## Make directories\nmkdir blastp_annotation\nmkdir interproscan_annotation\n\n\n## Create Maker control files needed for running Maker, only if it doesn't already exist and then edit it.\n### Edit options file\n### Set paths to P.generosa genome and transcriptome.\n### Set path to combined C. gigas, C.virginica, P.generosa proteomes.\n### The use of the % symbol sets the delimiter sed uses for arguments.\n### Normally, the delimiter that most examples use is a slash \"/\".\n### But, we need to expand the variables into a full path with slashes, which screws up sed.\n### Thus, the use of % symbol instead (it could be any character that is NOT present in the expanded variable; doesn't have to be \"%\").\nif [ ! -e maker_opts.ctl ]; then\n  $maker -CTL\n  sed -i \"/^genome=/ s% %$genome %\" \"$maker_opts_file\"\n  sed -i \"/^est=/ s% %$transcriptome %\" \"$maker_opts_file\"\n  sed -i \"/^protein=/ s% %$combined_proteomes %\" \"$maker_opts_file\"\n  sed -i \"/^rmlib=/ s% %$repeat_library %\" \"$maker_opts_file\"\n  sed -i \"/^est2genome=0/ s/est2genome=0/est2genome=1/\" \"$maker_opts_file\"\n  sed -i \"/^protein2genome=0/ s/protein2genome=0/protein2genome=1/\" \"$maker_opts_file\"\nfi\n\n## Create combined proteome FastA file, only if it doesn't already exist.\nif [ ! -e combined_proteomes.fasta ]; then\n    touch combined_proteomes.fasta\n    cat \"$gigas_proteome\" >> combined_proteomes.fasta\n    cat \"$virginica_proteome\" >> combined_proteomes.fasta\n    cat \"$panopea_td_proteome\" >> combined_proteomes.fasta\nfi\n\n\n\n## Run Maker\n### Specify number of nodes to use.\nmpiexec -n 56 $maker\n\n## Merge gffs\n${gff3_merge} -d Pgenerosa_v071.maker.output/Pgenerosa_v071_master_datastore_index.log\n\n## GFF with no FastA in footer\n${gff3_merge} -n -s -d Pgenerosa_v071.maker.output/Pgenerosa_v071_master_datastore_index.log > Pgenerosa_v071.maker.all.noseqs.gff\n\n## Merge all FastAs\n${fasta_merge} -d Pgenerosa_v071.maker.output/Pgenerosa_v071_master_datastore_index.log\n\n## Extract GFF alignments for use in subsequent MAKER rounds\n### Transcript alignments\nawk '{ if ($2 == \"est2genome\") print $0 }' Pgenerosa_v071.maker.all.noseqs.gff > Pgenerosa_v071.maker.all.noseqs.est2genome.gff\n### Protein alignments\nawk '{ if ($2 == \"protein2genome\") print $0 }' Pgenerosa_v071.maker.all.noseqs.gff > Pgenerosa_v071.maker.all.noseqs.protein2genome.gff\n### Repeat alignments\nawk '{ if ($2 ~ \"repeat\") print $0 }' Pgenerosa_v071.maker.all.noseqs.gff > Pgenerosa_v071.maker.all.noseqs.repeats.gff\n\n## Run SNAP training, round 1\ncd ${wd}\ncd snap01\n${maker2zff} ../Pgenerosa_v071.all.gff\n${fathom} -categorize 1000 genome.ann genome.dna\n${fathom} -export 1000 -plus uni.ann uni.dna\n${forge} export.ann export.dna\n${hmmassembler} genome . > Pgenerosa_v071_snap01.hmm\n\n## Initiate second Maker run.\n### Copy initial maker control files and\n### - change gene prediction settings to 0 (i.e. don't generate Maker gene predictions)\n### - use GFF subsets generated in first round of MAKER\n### - set location of snaphmm file to use for gene prediction\n### Percent symbols used below are the sed delimiters, instead of the default \"/\",\n### due to the need to use file paths.\nif [ ! -e maker_opts.ctl ]; then\n  $maker -CTL\n  sed -i \"/^genome=/ s% %$genome %\" maker_opts.ctl\n  sed -i \"/^est2genome=1/ s/est2genome=1/est2genome=0/\" maker_opts.ctl\n  sed -i \"/^protein2genome=1/ s/protein2genome=1/protein2genome=0/\" maker_opts.ctl\n  sed -i \"/^est_gff=/ s% %../Pgenerosa_v071.maker.all.noseqs.est2genome.gff %\" maker_opts.ctl\n  sed -i \"/^protein_gff=/ s% %../Pgenerosa_v071.maker.all.noseqs.protein2genome.gff %\" maker_opts.ctl\n  sed -i \"/^rm_gff=/ s% %../Pgenerosa_v071.maker.all.noseqs.repeats.gff %\" maker_opts.ctl\n  sed -i \"/^snaphmm=/ s% %Pgenerosa_v071_snap01.hmm %\" maker_opts.ctl\nfi\n\n## Run Maker\n### Set basename of files and specify number of CPUs to use\nmpiexec -n 56 $maker \\\n-base Pgenerosa_v071_snap01\n\n## Merge gffs\n${gff3_merge} -d Pgenerosa_v071_snap01.maker.output/Pgenerosa_v071_snap01_master_datastore_index.log\n\n## GFF with no FastA in footer\n${gff3_merge} -n -s -d Pgenerosa_v071_snap01.maker.output/Pgenerosa_v071_snap01_master_datastore_index.log > Pgenerosa_v071_snap01.maker.all.noseqs.gff\n\n## Run SNAP training, round 2\ncd ${wd}\ncd snap02\n${maker2zff} ../snap01/Pgenerosa_v071_snap01.all.gff\n${fathom} -categorize 1000 genome.ann genome.dna\n${fathom} -export 1000 -plus uni.ann uni.dna\n${forge} export.ann export.dna\n${hmmassembler} genome . > Pgenerosa_v071_snap02.hmm\n\n## Initiate third and final Maker run.\n\nif [ ! -e maker_opts.ctl ]; then\n  $maker -CTL\n  sed -i \"/^genome=/ s% %$genome %\" maker_opts.ctl\n  sed -i \"/^est2genome=1/ s/est2genome=1/est2genome=0/\" maker_opts.ctl\n  sed -i \"/^protein2genome=1/ s/protein2genome=1/protein2genome=0/\" maker_opts.ctl\n  sed -i \"/^est_gff=/ s% %../Pgenerosa_v071.maker.all.noseqs.est2genome.gff %\" maker_opts.ctl\n  sed -i \"/^protein_gff=/ s% %../Pgenerosa_v071.maker.all.noseqs.protein2genome.gff %\" maker_opts.ctl\n  sed -i \"/^rm_gff=/ s% %../Pgenerosa_v071.maker.all.noseqs.repeats.gff %\" maker_opts.ctl\n  sed -i \"/^snaphmm=/ s% %Pgenerosa_v071_snap02.hmm %\" maker_opts.ctl\nfi\n\n## Run Maker\n### Set basename of files and specify number of CPUs to use\nmpiexec -n 56 $maker \\\n-base Pgenerosa_v071_snap02\n\n## Merge gffs\n${gff3_merge} \\\n-d Pgenerosa_v071_snap02.maker.output/Pgenerosa_v071_snap02_master_datastore_index.log\n\n## GFF with no FastA in footer\n${gff3_merge} -n -s -d Pgenerosa_v071_snap02.maker.output/Pgenerosa_v071_snap02_master_datastore_index.log > Pgenerosa_v071_snap02.maker.all.noseqs.gff\n\n## Merge FastAs\n${fasta_merge} \\\n-d Pgenerosa_v071_snap02.maker.output/Pgenerosa_v071_snap02_master_datastore_index.log\n\n# Create copies of files for mapping\ncp ${maker_prot_fasta} ${maker_prot_fasta_renamed}\ncp ${maker_transcripts_fasta} ${maker_transcripts_fasta_renamed}\ncp ${snap02_gff} ${snap02_gff_renamed}\n\n# Map IDs\n## Change gene names\n${map_ids} \\\n--prefix PGEN_ \\\n--justify 8 \\\n${snap02_gff} \\\n> ${id_map}\n\n## Map GFF IDs\n${map_gff_ids} \\\n${id_map} \\\n${snap02_gff_renamed}\n\n## Map FastAs\n### Proteins\n${map_fasta_ids} \\\n${id_map} \\\n${maker_prot_fasta_renamed}\n\n### Transcripts\n${map_fasta_ids} \\\n${id_map} \\\n${maker_transcripts_fasta_renamed}\n\n# Run InterProScan 5\n## disable-precalc since this requires external database access (which Mox does not allow)\ncd ${ips_dir}\n\n${interproscan} \\\n--input ${maker_prot_fasta_renamed} \\\n--goterms \\\n--output-file-base ${ips_base} \\\n--disable-precalc\n\n# Run BLASTp\ncd ${blastp_annotation}\n\n${blastp} \\\n-query ${maker_prot_fasta_renamed} \\\n-db ${sp_db_blastp} \\\n-out ${maker_blastp} \\\n-max_target_seqs 1 \\\n-evalue 1e-6 \\\n-outfmt 6 \\\n-num_threads 28\n\n\n# Functional annotations\n\ncd ${wd}\n\n## Add putative gene functions\n### GFF\n${functional_gff} \\\n${sp_db_blastp} \\\n${maker_blastp} \\\n${snap02_gff_renamed} \\\n> ${put_func_gff}\n\n### Proteins\n${functional_fasta} \\\n${sp_db_blastp} \\\n${maker_blastp} \\\n${maker_prot_fasta_renamed} \\\n> ${put_func_prot}\n\n### Transcripts\n${functional_fasta} \\\n${sp_db_blastp} \\\n${maker_blastp} \\\n${maker_transcripts_fasta_renamed} \\\n> ${put_func_trans}\n\n## Add InterProScan domain info\n### Add searchable tags\n${ipr_update_gff} \\\n${put_func_gff} \\\n${ips_dir}/${ips_name} \\\n> ${put_domain_gff}\n\n### Add viewable features for genome browsers (JBrowse, Gbrowse, Web Apollo)\n${iprscan2gff3} \\\n${ips_dir}/${ips_name} \\\n${snap02_gff_renamed} \\\n> ${ips_domains}\n\n</code></pre>\n\nHere are links to the input files used:\n\nGenome assembly (from [20190211](https://robertslab.github.io/sams-notebook/posts/2019/2019-02-11-Sequence-Subsetting---Pgenerosa_v70-Genome-Assembly-with-faidx/))\n\n- [Pgenerosa_v071.fasta](http://owl.fish.washington.edu/halfshell/genomic-databank/Pgenerosa_v071.fasta) (1.3GB)\n\nTranscriptome assembly (from [20180904](https://robertslab.github.io/sams-notebook/posts/2018/2018-09-04-transcriptome-assembly-geoduck-rnaseq-data/)):\n\n- [20180827_trinity_geoduck.fasta](http://owl.fish.washington.edu/Athaliana/20180827_trinity_geoduck_RNAseq/Trinity.fasta) (972MB)\n\nProtein FastA (from [20181121](20180827_trinity_geoduck.fasta.transdecoder.pep))\n\n- [20180827_trinity_geoduck.fasta.transdecoder.pep](https://gannet.fish.washington.edu/Atumefaciens/20181121_geo_transdecoder/20180827_trinity_geoduck.fasta.transdecoder.pep) (142MB)\n\nRepeats library FastA (from [20181219](https://robertslab.github.io/sams-notebook/posts/2018/2018-12-19-Repeat-Library-Construction---P.generosa-RepeatModeler-v1.0.11/))\n\n- [Pgenerosa_v070-families.fa](http://gannet.fish.washington.edu/Atumefaciens/20181219_Pgenerosa_repeatmodeler/Pgenerosa_v070-families.fa) (1.4MB)\n\n---\n\n# RESULTS\n\nAfter all the rigamarole with fixing various script issues, this finally completed on 20190226. I think this would have finished much, much sooner if I didn't have so many small oversights in the SBATCH script.\n\nOutput folder:\n\n- [20190213_geoduck_maker_genome_annotation/](https://gannet.fish.washington.edu/Atumefaciens/20190213_geoduck_maker_genome_annotation/)\n\nFinal annotation GFF:\n\n - [20190213_geoduck_maker_genome_annotation/Pgenerosa_v071_genome_snap02.all.renamed.putative_function.domain_added.gff](https://gannet.fish.washington.edu/Atumefaciens/20190213_geoduck_maker_genome_annotation/Pgenerosa_v071_genome_snap02.all.renamed.putative_function.domain_added.gff)\n\n Supplemental InterProScan domains GFF:\n\n - [20190213_geoduck_maker_genome_annotation/Pgenerosa_v071_genome_snap02.all.renamed.visible_ips_domains.gff](https://gannet.fish.washington.edu/Atumefaciens/20190213_geoduck_maker_genome_annotation/Pgenerosa_v071_genome_snap02.all.renamed.visible_ips_domains.gff)\n","srcMarkdownNoYaml":"\nWith the [P.generosa v070 annotation](https://robertslab.github.io/sams-notebook/posts/2019/2019-01-15-Annotation-Geoduck-Genome-with-MAKER-Submitted-to-Mox/) taking a very long time (due to the genome/transcriptome sizes, and, hitting some snags in the script I put together), Steven asked if I could [subset the genome](https://robertslab.github.io/sams-notebook/2019/02/11/Sequence-Subsetting-Pgenerosa_v70-Genome-Assembly-with-faidx/) and annotate the [v071 assembly (>10kbp subset)](http://owl.fish.washington.edu/halfshell/genomic-databank/Pgenerosa_v071.fasta) in order to have some annotations to use for some talks coming up ASLO ([in this GitHub issue](https://github.com/RobertsLab/resources/issues/573)).\n\nAfter a number of fixes, I finally got the annotation to run to completion. Here's the SBATCH script used to run on Mox:\n\n- [20190213_geoduck_maker_genome_annotation.sh](https://gannet.fish.washington.edu/Atumefaciens/20190213_geoduck_maker_genome_annotation/20190213_geoduck_maker_genome_annotation.sh)\n\n<pre><code>\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=maker\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=2\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=25-00:00:00\n## Memory per node\n#SBATCH --mem=120G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --workdir=/gscratch/scrubbed/samwhite/outputs/20190213_geoduck_maker_genome_annotation\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n# Load Open MPI module for parallel, multi-node processing\n\nmodule load icc_19-ompi_3.1.2\n\n# SegFault fix?\nexport THREADS_DAEMON_MODEL=1\n\n# Document programs in PATH (primarily for program version ID)\n\ndate >> system_path.log\necho \"\" >> system_path.log\necho \"System PATH for $SLURM_JOB_ID\" >> system_path.log\necho \"\" >> system_path.log\nprintf \"%0.s-\" {1..10} >> system_path.log\necho ${PATH} | tr : \\\\n >> system_path.log\n\n# Add BLAST to system PATH\nexport PATH=$PATH:/gscratch/srlab/programs/ncbi-blast-2.6.0+/bin\nexport BLASTDB=/gscratch/srlab/blastdbs/UniProtKB_20181008\n\n\n## Establish variables for more readable code\n\nwd=$(pwd)\nmaker_dir=/gscratch/srlab/programs/maker-2.31.10/bin\nsnap_dir=/gscratch/srlab/programs/maker-2.31.10/exe/snap\n\n### Paths to Maker binaries\n\nmaker=${maker_dir}/maker\ngff3_merge=${maker_dir}/gff3_merge\nmaker2zff=${maker_dir}/maker2zff\nfathom=${snap_dir}/fathom\nforge=${snap_dir}/forge\nhmmassembler=${snap_dir}/hmm-assembler.pl\nfasta_merge=${maker_dir}/fasta_merge\nmap_ids=${maker_dir}/maker_map_ids\nmap_gff_ids=${maker_dir}/map_gff_ids\nmap_fasta_ids=${maker_dir}/map_fasta_ids\nfunctional_fasta=${maker_dir}/maker_functional_fasta\nfunctional_gff=${maker_dir}/maker_functional_gff\nipr_update_gff=${maker_dir}/ipr_update_gff\niprscan2gff3=${maker_dir}/iprscan2gff3\n\nblastp_dir=${wd}/blastp_annotation\nmaker_blastp=${wd}/blastp_annotation/blastp.outfmt6\nmaker_prot_fasta=${wd}/snap02/Pgenerosa_v071_snap02.all.maker.proteins.fasta\nmaker_prot_fasta_renamed=${wd}/snap02/Pgenerosa_v071_snap02.all.maker.proteins.renamed.fasta\nmaker_transcripts_fasta=${wd}/snap02/Pgenerosa_v071_snap02.all.maker.transcripts.fasta\nmaker_transcripts_fasta_renamed=${wd}/snap02/Pgenerosa_v071_snap02.all.maker.transcripts.renamed.fasta\nsnap01_est_gff=${wd}/snap01/Pgenerosa_v071_snap01.maker.all.noseqs.est2genome.gff\nsnap02_gff=${wd}/snap02/Pgenerosa_v071_snap02.all.gff\nsnap02_gff_renamed=${wd}/snap02/Pgenerosa_v071_snap02.all.renamed.gff\nsnap01_protein_gff=${wd}/snap01/Pgenerosa_v071_snap01.maker.all.noseqs.protein2genome.gff\nsnap01_rm_gff=${wd}/snap01/Pgenerosa_v071_snap01.maker.all.noseqs.repeats.gff\nput_func_gff=Pgenerosa_v071_genome_snap02.all.renamed.putative_function.gff\nput_func_prot=Pgenerosa_v071_genome_snap02.all.maker.proteins.renamed.putative_function.fasta\nput_func_trans=Pgenerosa_v071_genome_snap02.all.maker.transcripts.renamed.putative_function.fasta\nput_domain_gff=Pgenerosa_v071_genome_snap02.all.renamed.putative_function.domain_added.gff\nips_dir=${wd}/interproscan_annotation\nips_base=Pgenerosa_v071_maker_proteins_ips\nips_name=Pgenerosa_v071_maker_proteins_ips.tsv\nid_map=${wd}/snap02/Pgenerosa_v071_genome.map\nips_domains=Pgenerosa_v071_genome_snap02.all.renamed.visible_ips_domains.gff\n\n## Path to blastp\nblastp=/gscratch/srlab/programs/ncbi-blast-2.6.0+/bin/blastp\n\n## Path to InterProScan5\ninterproscan=/gscratch/srlab/programs/interproscan-5.31-70.0/interproscan.sh\n\n## Store path to options control file\nmaker_opts_file=./maker_opts.ctl\n\n### Path to genome FastA file\ngenome=/gscratch/srlab/sam/data/P_generosa/generosa_genomes/Pgenerosa_v071.fasta\n\n### Path to transcriptome FastA file\ntranscriptome=/gscratch/srlab/sam/data/P_generosa/generosa_transcriptomes/20180827_trinity_geoduck.fasta\n\n### Path to Crassotrea gigas NCBI protein FastA\ngigas_proteome=/gscratch/srlab/sam/data/C_gigas/gigas_ncbi_protein/GCA_000297895.1_oyster_v9_protein.faa\n\n### Path to Crassostrea virginica NCBI protein FastA\nvirginica_proteome=/gscratch/srlab/sam/data/C_virginica/virginica_ncbi_protein/GCF_002022765.2_C_virginica-3.0_protein.faa\n\n### Path to Panopea generosa TransDecoder protein FastA\npanopea_td_proteome=/gscratch/srlab/sam/data/P_generosa/generosa_proteomes/20180827_trinity_geoduck.fasta.transdecoder.pep\n\n### Path to concatenated NCBI prteins FastA\ncombined_proteomes=${wd}/combined_proteomes.fasta\n\n### Path to P.generosa-specific repeat library\nrepeat_library=/gscratch/srlab/sam/data/P_generosa/generosa_repeats/Pgenerosa_v070-families.fa\n\n### Path to SwissProt database for BLASTp\nsp_db_blastp=/gscratch/srlab/blastdbs/UniProtKB_20190109/uniprot_sprot.fasta\n\n\n## Make directories\nmkdir blastp_annotation\nmkdir interproscan_annotation\n\n\n## Create Maker control files needed for running Maker, only if it doesn't already exist and then edit it.\n### Edit options file\n### Set paths to P.generosa genome and transcriptome.\n### Set path to combined C. gigas, C.virginica, P.generosa proteomes.\n### The use of the % symbol sets the delimiter sed uses for arguments.\n### Normally, the delimiter that most examples use is a slash \"/\".\n### But, we need to expand the variables into a full path with slashes, which screws up sed.\n### Thus, the use of % symbol instead (it could be any character that is NOT present in the expanded variable; doesn't have to be \"%\").\nif [ ! -e maker_opts.ctl ]; then\n  $maker -CTL\n  sed -i \"/^genome=/ s% %$genome %\" \"$maker_opts_file\"\n  sed -i \"/^est=/ s% %$transcriptome %\" \"$maker_opts_file\"\n  sed -i \"/^protein=/ s% %$combined_proteomes %\" \"$maker_opts_file\"\n  sed -i \"/^rmlib=/ s% %$repeat_library %\" \"$maker_opts_file\"\n  sed -i \"/^est2genome=0/ s/est2genome=0/est2genome=1/\" \"$maker_opts_file\"\n  sed -i \"/^protein2genome=0/ s/protein2genome=0/protein2genome=1/\" \"$maker_opts_file\"\nfi\n\n## Create combined proteome FastA file, only if it doesn't already exist.\nif [ ! -e combined_proteomes.fasta ]; then\n    touch combined_proteomes.fasta\n    cat \"$gigas_proteome\" >> combined_proteomes.fasta\n    cat \"$virginica_proteome\" >> combined_proteomes.fasta\n    cat \"$panopea_td_proteome\" >> combined_proteomes.fasta\nfi\n\n\n\n## Run Maker\n### Specify number of nodes to use.\nmpiexec -n 56 $maker\n\n## Merge gffs\n${gff3_merge} -d Pgenerosa_v071.maker.output/Pgenerosa_v071_master_datastore_index.log\n\n## GFF with no FastA in footer\n${gff3_merge} -n -s -d Pgenerosa_v071.maker.output/Pgenerosa_v071_master_datastore_index.log > Pgenerosa_v071.maker.all.noseqs.gff\n\n## Merge all FastAs\n${fasta_merge} -d Pgenerosa_v071.maker.output/Pgenerosa_v071_master_datastore_index.log\n\n## Extract GFF alignments for use in subsequent MAKER rounds\n### Transcript alignments\nawk '{ if ($2 == \"est2genome\") print $0 }' Pgenerosa_v071.maker.all.noseqs.gff > Pgenerosa_v071.maker.all.noseqs.est2genome.gff\n### Protein alignments\nawk '{ if ($2 == \"protein2genome\") print $0 }' Pgenerosa_v071.maker.all.noseqs.gff > Pgenerosa_v071.maker.all.noseqs.protein2genome.gff\n### Repeat alignments\nawk '{ if ($2 ~ \"repeat\") print $0 }' Pgenerosa_v071.maker.all.noseqs.gff > Pgenerosa_v071.maker.all.noseqs.repeats.gff\n\n## Run SNAP training, round 1\ncd ${wd}\ncd snap01\n${maker2zff} ../Pgenerosa_v071.all.gff\n${fathom} -categorize 1000 genome.ann genome.dna\n${fathom} -export 1000 -plus uni.ann uni.dna\n${forge} export.ann export.dna\n${hmmassembler} genome . > Pgenerosa_v071_snap01.hmm\n\n## Initiate second Maker run.\n### Copy initial maker control files and\n### - change gene prediction settings to 0 (i.e. don't generate Maker gene predictions)\n### - use GFF subsets generated in first round of MAKER\n### - set location of snaphmm file to use for gene prediction\n### Percent symbols used below are the sed delimiters, instead of the default \"/\",\n### due to the need to use file paths.\nif [ ! -e maker_opts.ctl ]; then\n  $maker -CTL\n  sed -i \"/^genome=/ s% %$genome %\" maker_opts.ctl\n  sed -i \"/^est2genome=1/ s/est2genome=1/est2genome=0/\" maker_opts.ctl\n  sed -i \"/^protein2genome=1/ s/protein2genome=1/protein2genome=0/\" maker_opts.ctl\n  sed -i \"/^est_gff=/ s% %../Pgenerosa_v071.maker.all.noseqs.est2genome.gff %\" maker_opts.ctl\n  sed -i \"/^protein_gff=/ s% %../Pgenerosa_v071.maker.all.noseqs.protein2genome.gff %\" maker_opts.ctl\n  sed -i \"/^rm_gff=/ s% %../Pgenerosa_v071.maker.all.noseqs.repeats.gff %\" maker_opts.ctl\n  sed -i \"/^snaphmm=/ s% %Pgenerosa_v071_snap01.hmm %\" maker_opts.ctl\nfi\n\n## Run Maker\n### Set basename of files and specify number of CPUs to use\nmpiexec -n 56 $maker \\\n-base Pgenerosa_v071_snap01\n\n## Merge gffs\n${gff3_merge} -d Pgenerosa_v071_snap01.maker.output/Pgenerosa_v071_snap01_master_datastore_index.log\n\n## GFF with no FastA in footer\n${gff3_merge} -n -s -d Pgenerosa_v071_snap01.maker.output/Pgenerosa_v071_snap01_master_datastore_index.log > Pgenerosa_v071_snap01.maker.all.noseqs.gff\n\n## Run SNAP training, round 2\ncd ${wd}\ncd snap02\n${maker2zff} ../snap01/Pgenerosa_v071_snap01.all.gff\n${fathom} -categorize 1000 genome.ann genome.dna\n${fathom} -export 1000 -plus uni.ann uni.dna\n${forge} export.ann export.dna\n${hmmassembler} genome . > Pgenerosa_v071_snap02.hmm\n\n## Initiate third and final Maker run.\n\nif [ ! -e maker_opts.ctl ]; then\n  $maker -CTL\n  sed -i \"/^genome=/ s% %$genome %\" maker_opts.ctl\n  sed -i \"/^est2genome=1/ s/est2genome=1/est2genome=0/\" maker_opts.ctl\n  sed -i \"/^protein2genome=1/ s/protein2genome=1/protein2genome=0/\" maker_opts.ctl\n  sed -i \"/^est_gff=/ s% %../Pgenerosa_v071.maker.all.noseqs.est2genome.gff %\" maker_opts.ctl\n  sed -i \"/^protein_gff=/ s% %../Pgenerosa_v071.maker.all.noseqs.protein2genome.gff %\" maker_opts.ctl\n  sed -i \"/^rm_gff=/ s% %../Pgenerosa_v071.maker.all.noseqs.repeats.gff %\" maker_opts.ctl\n  sed -i \"/^snaphmm=/ s% %Pgenerosa_v071_snap02.hmm %\" maker_opts.ctl\nfi\n\n## Run Maker\n### Set basename of files and specify number of CPUs to use\nmpiexec -n 56 $maker \\\n-base Pgenerosa_v071_snap02\n\n## Merge gffs\n${gff3_merge} \\\n-d Pgenerosa_v071_snap02.maker.output/Pgenerosa_v071_snap02_master_datastore_index.log\n\n## GFF with no FastA in footer\n${gff3_merge} -n -s -d Pgenerosa_v071_snap02.maker.output/Pgenerosa_v071_snap02_master_datastore_index.log > Pgenerosa_v071_snap02.maker.all.noseqs.gff\n\n## Merge FastAs\n${fasta_merge} \\\n-d Pgenerosa_v071_snap02.maker.output/Pgenerosa_v071_snap02_master_datastore_index.log\n\n# Create copies of files for mapping\ncp ${maker_prot_fasta} ${maker_prot_fasta_renamed}\ncp ${maker_transcripts_fasta} ${maker_transcripts_fasta_renamed}\ncp ${snap02_gff} ${snap02_gff_renamed}\n\n# Map IDs\n## Change gene names\n${map_ids} \\\n--prefix PGEN_ \\\n--justify 8 \\\n${snap02_gff} \\\n> ${id_map}\n\n## Map GFF IDs\n${map_gff_ids} \\\n${id_map} \\\n${snap02_gff_renamed}\n\n## Map FastAs\n### Proteins\n${map_fasta_ids} \\\n${id_map} \\\n${maker_prot_fasta_renamed}\n\n### Transcripts\n${map_fasta_ids} \\\n${id_map} \\\n${maker_transcripts_fasta_renamed}\n\n# Run InterProScan 5\n## disable-precalc since this requires external database access (which Mox does not allow)\ncd ${ips_dir}\n\n${interproscan} \\\n--input ${maker_prot_fasta_renamed} \\\n--goterms \\\n--output-file-base ${ips_base} \\\n--disable-precalc\n\n# Run BLASTp\ncd ${blastp_annotation}\n\n${blastp} \\\n-query ${maker_prot_fasta_renamed} \\\n-db ${sp_db_blastp} \\\n-out ${maker_blastp} \\\n-max_target_seqs 1 \\\n-evalue 1e-6 \\\n-outfmt 6 \\\n-num_threads 28\n\n\n# Functional annotations\n\ncd ${wd}\n\n## Add putative gene functions\n### GFF\n${functional_gff} \\\n${sp_db_blastp} \\\n${maker_blastp} \\\n${snap02_gff_renamed} \\\n> ${put_func_gff}\n\n### Proteins\n${functional_fasta} \\\n${sp_db_blastp} \\\n${maker_blastp} \\\n${maker_prot_fasta_renamed} \\\n> ${put_func_prot}\n\n### Transcripts\n${functional_fasta} \\\n${sp_db_blastp} \\\n${maker_blastp} \\\n${maker_transcripts_fasta_renamed} \\\n> ${put_func_trans}\n\n## Add InterProScan domain info\n### Add searchable tags\n${ipr_update_gff} \\\n${put_func_gff} \\\n${ips_dir}/${ips_name} \\\n> ${put_domain_gff}\n\n### Add viewable features for genome browsers (JBrowse, Gbrowse, Web Apollo)\n${iprscan2gff3} \\\n${ips_dir}/${ips_name} \\\n${snap02_gff_renamed} \\\n> ${ips_domains}\n\n</code></pre>\n\nHere are links to the input files used:\n\nGenome assembly (from [20190211](https://robertslab.github.io/sams-notebook/posts/2019/2019-02-11-Sequence-Subsetting---Pgenerosa_v70-Genome-Assembly-with-faidx/))\n\n- [Pgenerosa_v071.fasta](http://owl.fish.washington.edu/halfshell/genomic-databank/Pgenerosa_v071.fasta) (1.3GB)\n\nTranscriptome assembly (from [20180904](https://robertslab.github.io/sams-notebook/posts/2018/2018-09-04-transcriptome-assembly-geoduck-rnaseq-data/)):\n\n- [20180827_trinity_geoduck.fasta](http://owl.fish.washington.edu/Athaliana/20180827_trinity_geoduck_RNAseq/Trinity.fasta) (972MB)\n\nProtein FastA (from [20181121](20180827_trinity_geoduck.fasta.transdecoder.pep))\n\n- [20180827_trinity_geoduck.fasta.transdecoder.pep](https://gannet.fish.washington.edu/Atumefaciens/20181121_geo_transdecoder/20180827_trinity_geoduck.fasta.transdecoder.pep) (142MB)\n\nRepeats library FastA (from [20181219](https://robertslab.github.io/sams-notebook/posts/2018/2018-12-19-Repeat-Library-Construction---P.generosa-RepeatModeler-v1.0.11/))\n\n- [Pgenerosa_v070-families.fa](http://gannet.fish.washington.edu/Atumefaciens/20181219_Pgenerosa_repeatmodeler/Pgenerosa_v070-families.fa) (1.4MB)\n\n---\n\n# RESULTS\n\nAfter all the rigamarole with fixing various script issues, this finally completed on 20190226. I think this would have finished much, much sooner if I didn't have so many small oversights in the SBATCH script.\n\nOutput folder:\n\n- [20190213_geoduck_maker_genome_annotation/](https://gannet.fish.washington.edu/Atumefaciens/20190213_geoduck_maker_genome_annotation/)\n\nFinal annotation GFF:\n\n - [20190213_geoduck_maker_genome_annotation/Pgenerosa_v071_genome_snap02.all.renamed.putative_function.domain_added.gff](https://gannet.fish.washington.edu/Atumefaciens/20190213_geoduck_maker_genome_annotation/Pgenerosa_v071_genome_snap02.all.renamed.putative_function.domain_added.gff)\n\n Supplemental InterProScan domains GFF:\n\n - [20190213_geoduck_maker_genome_annotation/Pgenerosa_v071_genome_snap02.all.renamed.visible_ips_domains.gff](https://gannet.fish.washington.edu/Atumefaciens/20190213_geoduck_maker_genome_annotation/Pgenerosa_v071_genome_snap02.all.renamed.visible_ips_domains.gff)\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"Genome Annotation - Pgenerosa_v71 with MAKER on Mox","date":"2019-02-13 07:50","tags":["mox","MAKER","Panopea generosa","geoduck","Pgenerosa_v71","annotation"],"categories":["2019","Miscellaneous"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}