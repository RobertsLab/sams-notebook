{"title":"Genome Annotation - O.lurida 20190709-v081 Transcript Isoform ID with Stringtie on Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"Genome Annotation - O.lurida 20190709-v081 Transcript Isoform ID with Stringtie on Mox","date":"2019-07-16 15:07","tags":["Ostrea lurida","Olympia oyster","mox","stringtie","gtf","20190709-v081","annotation","isoforms"],"categories":["2019","Olympia Oyster Genome Sequencing"]},"headingText":"Job Name","containsRefs":false,"markdown":"\n[Earlier today, I generated the necessary Hista2 index, which incorporated splice sites and exons](https://robertslab.github.io/sams-notebook/posts/2019/2019-07-16-Genome-Annotation-O.lurida-20190709-v081-Hisat2-Transcript-Isoform-Index/), for use with Stringtie in order to identify transcript isoforms in our [20190709-Olurida_v081 annotation](https://robertslab.github.io/sams-notebook/2019/07/09/Genome-Annotation-Olurida_v081-with-MAKER-and-Tissue-specific-Transcriptomes-on-Mox/). This annotation utilized tissue-specific transcriptome assemblies provided by Katherine Silliman.\n\nI used all the trimmed FastQ files from the [20180827 Trinity transcriptome assembly](https://robertslab.github.io/sams-notebook/posts/2018/2018-09-19-transcriptome-assembly-olympia-oyster-rnaseq-data-with-trinity/), as this utilized all of our existing RNAseq data.\n\n- [20180827_trinity_oly_RNAseq/trinity_out_dir.tar.gz](https://owl.fish.washington.edu/Athaliana/20180827_trinity_oly_RNAseq/trinity_out_dir.tar.gz)\n\nCommand to pull trimmed files (Trimmomatic) out of the Trinity output folder that is a gzipped tarball:\n\n```shell\ntar -ztvf trinity_out_dir.tar.gz \\\n| grep -E \"*P.qtrim.gz\" \\\n&& tar -zxvf trinity_out_dir.tar.gz \\\n-C /home/sam/Downloads/ \\\n--wildcards \"*P.qtrim.gz\"\n```\n\nThis was run locally on my computer (swoose) and then `rsync`'d to Mox.\n\nNOTE: The \"P\" in the `*.P.qtrim.gz` represents trimmed reads that are properly paired, as determined by Trimmomatic/Trinity. See the [fastq.list.txt](https://gannet.fish.washington.edu/Atumefaciens/20190625_stringtie_oly_v081/fastq.list.txt) for the list of FastQ files used as input. For more info on input FastQ files, refer to [the Nightingales Google Sheet](http://b.link/nightingales).\n\n\nHere's the quick rundown of how transcript isoform annotation with Stringtie runs:\n\n1. Use Hisat2 reference index with identified splice sites and exons (this was done yesterday).\n\n2. Use Hisat2 to create alignments from each pair of trimmed FastQ files. _Need to use the `--downstream-transcriptome-assembly` option!!!_\n\n3. Use Stringtie to create a GTF for each alignment.\n\n4. Use Stringtie to create a singular, merged GTF from all of the individual GTFs.\n\n\nSBATCH script (GitHub):\n\n- [20190716_stringtie_20190709-olur-v081.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20190716_stringtie_20190709-olur-v081.sh)\n\n```shell\n#!/bin/bash\n#SBATCH --job-name=oly_stringtie\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=25-00:00:00\n## Memory per node\n#SBATCH --mem=500G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --workdir=/gscratch/scrubbed/samwhite/outputs/20190716_stringtie_20190709-olur-v081\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n# Document programs in PATH (primarily for program version ID)\n\ndate >> system_path.log\necho \"\" >> system_path.log\necho \"System PATH for $SLURM_JOB_ID\" >> system_path.log\necho \"\" >> system_path.log\nprintf \"%0.s-\" {1..10} >> system_path.log\necho \"${PATH}\" | tr : \\\\n >> system_path.log\n\n\nthreads=27\ngenome_index_name=\"20190709-Olurida_v081\"\n\n# Paths to programs\nhisat2_dir=\"/gscratch/srlab/programs/hisat2-2.1.0\"\nhisat2=\"${hisat2_dir}/hisat2\"\nsamtools=\"/gscratch/srlab/programs/samtools-1.9/samtools\"\nstringtie=\"/gscratch/srlab/programs/stringtie-1.3.6.Linux_x86_64/stringtie\"\n\n# Input/output files\ngenome_gff=\"/gscratch/srlab/sam/data/O_lurida/genomes/Olurida_v081/20190709-Olurida_v081_genome_snap02.all.renamed.putative_function.domain_added.gff\"\ngenome_index_dir=\"/gscratch/srlab/sam/data/O_lurida/genomes/Olurida_v081\"\nfastq_dir=\"/gscratch/srlab/sam/data/O_lurida/RNAseq/\"\ngtf_list=\"gtf_list.txt\"\n\n## Inititalize arrays\nfastq_array_R1=()\nfastq_array_R2=()\nnames_array=()\n\n# Copy Hisat2 genome index\nrsync -av \"${genome_index_dir}\"/${genome_index_name}*.ht2 .\n\n# Generate checksum of GFF file for backtracking to original\n# Original named: Olurida_v081_genome_snap02.all.renamed.putative_function.domain_added.gff\n# Created in 20190709 Olurida_v081 annotation - renamed to avoid filename clashes with previous annotations.\nmd5sum \"${genome_gff}\" > genome_gff.md5\n\n# Create array of fastq R1 files\nfor fastq in \"${fastq_dir}\"*R1*.gz\ndo\n  fastq_array_R1+=(\"${fastq}\")\ndone\n\n# Create array of fastq R2 files\nfor fastq in \"${fastq_dir}\"*R2*.gz\ndo\n  fastq_array_R2+=(\"${fastq}\")\ndone\n\n# Create array of sample names\n## Uses parameter substitution to strip leading path from filename\n## Uses awk to parse out sample name from filename\nfor R1_fastq in \"${fastq_dir}\"*R1*.gz\ndo\n  names_array+=($(echo \"${R1_fastq#${fastq_dir}}\" | awk -F\"[_.]\" '{print $1 \"_\" $5}'))\ndone\n\n# Create list of fastq files used in analysis\n## Uses parameter substitution to strip leading path from filename\nfor fastq in \"${fastq_dir}\"*.gz\ndo\n  echo \"${fastq#${fastq_dir}}\" >> fastq.list.txt\ndone\n\n# Hisat2 alignments\nfor index in \"${!fastq_array_R1[@]}\"\ndo\n  sample_name=$(echo \"${names_array[index]}\")\n  \"${hisat2}\" \\\n  -x \"${genome_index_name}\" \\\n  --downstream-transcriptome-assembly \\\n  -1 \"${fastq_array_R1[index]}\" \\\n  -2 \"${fastq_array_R2[index]}\" \\\n  -S \"${sample_name}\".sam \\\n  2> \"${sample_name}\"_hisat2.err\n\n# Sort SAM files, convert to BAM, and index\n  \"${samtools}\" view \\\n  -@ \"${threads}\" \\\n  -Su \"${sample_name}\".sam \\\n  | \"${samtools}\" sort - \\\n  -@ \"${threads}\" \\\n  -o \"${sample_name}\".sorted.bam\n  \"${samtools}\" index \"${sample_name}\".sorted.bam\n\n# Run stringtie on alignments\n  \"${stringtie}\" \"${sample_name}\".sorted.bam \\\n  -p \"${threads}\" \\\n  -o \"${sample_name}\".gtf \\\n  -G \"${genome_gff}\" \\\n  -C \"${sample_name}.cov_refs.gtf\"\n\n# Add GTFs to list file\n  echo \"${sample_name}.gtf\" >> \"${gtf_list}\"\ndone\n\n# Create singular transcript file, using GTF list file\n\"${stringtie}\" --merge \\\n\"${gtf_list}\" \\\n-p \"${threads}\" \\\n-G \"${genome_gff}\" \\\n-o \"${genome_index_name}\".stringtie.gtf\n\n# Delete unneccessary index files\nrm \"${genome_index_name}\"*.ht2\n\n# Delete unneded SAM files\nrm ./*.sam\n```\n\n---\n\n# RESULTS\n\nThis took ~24hrs to run:\n\n![Screencap of Mox Stringtie runtime](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20190716_stringtie_olur_v081_runtime.png?raw=true)\n\nOutput folder:\n\n- [20190716_stringtie_20190709-olur-v081/](https://gannet.fish.washington.edu/Atumefaciens/20190716_stringtie_20190709-olur-v081/)\n\nMerged GTF:\n\n- [20190716_stringtie_20190709-olur-v081/20190709-Olurida_v081.stringtie.gtf](https://gannet.fish.washington.edu/Atumefaciens/20190716_stringtie_20190709-olur-v081/20190709-Olurida_v081.stringtie.gtf)\n\nAlthough I won't link them here, each input FastQ pair has a corresponding alignment file (BAM), coverage file (`.cov_refs.gtf`), Hisat2 alignment stats file (`_hisat2.err`), and GTF.\n","srcMarkdownNoYaml":"\n[Earlier today, I generated the necessary Hista2 index, which incorporated splice sites and exons](https://robertslab.github.io/sams-notebook/posts/2019/2019-07-16-Genome-Annotation-O.lurida-20190709-v081-Hisat2-Transcript-Isoform-Index/), for use with Stringtie in order to identify transcript isoforms in our [20190709-Olurida_v081 annotation](https://robertslab.github.io/sams-notebook/2019/07/09/Genome-Annotation-Olurida_v081-with-MAKER-and-Tissue-specific-Transcriptomes-on-Mox/). This annotation utilized tissue-specific transcriptome assemblies provided by Katherine Silliman.\n\nI used all the trimmed FastQ files from the [20180827 Trinity transcriptome assembly](https://robertslab.github.io/sams-notebook/posts/2018/2018-09-19-transcriptome-assembly-olympia-oyster-rnaseq-data-with-trinity/), as this utilized all of our existing RNAseq data.\n\n- [20180827_trinity_oly_RNAseq/trinity_out_dir.tar.gz](https://owl.fish.washington.edu/Athaliana/20180827_trinity_oly_RNAseq/trinity_out_dir.tar.gz)\n\nCommand to pull trimmed files (Trimmomatic) out of the Trinity output folder that is a gzipped tarball:\n\n```shell\ntar -ztvf trinity_out_dir.tar.gz \\\n| grep -E \"*P.qtrim.gz\" \\\n&& tar -zxvf trinity_out_dir.tar.gz \\\n-C /home/sam/Downloads/ \\\n--wildcards \"*P.qtrim.gz\"\n```\n\nThis was run locally on my computer (swoose) and then `rsync`'d to Mox.\n\nNOTE: The \"P\" in the `*.P.qtrim.gz` represents trimmed reads that are properly paired, as determined by Trimmomatic/Trinity. See the [fastq.list.txt](https://gannet.fish.washington.edu/Atumefaciens/20190625_stringtie_oly_v081/fastq.list.txt) for the list of FastQ files used as input. For more info on input FastQ files, refer to [the Nightingales Google Sheet](http://b.link/nightingales).\n\n\nHere's the quick rundown of how transcript isoform annotation with Stringtie runs:\n\n1. Use Hisat2 reference index with identified splice sites and exons (this was done yesterday).\n\n2. Use Hisat2 to create alignments from each pair of trimmed FastQ files. _Need to use the `--downstream-transcriptome-assembly` option!!!_\n\n3. Use Stringtie to create a GTF for each alignment.\n\n4. Use Stringtie to create a singular, merged GTF from all of the individual GTFs.\n\n\nSBATCH script (GitHub):\n\n- [20190716_stringtie_20190709-olur-v081.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20190716_stringtie_20190709-olur-v081.sh)\n\n```shell\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=oly_stringtie\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=25-00:00:00\n## Memory per node\n#SBATCH --mem=500G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --workdir=/gscratch/scrubbed/samwhite/outputs/20190716_stringtie_20190709-olur-v081\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n# Document programs in PATH (primarily for program version ID)\n\ndate >> system_path.log\necho \"\" >> system_path.log\necho \"System PATH for $SLURM_JOB_ID\" >> system_path.log\necho \"\" >> system_path.log\nprintf \"%0.s-\" {1..10} >> system_path.log\necho \"${PATH}\" | tr : \\\\n >> system_path.log\n\n\nthreads=27\ngenome_index_name=\"20190709-Olurida_v081\"\n\n# Paths to programs\nhisat2_dir=\"/gscratch/srlab/programs/hisat2-2.1.0\"\nhisat2=\"${hisat2_dir}/hisat2\"\nsamtools=\"/gscratch/srlab/programs/samtools-1.9/samtools\"\nstringtie=\"/gscratch/srlab/programs/stringtie-1.3.6.Linux_x86_64/stringtie\"\n\n# Input/output files\ngenome_gff=\"/gscratch/srlab/sam/data/O_lurida/genomes/Olurida_v081/20190709-Olurida_v081_genome_snap02.all.renamed.putative_function.domain_added.gff\"\ngenome_index_dir=\"/gscratch/srlab/sam/data/O_lurida/genomes/Olurida_v081\"\nfastq_dir=\"/gscratch/srlab/sam/data/O_lurida/RNAseq/\"\ngtf_list=\"gtf_list.txt\"\n\n## Inititalize arrays\nfastq_array_R1=()\nfastq_array_R2=()\nnames_array=()\n\n# Copy Hisat2 genome index\nrsync -av \"${genome_index_dir}\"/${genome_index_name}*.ht2 .\n\n# Generate checksum of GFF file for backtracking to original\n# Original named: Olurida_v081_genome_snap02.all.renamed.putative_function.domain_added.gff\n# Created in 20190709 Olurida_v081 annotation - renamed to avoid filename clashes with previous annotations.\nmd5sum \"${genome_gff}\" > genome_gff.md5\n\n# Create array of fastq R1 files\nfor fastq in \"${fastq_dir}\"*R1*.gz\ndo\n  fastq_array_R1+=(\"${fastq}\")\ndone\n\n# Create array of fastq R2 files\nfor fastq in \"${fastq_dir}\"*R2*.gz\ndo\n  fastq_array_R2+=(\"${fastq}\")\ndone\n\n# Create array of sample names\n## Uses parameter substitution to strip leading path from filename\n## Uses awk to parse out sample name from filename\nfor R1_fastq in \"${fastq_dir}\"*R1*.gz\ndo\n  names_array+=($(echo \"${R1_fastq#${fastq_dir}}\" | awk -F\"[_.]\" '{print $1 \"_\" $5}'))\ndone\n\n# Create list of fastq files used in analysis\n## Uses parameter substitution to strip leading path from filename\nfor fastq in \"${fastq_dir}\"*.gz\ndo\n  echo \"${fastq#${fastq_dir}}\" >> fastq.list.txt\ndone\n\n# Hisat2 alignments\nfor index in \"${!fastq_array_R1[@]}\"\ndo\n  sample_name=$(echo \"${names_array[index]}\")\n  \"${hisat2}\" \\\n  -x \"${genome_index_name}\" \\\n  --downstream-transcriptome-assembly \\\n  -1 \"${fastq_array_R1[index]}\" \\\n  -2 \"${fastq_array_R2[index]}\" \\\n  -S \"${sample_name}\".sam \\\n  2> \"${sample_name}\"_hisat2.err\n\n# Sort SAM files, convert to BAM, and index\n  \"${samtools}\" view \\\n  -@ \"${threads}\" \\\n  -Su \"${sample_name}\".sam \\\n  | \"${samtools}\" sort - \\\n  -@ \"${threads}\" \\\n  -o \"${sample_name}\".sorted.bam\n  \"${samtools}\" index \"${sample_name}\".sorted.bam\n\n# Run stringtie on alignments\n  \"${stringtie}\" \"${sample_name}\".sorted.bam \\\n  -p \"${threads}\" \\\n  -o \"${sample_name}\".gtf \\\n  -G \"${genome_gff}\" \\\n  -C \"${sample_name}.cov_refs.gtf\"\n\n# Add GTFs to list file\n  echo \"${sample_name}.gtf\" >> \"${gtf_list}\"\ndone\n\n# Create singular transcript file, using GTF list file\n\"${stringtie}\" --merge \\\n\"${gtf_list}\" \\\n-p \"${threads}\" \\\n-G \"${genome_gff}\" \\\n-o \"${genome_index_name}\".stringtie.gtf\n\n# Delete unneccessary index files\nrm \"${genome_index_name}\"*.ht2\n\n# Delete unneded SAM files\nrm ./*.sam\n```\n\n---\n\n# RESULTS\n\nThis took ~24hrs to run:\n\n![Screencap of Mox Stringtie runtime](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20190716_stringtie_olur_v081_runtime.png?raw=true)\n\nOutput folder:\n\n- [20190716_stringtie_20190709-olur-v081/](https://gannet.fish.washington.edu/Atumefaciens/20190716_stringtie_20190709-olur-v081/)\n\nMerged GTF:\n\n- [20190716_stringtie_20190709-olur-v081/20190709-Olurida_v081.stringtie.gtf](https://gannet.fish.washington.edu/Atumefaciens/20190716_stringtie_20190709-olur-v081/20190709-Olurida_v081.stringtie.gtf)\n\nAlthough I won't link them here, each input FastQ pair has a corresponding alignment file (BAM), coverage file (`.cov_refs.gtf`), Hisat2 alignment stats file (`_hisat2.err`), and GTF.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"Genome Annotation - O.lurida 20190709-v081 Transcript Isoform ID with Stringtie on Mox","date":"2019-07-16 15:07","tags":["Ostrea lurida","Olympia oyster","mox","stringtie","gtf","20190709-v081","annotation","isoforms"],"categories":["2019","Olympia Oyster Genome Sequencing"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}