{"title":"Genome Annotation - O.lurida (v081) Hisat2 Transcript Isoforms Index","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"Genome Annotation - O.lurida (v081) Hisat2 Transcript Isoforms Index","date":"2019-06-25 08:01","tags":["Ostrea lurida","Olympia oyster","v081","Olurida_v081","hisat2","GTF","annotation"],"categories":["2019","Olympia Oyster Genome Sequencing"]},"headingText":"Job Name","containsRefs":false,"markdown":"\nPer [this thread in Slack](https://genefish.slack.com/archives/GHB1LCNRW/p1560979157005300?thread_ts=1560978863.004100&cid=GHB1LCNRW), we realized that the [\"final\" annotation of the Olurida_v081 genome](https://robertslab.github.io/sams-notebook/posts/2019/2019-01-09-Annotation---Olurida_v081-MAKER-Functional-Annotations-on-Mox/) only seemed to have singular mRNA annotations and no apparent isoforms. As such, I decided to see if I could tease out this type of info.\n\nI decided to use [Stringtie](https://ccb.jhu.edu/software/stringtie/index.shtml), as it seemed robust and relatively straightforward. Plus, it had a decent user guide explaining how to tackle this exact problem.\n\nHowever, before being able to start in with Stringtie, a couple of things needed to be done first to prepare files for use with Stringtie:\n\n1. Create GTF file (basically a GFF specifically for use with transcripts - thus the \"T\" in GTF) from input GFF file. Done with [GFF utilities software](http://ccb.jhu.edu/software/stringtie/gff.shtml).\n\n2. Identify splice sites and exons in newly-created GTF. Done with [Hisat2](https://ccb.jhu.edu/software/hisat2/manual.shtml) software.\n\n2. Create a Hisat2 reference index that utilizes the GTF. Done with [Hisat2](https://ccb.jhu.edu/software/hisat2/manual.shtml) software.\n\n\nThis was run on Mox. The SBATCH script has a bunch of leftover extraneous steps that aren't relevant to this step of the annotation process; specifically the FastQ manipulation steps. Originally, I had a large script running both this and the subsequent Stringtie process. However, I was having issues with Stringtie and it made more sense to have these GTF/indexing steps as a separate script, so I chopped off the Stringtie stuff and neglected to remove the FastQ stuff. I didn't want to edit the script after I actually ran it, so have left it in here.\n\nSBATCH script (GitHub):\n\n- [20190625_hisat2-build_oly_v081.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20190625_hisat2-build_oly_v081.sh)\n\n```shell\n#!/bin/bash\n#SBATCH --job-name=oly_hisat2\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=25-00:00:00\n## Memory per node\n#SBATCH --mem=500G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --workdir=/gscratch/scrubbed/samwhite/outputs/20190625_hisat2-build_oly_v081\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n# Document programs in PATH (primarily for program version ID)\n\ndate >> system_path.log\necho \"\" >> system_path.log\necho \"System PATH for $SLURM_JOB_ID\" >> system_path.log\necho \"\" >> system_path.log\nprintf \"%0.s-\" {1..10} >> system_path.log\necho \"${PATH}\" | tr : \\\\n >> system_path.log\n\n\nthreads=27\ngenome_index_name=\"Olurida_v081\"\n\n# Paths to programs\ngffread=\"/gscratch/srlab/programs/gffread-0.11.4.Linux_x86_64/gffread\"\nhisat2_dir=\"/gscratch/srlab/programs/hisat2-2.1.0\"\nhisat2_build=\"${hisat2_dir}/hisat2-build\"\nhisat2_exons=\"${hisat2_dir}/hisat2_extract_exons.py\"\nhisat2_splice_sites=\"${hisat2_dir}/hisat2_extract_splice_sites.py\"\n\n# Input/output files\ngenome_gff=\"/gscratch/srlab/sam/data/O_lurida/genomes/Olurida_v081/20181127_oly_genome_snap02.all.renamed.putative_function.domain_added.gff\"\nexons=\"hisat2_exons.tab\"\nfastq_dir=\"/gscratch/srlab/sam/data/O_lurida/RNAseq/\"\ngenome_fasta=\"/gscratch/srlab/sam/data/O_lurida/genomes/Olurida_v081/Olurida_v081.fa\"\nsplice_sites=\"hisat2_splice_sites.tab\"\ntranscripts_gtf=\"20190620_oly_genome_snap02.all.renamed.putative_function.domain_added.transcripts.gtf\"\n\n## Inititalize arrays\nfastq_array_R1=()\nfastq_array_R2=()\n\n# Create array of fastq R1 files\nfor fastq in ${fastq_dir}/*R1*.gz\ndo\n  fastq_array_R1+=(${fastq})\ndone\n\n# Create array of fastq R2 files\nfor fastq in ${fastq_dir}/*R2*.gz\ndo\n  fastq_array_R2+=(${fastq})\ndone\n\n# Create array of sample names\n## Uses parameter substitution to strip leading path from filename\n## Uses awk to parse out sample name from filename\nfor R1_fastq in ${fastq_dir}/*R1*.gz\ndo\n  names_array+=($(echo ${R1_fastq#${fastq_dir}} | awk -F\"[_.]\" '{print $1 \"_\" $5}'))\ndone\n\n# Create list of fastq files used in analysis\n## Uses parameter substitution to strip leading path from filename\nfor fastq in ${fastq_dir}*.gz\ndo\n  echo \"${fastq#${fastq_dir}}\" >> fastq.list.txt\ndone\n\n# Create transcipts GTF from genome FastA\n\"${gffread}\" -T \\\n\"${genome_gff}\" \\\n-o \"${transcripts_gtf}\"\n\n# Create Hisat2 exons tab file\n\"${hisat2_exons}\" \\\n\"${transcripts_gtf}\" \\\n> \"${exons}\"\n# Create Hisate2 splice sites tab file\n\"${hisat2_splice_sites}\" \\\n\"${transcripts_gtf}\" \\\n> \"${splice_sites}\"\n\n# Build Hisat2 reference index using splice sites and exons\n\"${hisat2_build}\" \\\n\"${genome_fasta}\" \\\n\"${genome_index_name}\" \\\n--exon \"${exons}\" \\\n--ss \"${splice_sites}\" \\\n-p \"${threads}\" \\\n2> hisat2_build.err\n```\n\n---\n\n# RESULTS\n\nOutput folder:\n\n- [20190625_hisat2-build_oly_v081/](https://gannet.fish.washington.edu/Atumefaciens/20190625_hisat2-build_oly_v081/)\n\nThe Hisat2 index files are: `*.ht2`. These will be used with Stringtie for transcript isoform annotation.\n","srcMarkdownNoYaml":"\nPer [this thread in Slack](https://genefish.slack.com/archives/GHB1LCNRW/p1560979157005300?thread_ts=1560978863.004100&cid=GHB1LCNRW), we realized that the [\"final\" annotation of the Olurida_v081 genome](https://robertslab.github.io/sams-notebook/posts/2019/2019-01-09-Annotation---Olurida_v081-MAKER-Functional-Annotations-on-Mox/) only seemed to have singular mRNA annotations and no apparent isoforms. As such, I decided to see if I could tease out this type of info.\n\nI decided to use [Stringtie](https://ccb.jhu.edu/software/stringtie/index.shtml), as it seemed robust and relatively straightforward. Plus, it had a decent user guide explaining how to tackle this exact problem.\n\nHowever, before being able to start in with Stringtie, a couple of things needed to be done first to prepare files for use with Stringtie:\n\n1. Create GTF file (basically a GFF specifically for use with transcripts - thus the \"T\" in GTF) from input GFF file. Done with [GFF utilities software](http://ccb.jhu.edu/software/stringtie/gff.shtml).\n\n2. Identify splice sites and exons in newly-created GTF. Done with [Hisat2](https://ccb.jhu.edu/software/hisat2/manual.shtml) software.\n\n2. Create a Hisat2 reference index that utilizes the GTF. Done with [Hisat2](https://ccb.jhu.edu/software/hisat2/manual.shtml) software.\n\n\nThis was run on Mox. The SBATCH script has a bunch of leftover extraneous steps that aren't relevant to this step of the annotation process; specifically the FastQ manipulation steps. Originally, I had a large script running both this and the subsequent Stringtie process. However, I was having issues with Stringtie and it made more sense to have these GTF/indexing steps as a separate script, so I chopped off the Stringtie stuff and neglected to remove the FastQ stuff. I didn't want to edit the script after I actually ran it, so have left it in here.\n\nSBATCH script (GitHub):\n\n- [20190625_hisat2-build_oly_v081.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20190625_hisat2-build_oly_v081.sh)\n\n```shell\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=oly_hisat2\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=25-00:00:00\n## Memory per node\n#SBATCH --mem=500G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --workdir=/gscratch/scrubbed/samwhite/outputs/20190625_hisat2-build_oly_v081\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n# Document programs in PATH (primarily for program version ID)\n\ndate >> system_path.log\necho \"\" >> system_path.log\necho \"System PATH for $SLURM_JOB_ID\" >> system_path.log\necho \"\" >> system_path.log\nprintf \"%0.s-\" {1..10} >> system_path.log\necho \"${PATH}\" | tr : \\\\n >> system_path.log\n\n\nthreads=27\ngenome_index_name=\"Olurida_v081\"\n\n# Paths to programs\ngffread=\"/gscratch/srlab/programs/gffread-0.11.4.Linux_x86_64/gffread\"\nhisat2_dir=\"/gscratch/srlab/programs/hisat2-2.1.0\"\nhisat2_build=\"${hisat2_dir}/hisat2-build\"\nhisat2_exons=\"${hisat2_dir}/hisat2_extract_exons.py\"\nhisat2_splice_sites=\"${hisat2_dir}/hisat2_extract_splice_sites.py\"\n\n# Input/output files\ngenome_gff=\"/gscratch/srlab/sam/data/O_lurida/genomes/Olurida_v081/20181127_oly_genome_snap02.all.renamed.putative_function.domain_added.gff\"\nexons=\"hisat2_exons.tab\"\nfastq_dir=\"/gscratch/srlab/sam/data/O_lurida/RNAseq/\"\ngenome_fasta=\"/gscratch/srlab/sam/data/O_lurida/genomes/Olurida_v081/Olurida_v081.fa\"\nsplice_sites=\"hisat2_splice_sites.tab\"\ntranscripts_gtf=\"20190620_oly_genome_snap02.all.renamed.putative_function.domain_added.transcripts.gtf\"\n\n## Inititalize arrays\nfastq_array_R1=()\nfastq_array_R2=()\n\n# Create array of fastq R1 files\nfor fastq in ${fastq_dir}/*R1*.gz\ndo\n  fastq_array_R1+=(${fastq})\ndone\n\n# Create array of fastq R2 files\nfor fastq in ${fastq_dir}/*R2*.gz\ndo\n  fastq_array_R2+=(${fastq})\ndone\n\n# Create array of sample names\n## Uses parameter substitution to strip leading path from filename\n## Uses awk to parse out sample name from filename\nfor R1_fastq in ${fastq_dir}/*R1*.gz\ndo\n  names_array+=($(echo ${R1_fastq#${fastq_dir}} | awk -F\"[_.]\" '{print $1 \"_\" $5}'))\ndone\n\n# Create list of fastq files used in analysis\n## Uses parameter substitution to strip leading path from filename\nfor fastq in ${fastq_dir}*.gz\ndo\n  echo \"${fastq#${fastq_dir}}\" >> fastq.list.txt\ndone\n\n# Create transcipts GTF from genome FastA\n\"${gffread}\" -T \\\n\"${genome_gff}\" \\\n-o \"${transcripts_gtf}\"\n\n# Create Hisat2 exons tab file\n\"${hisat2_exons}\" \\\n\"${transcripts_gtf}\" \\\n> \"${exons}\"\n# Create Hisate2 splice sites tab file\n\"${hisat2_splice_sites}\" \\\n\"${transcripts_gtf}\" \\\n> \"${splice_sites}\"\n\n# Build Hisat2 reference index using splice sites and exons\n\"${hisat2_build}\" \\\n\"${genome_fasta}\" \\\n\"${genome_index_name}\" \\\n--exon \"${exons}\" \\\n--ss \"${splice_sites}\" \\\n-p \"${threads}\" \\\n2> hisat2_build.err\n```\n\n---\n\n# RESULTS\n\nOutput folder:\n\n- [20190625_hisat2-build_oly_v081/](https://gannet.fish.washington.edu/Atumefaciens/20190625_hisat2-build_oly_v081/)\n\nThe Hisat2 index files are: `*.ht2`. These will be used with Stringtie for transcript isoform annotation.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"Genome Annotation - O.lurida (v081) Hisat2 Transcript Isoforms Index","date":"2019-06-25 08:01","tags":["Ostrea lurida","Olympia oyster","v081","Olurida_v081","hisat2","GTF","annotation"],"categories":["2019","Olympia Oyster Genome Sequencing"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}