{"title":"Genome Annotation - Pgenerosa_v074 Transcript Isoform ID with Stringtie on Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"Genome Annotation - Pgenerosa_v074 Transcript Isoform ID with Stringtie on Mox","date":"2019-07-23 14:58","tags":["mox/stringtie","gtf","Pgenerosa_v074","v074","Panopea generosa","geoduck"],"categories":["2019","Geoduck Genome Sequencing"]},"headingText":"Job Name","containsRefs":false,"markdown":"\nAfter annotating Pgenerosa_v070 and [comparing feature counts](https://robertslab.github.io/sams-notebook/posts/2019/2019-07-22-Genome-Annotation-Pgenerosa_v070-and-v074-Top-18-Scaffolds-Feature-Count-Comparisons/), there was a drastic difference between the two genome versions. Additionally, both of those genomes ended up with no CDS/exon/gene/mRNA features identified in the largest scaffold. So, to explore this further by seeing where (if??) sequencing reads map to the scaffold, and to obtain transcript isoforms for the genome, I ran Stringtie. A [Hisat2 index was prepared earlier](https://robertslab.github.io/sams-notebook/2019/07/23/Genome-Annotation-Pgenerosa_v074-Hisat2-Transcript-Isoform-Index/).\n\nHere's the quick rundown of how transcript isoform annotation with Stringtie runs:\n\n1. Use Hisat2 reference index with identified splice sites and exons (this was done earlier).\n\n2. Use Hisat2 to create alignments from each pair of trimmed FastQ files. _Need to use the `--downstream-transcriptome-assembly` option!!!_\n\n3. Use Stringtie to create a GTF for each alignment.\n\n4. Use Stringtie to create a singular, merged GTF from all of the individual GTFs.\n\nThe trimmed FastQ files used were extracted from the following Trinity assemblies (links to notebooks):\n\n- [ctenidia (20190409)](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Ctenidia-with-HiSeq-and-NovaSeq-Data-on-Mox/)\n\n- [gonad (20190409)](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Gonad-HiSeq-and-NovaSeq-Data-on-Mox/)\n\n- [heart (20190215)](https://robertslab.github.io/sams-notebook/posts/2019/2019-02-15-Transcriptome-Assembly---Geoduck-Tissue-Specific-Assembly-Heart/)\n\n- [EPI99 (20190409)](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Larvae-Day5-EPI99-with-HiSeq-and-NovaSeq-Data-on-Mox/)\n\n- [EPI115 (20190409)](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Juvenile-Super-Low-OA-EPI115-with-HiSeq-Data-on-Mox/)\n\n- [EPI116 (20190409)](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Juvenile-Super-Low-OA-EPI116-with-HiSeq-Data-on-Mox/)\n\n- [EPI123 (20190409)](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Juvenile-Ambient-OA-EPI123-with-HiSeq-Data-on-Mox/)\n\n- [EPI124 (20190409)](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Juvenile-Ambient-OA-EPI124-with-HiSeq-and-NovaSeq-Data-on-Mox/)\n\nSee the [fastq.list.txt](https://gannet.fish.washington.edu/Atumefaciens/20190723_stringtie_pgen_v070/fastq.list.txt) for the list of FastQ files used as input. Also, see the [Nightingales Google Sheet](http://b.link/nightingales) for more details on sequencing files.\nNOTE: The \"P\" in the `*.P.qtrim.gz` represents trimmed reads that are properly paired, as determined by Trimmomatic/Trinity.\n\n\nThis was run on Mox.\n\nSBATCH script (GitHub):\n\n- [20190723_stringtie_pgen_v074.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20190723_stringtie_pgen_v074.sh)\n\n```shell\n#!/bin/bash\n#SBATCH --job-name=pgen_v074_stringtie\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=25-00:00:00\n## Memory per node\n#SBATCH --mem=500G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --workdir=/gscratch/scrubbed/samwhite/outputs/20190723_stringtie_pgen_v074\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n# Document programs in PATH (primarily for program version ID)\n\ndate >> system_path.log\necho \"\" >> system_path.log\necho \"System PATH for $SLURM_JOB_ID\" >> system_path.log\necho \"\" >> system_path.log\nprintf \"%0.s-\" {1..10} >> system_path.log\necho \"${PATH}\" | tr : \\\\n >> system_path.log\n\n\nthreads=28\ngenome_index_name=\"Pgenerosa_v074\"\n\n# Paths to programs\nhisat2_dir=\"/gscratch/srlab/programs/hisat2-2.1.0\"\nhisat2=\"${hisat2_dir}/hisat2\"\nsamtools=\"/gscratch/srlab/programs/samtools-1.9/samtools\"\nstringtie=\"/gscratch/srlab/programs/stringtie-1.3.6.Linux_x86_64/stringtie\"\n\n# Input/output files\ngenome_gff=\"/gscratch/srlab/sam/data/P_generosa/genomes/Pgenerosa_v074_genome_snap02.all.renamed.putative_function.domain_added.gff\"\ngenome_index_dir=\"/gscratch/srlab/sam/data/P_generosa/genomes\"\nfastq_dir=\"/gscratch/scrubbed/samwhite/data/P_generosa/RNAseq/\"\ngtf_list=\"gtf_list.txt\"\n\n## Inititalize arrays\nfastq_array_R1=()\nfastq_array_R2=()\nnames_array=()\n\n# Copy Hisat2 genome index\nrsync -av \"${genome_index_dir}\"/Pgenerosa_v074*.ht2 .\n\n# Create array of fastq R1 files\nfor fastq in \"${fastq_dir}\"*R1*.gz\ndo\n  fastq_array_R1+=(\"${fastq}\")\ndone\n\n# Create array of fastq R2 files\nfor fastq in \"${fastq_dir}\"*R2*.gz\ndo\n  fastq_array_R2+=(\"${fastq}\")\ndone\n\n# Create array of sample names\n## Uses parameter substitution to strip leading path from filename\n## Uses awk to parse out sample name from filename\nfor R1_fastq in \"${fastq_dir}\"*R1*.gz\ndo\n  names_array+=($(echo \"${R1_fastq#${fastq_dir}}\" | awk -F\"_\" '{print $1}'))\ndone\n\n# Create list of fastq files used in analysis\n## Uses parameter substitution to strip leading path from filename\nfor fastq in \"${fastq_dir}\"*.gz\ndo\n  echo \"${fastq#${fastq_dir}}\" >> fastq.list.txt\ndone\n\n# Hisat2 alignments\nfor index in \"${!fastq_array_R1[@]}\"\ndo\n  sample_name=$(echo \"${names_array[index]}\")\n  \"${hisat2}\" \\\n  -x \"${genome_index_name}\" \\\n  --downstream-transcriptome-assembly \\\n  -1 \"${fastq_array_R1[index]}\" \\\n  -2 \"${fastq_array_R2[index]}\" \\\n  -S \"${sample_name}\".sam \\\n  2> \"${sample_name}\"_hisat2.err\n\n# Sort SAM files, convert to BAM, and index\n  \"${samtools}\" view \\\n  -@ \"${threads}\" \\\n  -Su \"${sample_name}\".sam \\\n  | \"${samtools}\" sort - \\\n  -@ \"${threads}\" \\\n  -o \"${sample_name}\".sorted.bam\n  \"${samtools}\" index \"${sample_name}\".sorted.bam\n\n# Run stringtie on alignments\n  \"${stringtie}\" \"${sample_name}\".sorted.bam \\\n  -p \"${threads}\" \\\n  -o \"${sample_name}\".gtf \\\n  -G \"${genome_gff}\" \\\n  -C \"${sample_name}.cov_refs.gtf\"\n\n# Add GTFs to list file, only if non-empty\n# Identifies GTF files that only have header\n  gtf_lines=$(wc -l < ${sample_name}.gtf )\n  if [ \"${gtf_lines}\" -gt 2 ]; then\n    echo \"${sample_name}.gtf\" >> \"${gtf_list}\"\n  fi\ndone\n\n# Create singular transcript file, using GTF list file\n\"${stringtie}\" --merge \\\n\"${gtf_list}\" \\\n-p \"${threads}\" \\\n-G \"${genome_gff}\" \\\n-o \"${genome_index_name}\".stringtie.gtf\n\n# Delete unneccessary index files\nrm \"${genome_index_name}\"*.ht2\n\n# Delete unneded SAM files\nrm ./*.sam\n```\n\n---\n\n# RESULTS\n\nThe process of getting this to run took longer than it should have. The job got interrupted by an unintended Mox shutdown and also failed a few times before I was able to figure out the problem. The failure was triggered by one sample that didn't end up having any transcripts present in the output GTF. When Stringtie encounters an empty GTF file, it not only spits out an error (indicating as such), but it also kills the program. I had to re-write part of the script to evaluate whether or not input GTFs for the Stringtie merge step had any content.\n\nOnce it was running with this change, and didn't get interrupted by Mox problems, it took ~ one day:\n\n![Screencap of Pgenerosa_v074 Stringtie runtime on Mox](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20190723_stringtie_pgen_v074_runtime.png?raw=true)\n\nOutput folder:\n\n- [20190723_stringtie_pgen_v074/](https://gannet.fish.washington.edu/Atumefaciens/20190723_stringtie_pgen_v074/)\n\nMerged GTF:\n\n- [20190723_stringtie_pgen_v074/Pgenerosa_v074.stringtie.gtf](https://gannet.fish.washington.edu/Atumefaciens/20190723_stringtie_pgen_v074/Pgenerosa_v074.stringtie.gtf)\n\nAlthough I won't link them here, each input FastQ pair has a corresponding alignment file (BAM), coverage file (`.cov_refs.gtf`), Hisat2 alignment stats file (`_hisat2.err`), and GTF.\n\nAdditionally, I'm not going to delve too much into the analysis of this. I'll write a separate notebook post that goes into more depth on how this data looks, how it compares to the Pgenerosa_v074 Stringtie data, and what this means for the annotation of Scaffold 1...\n\n\n#### UPDATE 20190829\n\nCreated a massive, merged BAM file for use with GenSAS for further annotation of the Pgenerosa_v074 assembly. Ran the following commands to create merged BAM file and corresponding index file:\n\n```shell\nsamtools merge 20190723_sorted.merged.bam *.bam\nsamtools index 20190723_sorted.merged.bam\n```\n","srcMarkdownNoYaml":"\nAfter annotating Pgenerosa_v070 and [comparing feature counts](https://robertslab.github.io/sams-notebook/posts/2019/2019-07-22-Genome-Annotation-Pgenerosa_v070-and-v074-Top-18-Scaffolds-Feature-Count-Comparisons/), there was a drastic difference between the two genome versions. Additionally, both of those genomes ended up with no CDS/exon/gene/mRNA features identified in the largest scaffold. So, to explore this further by seeing where (if??) sequencing reads map to the scaffold, and to obtain transcript isoforms for the genome, I ran Stringtie. A [Hisat2 index was prepared earlier](https://robertslab.github.io/sams-notebook/2019/07/23/Genome-Annotation-Pgenerosa_v074-Hisat2-Transcript-Isoform-Index/).\n\nHere's the quick rundown of how transcript isoform annotation with Stringtie runs:\n\n1. Use Hisat2 reference index with identified splice sites and exons (this was done earlier).\n\n2. Use Hisat2 to create alignments from each pair of trimmed FastQ files. _Need to use the `--downstream-transcriptome-assembly` option!!!_\n\n3. Use Stringtie to create a GTF for each alignment.\n\n4. Use Stringtie to create a singular, merged GTF from all of the individual GTFs.\n\nThe trimmed FastQ files used were extracted from the following Trinity assemblies (links to notebooks):\n\n- [ctenidia (20190409)](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Ctenidia-with-HiSeq-and-NovaSeq-Data-on-Mox/)\n\n- [gonad (20190409)](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Gonad-HiSeq-and-NovaSeq-Data-on-Mox/)\n\n- [heart (20190215)](https://robertslab.github.io/sams-notebook/posts/2019/2019-02-15-Transcriptome-Assembly---Geoduck-Tissue-Specific-Assembly-Heart/)\n\n- [EPI99 (20190409)](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Larvae-Day5-EPI99-with-HiSeq-and-NovaSeq-Data-on-Mox/)\n\n- [EPI115 (20190409)](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Juvenile-Super-Low-OA-EPI115-with-HiSeq-Data-on-Mox/)\n\n- [EPI116 (20190409)](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Juvenile-Super-Low-OA-EPI116-with-HiSeq-Data-on-Mox/)\n\n- [EPI123 (20190409)](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Juvenile-Ambient-OA-EPI123-with-HiSeq-Data-on-Mox/)\n\n- [EPI124 (20190409)](https://robertslab.github.io/sams-notebook/posts/2019/2019-04-09-Transcriptome-Assembly---Geoduck-Tissue-specific-Assembly-Juvenile-Ambient-OA-EPI124-with-HiSeq-and-NovaSeq-Data-on-Mox/)\n\nSee the [fastq.list.txt](https://gannet.fish.washington.edu/Atumefaciens/20190723_stringtie_pgen_v070/fastq.list.txt) for the list of FastQ files used as input. Also, see the [Nightingales Google Sheet](http://b.link/nightingales) for more details on sequencing files.\nNOTE: The \"P\" in the `*.P.qtrim.gz` represents trimmed reads that are properly paired, as determined by Trimmomatic/Trinity.\n\n\nThis was run on Mox.\n\nSBATCH script (GitHub):\n\n- [20190723_stringtie_pgen_v074.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20190723_stringtie_pgen_v074.sh)\n\n```shell\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=pgen_v074_stringtie\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=25-00:00:00\n## Memory per node\n#SBATCH --mem=500G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --workdir=/gscratch/scrubbed/samwhite/outputs/20190723_stringtie_pgen_v074\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n# Document programs in PATH (primarily for program version ID)\n\ndate >> system_path.log\necho \"\" >> system_path.log\necho \"System PATH for $SLURM_JOB_ID\" >> system_path.log\necho \"\" >> system_path.log\nprintf \"%0.s-\" {1..10} >> system_path.log\necho \"${PATH}\" | tr : \\\\n >> system_path.log\n\n\nthreads=28\ngenome_index_name=\"Pgenerosa_v074\"\n\n# Paths to programs\nhisat2_dir=\"/gscratch/srlab/programs/hisat2-2.1.0\"\nhisat2=\"${hisat2_dir}/hisat2\"\nsamtools=\"/gscratch/srlab/programs/samtools-1.9/samtools\"\nstringtie=\"/gscratch/srlab/programs/stringtie-1.3.6.Linux_x86_64/stringtie\"\n\n# Input/output files\ngenome_gff=\"/gscratch/srlab/sam/data/P_generosa/genomes/Pgenerosa_v074_genome_snap02.all.renamed.putative_function.domain_added.gff\"\ngenome_index_dir=\"/gscratch/srlab/sam/data/P_generosa/genomes\"\nfastq_dir=\"/gscratch/scrubbed/samwhite/data/P_generosa/RNAseq/\"\ngtf_list=\"gtf_list.txt\"\n\n## Inititalize arrays\nfastq_array_R1=()\nfastq_array_R2=()\nnames_array=()\n\n# Copy Hisat2 genome index\nrsync -av \"${genome_index_dir}\"/Pgenerosa_v074*.ht2 .\n\n# Create array of fastq R1 files\nfor fastq in \"${fastq_dir}\"*R1*.gz\ndo\n  fastq_array_R1+=(\"${fastq}\")\ndone\n\n# Create array of fastq R2 files\nfor fastq in \"${fastq_dir}\"*R2*.gz\ndo\n  fastq_array_R2+=(\"${fastq}\")\ndone\n\n# Create array of sample names\n## Uses parameter substitution to strip leading path from filename\n## Uses awk to parse out sample name from filename\nfor R1_fastq in \"${fastq_dir}\"*R1*.gz\ndo\n  names_array+=($(echo \"${R1_fastq#${fastq_dir}}\" | awk -F\"_\" '{print $1}'))\ndone\n\n# Create list of fastq files used in analysis\n## Uses parameter substitution to strip leading path from filename\nfor fastq in \"${fastq_dir}\"*.gz\ndo\n  echo \"${fastq#${fastq_dir}}\" >> fastq.list.txt\ndone\n\n# Hisat2 alignments\nfor index in \"${!fastq_array_R1[@]}\"\ndo\n  sample_name=$(echo \"${names_array[index]}\")\n  \"${hisat2}\" \\\n  -x \"${genome_index_name}\" \\\n  --downstream-transcriptome-assembly \\\n  -1 \"${fastq_array_R1[index]}\" \\\n  -2 \"${fastq_array_R2[index]}\" \\\n  -S \"${sample_name}\".sam \\\n  2> \"${sample_name}\"_hisat2.err\n\n# Sort SAM files, convert to BAM, and index\n  \"${samtools}\" view \\\n  -@ \"${threads}\" \\\n  -Su \"${sample_name}\".sam \\\n  | \"${samtools}\" sort - \\\n  -@ \"${threads}\" \\\n  -o \"${sample_name}\".sorted.bam\n  \"${samtools}\" index \"${sample_name}\".sorted.bam\n\n# Run stringtie on alignments\n  \"${stringtie}\" \"${sample_name}\".sorted.bam \\\n  -p \"${threads}\" \\\n  -o \"${sample_name}\".gtf \\\n  -G \"${genome_gff}\" \\\n  -C \"${sample_name}.cov_refs.gtf\"\n\n# Add GTFs to list file, only if non-empty\n# Identifies GTF files that only have header\n  gtf_lines=$(wc -l < ${sample_name}.gtf )\n  if [ \"${gtf_lines}\" -gt 2 ]; then\n    echo \"${sample_name}.gtf\" >> \"${gtf_list}\"\n  fi\ndone\n\n# Create singular transcript file, using GTF list file\n\"${stringtie}\" --merge \\\n\"${gtf_list}\" \\\n-p \"${threads}\" \\\n-G \"${genome_gff}\" \\\n-o \"${genome_index_name}\".stringtie.gtf\n\n# Delete unneccessary index files\nrm \"${genome_index_name}\"*.ht2\n\n# Delete unneded SAM files\nrm ./*.sam\n```\n\n---\n\n# RESULTS\n\nThe process of getting this to run took longer than it should have. The job got interrupted by an unintended Mox shutdown and also failed a few times before I was able to figure out the problem. The failure was triggered by one sample that didn't end up having any transcripts present in the output GTF. When Stringtie encounters an empty GTF file, it not only spits out an error (indicating as such), but it also kills the program. I had to re-write part of the script to evaluate whether or not input GTFs for the Stringtie merge step had any content.\n\nOnce it was running with this change, and didn't get interrupted by Mox problems, it took ~ one day:\n\n![Screencap of Pgenerosa_v074 Stringtie runtime on Mox](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20190723_stringtie_pgen_v074_runtime.png?raw=true)\n\nOutput folder:\n\n- [20190723_stringtie_pgen_v074/](https://gannet.fish.washington.edu/Atumefaciens/20190723_stringtie_pgen_v074/)\n\nMerged GTF:\n\n- [20190723_stringtie_pgen_v074/Pgenerosa_v074.stringtie.gtf](https://gannet.fish.washington.edu/Atumefaciens/20190723_stringtie_pgen_v074/Pgenerosa_v074.stringtie.gtf)\n\nAlthough I won't link them here, each input FastQ pair has a corresponding alignment file (BAM), coverage file (`.cov_refs.gtf`), Hisat2 alignment stats file (`_hisat2.err`), and GTF.\n\nAdditionally, I'm not going to delve too much into the analysis of this. I'll write a separate notebook post that goes into more depth on how this data looks, how it compares to the Pgenerosa_v074 Stringtie data, and what this means for the annotation of Scaffold 1...\n\n\n#### UPDATE 20190829\n\nCreated a massive, merged BAM file for use with GenSAS for further annotation of the Pgenerosa_v074 assembly. Ran the following commands to create merged BAM file and corresponding index file:\n\n```shell\nsamtools merge 20190723_sorted.merged.bam *.bam\nsamtools index 20190723_sorted.merged.bam\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"Genome Annotation - Pgenerosa_v074 Transcript Isoform ID with Stringtie on Mox","date":"2019-07-23 14:58","tags":["mox/stringtie","gtf","Pgenerosa_v074","v074","Panopea generosa","geoduck"],"categories":["2019","Geoduck Genome Sequencing"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}