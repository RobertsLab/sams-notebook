{"title":"Annotation - Geoduck Genome with MAKER Submitted to Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"Annotation - Geoduck Genome with MAKER Submitted to Mox","date":"2019-01-15 07:11","tags":["geoduck","Panopea generosa","mox","MAKER"],"categories":["2019","Geoduck Genome Sequencing"]},"containsRefs":false,"markdown":"\nWell, here we go! Initiating full-blown annotation of the [Pgenerosa_v070](http://owl.fish.washington.edu/halfshell/genomic-databank/Pgenerosa_v070.fa) (FastA; 2.1GB), using [MAKER (v.2.31.10)](http://gmod.org/wiki/MAKER) on Mox. This will perform the following:\n\n- one round of MAKER gene model predictions\n- two rounds of SNAP gene model training/predictions\n- renaming of gene models to NCBI-standardized convention\n- functional characterization of protein models (via BLASTp)\n- functional characterization of protein domains (via InterProScan5)\n\nI've submitted the job to Mox and now we wait. When I last [ran this process on the Olympia oyster genome](https://robertslab.github.io/sams-notebook/posts/2018/2018-11-27-Annotation---Olurida_v081-MAKER-on-Mox/), the job took about two weeks to complete. I've made some changes that will allow it to run a bit faster (I think/hope) - primarily by using gene model GFFs for the SNAP gene model trainings, instead of relying on the FastA file file each time, since the FastA file needs to get BLASTed on each round and BLASTing is a time consuming process.\n\nTo finish off this post, I'll provide the SBATCH script used to submit this job to Mox. Be prepared, it's a doozy and it took me many hours to fully put this together (the script has >350 lines in it!). When the job summary is typed out like above, it seems so easy! Yeesh!\n\n\n    #!/bin/bash\n    ## Job Name\n    #SBATCH --job-name=maker\n    ## Allocation Definition\n    #SBATCH --account=srlab\n    #SBATCH --partition=srlab\n    ## Resources\n    ## Nodes\n    #SBATCH --nodes=2\n    ## Walltime (days-hours:minutes:seconds format)\n    #SBATCH --time=25-00:00:00\n    ## Memory per node\n    #SBATCH --mem=120G\n    ##turn on e-mail notification\n    #SBATCH --mail-type=ALL\n    #SBATCH --mail-user=samwhite@uw.edu\n    ## Specify the working directory for this job\n    #SBATCH --workdir=/gscratch/scrubbed/samwhite/outputs/20190115_geoduck_maker_genome_annotation    \n\n    # Load Python Mox module for Python module availability    \n\n    module load intel-python3_2017    \n\n    # Load Open MPI module for parallel, multi-node processing    \n\n    module load icc_19-ompi_3.1.2    \n\n    # SegFault fix?\n    export THREADS_DAEMON_MODEL=1    \n\n    # Document programs in PATH (primarily for program version ID)    \n\n    date >> system_path.log\n    echo \"\" >> system_path.log\n    echo \"System PATH for $SLURM_JOB_ID\" >> system_path.log\n    echo \"\" >> system_path.log\n    printf \"%0.s-\" {1..10} >> system_path.log\n    echo ${PATH} | tr : \\\\n >> system_path.log    \n\n    # Add BLAST to system PATH\n    export PATH=$PATH:/gscratch/srlab/programs/ncbi-blast-2.6.0+/bin\n    export BLASTDB=/gscratch/srlab/blastdbs/UniProtKB_20181008/    \n    \n\n    ## Establish variables for more readable code    \n\n    wd=$(pwd)\n    maker_dir=/gscratch/srlab/programs/maker-2.31.10/bin\n    snap_dir=/gscratch/srlab/programs/maker-2.31.10/exe/snap\n    ### Paths to Maker binaries    \n\n    maker=${maker_dir}/maker\n    gff3_merge=${maker_dir}/gff3_merge\n    maker2zff=${maker_dir}/maker2zff\n    fathom=${snap_dir}/fathom\n    forge=${snap_dir}/forge\n    hmmassembler=${snap_dir}/hmm-assembler.pl\n    fasta_merge=${maker_dir}/fasta_merge\n    map_ids=${maker_dir}/maker_map_ids\n    map_gff_ids=${maker_dir}/map_gff_ids\n    map_fasta_ids=${maker_dir}/map_fasta_ids\n    functional_fasta=${maker_dir}/maker_functional_fasta\n    functional_gff=${maker_dir}/maker_functional_gff\n    ipr_update_gff=${maker_dir}/ipr_update_gff\n    iprscan2gff3=${maker_dir}/iprscan2gff3    \n\n    blastp_dir=${wd}/blastp_annotation\n    maker_blastp=${wd}/blastp_annotation/20190108_blastp.outfmt6\n    maker_prot_fasta=${wd}/snap02/Pgenerosa_v70_snap02.all.maker.proteins.fasta\n    maker_prot_fasta_renamed=${wd}/snap02/Pgenerosa_v70_snap02.all.maker.proteins.renamed.fasta\n    maker_transcripts_fasta=${wd}/snap02/Pgenerosa_v70_snap02.all.maker.transcripts.fasta\n    maker_transcripts_fasta_renamed=${wd}/snap02/Pgenerosa_v70_snap02.all.maker.transcripts.renamed.fasta\n    snap02_est_gff=${wd}/snap02/Pgenerosa_v70_snap01.maker.all.noseqs.est2genome.gff\n    snap02_gff=${wd}/snap02/Pgenerosa_v70_snap02.all.gff\n    snap02_gff_renamed=${wd}/snap02/Pgenerosa_v70_snap02.all.renamed.gff\n    snap02_protein_gff=${wd}/snap02/Pgenerosa_v70_snap01.maker.all.noseqs.protein2genome.gff\n    snap02_rm_gff=${wd}/snap02/Pgenerosa_v70_snap01.maker.all.noseqs.repeats.gff\n    put_func_gff=Pgenerosa_v70_genome_snap02.all.renamed.putative_function.gff\n    put_func_prot=Pgenerosa_v70_genome_snap02.all.maker.proteins.renamed.putative_function.fasta\n    put_func_trans=Pgenerosa_v70_genome_snap02.all.maker.transcripts.renamed.putative_function.fasta\n    put_domain_gff=Pgenerosa_v70_genome_snap02.all.renamed.putative_function.domain_added.gff\n    ips_dir=${wd}/interproscan_annotation\n    ips_base=Pgenerosa_v70_maker_proteins_ips\n    ips_name=Pgenerosa_v70_maker_proteins_ips.tsv\n    id_map=${wd}/snap02/Pgenerosa_v70_genome.map\n    ips_domains=Pgenerosa_v70_genome_snap02.all.renamed.visible_ips_domains.gff    \n\n    ## Path to blastp\n    blastp=/gscratch/srlab/programs/ncbi-blast-2.6.0+/bin/blastp    \n\n    ## Path to InterProScan5\n    interproscan=/gscratch/srlab/programs/interproscan-5.31-70.0/interproscan.sh    \n\n    ## Store path to options control file\n    maker_opts_file=./maker_opts.ctl    \n\n    ### Path to genome FastA file\n    genome=/gscratch/srlab/sam/data/P_generosa/generosa_genomes/Pgenerosa_v070.fa    \n\n    ### Path to transcriptome FastA file\n    transcriptome=/gscratch/srlab/sam/data/P_generosa/generosa_transcriptomes/20180827_trinity_geoduck.fasta    \n\n    ### Path to Crassotrea gigas NCBI protein FastA\n    gigas_proteome=/gscratch/srlab/sam/data/C_gigas/gigas_ncbi_protein/GCA_000297895.1_oyster_v9_protein.faa    \n\n    ### Path to Crassostrea virginica NCBI protein FastA\n    virginica_proteome=/gscratch/srlab/sam/data/C_virginica/virginica_ncbi_protein/GCF_002022765.2_C_virginica-3.0_protein.faa    \n\n    ### Path to Panopea generosa TransDecoder protein FastA\n    panopea_td_proteome=/gscratch/srlab/sam/data/P_generosa/generosa_proteomes/20180827_trinity_geoduck.fasta.transdecoder.pep    \n\n    ### Path to concatenated NCBI prteins FastA\n    combined_proteomes=${wd}/combined_proteomes.fasta    \n\n    ### Path to P.generosa-specific repeat library\n    repeat_library=/gscratch/srlab/sam/data/P_generosa/generosa_repeats/Pgenerosa_v070-families.fa    \n\n    ### Path to SwissProt database for BLASTp\n    sp_db_blastp=/gscratch/srlab/blastdbs/UniProtKB_20190109/uniprot_sprot.fasta    \n    \n\n    ## Make directories\n    mkdir blastp_annotation\n    mkdir interproscan_annotation    \n    \n\n    ## Create Maker control files needed for running Maker, only if it doesn't already exist and then edit it.\n    ### Edit options file\n    ### Set paths to P.generosa genome and transcriptome.\n    ### Set path to combined C. gigas, C.virginica, P.generosa proteomes.\n    ### The use of the % symbol sets the delimiter sed uses for arguments.\n    ### Normally, the delimiter that most examples use is a slash \"/\".\n    ### But, we need to expand the variables into a full path with slashes, which screws up sed.\n    ### Thus, the use of % symbol instead (it could be any character that is NOT present in the expanded variable; doesn't have to be \"%\").\n    if [ ! -e maker_opts.ctl ]; then\n      $maker -CTL\n      sed -i \"/^genome=/ s% %$genome %\" \"$maker_opts_file\"\n      sed -i \"/^est=/ s% %$transcriptome %\" \"$maker_opts_file\"\n      sed -i \"/^protein=/ s% %$combined_proteomes %\" \"$maker_opts_file\"\n      sed -i \"/^rmlib=/ s% %$repeat_library %\" \"$maker_opts_file\"\n      sed -i \"/^est2genome=0/ s/est2genome=0/est2genome=1/\" \"$maker_opts_file\"\n      sed -i \"/^protein2genome=0/ s/protein2genome=0/protein2genome=1/\" \"$maker_opts_file\"\n    fi    \n\n    ## Create combined proteome FastA file, only if it doesn't already exist.\n    if [ ! -e combined_proteomes.fasta ]; then\n        touch combined_proteomes.fasta\n        cat \"$gigas_proteome\" >> combined_proteomes.fasta\n        cat \"$virginica_proteome\" >> combined_proteomes.fasta\n        cat \"$panopea_td_proteome\" >> combined_proteomes.fasta\n    fi    \n    \n    \n\n    ## Run Maker\n    ### Specify number of nodes to use.\n    mpiexec -n 56 $maker    \n\n    ## Merge gffs\n    ${gff3_merge} -d Pgenerosa_v70.maker.output/Pgenerosa_v70_master_datastore_index.log    \n\n    ## GFF with no FastA in footer\n    ${gff3_merge} -n -s -d Pgenerosa_v70.maker.output/Pgenerosa_v70_master_datastore_index.log > Pgenerosa_v70.maker.all.noseqs.gff    \n\n    ## Merge all FastAs\n    ${fasta_merge} -d Pgenerosa_v70.maker.output/Pgenerosa_v70_master_datastore_index.log    \n\n    ## Extract GFF alignments for use in subsequent MAKER rounds\n    ### Transcript alignments\n    awk '{ if ($2 == \"est2genome\") print $0 }' Pgenerosa_v70.maker.all.noseqs.gff > Pgenerosa_v70.maker.all.noseqs.est2genome.gff\n    ### Protein alignments\n    awk '{ if ($2 == \"protein2genome\") print $0 }' Pgenerosa_v70.maker.all.noseqs.gff > Pgenerosa_v70.maker.all.noseqs.protein2genome.gff\n    ### Repeat alignments\n    awk '{ if ($2 ~ \"repeat\") print $0 }' Pgenerosa_v70.maker.all.noseqs.gff > Pgenerosa_v70.maker.all.noseqs.repeats.gff    \n\n    ## Run SNAP training, round 1\n    mkdir snap01 && cd snap01\n    ${maker2zff} ../Pgenerosa_v70.all.gff\n    ${fathom} -categorize 1000 genome.ann genome.dna\n    ${fathom} -export 1000 -plus uni.ann uni.dna\n    ${forge} export.ann export.dna\n    ${hmmassembler} genome . > Pgenerosa_v70_snap01.hmm    \n\n    ## Initiate second Maker run.\n    ### Copy initial maker control files and\n    ### - change gene prediction settings to 0 (i.e. don't generate Maker gene predictions)\n    ### - use GFF subsets generated in first round of MAKER\n    ### - set location of snaphmm file to use for gene prediction\n    ### Percent symbols used below are the sed delimiters, instead of the default \"/\",\n    ### due to the need to use file paths.\n    if [ ! -e maker_opts.ctl ]; then\n      $maker -CTL\n      sed -i \"/^genome=/ s% %$genome %\" maker_opts.ctl\n      sed -i \"/^est2genome=1/ s/est2genome=1/est2genome=0/\" maker_opts.ctl\n      sed -i \"/^protein2genome=1/ s/protein2genome=1/protein2genome=0/\" maker_opts.ctl\n      sed -i \"/^est_gff=/ s% %../Pgenerosa_v70.maker.all.noseqs.est2genome.gff %\" maker_opts.ctl\n      sed -i \"/^protein_gff=/ s% %../Pgenerosa_v70.maker.all.noseqs.protein2genome.gff %\" maker_opts.ctl\n      sed -i \"/^rm_gff=/ s% %../Pgenerosa_v70.maker.all.noseqs.repeats.gff %\" maker_opts.ctl\n      sed -i \"/^snaphmm=/ s% %Pgenerosa_v70_snap01.hmm %\" maker_opts.ctl\n    fi    \n\n    ## Run Maker\n    ### Set basename of files and specify number of CPUs to use\n    mpiexec -n 56 $maker \\\n    -base Pgenerosa_v70_snap01    \n\n    ## Merge gffs\n    ${gff3_merge} -d Pgenerosa_v70_snap01.maker.output/Pgenerosa_v70_snap01_master_datastore_index.log    \n\n    ## GFF with no FastA in footer\n    ${gff3_merge} -n -s -d Pgenerosa_v70_snap01.maker.output/Pgenerosa_v70_snap01_master_datastore_index.log > Pgenerosa_v70_snap01.maker.all.noseqs.gff    \n\n    ## Extract GFF alignments for use in subsequent MAKER rounds\n    ### Transcript alignments\n    awk '{ if ($2 == \"est2genome\") print $0 }' Pgenerosa_v70_snap01.maker.all.noseqs.gff > Pgenerosa_v70_snap01.maker.all.noseqs.est2genome.gff\n    ### Protein alignments\n    awk '{ if ($2 == \"protein2genome\") print $0 }' Pgenerosa_v70_snap01.maker.all.noseqs.gff > Pgenerosa_v70_snap01.maker.all.noseqs.protein2genome.gff\n    ### Repeat alignments\n    awk '{ if ($2 ~ \"repeat\") print $0 }' Pgenerosa_v70_snap01.maker.all.noseqs.gff > Pgenerosa_v70_snap01.maker.all.noseqs.repeats.gff    \n\n    ## Run SNAP training, round 2\n    cd ..\n    mkdir snap02 && cd snap02\n    ${maker2zff} ../snap01/Pgenerosa_v70_snap01.all.gff\n    ${fathom} -categorize 1000 genome.ann genome.dna\n    ${fathom} -export 1000 -plus uni.ann uni.dna\n    ${forge} export.ann export.dna\n    ${hmmassembler} genome . > Pgenerosa_v70_snap02.hmm    \n\n    ## Initiate third and final Maker run.\n    ### Copy initial maker control files and:\n    ### - change gene prediction settings to 0 (i.e. don't generate Maker gene predictions)\n    ### - use GFF subsets generated in first round of SNAP\n    ### - set location of snaphmm file to use for gene prediction.\n    ### Percent symbols used below are the sed delimiters, instead of the default \"/\",\n    ### due to the need to use file paths.\n    if [ ! -e maker_opts.ctl ]; then\n      $maker -CTL\n      sed -i \"/^genome=/ s% %$genome %\" maker_opts.ctl\n      sed -i \"/^est2genome=1/ s/est2genome=1/est2genome=0/\" maker_opts.ctl\n      sed -i \"/^protein2genome=1/ s/protein2genome=1/protein2genome=0/\" maker_opts.ctl\n      sed -i \"/^est_gff=/ s% %${snap02_est_gff} %\" maker_opts.ctl\n      sed -i \"/^protein_gff=/ s% %${snap02_protein_gff} %\" maker_opts.ctl\n      sed -i \"/^rm_gff=/ s% %${snap02_rm_gff} %\" maker_opts.ctl\n      sed -i \"/^snaphmm=/ s% %Pgenerosa_v70_snap02.hmm %\" maker_opts.ctl\n    fi    \n\n    ## Run Maker\n    ### Set basename of files and specify number of CPUs to use\n    mpiexec -n 56 $maker \\\n    -base Pgenerosa_v70_snap02    \n\n    ## Merge gffs\n    ${gff3_merge} \\\n    -d Pgenerosa_v70_snap02.maker.output/Pgenerosa_v70_snap02_master_datastore_index.log    \n\n    ## GFF with no FastA in footer\n    ${gff3_merge} -n -s -d Pgenerosa_v70_snap02.maker.output/Pgenerosa_v70_snap02_master_datastore_index.log > Pgenerosa_v70_snap02.maker.all.noseqs.gff    \n\n    ## Merge FastAs\n    ${fasta_merge} \\\n    -d Pgenerosa_v70_snap02.maker.output/Pgenerosa_v70_snap02_master_datastore_index.log    \n\n    # Create copies of files for mapping\n    cp ${maker_prot_fasta} ${maker_prot_fasta_renamed}\n    cp ${maker_transcripts_fasta} ${maker_transcripts_fasta_renamed}\n    cp ${snap02_gff} ${snap02_gff_renamed}    \n\n    # Map IDs\n    ## Change gene names\n    ${maker_map_ids} \\\n    --prefix PGEN_ \\\n    --justify 8 \\\n    ${snap02_gff} \\\n    > ${id_map}    \n\n    ## Map GFF IDs\n    ${map_gff_ids} \\\n    ${id_map} \\\n    ${snap02_gff_renamed}    \n\n    ## Map FastAs\n    ### Proteins\n    ${map_fasta_ids} \\\n    ${id_map} \\\n    ${maker_prot_fasta_renamed}    \n\n    ### Transcripts\n    ${map_fasta_ids} \\\n    ${id_map} \\\n    ${maker_transcripts_fasta_renamed}    \n\n    # Run InterProScan 5\n    ## disable-precalc since this requires external database access (which Mox does not allow)\n    cd ${ips_dir}    \n\n    ${interproscan} \\\n    --input ${maker_prot_fasta_renamed} \\\n    --goterms \\\n    --output-file-base ${ips_base} \\\n    --disable-precalc    \n\n    # Run BLASTp\n    cd ${blastp_annotation}    \n\n    ${blastp} \\\n    -query ${maker_prot_fasta_renamed} \\\n    -db ${sp_db_blastp} \\\n    -out ${maker_blastp} \\\n    -max_target_seqs 1 \\\n    -evalue 1e-6 \\\n    -outfmt 6 \\\n    -num_threads 28    \n    \n\n    # Functional annotations    \n\n    cd ${wd}    \n\n    ## Add putative gene functions\n    ### GFF\n    ${functional_gff} \\\n    ${sp_db_annotations} \\\n    ${maker_blastp} \\\n    ${snap02_gff_renamed} \\\n    > ${put_func_gff}    \n\n    ### Proteins\n    ${maker_functional_fasta} \\\n    ${sp_db_annotations} \\\n    ${maker_blastp} \\\n    ${maker_prot_fasta_renamed} \\\n    > ${put_func_prot}    \n\n    ### Transcripts\n    ${maker_functional_fasta} \\\n    ${sp_db_annotations} \\\n    ${maker_blastp} \\\n    ${maker_transcripts_fasta_renamed} \\\n    > ${put_func_trans}    \n\n    ## Add InterProScan domain info\n    ### Add searchable tags\n    ${ipr_update_gff} \\\n    ${put_func_gff} \\\n    ${ips_dir}/${ips_name} \\\n    > ${put_domain_gff}    \n\n    ### Add viewable features for genome browsers (JBrowse, Gbrowse, Web Apollo)\n    ${iprscan2gff3} \\\n    ${ips_dir}/${ips_name} \\\n    ${snap02_gff_renamed} \\\n    > ${ips_domains}\n","srcMarkdownNoYaml":"\nWell, here we go! Initiating full-blown annotation of the [Pgenerosa_v070](http://owl.fish.washington.edu/halfshell/genomic-databank/Pgenerosa_v070.fa) (FastA; 2.1GB), using [MAKER (v.2.31.10)](http://gmod.org/wiki/MAKER) on Mox. This will perform the following:\n\n- one round of MAKER gene model predictions\n- two rounds of SNAP gene model training/predictions\n- renaming of gene models to NCBI-standardized convention\n- functional characterization of protein models (via BLASTp)\n- functional characterization of protein domains (via InterProScan5)\n\nI've submitted the job to Mox and now we wait. When I last [ran this process on the Olympia oyster genome](https://robertslab.github.io/sams-notebook/posts/2018/2018-11-27-Annotation---Olurida_v081-MAKER-on-Mox/), the job took about two weeks to complete. I've made some changes that will allow it to run a bit faster (I think/hope) - primarily by using gene model GFFs for the SNAP gene model trainings, instead of relying on the FastA file file each time, since the FastA file needs to get BLASTed on each round and BLASTing is a time consuming process.\n\nTo finish off this post, I'll provide the SBATCH script used to submit this job to Mox. Be prepared, it's a doozy and it took me many hours to fully put this together (the script has >350 lines in it!). When the job summary is typed out like above, it seems so easy! Yeesh!\n\n\n    #!/bin/bash\n    ## Job Name\n    #SBATCH --job-name=maker\n    ## Allocation Definition\n    #SBATCH --account=srlab\n    #SBATCH --partition=srlab\n    ## Resources\n    ## Nodes\n    #SBATCH --nodes=2\n    ## Walltime (days-hours:minutes:seconds format)\n    #SBATCH --time=25-00:00:00\n    ## Memory per node\n    #SBATCH --mem=120G\n    ##turn on e-mail notification\n    #SBATCH --mail-type=ALL\n    #SBATCH --mail-user=samwhite@uw.edu\n    ## Specify the working directory for this job\n    #SBATCH --workdir=/gscratch/scrubbed/samwhite/outputs/20190115_geoduck_maker_genome_annotation    \n\n    # Load Python Mox module for Python module availability    \n\n    module load intel-python3_2017    \n\n    # Load Open MPI module for parallel, multi-node processing    \n\n    module load icc_19-ompi_3.1.2    \n\n    # SegFault fix?\n    export THREADS_DAEMON_MODEL=1    \n\n    # Document programs in PATH (primarily for program version ID)    \n\n    date >> system_path.log\n    echo \"\" >> system_path.log\n    echo \"System PATH for $SLURM_JOB_ID\" >> system_path.log\n    echo \"\" >> system_path.log\n    printf \"%0.s-\" {1..10} >> system_path.log\n    echo ${PATH} | tr : \\\\n >> system_path.log    \n\n    # Add BLAST to system PATH\n    export PATH=$PATH:/gscratch/srlab/programs/ncbi-blast-2.6.0+/bin\n    export BLASTDB=/gscratch/srlab/blastdbs/UniProtKB_20181008/    \n    \n\n    ## Establish variables for more readable code    \n\n    wd=$(pwd)\n    maker_dir=/gscratch/srlab/programs/maker-2.31.10/bin\n    snap_dir=/gscratch/srlab/programs/maker-2.31.10/exe/snap\n    ### Paths to Maker binaries    \n\n    maker=${maker_dir}/maker\n    gff3_merge=${maker_dir}/gff3_merge\n    maker2zff=${maker_dir}/maker2zff\n    fathom=${snap_dir}/fathom\n    forge=${snap_dir}/forge\n    hmmassembler=${snap_dir}/hmm-assembler.pl\n    fasta_merge=${maker_dir}/fasta_merge\n    map_ids=${maker_dir}/maker_map_ids\n    map_gff_ids=${maker_dir}/map_gff_ids\n    map_fasta_ids=${maker_dir}/map_fasta_ids\n    functional_fasta=${maker_dir}/maker_functional_fasta\n    functional_gff=${maker_dir}/maker_functional_gff\n    ipr_update_gff=${maker_dir}/ipr_update_gff\n    iprscan2gff3=${maker_dir}/iprscan2gff3    \n\n    blastp_dir=${wd}/blastp_annotation\n    maker_blastp=${wd}/blastp_annotation/20190108_blastp.outfmt6\n    maker_prot_fasta=${wd}/snap02/Pgenerosa_v70_snap02.all.maker.proteins.fasta\n    maker_prot_fasta_renamed=${wd}/snap02/Pgenerosa_v70_snap02.all.maker.proteins.renamed.fasta\n    maker_transcripts_fasta=${wd}/snap02/Pgenerosa_v70_snap02.all.maker.transcripts.fasta\n    maker_transcripts_fasta_renamed=${wd}/snap02/Pgenerosa_v70_snap02.all.maker.transcripts.renamed.fasta\n    snap02_est_gff=${wd}/snap02/Pgenerosa_v70_snap01.maker.all.noseqs.est2genome.gff\n    snap02_gff=${wd}/snap02/Pgenerosa_v70_snap02.all.gff\n    snap02_gff_renamed=${wd}/snap02/Pgenerosa_v70_snap02.all.renamed.gff\n    snap02_protein_gff=${wd}/snap02/Pgenerosa_v70_snap01.maker.all.noseqs.protein2genome.gff\n    snap02_rm_gff=${wd}/snap02/Pgenerosa_v70_snap01.maker.all.noseqs.repeats.gff\n    put_func_gff=Pgenerosa_v70_genome_snap02.all.renamed.putative_function.gff\n    put_func_prot=Pgenerosa_v70_genome_snap02.all.maker.proteins.renamed.putative_function.fasta\n    put_func_trans=Pgenerosa_v70_genome_snap02.all.maker.transcripts.renamed.putative_function.fasta\n    put_domain_gff=Pgenerosa_v70_genome_snap02.all.renamed.putative_function.domain_added.gff\n    ips_dir=${wd}/interproscan_annotation\n    ips_base=Pgenerosa_v70_maker_proteins_ips\n    ips_name=Pgenerosa_v70_maker_proteins_ips.tsv\n    id_map=${wd}/snap02/Pgenerosa_v70_genome.map\n    ips_domains=Pgenerosa_v70_genome_snap02.all.renamed.visible_ips_domains.gff    \n\n    ## Path to blastp\n    blastp=/gscratch/srlab/programs/ncbi-blast-2.6.0+/bin/blastp    \n\n    ## Path to InterProScan5\n    interproscan=/gscratch/srlab/programs/interproscan-5.31-70.0/interproscan.sh    \n\n    ## Store path to options control file\n    maker_opts_file=./maker_opts.ctl    \n\n    ### Path to genome FastA file\n    genome=/gscratch/srlab/sam/data/P_generosa/generosa_genomes/Pgenerosa_v070.fa    \n\n    ### Path to transcriptome FastA file\n    transcriptome=/gscratch/srlab/sam/data/P_generosa/generosa_transcriptomes/20180827_trinity_geoduck.fasta    \n\n    ### Path to Crassotrea gigas NCBI protein FastA\n    gigas_proteome=/gscratch/srlab/sam/data/C_gigas/gigas_ncbi_protein/GCA_000297895.1_oyster_v9_protein.faa    \n\n    ### Path to Crassostrea virginica NCBI protein FastA\n    virginica_proteome=/gscratch/srlab/sam/data/C_virginica/virginica_ncbi_protein/GCF_002022765.2_C_virginica-3.0_protein.faa    \n\n    ### Path to Panopea generosa TransDecoder protein FastA\n    panopea_td_proteome=/gscratch/srlab/sam/data/P_generosa/generosa_proteomes/20180827_trinity_geoduck.fasta.transdecoder.pep    \n\n    ### Path to concatenated NCBI prteins FastA\n    combined_proteomes=${wd}/combined_proteomes.fasta    \n\n    ### Path to P.generosa-specific repeat library\n    repeat_library=/gscratch/srlab/sam/data/P_generosa/generosa_repeats/Pgenerosa_v070-families.fa    \n\n    ### Path to SwissProt database for BLASTp\n    sp_db_blastp=/gscratch/srlab/blastdbs/UniProtKB_20190109/uniprot_sprot.fasta    \n    \n\n    ## Make directories\n    mkdir blastp_annotation\n    mkdir interproscan_annotation    \n    \n\n    ## Create Maker control files needed for running Maker, only if it doesn't already exist and then edit it.\n    ### Edit options file\n    ### Set paths to P.generosa genome and transcriptome.\n    ### Set path to combined C. gigas, C.virginica, P.generosa proteomes.\n    ### The use of the % symbol sets the delimiter sed uses for arguments.\n    ### Normally, the delimiter that most examples use is a slash \"/\".\n    ### But, we need to expand the variables into a full path with slashes, which screws up sed.\n    ### Thus, the use of % symbol instead (it could be any character that is NOT present in the expanded variable; doesn't have to be \"%\").\n    if [ ! -e maker_opts.ctl ]; then\n      $maker -CTL\n      sed -i \"/^genome=/ s% %$genome %\" \"$maker_opts_file\"\n      sed -i \"/^est=/ s% %$transcriptome %\" \"$maker_opts_file\"\n      sed -i \"/^protein=/ s% %$combined_proteomes %\" \"$maker_opts_file\"\n      sed -i \"/^rmlib=/ s% %$repeat_library %\" \"$maker_opts_file\"\n      sed -i \"/^est2genome=0/ s/est2genome=0/est2genome=1/\" \"$maker_opts_file\"\n      sed -i \"/^protein2genome=0/ s/protein2genome=0/protein2genome=1/\" \"$maker_opts_file\"\n    fi    \n\n    ## Create combined proteome FastA file, only if it doesn't already exist.\n    if [ ! -e combined_proteomes.fasta ]; then\n        touch combined_proteomes.fasta\n        cat \"$gigas_proteome\" >> combined_proteomes.fasta\n        cat \"$virginica_proteome\" >> combined_proteomes.fasta\n        cat \"$panopea_td_proteome\" >> combined_proteomes.fasta\n    fi    \n    \n    \n\n    ## Run Maker\n    ### Specify number of nodes to use.\n    mpiexec -n 56 $maker    \n\n    ## Merge gffs\n    ${gff3_merge} -d Pgenerosa_v70.maker.output/Pgenerosa_v70_master_datastore_index.log    \n\n    ## GFF with no FastA in footer\n    ${gff3_merge} -n -s -d Pgenerosa_v70.maker.output/Pgenerosa_v70_master_datastore_index.log > Pgenerosa_v70.maker.all.noseqs.gff    \n\n    ## Merge all FastAs\n    ${fasta_merge} -d Pgenerosa_v70.maker.output/Pgenerosa_v70_master_datastore_index.log    \n\n    ## Extract GFF alignments for use in subsequent MAKER rounds\n    ### Transcript alignments\n    awk '{ if ($2 == \"est2genome\") print $0 }' Pgenerosa_v70.maker.all.noseqs.gff > Pgenerosa_v70.maker.all.noseqs.est2genome.gff\n    ### Protein alignments\n    awk '{ if ($2 == \"protein2genome\") print $0 }' Pgenerosa_v70.maker.all.noseqs.gff > Pgenerosa_v70.maker.all.noseqs.protein2genome.gff\n    ### Repeat alignments\n    awk '{ if ($2 ~ \"repeat\") print $0 }' Pgenerosa_v70.maker.all.noseqs.gff > Pgenerosa_v70.maker.all.noseqs.repeats.gff    \n\n    ## Run SNAP training, round 1\n    mkdir snap01 && cd snap01\n    ${maker2zff} ../Pgenerosa_v70.all.gff\n    ${fathom} -categorize 1000 genome.ann genome.dna\n    ${fathom} -export 1000 -plus uni.ann uni.dna\n    ${forge} export.ann export.dna\n    ${hmmassembler} genome . > Pgenerosa_v70_snap01.hmm    \n\n    ## Initiate second Maker run.\n    ### Copy initial maker control files and\n    ### - change gene prediction settings to 0 (i.e. don't generate Maker gene predictions)\n    ### - use GFF subsets generated in first round of MAKER\n    ### - set location of snaphmm file to use for gene prediction\n    ### Percent symbols used below are the sed delimiters, instead of the default \"/\",\n    ### due to the need to use file paths.\n    if [ ! -e maker_opts.ctl ]; then\n      $maker -CTL\n      sed -i \"/^genome=/ s% %$genome %\" maker_opts.ctl\n      sed -i \"/^est2genome=1/ s/est2genome=1/est2genome=0/\" maker_opts.ctl\n      sed -i \"/^protein2genome=1/ s/protein2genome=1/protein2genome=0/\" maker_opts.ctl\n      sed -i \"/^est_gff=/ s% %../Pgenerosa_v70.maker.all.noseqs.est2genome.gff %\" maker_opts.ctl\n      sed -i \"/^protein_gff=/ s% %../Pgenerosa_v70.maker.all.noseqs.protein2genome.gff %\" maker_opts.ctl\n      sed -i \"/^rm_gff=/ s% %../Pgenerosa_v70.maker.all.noseqs.repeats.gff %\" maker_opts.ctl\n      sed -i \"/^snaphmm=/ s% %Pgenerosa_v70_snap01.hmm %\" maker_opts.ctl\n    fi    \n\n    ## Run Maker\n    ### Set basename of files and specify number of CPUs to use\n    mpiexec -n 56 $maker \\\n    -base Pgenerosa_v70_snap01    \n\n    ## Merge gffs\n    ${gff3_merge} -d Pgenerosa_v70_snap01.maker.output/Pgenerosa_v70_snap01_master_datastore_index.log    \n\n    ## GFF with no FastA in footer\n    ${gff3_merge} -n -s -d Pgenerosa_v70_snap01.maker.output/Pgenerosa_v70_snap01_master_datastore_index.log > Pgenerosa_v70_snap01.maker.all.noseqs.gff    \n\n    ## Extract GFF alignments for use in subsequent MAKER rounds\n    ### Transcript alignments\n    awk '{ if ($2 == \"est2genome\") print $0 }' Pgenerosa_v70_snap01.maker.all.noseqs.gff > Pgenerosa_v70_snap01.maker.all.noseqs.est2genome.gff\n    ### Protein alignments\n    awk '{ if ($2 == \"protein2genome\") print $0 }' Pgenerosa_v70_snap01.maker.all.noseqs.gff > Pgenerosa_v70_snap01.maker.all.noseqs.protein2genome.gff\n    ### Repeat alignments\n    awk '{ if ($2 ~ \"repeat\") print $0 }' Pgenerosa_v70_snap01.maker.all.noseqs.gff > Pgenerosa_v70_snap01.maker.all.noseqs.repeats.gff    \n\n    ## Run SNAP training, round 2\n    cd ..\n    mkdir snap02 && cd snap02\n    ${maker2zff} ../snap01/Pgenerosa_v70_snap01.all.gff\n    ${fathom} -categorize 1000 genome.ann genome.dna\n    ${fathom} -export 1000 -plus uni.ann uni.dna\n    ${forge} export.ann export.dna\n    ${hmmassembler} genome . > Pgenerosa_v70_snap02.hmm    \n\n    ## Initiate third and final Maker run.\n    ### Copy initial maker control files and:\n    ### - change gene prediction settings to 0 (i.e. don't generate Maker gene predictions)\n    ### - use GFF subsets generated in first round of SNAP\n    ### - set location of snaphmm file to use for gene prediction.\n    ### Percent symbols used below are the sed delimiters, instead of the default \"/\",\n    ### due to the need to use file paths.\n    if [ ! -e maker_opts.ctl ]; then\n      $maker -CTL\n      sed -i \"/^genome=/ s% %$genome %\" maker_opts.ctl\n      sed -i \"/^est2genome=1/ s/est2genome=1/est2genome=0/\" maker_opts.ctl\n      sed -i \"/^protein2genome=1/ s/protein2genome=1/protein2genome=0/\" maker_opts.ctl\n      sed -i \"/^est_gff=/ s% %${snap02_est_gff} %\" maker_opts.ctl\n      sed -i \"/^protein_gff=/ s% %${snap02_protein_gff} %\" maker_opts.ctl\n      sed -i \"/^rm_gff=/ s% %${snap02_rm_gff} %\" maker_opts.ctl\n      sed -i \"/^snaphmm=/ s% %Pgenerosa_v70_snap02.hmm %\" maker_opts.ctl\n    fi    \n\n    ## Run Maker\n    ### Set basename of files and specify number of CPUs to use\n    mpiexec -n 56 $maker \\\n    -base Pgenerosa_v70_snap02    \n\n    ## Merge gffs\n    ${gff3_merge} \\\n    -d Pgenerosa_v70_snap02.maker.output/Pgenerosa_v70_snap02_master_datastore_index.log    \n\n    ## GFF with no FastA in footer\n    ${gff3_merge} -n -s -d Pgenerosa_v70_snap02.maker.output/Pgenerosa_v70_snap02_master_datastore_index.log > Pgenerosa_v70_snap02.maker.all.noseqs.gff    \n\n    ## Merge FastAs\n    ${fasta_merge} \\\n    -d Pgenerosa_v70_snap02.maker.output/Pgenerosa_v70_snap02_master_datastore_index.log    \n\n    # Create copies of files for mapping\n    cp ${maker_prot_fasta} ${maker_prot_fasta_renamed}\n    cp ${maker_transcripts_fasta} ${maker_transcripts_fasta_renamed}\n    cp ${snap02_gff} ${snap02_gff_renamed}    \n\n    # Map IDs\n    ## Change gene names\n    ${maker_map_ids} \\\n    --prefix PGEN_ \\\n    --justify 8 \\\n    ${snap02_gff} \\\n    > ${id_map}    \n\n    ## Map GFF IDs\n    ${map_gff_ids} \\\n    ${id_map} \\\n    ${snap02_gff_renamed}    \n\n    ## Map FastAs\n    ### Proteins\n    ${map_fasta_ids} \\\n    ${id_map} \\\n    ${maker_prot_fasta_renamed}    \n\n    ### Transcripts\n    ${map_fasta_ids} \\\n    ${id_map} \\\n    ${maker_transcripts_fasta_renamed}    \n\n    # Run InterProScan 5\n    ## disable-precalc since this requires external database access (which Mox does not allow)\n    cd ${ips_dir}    \n\n    ${interproscan} \\\n    --input ${maker_prot_fasta_renamed} \\\n    --goterms \\\n    --output-file-base ${ips_base} \\\n    --disable-precalc    \n\n    # Run BLASTp\n    cd ${blastp_annotation}    \n\n    ${blastp} \\\n    -query ${maker_prot_fasta_renamed} \\\n    -db ${sp_db_blastp} \\\n    -out ${maker_blastp} \\\n    -max_target_seqs 1 \\\n    -evalue 1e-6 \\\n    -outfmt 6 \\\n    -num_threads 28    \n    \n\n    # Functional annotations    \n\n    cd ${wd}    \n\n    ## Add putative gene functions\n    ### GFF\n    ${functional_gff} \\\n    ${sp_db_annotations} \\\n    ${maker_blastp} \\\n    ${snap02_gff_renamed} \\\n    > ${put_func_gff}    \n\n    ### Proteins\n    ${maker_functional_fasta} \\\n    ${sp_db_annotations} \\\n    ${maker_blastp} \\\n    ${maker_prot_fasta_renamed} \\\n    > ${put_func_prot}    \n\n    ### Transcripts\n    ${maker_functional_fasta} \\\n    ${sp_db_annotations} \\\n    ${maker_blastp} \\\n    ${maker_transcripts_fasta_renamed} \\\n    > ${put_func_trans}    \n\n    ## Add InterProScan domain info\n    ### Add searchable tags\n    ${ipr_update_gff} \\\n    ${put_func_gff} \\\n    ${ips_dir}/${ips_name} \\\n    > ${put_domain_gff}    \n\n    ### Add viewable features for genome browsers (JBrowse, Gbrowse, Web Apollo)\n    ${iprscan2gff3} \\\n    ${ips_dir}/${ips_name} \\\n    ${snap02_gff_renamed} \\\n    > ${ips_domains}\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"Annotation - Geoduck Genome with MAKER Submitted to Mox","date":"2019-01-15 07:11","tags":["geoduck","Panopea generosa","mox","MAKER"],"categories":["2019","Geoduck Genome Sequencing"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}