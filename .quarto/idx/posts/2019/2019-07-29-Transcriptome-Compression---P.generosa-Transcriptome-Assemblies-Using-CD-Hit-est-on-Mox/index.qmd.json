{"title":"Transcriptome Compression - P.generosa Transcriptome Assemblies Using CD-Hit-est on Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"Transcriptome Compression - P.generosa Transcriptome Assemblies Using CD-Hit-est on Mox","date":"2019-07-29 13:58","tags":["Panopea generosa","geoduck","transcriptome","trinity","CD-hit","mox"],"categories":["2019","Miscellaneous"]},"headingText":"Script to retrieve geoduck Trinity assemblies","containsRefs":false,"markdown":"\nIn continued attempts to get a grasp on the geoduck transcriptome size, I decided to \"compress\" our various assemblies by clustering similar transcripts in each assembly in to a single \"representative\" transcript, using [CD-Hit-est](http://weizhongli-lab.org/cd-hit/). Settings use to run it were taken from the [Trinity FAQ regarding \"too many transcripts\"](https://github.com/trinityrnaseq/trinityrnaseq/wiki/There-are-too-many-transcripts!-What-do-I-do%3F).\n\nA bash script was used to `rsync` files to Mox and then execute the SBATCH script.\n\nBash script (GitHub):\n\n- [20190729_rsync_pgen_trinity_assemblies.sh](https://github.com/RobertsLab/sams-notebook/blob/master/bash_scripts/20190729_rsync_pgen_trinity_assemblies.sh)\n\n```shell\n#!/usr/bin/bash\n\n# Assemblies will be used in SBATCH script called at end of this script.\n# Script needs to be run within same directory as SBATCH script.\n\n# Exit if any command fails\nset -e\n\n# Set rsync remote path\ngannet=\"gannet:/volume2/web/Atumefaciens\"\nowl=\"owl:/volume1/web/Athaliana\"\n\n# Create array of directories for storing Trinity assemblies\nassembly_dirs_array=(\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/20180827_assembly\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/ctenidia\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/gonad\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/heart\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/juvenile/EPI115\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/juvenile/EPI116\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/juvenile/EPI123\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/juvenile/EPI124\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/larvae/EPI99)\n\n# Array of Trinity assemblies remote paths for rysnc-ing\nassemblies_array=(\n20180827_trinity_geoduck_RNAseq/Trinity.fasta\n20190409_trinity_pgen_ctenidia_RNAseq/trinity_out_dir/Trinity.fasta\n20190409_trinity_pgen_gonad_RNAseq/trinity_out_dir/Trinity.fasta\n20190215_trinity_geoduck_heart_RNAseq/trinity_out_dir/Trinity.fasta\n20190409_trinity_pgen_EPI115_RNAseq/trinity_out_dir/Trinity.fasta\n20190409_trinity_pgen_EPI116_RNAseq/trinity_out_dir/Trinity.fasta\n20190409_trinity_pgen_EPI123_RNAseq/trinity_out_dir/Trinity.fasta\n20190409_trinity_pgen_EPI124_RNAseq/trinity_out_dir/Trinity.fasta\n20190409_trinity_pgen_EPI99_RNAseq/trinity_out_dir/Trinity.fasta)\n\n# Retrieve FastA files via rsync\nfor index in \"${!assemblies_array[@]}\"\ndo\n  # Remove everything after first slash\n  assembly=$(echo \"${assemblies_array[index]%%/*}\")\n  echo \"Preparing to download ${assembly}...\"\n  if [ \"${assembly}\" = \"20180827_trinity_geoduck_RNAseq\" ]; then\n    echo \"Now syncing ${assembly} to ${assembly_dirs_array[index]}\"\n    rsync \\\n    --archive \\\n    --progress \\\n    \"${owl}/${assemblies_array[index]}\" \\\n    \"${assembly_dirs_array[index]}\"\n  else\n  echo \"Now syncing ${assembly} to ${assembly_dirs_array[index]}\"\n  rsync \\\n  --archive \\\n  --progress \\\n  \"${gannet}/${assemblies_array[index]}\" \\\n  \"${assembly_dirs_array[index]}\"\n  fi\ndone\n\n# Start SBATCH script to run CD-Hit on all transcriptome assemblies\nsbatch 20190729_cdhit-est_pgen_transcriptomes.sh\n```\n\n\nSBATCH script (GitHub):\n\n- [20190729_cdhit-est_pgen_transcriptomes.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20190729_cdhit-est_pgen_transcriptomes.sh)\n\n```shell\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=cdhit_pgen\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=5-00:00:00\n## Memory per node\n#SBATCH --mem=120G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --workdir=/gscratch/scrubbed/samwhite/outputs/20190729_cdhit-est_pgen_transcriptomes\n\n# This script is called by 20190729_cdhit_pgen_trinity_assemblies.sh.\n# That script uses rsync to transfer files to Mox via the login node.\n# This is required because Mox execute nodes don't have internet access.\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n# Document programs in PATH (primarily for program version ID)\n\ndate >> system_path.log\necho \"\" >> system_path.log\necho \"System PATH for $SLURM_JOB_ID\" >> system_path.log\necho \"\" >> system_path.log\nprintf \"%0.s-\" {1..10} >> system_path.log\necho \"${PATH}\" | tr : \\\\n >> system_path.log\n\n# Set CPU threads\nthreads=27\n\n# Program paths\ncd_hit_est=\"/gscratch/srlab/programs/cd-hit-v4.8.1-2019-0228/cd-hit-est\"\n\n# Create assembly paths array\nassembly_dirs_array=(\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/20180827_assembly\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/ctenidia\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/gonad\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/heart\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/juvenile/EPI115\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/juvenile/EPI116\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/juvenile/EPI123\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/juvenile/EPI124\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/larvae/EPI99)\n\n# Run cd-hit-est on each assembly\nfor index in \"${!assembly_dirs_array[@]}\"\ndo\n  # Store individual sample name by removing\n  # everything up to and including the last slash in path\n  sample_name=$(echo \"${assembly_dirs_array[index]##*/}\")\n  # Run cd-hit-est\n  \"${cd_hit_est}\" \\\n  -o \"${sample_name}\".cdhit \\\n  -c 0.98 \\\n  -i \"${assembly_dirs_array[index]}\"/Trinity.fasta \\\n  -p 1 \\\n  -d 0 \\\n  -b 3 \\\n  -T \"${threads}\" \\\n  -M 0\ndone\n```\n\n---\n\n# RESULTS\n\nThis was quick (~30mins)!:\n\n![Screencap of CD-hit-est runtime on Mox for various geoduck transcriptome assemblies](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20190729_cdhit_pgen_runtime.png?raw=true)\n\nOutput folder:\n\n- [20190729_cdhit-est_pgen_transcriptomes/](https://gannet.fish.washington.edu/Atumefaciens/20190729_cdhit-est_pgen_transcriptomes/)\n\nThe output from CD-Hit is a FastA file. A quick `grep -c \">\"` on the output files suggests that there were many \"transcripts\" that couldn't be clustered together. That's confirmed when taking a look at the end of the .cdhit.clstr files. Here's an example (`tail -n 25 ctenidia.cdhit.clst`):\n\n```\n>Cluster 325771\n0\t189nt, >TRINITY_DN58755_c0_g1_i5... *\n>Cluster 325772\n0\t189nt, >TRINITY_DN25471_c0_g1_i8... *\n>Cluster 325773\n0\t187nt, >TRINITY_DN7576_c0_g1_i14... *\n>Cluster 325774\n0\t186nt, >TRINITY_DN26627_c0_g1_i8... *\n>Cluster 325775\n0\t186nt, >TRINITY_DN41216_c0_g1_i3... *\n>Cluster 325776\n0\t185nt, >TRINITY_DN34387_c0_g1_i1... *\n>Cluster 325777\n0\t185nt, >TRINITY_DN6164_c1_g1_i10... *\n>Cluster 325778\n0\t184nt, >TRINITY_DN7464_c1_g2_i3... *\n>Cluster 325779\n0\t184nt, >TRINITY_DN2395_c0_g1_i1... *\n>Cluster 325780\n0\t184nt, >TRINITY_DN557_c0_g1_i3... *\n>Cluster 325781\n0\t182nt, >TRINITY_DN53036_c0_g1_i3... *\n>Cluster 325782\n0\t180nt, >TRINITY_DN12928_c1_g1_i8... *\n```\n\nEach of these transcripts from the assembly are very short (<200bp) and they do not cluster with any other transcripts (likely due to their short length). So, these are retained as individual transcripts, Although I haven't taken the time to assess things, there are probably thousands (maybe more?) of these transcripts that are small and don't cluster.\n\nAnyway, I ran this to provide additional information on our transcriptome assemblies, not really to explore the results of CD-Hit in-depth. I'm putting together a summary post of our assemblies that will compile a variety of \"stats\"; hopefully providing some insight on a more realistic assessment of the number of transcripts present in the geoduck transcriptome.\n","srcMarkdownNoYaml":"\nIn continued attempts to get a grasp on the geoduck transcriptome size, I decided to \"compress\" our various assemblies by clustering similar transcripts in each assembly in to a single \"representative\" transcript, using [CD-Hit-est](http://weizhongli-lab.org/cd-hit/). Settings use to run it were taken from the [Trinity FAQ regarding \"too many transcripts\"](https://github.com/trinityrnaseq/trinityrnaseq/wiki/There-are-too-many-transcripts!-What-do-I-do%3F).\n\nA bash script was used to `rsync` files to Mox and then execute the SBATCH script.\n\nBash script (GitHub):\n\n- [20190729_rsync_pgen_trinity_assemblies.sh](https://github.com/RobertsLab/sams-notebook/blob/master/bash_scripts/20190729_rsync_pgen_trinity_assemblies.sh)\n\n```shell\n#!/usr/bin/bash\n\n# Script to retrieve geoduck Trinity assemblies\n# Assemblies will be used in SBATCH script called at end of this script.\n# Script needs to be run within same directory as SBATCH script.\n\n# Exit if any command fails\nset -e\n\n# Set rsync remote path\ngannet=\"gannet:/volume2/web/Atumefaciens\"\nowl=\"owl:/volume1/web/Athaliana\"\n\n# Create array of directories for storing Trinity assemblies\nassembly_dirs_array=(\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/20180827_assembly\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/ctenidia\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/gonad\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/heart\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/juvenile/EPI115\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/juvenile/EPI116\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/juvenile/EPI123\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/juvenile/EPI124\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/larvae/EPI99)\n\n# Array of Trinity assemblies remote paths for rysnc-ing\nassemblies_array=(\n20180827_trinity_geoduck_RNAseq/Trinity.fasta\n20190409_trinity_pgen_ctenidia_RNAseq/trinity_out_dir/Trinity.fasta\n20190409_trinity_pgen_gonad_RNAseq/trinity_out_dir/Trinity.fasta\n20190215_trinity_geoduck_heart_RNAseq/trinity_out_dir/Trinity.fasta\n20190409_trinity_pgen_EPI115_RNAseq/trinity_out_dir/Trinity.fasta\n20190409_trinity_pgen_EPI116_RNAseq/trinity_out_dir/Trinity.fasta\n20190409_trinity_pgen_EPI123_RNAseq/trinity_out_dir/Trinity.fasta\n20190409_trinity_pgen_EPI124_RNAseq/trinity_out_dir/Trinity.fasta\n20190409_trinity_pgen_EPI99_RNAseq/trinity_out_dir/Trinity.fasta)\n\n# Retrieve FastA files via rsync\nfor index in \"${!assemblies_array[@]}\"\ndo\n  # Remove everything after first slash\n  assembly=$(echo \"${assemblies_array[index]%%/*}\")\n  echo \"Preparing to download ${assembly}...\"\n  if [ \"${assembly}\" = \"20180827_trinity_geoduck_RNAseq\" ]; then\n    echo \"Now syncing ${assembly} to ${assembly_dirs_array[index]}\"\n    rsync \\\n    --archive \\\n    --progress \\\n    \"${owl}/${assemblies_array[index]}\" \\\n    \"${assembly_dirs_array[index]}\"\n  else\n  echo \"Now syncing ${assembly} to ${assembly_dirs_array[index]}\"\n  rsync \\\n  --archive \\\n  --progress \\\n  \"${gannet}/${assemblies_array[index]}\" \\\n  \"${assembly_dirs_array[index]}\"\n  fi\ndone\n\n# Start SBATCH script to run CD-Hit on all transcriptome assemblies\nsbatch 20190729_cdhit-est_pgen_transcriptomes.sh\n```\n\n\nSBATCH script (GitHub):\n\n- [20190729_cdhit-est_pgen_transcriptomes.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20190729_cdhit-est_pgen_transcriptomes.sh)\n\n```shell\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=cdhit_pgen\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=5-00:00:00\n## Memory per node\n#SBATCH --mem=120G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --workdir=/gscratch/scrubbed/samwhite/outputs/20190729_cdhit-est_pgen_transcriptomes\n\n# This script is called by 20190729_cdhit_pgen_trinity_assemblies.sh.\n# That script uses rsync to transfer files to Mox via the login node.\n# This is required because Mox execute nodes don't have internet access.\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n# Document programs in PATH (primarily for program version ID)\n\ndate >> system_path.log\necho \"\" >> system_path.log\necho \"System PATH for $SLURM_JOB_ID\" >> system_path.log\necho \"\" >> system_path.log\nprintf \"%0.s-\" {1..10} >> system_path.log\necho \"${PATH}\" | tr : \\\\n >> system_path.log\n\n# Set CPU threads\nthreads=27\n\n# Program paths\ncd_hit_est=\"/gscratch/srlab/programs/cd-hit-v4.8.1-2019-0228/cd-hit-est\"\n\n# Create assembly paths array\nassembly_dirs_array=(\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/20180827_assembly\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/ctenidia\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/gonad\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/heart\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/juvenile/EPI115\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/juvenile/EPI116\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/juvenile/EPI123\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/juvenile/EPI124\n/gscratch/srlab/sam/data/P_generosa/transcriptomes/larvae/EPI99)\n\n# Run cd-hit-est on each assembly\nfor index in \"${!assembly_dirs_array[@]}\"\ndo\n  # Store individual sample name by removing\n  # everything up to and including the last slash in path\n  sample_name=$(echo \"${assembly_dirs_array[index]##*/}\")\n  # Run cd-hit-est\n  \"${cd_hit_est}\" \\\n  -o \"${sample_name}\".cdhit \\\n  -c 0.98 \\\n  -i \"${assembly_dirs_array[index]}\"/Trinity.fasta \\\n  -p 1 \\\n  -d 0 \\\n  -b 3 \\\n  -T \"${threads}\" \\\n  -M 0\ndone\n```\n\n---\n\n# RESULTS\n\nThis was quick (~30mins)!:\n\n![Screencap of CD-hit-est runtime on Mox for various geoduck transcriptome assemblies](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20190729_cdhit_pgen_runtime.png?raw=true)\n\nOutput folder:\n\n- [20190729_cdhit-est_pgen_transcriptomes/](https://gannet.fish.washington.edu/Atumefaciens/20190729_cdhit-est_pgen_transcriptomes/)\n\nThe output from CD-Hit is a FastA file. A quick `grep -c \">\"` on the output files suggests that there were many \"transcripts\" that couldn't be clustered together. That's confirmed when taking a look at the end of the .cdhit.clstr files. Here's an example (`tail -n 25 ctenidia.cdhit.clst`):\n\n```\n>Cluster 325771\n0\t189nt, >TRINITY_DN58755_c0_g1_i5... *\n>Cluster 325772\n0\t189nt, >TRINITY_DN25471_c0_g1_i8... *\n>Cluster 325773\n0\t187nt, >TRINITY_DN7576_c0_g1_i14... *\n>Cluster 325774\n0\t186nt, >TRINITY_DN26627_c0_g1_i8... *\n>Cluster 325775\n0\t186nt, >TRINITY_DN41216_c0_g1_i3... *\n>Cluster 325776\n0\t185nt, >TRINITY_DN34387_c0_g1_i1... *\n>Cluster 325777\n0\t185nt, >TRINITY_DN6164_c1_g1_i10... *\n>Cluster 325778\n0\t184nt, >TRINITY_DN7464_c1_g2_i3... *\n>Cluster 325779\n0\t184nt, >TRINITY_DN2395_c0_g1_i1... *\n>Cluster 325780\n0\t184nt, >TRINITY_DN557_c0_g1_i3... *\n>Cluster 325781\n0\t182nt, >TRINITY_DN53036_c0_g1_i3... *\n>Cluster 325782\n0\t180nt, >TRINITY_DN12928_c1_g1_i8... *\n```\n\nEach of these transcripts from the assembly are very short (<200bp) and they do not cluster with any other transcripts (likely due to their short length). So, these are retained as individual transcripts, Although I haven't taken the time to assess things, there are probably thousands (maybe more?) of these transcripts that are small and don't cluster.\n\nAnyway, I ran this to provide additional information on our transcriptome assemblies, not really to explore the results of CD-Hit in-depth. I'm putting together a summary post of our assemblies that will compile a variety of \"stats\"; hopefully providing some insight on a more realistic assessment of the number of transcripts present in the geoduck transcriptome.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"Transcriptome Compression - P.generosa Transcriptome Assemblies Using CD-Hit-est on Mox","date":"2019-07-29 13:58","tags":["Panopea generosa","geoduck","transcriptome","trinity","CD-hit","mox"],"categories":["2019","Miscellaneous"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}