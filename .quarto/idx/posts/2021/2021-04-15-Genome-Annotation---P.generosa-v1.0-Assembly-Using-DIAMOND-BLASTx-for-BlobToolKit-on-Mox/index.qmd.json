{"title":"Genome Annotation - P.generosa v1.0 Assembly Using DIAMOND BLASTx for BlobToolKit on Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"Genome Annotation - P.generosa v1.0 Assembly Using DIAMOND BLASTx for BlobToolKit on Mox","date":"2021-04-15 10:17","tags":["Panopea generosa","Pacific geoduck","DIAMOND","BLASTx","mox"],"categories":["2021","Miscellaneous"]},"headingText":"Job Name","containsRefs":false,"markdown":"\nTo continue towards getting our [_Panopea generosa_ (Pacific geoduck)](http://en.wikipedia.org/wiki/Geoduck) genome assembly (v1.0) analyzed with [BlobToolKit](https://blobtoolkit.genomehubs.org/), per [this GitHub Issue](https://github.com/RobertsLab/resources/issues/1118), I've decided to run each aspect of the pipeline manually, as I [continue to have issues utilizing the automatic pipeline](https://github.com/blobtoolkit/insdc-pipeline/issues/9). As such, I've run [`DIAMOND`](https://github.com/bbuchfink/diamond) BLASTx according to the [BlobToolKit \"Getting Started\" guide](https://blobtoolkit.genomehubs.org/blobtools2/blobtools2-tutorials/getting-started-with-blobtools2/) on Mox.\n\nIMPORTANT: This is BLAST'ed against a customized UniProt database, per the [BlobToolKit instructions here.](https://blobtoolkit.genomehubs.org/install/). For posterity, here're the instuctions provided on the website:\n\n```shell\nmkdir -p uniprot\nwget -q -O uniprot/reference_proteomes.tar.gz \\\n ftp.ebi.ac.uk/pub/databases/uniprot/current_release/knowledgebase/reference_proteomes/$(curl \\\n     -vs ftp.ebi.ac.uk/pub/databases/uniprot/current_release/knowledgebase/reference_proteomes/ 2>&1 | \\\n     awk '/tar.gz/ {print $9}')\ncd uniprot\ntar xf reference_proteomes.tar.gz\n\ntouch reference_proteomes.fasta.gz\nfind . -mindepth 2 | grep \"fasta.gz\" | grep -v 'DNA' | grep -v 'additional' | xargs cat >> reference_proteomes.fasta.gz\n\necho \"accession\\taccession.version\\ttaxid\\tgi\" > reference_proteomes.taxid_map\nzcat */*/*.idmapping.gz | grep \"NCBI_TaxID\" | awk '{print $1 \"\\t\" $1 \"\\t\" $3 \"\\t\" 0}' >> reference_proteomes.taxid_map\n\ndiamond makedb -p 16 --in reference_proteomes.fasta.gz --taxonmap reference_proteomes.taxid_map --taxonnodes ../taxdump/nodes.dmp -d reference_proteomes.dmnd\ncd -\n```\n\nSBATCH script (GitHub):\n\n- [20210415_pgen_diamond_blastx_Panopea-generosa-v1.0.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20210415_pgen_diamond_blastx_Panopea-generosa-v1.0.sh)\n\n```shell\n#!/bin/bash\n#SBATCH --job-name=20210415_pgen_diamond_blastx_Panopea-generosa-v1.0\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=10-00:00:00\n## Memory per node\n#SBATCH --mem=500G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20210415_pgen_diamond_blastx_Panopea-generosa-v1.0\n\n### DIAMOND BLASTx of Panopea-generosa-v1.0 against customized UniProt database\n### for import into BlobToolKit.\n### Output is customized for input into BlobToolKit\n\n###################################################################################\n# These variables need to be set by user\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n# SegFault fix?\nexport THREADS_DAEMON_MODEL=1\n\n\n# Programs array\ndeclare -A programs_array\nprograms_array=(\n[diamond]=\"/gscratch/srlab/programs/diamond-0.9.29/diamond\"\n)\n\n# DIAMOND UniProt database\ndmnd=/gscratch/srlab/blastdbs/20210401_uniprot_btk/reference_proteomes.dmnd\n\n\n# Genome (FastA)\nfasta=/gscratch/srlab/sam/data/P_generosa/genomes/Panopea-generosa-v1.0.fa\n\n###################################################################################\n\n# Strip leading path and extensions\nno_path=$(echo \"${fasta##*/}\")\nno_ext=$(echo \"${no_path%.*}\")\n\n# Run DIAMOND with blastx\n# Customized output format for import into BlobToolKit\n${programs_array[diamond]} blastx \\\n--db ${dmnd} \\\n--query \"${fasta}\" \\\n--out \"${no_ext}\".blastx.btk.outfmt6 \\\n--outfmt 6 qseqid staxids bitscore qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore \\\n--sensitive \\\n--evalue 1e-25 \\\n--max-target-seqs 1 \\\n--block-size 15.0 \\\n--index-chunks 4\n\n# Generate checksums for future reference\necho \"\"\necho \"Generating checksum for ${fasta}.\"\nmd5sum \"${fasta}\">> fastq.checksums.md5\necho \"Completed checksum for ${fasta}.\"\necho \"\"\n\n###################################################################################\n\n# Capture program options\necho \"Logging program options...\"\nfor program in \"${!programs_array[@]}\"\ndo\n\t{\n  echo \"Program options for ${program}: \"\n\techo \"\"\n  # Handle samtools help menus\n  if [[ \"${program}\" == \"samtools_index\" ]] \\\n  || [[ \"${program}\" == \"samtools_sort\" ]] \\\n  || [[ \"${program}\" == \"samtools_view\" ]]\n  then\n    ${programs_array[$program]}\n\n  # Handle DIAMOND BLAST menu\n  elif [[ \"${program}\" == \"diamond\" ]]; then\n    ${programs_array[$program]} help\n\n  # Handle NCBI BLASTx menu\n  elif [[ \"${program}\" == \"blastx\" ]]; then\n    ${programs_array[$program]} -help\n  fi\n\t${programs_array[$program]} -h\n\techo \"\"\n\techo \"\"\n\techo \"----------------------------------------------\"\n\techo \"\"\n\techo \"\"\n} &>> program_options.log || true\n\n  # If MultiQC is in programs_array, copy the config file to this directory.\n  if [[ \"${program}\" == \"multiqc\" ]]; then\n  \tcp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n  fi\ndone\n\n# Document programs in PATH (primarily for program version ID)\n{\n  date\n  echo \"\"\n  echo \"System PATH for $SLURM_JOB_ID\"\n  echo \"\"\n  printf \"%0.s-\" {1..10}\n  echo \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n\necho \"Finished logging system PATH\"\n```\n\n\n---\n\n# RESULTS\n\nRuntime was close to 5.5hrs:\n\n![DIAMOND BLASTx runtime](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20210415_pgen_diamond_blastx_Panopea-generosa-v1.0_runtime.png?raw=true)\n\nOutput folder:\n\n- [20210415_pgen_diamond_blastx_Panopea-generosa-v1.0](https://gannet.fish.washington.edu/Atumefaciens/20210415_pgen_diamond_blastx_Panopea-generosa-v1.0/)\n\n  - Custom BLASTx output format (see SBATCH script for output formatting) for import to BlobToolKit (text):\n\n    - [20210415_pgen_diamond_blastx_Panopea-generosa-v1.0/Panopea-generosa-v1.0.blastx.btk.outfmt6](https://gannet.fish.washington.edu/Atumefaciens/20210415_pgen_diamond_blastx_Panopea-generosa-v1.0/Panopea-generosa-v1.0.blastx.btk.outfmt6)\n\n  - Genome FastA checksum (text):\n\n    - [20210415_pgen_diamond_blastx_Panopea-generosa-v1.0/fastq.checksums.md5](https://gannet.fish.washington.edu/Atumefaciens/20210415_pgen_diamond_blastx_Panopea-generosa-v1.0/fastq.checksums.md5)\n\nOnce minimap2 alignments are complete, will get this imported into [BlobToolKit](https://blobtoolkit.genomehubs.org/) viewer.\n","srcMarkdownNoYaml":"\nTo continue towards getting our [_Panopea generosa_ (Pacific geoduck)](http://en.wikipedia.org/wiki/Geoduck) genome assembly (v1.0) analyzed with [BlobToolKit](https://blobtoolkit.genomehubs.org/), per [this GitHub Issue](https://github.com/RobertsLab/resources/issues/1118), I've decided to run each aspect of the pipeline manually, as I [continue to have issues utilizing the automatic pipeline](https://github.com/blobtoolkit/insdc-pipeline/issues/9). As such, I've run [`DIAMOND`](https://github.com/bbuchfink/diamond) BLASTx according to the [BlobToolKit \"Getting Started\" guide](https://blobtoolkit.genomehubs.org/blobtools2/blobtools2-tutorials/getting-started-with-blobtools2/) on Mox.\n\nIMPORTANT: This is BLAST'ed against a customized UniProt database, per the [BlobToolKit instructions here.](https://blobtoolkit.genomehubs.org/install/). For posterity, here're the instuctions provided on the website:\n\n```shell\nmkdir -p uniprot\nwget -q -O uniprot/reference_proteomes.tar.gz \\\n ftp.ebi.ac.uk/pub/databases/uniprot/current_release/knowledgebase/reference_proteomes/$(curl \\\n     -vs ftp.ebi.ac.uk/pub/databases/uniprot/current_release/knowledgebase/reference_proteomes/ 2>&1 | \\\n     awk '/tar.gz/ {print $9}')\ncd uniprot\ntar xf reference_proteomes.tar.gz\n\ntouch reference_proteomes.fasta.gz\nfind . -mindepth 2 | grep \"fasta.gz\" | grep -v 'DNA' | grep -v 'additional' | xargs cat >> reference_proteomes.fasta.gz\n\necho \"accession\\taccession.version\\ttaxid\\tgi\" > reference_proteomes.taxid_map\nzcat */*/*.idmapping.gz | grep \"NCBI_TaxID\" | awk '{print $1 \"\\t\" $1 \"\\t\" $3 \"\\t\" 0}' >> reference_proteomes.taxid_map\n\ndiamond makedb -p 16 --in reference_proteomes.fasta.gz --taxonmap reference_proteomes.taxid_map --taxonnodes ../taxdump/nodes.dmp -d reference_proteomes.dmnd\ncd -\n```\n\nSBATCH script (GitHub):\n\n- [20210415_pgen_diamond_blastx_Panopea-generosa-v1.0.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20210415_pgen_diamond_blastx_Panopea-generosa-v1.0.sh)\n\n```shell\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=20210415_pgen_diamond_blastx_Panopea-generosa-v1.0\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=10-00:00:00\n## Memory per node\n#SBATCH --mem=500G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20210415_pgen_diamond_blastx_Panopea-generosa-v1.0\n\n### DIAMOND BLASTx of Panopea-generosa-v1.0 against customized UniProt database\n### for import into BlobToolKit.\n### Output is customized for input into BlobToolKit\n\n###################################################################################\n# These variables need to be set by user\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n# SegFault fix?\nexport THREADS_DAEMON_MODEL=1\n\n\n# Programs array\ndeclare -A programs_array\nprograms_array=(\n[diamond]=\"/gscratch/srlab/programs/diamond-0.9.29/diamond\"\n)\n\n# DIAMOND UniProt database\ndmnd=/gscratch/srlab/blastdbs/20210401_uniprot_btk/reference_proteomes.dmnd\n\n\n# Genome (FastA)\nfasta=/gscratch/srlab/sam/data/P_generosa/genomes/Panopea-generosa-v1.0.fa\n\n###################################################################################\n\n# Strip leading path and extensions\nno_path=$(echo \"${fasta##*/}\")\nno_ext=$(echo \"${no_path%.*}\")\n\n# Run DIAMOND with blastx\n# Customized output format for import into BlobToolKit\n${programs_array[diamond]} blastx \\\n--db ${dmnd} \\\n--query \"${fasta}\" \\\n--out \"${no_ext}\".blastx.btk.outfmt6 \\\n--outfmt 6 qseqid staxids bitscore qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore \\\n--sensitive \\\n--evalue 1e-25 \\\n--max-target-seqs 1 \\\n--block-size 15.0 \\\n--index-chunks 4\n\n# Generate checksums for future reference\necho \"\"\necho \"Generating checksum for ${fasta}.\"\nmd5sum \"${fasta}\">> fastq.checksums.md5\necho \"Completed checksum for ${fasta}.\"\necho \"\"\n\n###################################################################################\n\n# Capture program options\necho \"Logging program options...\"\nfor program in \"${!programs_array[@]}\"\ndo\n\t{\n  echo \"Program options for ${program}: \"\n\techo \"\"\n  # Handle samtools help menus\n  if [[ \"${program}\" == \"samtools_index\" ]] \\\n  || [[ \"${program}\" == \"samtools_sort\" ]] \\\n  || [[ \"${program}\" == \"samtools_view\" ]]\n  then\n    ${programs_array[$program]}\n\n  # Handle DIAMOND BLAST menu\n  elif [[ \"${program}\" == \"diamond\" ]]; then\n    ${programs_array[$program]} help\n\n  # Handle NCBI BLASTx menu\n  elif [[ \"${program}\" == \"blastx\" ]]; then\n    ${programs_array[$program]} -help\n  fi\n\t${programs_array[$program]} -h\n\techo \"\"\n\techo \"\"\n\techo \"----------------------------------------------\"\n\techo \"\"\n\techo \"\"\n} &>> program_options.log || true\n\n  # If MultiQC is in programs_array, copy the config file to this directory.\n  if [[ \"${program}\" == \"multiqc\" ]]; then\n  \tcp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n  fi\ndone\n\n# Document programs in PATH (primarily for program version ID)\n{\n  date\n  echo \"\"\n  echo \"System PATH for $SLURM_JOB_ID\"\n  echo \"\"\n  printf \"%0.s-\" {1..10}\n  echo \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n\necho \"Finished logging system PATH\"\n```\n\n\n---\n\n# RESULTS\n\nRuntime was close to 5.5hrs:\n\n![DIAMOND BLASTx runtime](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20210415_pgen_diamond_blastx_Panopea-generosa-v1.0_runtime.png?raw=true)\n\nOutput folder:\n\n- [20210415_pgen_diamond_blastx_Panopea-generosa-v1.0](https://gannet.fish.washington.edu/Atumefaciens/20210415_pgen_diamond_blastx_Panopea-generosa-v1.0/)\n\n  - Custom BLASTx output format (see SBATCH script for output formatting) for import to BlobToolKit (text):\n\n    - [20210415_pgen_diamond_blastx_Panopea-generosa-v1.0/Panopea-generosa-v1.0.blastx.btk.outfmt6](https://gannet.fish.washington.edu/Atumefaciens/20210415_pgen_diamond_blastx_Panopea-generosa-v1.0/Panopea-generosa-v1.0.blastx.btk.outfmt6)\n\n  - Genome FastA checksum (text):\n\n    - [20210415_pgen_diamond_blastx_Panopea-generosa-v1.0/fastq.checksums.md5](https://gannet.fish.washington.edu/Atumefaciens/20210415_pgen_diamond_blastx_Panopea-generosa-v1.0/fastq.checksums.md5)\n\nOnce minimap2 alignments are complete, will get this imported into [BlobToolKit](https://blobtoolkit.genomehubs.org/) viewer.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"Genome Annotation - P.generosa v1.0 Assembly Using DIAMOND BLASTx for BlobToolKit on Mox","date":"2021-04-15 10:17","tags":["Panopea generosa","Pacific geoduck","DIAMOND","BLASTx","mox"],"categories":["2021","Miscellaneous"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}