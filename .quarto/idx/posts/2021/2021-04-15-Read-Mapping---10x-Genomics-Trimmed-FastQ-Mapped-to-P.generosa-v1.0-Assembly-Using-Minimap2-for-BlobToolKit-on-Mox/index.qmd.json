{"title":"Read Mapping - 10x-Genomics Trimmed FastQ Mapped to P.generosa v1.0 Assembly Using Minimap2 for BlobToolKit on Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"Read Mapping - 10x-Genomics Trimmed FastQ Mapped to P.generosa v1.0 Assembly Using Minimap2 for BlobToolKit on Mox","date":"2021-04-15 10:18","tags":["minimap2","Panopea generosa","Pacific geoduck",null,"mox"],"categories":["2021","Miscellaneous"]},"headingText":"Job Name","containsRefs":false,"markdown":"\nTo continue towards getting our [_Panopea generosa_ (Pacific geoduck)](http://en.wikipedia.org/wiki/Geoduck) genome assembly (v1.0) analyzed with [BlobToolKit](https://blobtoolkit.genomehubs.org/), per [this GitHub Issue](https://github.com/RobertsLab/resources/issues/1118), I've decided to run each aspect of the pipeline manually, as I [continue to have issues utilizing the automatic pipeline](https://github.com/blobtoolkit/insdc-pipeline/issues/9). As such, I've run [`minimap2`](https://github.com/lh3/minimap2) according to the [BlobToolKit \"Getting Started\" guide](https://blobtoolkit.genomehubs.org/blobtools2/blobtools2-tutorials/getting-started-with-blobtools2/) on Mox. This will map the [trimmed 10x-Genomics reads from 20210401](https://robertslab.github.io/sams-notebook/posts/2021/2021-04-01-Trimming-P.generosa-10x-Genomics-HiC-FastQs-with-fastp-on-Mox/) to the [Panopea-generosa-v1.0.fa](https://gannet.fish.washington.edu/Atumefaciens/20191105_swoose_pgen_v074_renaming/Panopea-generosa-v1.0.fa) assembly (FastA; 914MB).\n\nSBATCH script (GitHub):\n\n- [20210415_pgen_minimap2_Panopea-generosa-v1.0.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20210415_pgen_minimap2_Panopea-generosa-v1.0.sh)\n\n```shell\n#!/bin/bash\n#SBATCH --job-name=20210415_pgen_minimap2_Panopea-generosa-v1.0\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=21-00:00:00\n## Memory per node\n#SBATCH --mem=500G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20210415_pgen_minimap2_Panopea-generosa-v1.0\n\n### Map trimmed 10x Genomics reads to Panopea-generosa_v1.0 assembly\n### for use with BlobToolKit\n### Output is BAM file\n\n\n###################################################################################\n# These variables need to be set by user\n\n# Set working directory\nwd=$(pwd)\n\n# Set number of CPUs to use\nthreads=40\n\n# Input/output files\ngenome_fasta=/gscratch/srlab/sam/data/P_generosa/genomes/Panopea-generosa-v1.0.fa\nfastq_checksums=fastq_checksums.md5\ntrimmed_reads_dir=/gscratch/scrubbed/samwhite/outputs/20210401_pgen_fastp_10x-genomics\nbam_out=20210415_pgen_10x-genomics_Pgen-v1.0-assembly.reads.sorted.bam\n\n# Programs\n## Minimap2\nminimap2=/gscratch/srlab/programs/minimap2-2.18_x64-linux/minimap2\n\n## Samtools\nsamtools=\"/gscratch/srlab/programs/samtools-1.10/samtools\"\n\n\n# Programs associative array\ndeclare -A programs_array\nprograms_array=(\n[minimap2]=${minimap2} \\\n[samtools_sort]=\"${samtools} sort\"\n)\n\n\n###################################################################################\n\n# Exit script if any command fails\nset -e\n\n# Rename orginal FastA to comply with BTK naming requirements\nrsync -av ${orig_fasta} ${genome_fasta}\n\n# Generate checksum for \"new\" FastA\nmd5sum ${genome_fasta} > genome_fasta.md5\n\n# Concatenate all R1 reads\nfor fastq in \"${trimmed_reads_dir}\"/*R1*.fq.gz\ndo\n  echo \"\"\n  echo \"Generating checksum for ${fastq}\"\n  md5sum \"${fastq}\" >> ${fastq_checksums}\n  echo \"Checksum generated for ${fastq}.\"\n\n  echo \"\"\n  echo \"Concatenating ${fastq} to reads_1.fastq.gz\"\n  cat \"${fastq}\" >> reads_1.fastq.gz\n  echo \"Finished concatenating ${fastq} to reads_1.fastq.gz\"\ndone\n\n# Concatenate all R2 reads\nfor fastq in \"${trimmed_reads_dir}\"/*R2*.fq.gz\ndo\n  echo \"\"\n  echo \"Generating checksum for ${fastq}\"\n  md5sum \"${fastq}\" >> ${fastq_checksums}\n  echo \"Checksum generated for ${fastq}.\"\n\n  echo \"\"\n  echo \"Concatenating ${fastq} to reads_2.fastq.gz\"\n  cat \"${fastq}\" >> reads_2.fastq.gz\n  echo \"Finished concatenating ${fastq} to reads_2.fastq.gz\"\ndone\n\n# Run minimap2\n${programs_array[minimap2]} \\\n-ax sr \\\n-t ${threads} \\\n${genome_fasta} \\\nreads_1.fastq.gz \\\nreads_2.fastq.gz \\\n| ${programs_array[samtools_sort]} \\\n--threads ${threads} \\\n--output-fmt BAM \\\n-o ${bam_out}\n\n###################################################################################\n\n# Capture program options\nif [[ \"${#programs_array[@]}\" -gt 0 ]]; then\n  echo \"Logging program options...\"\n  for program in \"${!programs_array[@]}\"\n  do\n    {\n    echo \"Program options for ${program}: \"\n    echo \"\"\n    # Handle samtools help menus\n    if [[ \"${program}\" == \"samtools_index\" ]] \\\n    || [[ \"${program}\" == \"samtools_sort\" ]] \\\n    || [[ \"${program}\" == \"samtools_view\" ]]\n    then\n      ${programs_array[$program]}\n\n    # Handle DIAMOND BLAST menu\n    elif [[ \"${program}\" == \"diamond\" ]]; then\n      ${programs_array[$program]} help\n\n    # Handle NCBI BLASTx menu\n    elif [[ \"${program}\" == \"blastx\" ]]; then\n      ${programs_array[$program]} -help\n    fi\n    ${programs_array[$program]} -h\n    echo \"\"\n    echo \"\"\n    echo \"----------------------------------------------\"\n    echo \"\"\n    echo \"\"\n  } &>> program_options.log || true\n\n    # If MultiQC is in programs_array, copy the config file to this directory.\n    if [[ \"${program}\" == \"multiqc\" ]]; then\n      cp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n    fi\n  done\nfi\n\n# Document programs in PATH (primarily for program version ID)\n{\n  date\n  echo \"\"\n  echo \"System PATH for $SLURM_JOB_ID\"\n  echo \"\"\n  printf \"%0.s-\" {1..10}\n  echo \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n\necho \"Finished logging system PATH\"\n```\n\n\n---\n\n# RESULTS\n\nRuntime was pretty long, ~9 days:\n\n![minimap2 runtime on Mox](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20210415_pgen_minimap2_Panopea-generosa-v1.0_runtime.png?raw=true)\n\nOutput folder:\n\n- [20210415_pgen_minimap2_Panopea-generosa-v1.0/](https://gannet.fish.washington.edu/Atumefaciens/20210415_pgen_minimap2_Panopea-generosa-v1.0/)\n\n  - List of input files/checksums (text):\n\n    - [20210415_pgen_minimap2_Panopea-generosa-v1.0/fastq_checksums.md5](https://gannet.fish.washington.edu/Atumefaciens/20210415_pgen_minimap2_Panopea-generosa-v1.0/fastq_checksums.md5)\n\n  - BAM file (348GB!!!):\n\n    - [20210415_pgen_minimap2_Panopea-generosa-v1.0/20210415_pgen_10x-genomics_Pgen-v1.0-assembly.reads.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20210415_pgen_minimap2_Panopea-generosa-v1.0/20210415_pgen_10x-genomics_Pgen-v1.0-assembly.reads.sorted.bam)\n\n\nNext up, add the BAM file and the BLAST results to BlobToolKit.\n","srcMarkdownNoYaml":"\nTo continue towards getting our [_Panopea generosa_ (Pacific geoduck)](http://en.wikipedia.org/wiki/Geoduck) genome assembly (v1.0) analyzed with [BlobToolKit](https://blobtoolkit.genomehubs.org/), per [this GitHub Issue](https://github.com/RobertsLab/resources/issues/1118), I've decided to run each aspect of the pipeline manually, as I [continue to have issues utilizing the automatic pipeline](https://github.com/blobtoolkit/insdc-pipeline/issues/9). As such, I've run [`minimap2`](https://github.com/lh3/minimap2) according to the [BlobToolKit \"Getting Started\" guide](https://blobtoolkit.genomehubs.org/blobtools2/blobtools2-tutorials/getting-started-with-blobtools2/) on Mox. This will map the [trimmed 10x-Genomics reads from 20210401](https://robertslab.github.io/sams-notebook/posts/2021/2021-04-01-Trimming-P.generosa-10x-Genomics-HiC-FastQs-with-fastp-on-Mox/) to the [Panopea-generosa-v1.0.fa](https://gannet.fish.washington.edu/Atumefaciens/20191105_swoose_pgen_v074_renaming/Panopea-generosa-v1.0.fa) assembly (FastA; 914MB).\n\nSBATCH script (GitHub):\n\n- [20210415_pgen_minimap2_Panopea-generosa-v1.0.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20210415_pgen_minimap2_Panopea-generosa-v1.0.sh)\n\n```shell\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=20210415_pgen_minimap2_Panopea-generosa-v1.0\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=21-00:00:00\n## Memory per node\n#SBATCH --mem=500G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20210415_pgen_minimap2_Panopea-generosa-v1.0\n\n### Map trimmed 10x Genomics reads to Panopea-generosa_v1.0 assembly\n### for use with BlobToolKit\n### Output is BAM file\n\n\n###################################################################################\n# These variables need to be set by user\n\n# Set working directory\nwd=$(pwd)\n\n# Set number of CPUs to use\nthreads=40\n\n# Input/output files\ngenome_fasta=/gscratch/srlab/sam/data/P_generosa/genomes/Panopea-generosa-v1.0.fa\nfastq_checksums=fastq_checksums.md5\ntrimmed_reads_dir=/gscratch/scrubbed/samwhite/outputs/20210401_pgen_fastp_10x-genomics\nbam_out=20210415_pgen_10x-genomics_Pgen-v1.0-assembly.reads.sorted.bam\n\n# Programs\n## Minimap2\nminimap2=/gscratch/srlab/programs/minimap2-2.18_x64-linux/minimap2\n\n## Samtools\nsamtools=\"/gscratch/srlab/programs/samtools-1.10/samtools\"\n\n\n# Programs associative array\ndeclare -A programs_array\nprograms_array=(\n[minimap2]=${minimap2} \\\n[samtools_sort]=\"${samtools} sort\"\n)\n\n\n###################################################################################\n\n# Exit script if any command fails\nset -e\n\n# Rename orginal FastA to comply with BTK naming requirements\nrsync -av ${orig_fasta} ${genome_fasta}\n\n# Generate checksum for \"new\" FastA\nmd5sum ${genome_fasta} > genome_fasta.md5\n\n# Concatenate all R1 reads\nfor fastq in \"${trimmed_reads_dir}\"/*R1*.fq.gz\ndo\n  echo \"\"\n  echo \"Generating checksum for ${fastq}\"\n  md5sum \"${fastq}\" >> ${fastq_checksums}\n  echo \"Checksum generated for ${fastq}.\"\n\n  echo \"\"\n  echo \"Concatenating ${fastq} to reads_1.fastq.gz\"\n  cat \"${fastq}\" >> reads_1.fastq.gz\n  echo \"Finished concatenating ${fastq} to reads_1.fastq.gz\"\ndone\n\n# Concatenate all R2 reads\nfor fastq in \"${trimmed_reads_dir}\"/*R2*.fq.gz\ndo\n  echo \"\"\n  echo \"Generating checksum for ${fastq}\"\n  md5sum \"${fastq}\" >> ${fastq_checksums}\n  echo \"Checksum generated for ${fastq}.\"\n\n  echo \"\"\n  echo \"Concatenating ${fastq} to reads_2.fastq.gz\"\n  cat \"${fastq}\" >> reads_2.fastq.gz\n  echo \"Finished concatenating ${fastq} to reads_2.fastq.gz\"\ndone\n\n# Run minimap2\n${programs_array[minimap2]} \\\n-ax sr \\\n-t ${threads} \\\n${genome_fasta} \\\nreads_1.fastq.gz \\\nreads_2.fastq.gz \\\n| ${programs_array[samtools_sort]} \\\n--threads ${threads} \\\n--output-fmt BAM \\\n-o ${bam_out}\n\n###################################################################################\n\n# Capture program options\nif [[ \"${#programs_array[@]}\" -gt 0 ]]; then\n  echo \"Logging program options...\"\n  for program in \"${!programs_array[@]}\"\n  do\n    {\n    echo \"Program options for ${program}: \"\n    echo \"\"\n    # Handle samtools help menus\n    if [[ \"${program}\" == \"samtools_index\" ]] \\\n    || [[ \"${program}\" == \"samtools_sort\" ]] \\\n    || [[ \"${program}\" == \"samtools_view\" ]]\n    then\n      ${programs_array[$program]}\n\n    # Handle DIAMOND BLAST menu\n    elif [[ \"${program}\" == \"diamond\" ]]; then\n      ${programs_array[$program]} help\n\n    # Handle NCBI BLASTx menu\n    elif [[ \"${program}\" == \"blastx\" ]]; then\n      ${programs_array[$program]} -help\n    fi\n    ${programs_array[$program]} -h\n    echo \"\"\n    echo \"\"\n    echo \"----------------------------------------------\"\n    echo \"\"\n    echo \"\"\n  } &>> program_options.log || true\n\n    # If MultiQC is in programs_array, copy the config file to this directory.\n    if [[ \"${program}\" == \"multiqc\" ]]; then\n      cp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n    fi\n  done\nfi\n\n# Document programs in PATH (primarily for program version ID)\n{\n  date\n  echo \"\"\n  echo \"System PATH for $SLURM_JOB_ID\"\n  echo \"\"\n  printf \"%0.s-\" {1..10}\n  echo \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n\necho \"Finished logging system PATH\"\n```\n\n\n---\n\n# RESULTS\n\nRuntime was pretty long, ~9 days:\n\n![minimap2 runtime on Mox](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20210415_pgen_minimap2_Panopea-generosa-v1.0_runtime.png?raw=true)\n\nOutput folder:\n\n- [20210415_pgen_minimap2_Panopea-generosa-v1.0/](https://gannet.fish.washington.edu/Atumefaciens/20210415_pgen_minimap2_Panopea-generosa-v1.0/)\n\n  - List of input files/checksums (text):\n\n    - [20210415_pgen_minimap2_Panopea-generosa-v1.0/fastq_checksums.md5](https://gannet.fish.washington.edu/Atumefaciens/20210415_pgen_minimap2_Panopea-generosa-v1.0/fastq_checksums.md5)\n\n  - BAM file (348GB!!!):\n\n    - [20210415_pgen_minimap2_Panopea-generosa-v1.0/20210415_pgen_10x-genomics_Pgen-v1.0-assembly.reads.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20210415_pgen_minimap2_Panopea-generosa-v1.0/20210415_pgen_10x-genomics_Pgen-v1.0-assembly.reads.sorted.bam)\n\n\nNext up, add the BAM file and the BLAST results to BlobToolKit.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"Read Mapping - 10x-Genomics Trimmed FastQ Mapped to P.generosa v1.0 Assembly Using Minimap2 for BlobToolKit on Mox","date":"2021-04-15 10:18","tags":["minimap2","Panopea generosa","Pacific geoduck",null,"mox"],"categories":["2021","Miscellaneous"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}