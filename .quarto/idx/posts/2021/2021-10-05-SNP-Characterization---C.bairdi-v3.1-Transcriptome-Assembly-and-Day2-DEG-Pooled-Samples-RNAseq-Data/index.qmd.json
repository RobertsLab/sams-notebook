{"title":"SNP Characterization - C.bairdi v3.1 Transcriptome Assembly and Day2 DEG Pooled Samples RNAseq Data","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"SNP Characterization - C.bairdi v3.1 Transcriptome Assembly and Day2 DEG Pooled Samples RNAseq Data","date":"2021-10-05 06:45","tags":["Tanner crab","bcftools","R project","Chionoecetes bairdi"],"categories":["2021","Tanner Crab RNAseq"]},"headingText":"RESULTS","containsRefs":false,"markdown":"\nI previously identified variants across the four Day 2 DEG pooled RNAseq samples (380822, 380823, 380824, 380825) [on 20210909](https://robertslab.github.io/sams-notebook/posts/2021/2021-09-09-SNP-Identification---C.bairdi-Day-2-DEG-Pooled-Samples-Using-bcftools-on-Mox/) within the `cbai_transcriptome_v3.1` transcriptome assembly. Now, I needed to actually do some analysis on the SNPs for the revisions to the [Tanner crab gene expression paper](https://github.com/RobertsLab/paper-tanner-crab) (GitHub Repo).\n\nI created an R Project and an R Markdown file to perform the analysis:\n\n- [20211005_cbai_SNP_stats](https://github.com/RobertsLab/code/tree/master/r_projects/sam/20211005_cbai_SNP_stats)\n\nThe R Markdown file ([20211005_cbai_SNP_stats/20211005_cbai_SNP_stats.Rmd](https://github.com/RobertsLab/code/blob/master/r_projects/sam/20211005_cbai_SNP_stats/20211005_cbai_SNP_stats.Rmd))will allow for complete reproduction of the analysis, including downloading necessary input files, as well as generating the final figure. Dependencies (i.e. external programs for VCF manipulation, R libraries, etc) are detailed at the beginning of the R Markdown file.\n\n\n---\n\n\nThe `knitr` to markdown rendering of the completed R Markdown file is here:\n\n- [20211005_cbai_SNP_stats/20211005_cbai_SNP_stats.md](https://github.com/RobertsLab/code/blob/master/r_projects/sam/20211005_cbai_SNP_stats/20211005_cbai_SNP_stats.md) (GitHub)\n\n\nRendering is pasted below:\n\n# Explore and extract SNP data from *C.bairdi* transcritpome assembly v3.1\n\nREQUIRES Linux-based system to run all cells properly; some cells will\nnot work on Mac OS!\n\nREQUIRES the following programs:\n\n-   [bcftools](https://github.com/samtools/bcftools)\n\n-   [samtools](https://github.com/samtools/samtools)\n\n-   [seqtk](https://github.com/lh3/seqtk)\n\nREQUIRES the following R libraries and dependencies:\n\n-   `goslim_generic.obo` Downloaded from\n    <http://geneontology.org/docs/go-subset-guide/>\n\n    -   then i moved it to the R library for GSEABase in the extdata\n        folder in addition to using the command here - I think they’re\n        both required.\n\n-   `GSEABase` (BioConductor)\n\n-   `tidyverse`\n\n### Display system info\n\n    ## TODAY'S DATE:\n    ## Thu 07 Oct 2021 12:54:49 PM PDT\n    ## ------------\n    ## \n    ## No LSB modules are available.\n    ## Distributor ID:  Ubuntu\n    ## Description: Ubuntu 20.04.3 LTS\n    ## Release: 20.04\n    ## Codename:    focal\n    ## \n    ## ------------\n    ## HOSTNAME: \n    ## computer\n    ## \n    ## ------------\n    ## Computer Specs:\n    ## \n    ## Architecture:                    x86_64\n    ## CPU op-mode(s):                  32-bit, 64-bit\n    ## Byte Order:                      Little Endian\n    ## Address sizes:                   45 bits physical, 48 bits virtual\n    ## CPU(s):                          2\n    ## On-line CPU(s) list:             0,1\n    ## Thread(s) per core:              1\n    ## Core(s) per socket:              1\n    ## Socket(s):                       2\n    ## NUMA node(s):                    1\n    ## Vendor ID:                       GenuineIntel\n    ## CPU family:                      6\n    ## Model:                           165\n    ## Model name:                      Intel(R) Core(TM) i9-10885H CPU @ 2.40GHz\n    ## Stepping:                        2\n    ## CPU MHz:                         2400.007\n    ## BogoMIPS:                        4800.01\n    ## Hypervisor vendor:               VMware\n    ## Virtualization type:             full\n    ## L1d cache:                       64 KiB\n    ## L1i cache:                       64 KiB\n    ## L2 cache:                        512 KiB\n    ## L3 cache:                        32 MiB\n    ## NUMA node0 CPU(s):               0,1\n    ## Vulnerability Itlb multihit:     KVM: Mitigation: VMX unsupported\n    ## Vulnerability L1tf:              Not affected\n    ## Vulnerability Mds:               Not affected\n    ## Vulnerability Meltdown:          Not affected\n    ## Vulnerability Spec store bypass: Mitigation; Speculative Store Bypass disabled via prctl and seccomp\n    ## Vulnerability Spectre v1:        Mitigation; usercopy/swapgs barriers and __user pointer sanitization\n    ## Vulnerability Spectre v2:        Mitigation; Full generic retpoline, IBPB conditional, IBRS_FW, STIBP disabled, RSB filling\n    ## Vulnerability Srbds:             Not affected\n    ## Vulnerability Tsx async abort:   Not affected\n    ## Flags:                           fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon nopl xtopology tsc_reliable nonstop_tsc cpuid pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single ssbd ibrs ibpb stibp fsgsbase tsc_adjust bmi1 avx2 smep bmi2 invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves arat flush_l1d arch_capabilities\n    ## \n    ## ------------\n    ## \n    ## Memory Specs\n    ## \n    ##               total        used        free      shared  buff/cache   available\n    ## Mem:           54Gi       5.6Gi        43Gi       135Mi       5.3Gi        48Gi\n    ## Swap:         2.0Gi          0B       2.0Gi\n\n### User-defined bash variables\n\nSet program paths for your own computer.\n\nVariables are saved to a “dot file” and that file needs to be sourced in\neach Bash chunk to have access to the Bash variables across Bash chunks.\n\n    {\n    echo \"# CPU threads\"\n    echo 'export threads=8'\n    echo \"\"\n    echo \"# Programs\"\n    echo 'export seqtk=\"/home/sam/programs/seqtk-1.3/seqtk\"'\n    echo 'export bcftools=\"/home/sam/programs/bcftools-1.13/bcftools\"'\n    echo 'export samtools=\"/home/sam/programs/samtools-1.12/samtools\"'\n    echo \"\"\n    } > .rvars\n\n### Input/output files variables\n\n    {\n    echo \"# SNP coverage\"\n    echo 'export SNP_coverage=10'\n    echo \"\"\n    echo \"# SNP quality\"\n    echo 'export SNP_quality=30'\n    echo \"\"\n\n    echo \"# Input files\"\n    echo \"\"\n    echo \"## Transcriptome assembly\"\n    echo 'export orig_fasta_url_dir=\"https://owl.fish.washington.edu/halfshell/genomic-databank\"'\n    echo 'export transcriptome_fasta=\"cbai_transcriptome_v3.1.fasta\"'\n    echo \"\"\n    echo \"## Transcriptome md5 checksum\"\n    echo 'export transcriptome_fasta_md5=\"aeec8ffbf8fa44fb1750caee6abaf68a\"'\n    echo \"\"\n    echo \"## Transcriptome GO terms\"\n    echo 'export cbai_v3_1_GO_url=\"https://gannet.fish.washington.edu/Atumefaciens/20200828_cbai_trinotate_transcriptome-v3.1\"'\n    echo 'export cbai_v3_1_GO=\"20200828.cbai_transcriptome_v3.1.fasta.trinotate.go_annotations.txt\"'\n    echo \"\"\n    echo \"## VCF with variant calls\"\n    echo 'export orig_vcf_url_dir=\"https://gannet.fish.washington.edu/Atumefaciens/20210909-cbai-bcftools-snp_calling\"'\n    echo 'export orig_vcf=\"cbai_v3.1-SNPS.vcf\"'\n    echo \"\"\n\n    echo \"# Output files\"\n    echo 'export transcriptome_SNPS_fasta=\"cbai_transcriptome_v3.1_SNPs-${SNP_quality}Q-${SNP_coverage}x.fasta\"'\n    echo 'export contigs_list=\"cbai_v3.1-SNPS_${SNP_quality}Q-${SNP_coverage}x_contig-IDs.txt\"'\n    echo 'export genes_list=\"cbai_v3.1-SNPS_${SNP_quality}Q-${SNP_coverage}x_gene-IDs.txt\"'\n    echo 'export vcf_filtered=\"cbai_v3.1-SNPS-${SNP_quality}Q-${SNP_coverage}x.vcf\"'\n    echo 'export genes_GO_list\"=cbai_v3.1-SNPS_${SNP_quality}Q-${SNP_coverage}x_GO.tab\"'\n    echo 'export flattened_GO=\"cbai_v3_1-SNPS_${SNP_quality}Q-${SNP_coverage}x_GO.flattened-go.txt\"'\n    echo \"\"\n\n    echo \"# Print formatting\"\n    echo 'export line=\"-------------------------------------------------------------------------------------------------\"'\n    echo \"\"\n    } >> .rvars\n\n### Confirm variables are accessible.\n\n    # Confirm contents of .rvars\n    cat .rvars\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    echo \"\"\n\n    echo \"Confirm variables are accessible.\"\n    echo \"Checking the variable \\$line:\"\n    echo \"${line}\"\n\n    ## # CPU threads\n    ## export threads=8\n    ## \n    ## # Programs\n    ## export seqtk=\"/home/sam/programs/seqtk-1.3/seqtk\"\n    ## export bcftools=\"/home/sam/programs/bcftools-1.13/bcftools\"\n    ## export samtools=\"/home/sam/programs/samtools-1.12/samtools\"\n    ## \n    ## # SNP coverage\n    ## export SNP_coverage=10\n    ## \n    ## # SNP quality\n    ## export SNP_quality=30\n    ## \n    ## # Input files\n    ## \n    ## ## Transcriptome assembly\n    ## export orig_fasta_url_dir=\"https://owl.fish.washington.edu/halfshell/genomic-databank\"\n    ## export transcriptome_fasta=\"cbai_transcriptome_v3.1.fasta\"\n    ## \n    ## ## Transcriptome md5 checksum\n    ## export transcriptome_fasta_md5=\"aeec8ffbf8fa44fb1750caee6abaf68a\"\n    ## \n    ## ## Transcriptome GO terms\n    ## export cbai_v3_1_GO_url=\"https://gannet.fish.washington.edu/Atumefaciens/20200828_cbai_trinotate_transcriptome-v3.1\"\n    ## export cbai_v3_1_GO=\"20200828.cbai_transcriptome_v3.1.fasta.trinotate.go_annotations.txt\"\n    ## \n    ## ## VCF with variant calls\n    ## export orig_vcf_url_dir=\"https://gannet.fish.washington.edu/Atumefaciens/20210909-cbai-bcftools-snp_calling\"\n    ## export orig_vcf=\"cbai_v3.1-SNPS.vcf\"\n    ## \n    ## # Output files\n    ## export transcriptome_SNPS_fasta=\"cbai_transcriptome_v3.1_SNPs-${SNP_quality}Q-${SNP_coverage}x.fasta\"\n    ## export contigs_list=\"cbai_v3.1-SNPS_${SNP_quality}Q-${SNP_coverage}x_contig-IDs.txt\"\n    ## export genes_list=\"cbai_v3.1-SNPS_${SNP_quality}Q-${SNP_coverage}x_gene-IDs.txt\"\n    ## export vcf_filtered=\"cbai_v3.1-SNPS-${SNP_quality}Q-${SNP_coverage}x.vcf\"\n    ## export genes_GO_list\"=cbai_v3.1-SNPS_${SNP_quality}Q-${SNP_coverage}x_GO.tab\"\n    ## export flattened_GO=\"cbai_v3_1-SNPS_${SNP_quality}Q-${SNP_coverage}x_GO.flattened-go.txt\"\n    ## \n    ## # Print formatting\n    ## export line=\"-------------------------------------------------------------------------------------------------\"\n    ## \n    ## \n    ## Confirm variables are accessible.\n    ## Checking the variable $line:\n    ## -------------------------------------------------------------------------------------------------\n\n### Get VCF\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    # Download with wget. Use --no-check-certificate to avoid issues with Gannet certificate\n    # Use --quiet option to prevent wget output from printing too many lines to notebook\n    wget --continue --no-check-certificate --quiet ${orig_vcf_url_dir}/${orig_vcf} \\\n    --directory-prefix ./data\n\n    wget --continue --no-check-certificate --quiet ${orig_vcf_url_dir}/checksums.md5 \\\n    --directory-prefix ./data\n\n    # Confirm checksum for transcriptome FastA is good\n    cd ./data\n    md5sum --check checksums.md5 | grep \"${orig_vcf}\"\n\n    ## md5sum: 20210909-cbai-bcftools-snp_calling.sh: No such file or directory\n    ## md5sum: input_bam_checksums.md5: No such file or directory\n    ## md5sum: slurm-2194047.out: No such file or directory\n    ## md5sum: WARNING: 3 listed files could not be read\n    ## cbai_v3.1-SNPS.vcf: OK\n\n### Get transcriptome\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    # Download with wget. Use --no-check-certificate to avoid issues with Gannet certificate\n    # Use --quiet option to prevent wget output from printing too many lines to notebook\n    wget --continue --no-check-certificate --quiet ${orig_fasta_url_dir}/${transcriptome_fasta} \\\n    --directory-prefix ./data\n\n\n    # Confirm checksum for transcriptome FastA is good\n    # Uses grep to highlight the desired file.\n    if [ \"$(md5sum ./data/${transcriptome_fasta} | awk '{print $1}')\" = \"${transcriptome_fasta_md5}\" ]; then echo \"Checksums match\"; fi\n\n    ## Checksums match\n\n### Get transcriptome GO annotations file\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    # Download with wget. Use --no-check-certificate to avoid issues with Gannet certificate\n    # Use --quiet option to prevent wget output from printing too many lines to notebook\n    wget --continue --no-check-certificate --quiet ${cbai_v3_1_GO_url}/${cbai_v3_1_GO} \\\n    --directory-prefix ./data\n\n    echo \"\"\n\n    head ./data/${cbai_v3_1_GO}\n\n    ## \n    ## TRINITY_DN100045_c0_g1   GO:0000323,GO:0001508,GO:0002027,GO:0003279,GO:0003283,GO:0003674,GO:0005198,GO:0005200,GO:0005488,GO:0005515,GO:0005575,GO:0005739,GO:0005764,GO:0005768,GO:0005769,GO:0005773,GO:0005829,GO:0005856,GO:0005886,GO:0005911,GO:0006810,GO:0006811,GO:0006812,GO:0006816,GO:0006873,GO:0006874,GO:0006875,GO:0006888,GO:0006897,GO:0006937,GO:0006942,GO:0007009,GO:0007043,GO:0007154,GO:0007165,GO:0008016,GO:0008092,GO:0008104,GO:0008150,GO:0009893,GO:0009987,GO:0010033,GO:0010468,GO:0010522,GO:0010604,GO:0010628,GO:0010646,GO:0010880,GO:0010881,GO:0010882,GO:0010927,GO:0010959,GO:0014704,GO:0015031,GO:0015833,GO:0016020,GO:0016043,GO:0016192,GO:0016323,GO:0016324,GO:0019222,GO:0019722,GO:0019725,GO:0019899,GO:0019900,GO:0019901,GO:0019932,GO:0022607,GO:0022898,GO:0023051,GO:0023052,GO:0030001,GO:0030003,GO:0030018,GO:0030054,GO:0030315,GO:0030507,GO:0030674,GO:0030913,GO:0031410,GO:0031430,GO:0031647,GO:0031672,GO:0031982,GO:0032409,GO:0032411,GO:0032412,GO:0032414,GO:0032501,GO:0032502,GO:0032844,GO:0032879,GO:0032970,GO:0033036,GO:0033267,GO:0033292,GO:0033365,GO:0034329,GO:0034330,GO:0034394,GO:0034613,GO:0034762,GO:0034764,GO:0034765,GO:0034767,GO:0035556,GO:0035637,GO:0036309,GO:0036371,GO:0042221,GO:0042383,GO:0042391,GO:0042592,GO:0042886,GO:0043034,GO:0043194,GO:0043226,GO:0043227,GO:0043228,GO:0043229,GO:0043231,GO:0043232,GO:0043266,GO:0043268,GO:0043269,GO:0043270,GO:0044057,GO:0044093,GO:0044291,GO:0044325,GO:0044422,GO:0044424,GO:0044425,GO:0044444,GO:0044449,GO:0044456,GO:0044459,GO:0044463,GO:0044464,GO:0044699,GO:0044700,GO:0044707,GO:0044763,GO:0044767,GO:0044802,GO:0045121,GO:0045184,GO:0045211,GO:0045216,GO:0046907,GO:0048193,GO:0048518,GO:0048522,GO:0048646,GO:0048856,GO:0048878,GO:0050789,GO:0050794,GO:0050801,GO:0050821,GO:0050896,GO:0051049,GO:0051050,GO:0051117,GO:0051179,GO:0051234,GO:0051239,GO:0051270,GO:0051279,GO:0051282,GO:0051597,GO:0051641,GO:0051649,GO:0051899,GO:0051924,GO:0051928,GO:0055037,GO:0055065,GO:0055074,GO:0055080,GO:0055082,GO:0055117,GO:0060090,GO:0060255,GO:0060306,GO:0060307,GO:0060341,GO:0061024,GO:0061337,GO:0065007,GO:0065008,GO:0065009,GO:0070296,GO:0070727,GO:0070838,GO:0070972,GO:0071702,GO:0071705,GO:0071840,GO:0072503,GO:0072507,GO:0072511,GO:0072657,GO:0072659,GO:0086001,GO:0086002,GO:0086004,GO:0086005,GO:0086010,GO:0086012,GO:0086014,GO:0086015,GO:0086046,GO:0086065,GO:0086066,GO:0086070,GO:0086091,GO:0090257,GO:0090279,GO:0097060,GO:0097458,GO:0097708,GO:0098589,GO:0098590,GO:0098771,GO:0098857,GO:0098900,GO:0098901,GO:0098907,GO:0098910,GO:0099623,GO:0140031,GO:1901016,GO:1901018,GO:1901019,GO:1901021,GO:1901379,GO:1901381,GO:1902578,GO:1902580,GO:1903115,GO:1903169,GO:1903522,GO:1903779,GO:1904062,GO:1904064,GO:1904427,GO:1990778,GO:2000021,GO:2001257,GO:2001259\n    ## TRINITY_DN10007_c0_g1    GO:0003674,GO:0003824,GO:0004497,GO:0005488,GO:0005506,GO:0005575,GO:0006082,GO:0006629,GO:0006631,GO:0008150,GO:0008152,GO:0009987,GO:0016021,GO:0016491,GO:0016705,GO:0016712,GO:0016713,GO:0018685,GO:0019752,GO:0020037,GO:0031224,GO:0032787,GO:0043167,GO:0043169,GO:0043436,GO:0044237,GO:0044238,GO:0044255,GO:0044281,GO:0044425,GO:0044699,GO:0044710,GO:0044763,GO:0046872,GO:0046906,GO:0046914,GO:0055114,GO:0070330,GO:0071704,GO:0097159,GO:1901363\n    ## TRINITY_DN10008_c0_gn    ## TRINITY_DN10009_c0_g1    GO:0003674,GO:0005488,GO:0005515,GO:0005575,GO:0005768,GO:0006810,GO:0008104,GO:0008150,GO:0015031,GO:0015833,GO:0016192,GO:0016197,GO:0031410,GO:0031982,GO:0033036,GO:0042886,GO:0043226,GO:0043227,GO:0043229,GO:0044424,GO:0044444,GO:0044464,GO:0045184,GO:0051179,GO:0051234,GO:0071702,GO:0071705,GO:0097708,GO:0098876,GO:1990126\n    ## TRINITY_DN1000_c1_g1 GO:0005575,GO:0005634,GO:0005737,GO:0008150,GO:0010494,GO:0010717,GO:0030529,GO:0032991,GO:0035770,GO:0036464,GO:0043226,GO:0043227,GO:0043228,GO:0043229,GO:0043231,GO:0043232,GO:0044424,GO:0044444,GO:0044464,GO:0045595,GO:0050789,GO:0050793,GO:0050794,GO:0051239,GO:0065007,GO:1990904,GO:2000026\n    ## TRINITY_DN10011_c0_g1    GO:0002082,GO:0003674,GO:0003824,GO:0004129,GO:0005215,GO:0005575,GO:0005739,GO:0005746,GO:0006140,GO:0006461,GO:0006996,GO:0007005,GO:0008150,GO:0008324,GO:0009055,GO:0009987,GO:0015002,GO:0015075,GO:0015077,GO:0015078,GO:0016021,GO:0016043,GO:0016491,GO:0016675,GO:0016676,GO:0019219,GO:0019220,GO:0019222,GO:0022607,GO:0022857,GO:0022890,GO:0022891,GO:0022892,GO:0031224,GO:0031323,GO:0034622,GO:0042325,GO:0043226,GO:0043227,GO:0043229,GO:0043231,GO:0043467,GO:0043623,GO:0043933,GO:0044422,GO:0044424,GO:0044425,GO:0044429,GO:0044444,GO:0044446,GO:0044455,GO:0044464,GO:0050789,GO:0050794,GO:0051171,GO:0051174,GO:0065003,GO:0065007,GO:0070469,GO:0071822,GO:0071840,GO:0080090,GO:0097250,GO:1900542,GO:1903578\n    ## TRINITY_DN100166_c0_g1   GO:0003674,GO:0003676,GO:0003677,GO:0005488,GO:0005575,GO:0005634,GO:0006355,GO:0008150,GO:0009889,GO:0010468,GO:0010556,GO:0019219,GO:0019222,GO:0031323,GO:0031326,GO:0043167,GO:0043169,GO:0043226,GO:0043227,GO:0043229,GO:0043231,GO:0044424,GO:0044464,GO:0046872,GO:0050789,GO:0050794,GO:0051171,GO:0051252,GO:0060255,GO:0065007,GO:0080090,GO:0097159,GO:1901363,GO:1903506,GO:2000112,GO:2001141\n    ## TRINITY_DN10017_c0_g1    GO:0000375,GO:0000377,GO:0000381,GO:0000398,GO:0003674,GO:0003676,GO:0003723,GO:0005488,GO:0005575,GO:0006139,GO:0006396,GO:0006397,GO:0006725,GO:0006807,GO:0007275,GO:0008150,GO:0008152,GO:0008380,GO:0009987,GO:0010468,GO:0016070,GO:0016071,GO:0016604,GO:0016607,GO:0019219,GO:0019222,GO:0031323,GO:0032501,GO:0032502,GO:0034641,GO:0043170,GO:0043484,GO:0044237,GO:0044238,GO:0044260,GO:0044422,GO:0044424,GO:0044428,GO:0044446,GO:0044451,GO:0044464,GO:0044699,GO:0044707,GO:0044767,GO:0045292,GO:0046483,GO:0048024,GO:0048856,GO:0050684,GO:0050789,GO:0050794,GO:0051171,GO:0051252,GO:0060255,GO:0065007,GO:0071704,GO:0080090,GO:0090304,GO:0097159,GO:1901360,GO:1901363,GO:1903311\n    ## TRINITY_DN1001_c0_g1 GO:0000096,GO:0000097,GO:0003674,GO:0003824,GO:0003962,GO:0004121,GO:0004123,GO:0005488,GO:0005575,GO:0005737,GO:0006082,GO:0006520,GO:0006534,GO:0006555,GO:0006790,GO:0006807,GO:0008150,GO:0008152,GO:0008652,GO:0009058,GO:0009066,GO:0009067,GO:0009069,GO:0009070,GO:0009086,GO:0009092,GO:0009987,GO:0016053,GO:0016740,GO:0016765,GO:0016829,GO:0016846,GO:0019343,GO:0019344,GO:0019346,GO:0019752,GO:0019842,GO:0030170,GO:0036094,GO:0043167,GO:0043168,GO:0043436,GO:0044237,GO:0044238,GO:0044249,GO:0044272,GO:0044281,GO:0044283,GO:0044424,GO:0044464,GO:0044699,GO:0044710,GO:0044711,GO:0044763,GO:0046394,GO:0047804,GO:0048037,GO:0050667,GO:0070279,GO:0071704,GO:0097159,GO:1901363,GO:1901564,GO:1901566,GO:1901576,GO:1901605,GO:1901607\n    ## TRINITY_DN10023_c0_g1    GO:0005575,GO:0005634,GO:0005730,GO:0005737,GO:0008150,GO:0022613,GO:0042254,GO:0043226,GO:0043227,GO:0043228,GO:0043229,GO:0043231,GO:0043232,GO:0044085,GO:0044422,GO:0044424,GO:0044428,GO:0044446,GO:0044464,GO:0071840\n\n### Inspect original VCF\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    echo \"'head' view of ${orig_vcf}:\"\n    echo \"\"\n    head \"./data/${orig_vcf}\"\n    echo \"\"\n    echo \"End of 'head' view of ${orig_vcf}\"\n    echo \"\"\n    echo \"${line}\"\n    echo \"\"\n\n    echo \"VCF header info:\"\n    echo \"\"\n\n    # Capture first line of header (skipping list of contigs)\n    begin=$(\"${bcftools}\" view --header-only ./data/${orig_vcf} \\\n    | grep --line-number \"##ALT=<ID\" \\\n    | awk -F\":\" '{print $1}')\n\n    # Caputure last line of header\n    end=$(\"${bcftools}\" view --header-only ./data/${orig_vcf} | wc -l)\n\n    # Use sed to print range of lines\n    sed --quiet \"${begin},${end} p\" ./data/${orig_vcf}\n    echo \"\"\n    echo \"${line}\"\n    echo \"\"\n\n    echo \"List of samples in VCF:\"\n    echo \"\"\n    ${bcftools} query --list-samples ./data/${orig_vcf}\n\n    ## 'head' view of cbai_v3.1-SNPS.vcf:\n    ## \n    ## ##fileformat=VCFv4.2\n    ## ##FILTER=<ID=PASS,Description=\"All filters passed\">\n    ## ##bcftoolsVersion=1.13+htslib-1.13\n    ## ##bcftoolsCommand=mpileup --fasta-ref /gscratch/srlab/sam/data/C_bairdi/transcriptomes/cbai_transcriptome_v3.1.fasta --threads 40 --output-type u /gscratch/scrubbed/samwhite/outputs/20210908-cbai-hisat2-cbai_transcriptome_v3.1/380822.sorted.bam /gscratch/scrubbed/samwhite/outputs/20210908-cbai-hisat2-cbai_transcriptome_v3.1/380823.sorted.bam /gscratch/scrubbed/samwhite/outputs/20210908-cbai-hisat2-cbai_transcriptome_v3.1/380824.sorted.bam /gscratch/scrubbed/samwhite/outputs/20210908-cbai-hisat2-cbai_transcriptome_v3.1/380825.sorted.bam\n    ## ##reference=file:///gscratch/srlab/sam/data/C_bairdi/transcriptomes/cbai_transcriptome_v3.1.fasta\n    ## ##contig=<ID=TRINITY_DN5604_c0_g2_i1,length=2325>\n    ## ##contig=<ID=TRINITY_DN9_c4_g1_i10,length=1025>\n    ## ##contig=<ID=TRINITY_DN9_c4_g1_i9,length=999>\n    ## ##contig=<ID=TRINITY_DN38_c0_g3_i1,length=2357>\n    ## ##contig=<ID=TRINITY_DN81_c0_g1_i9,length=1451>\n    ## \n    ## End of 'head' view of cbai_v3.1-SNPS.vcf\n    ## \n    ## -------------------------------------------------------------------------------------------------\n    ## \n    ## VCF header info:\n    ## \n    ## ##ALT=<ID=*,Description=\"Represents allele(s) other than observed.\">\n    ## ##INFO=<ID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\">\n    ## ##INFO=<ID=IDV,Number=1,Type=Integer,Description=\"Maximum number of raw reads supporting an indel\">\n    ## ##INFO=<ID=IMF,Number=1,Type=Float,Description=\"Maximum fraction of raw reads supporting an indel\">\n    ## ##INFO=<ID=DP,Number=1,Type=Integer,Description=\"Raw read depth\">\n    ## ##INFO=<ID=VDB,Number=1,Type=Float,Description=\"Variant Distance Bias for filtering splice-site artefacts in RNA-seq data (bigger is better)\",Version=\"3\">\n    ## ##INFO=<ID=RPBZ,Number=1,Type=Float,Description=\"Mann-Whitney U-z test of Read Position Bias (closer to 0 is better)\">\n    ## ##INFO=<ID=MQBZ,Number=1,Type=Float,Description=\"Mann-Whitney U-z test of Mapping Quality Bias (closer to 0 is better)\">\n    ## ##INFO=<ID=BQBZ,Number=1,Type=Float,Description=\"Mann-Whitney U-z test of Base Quality Bias (closer to 0 is better)\">\n    ## ##INFO=<ID=MQSBZ,Number=1,Type=Float,Description=\"Mann-Whitney U-z test of Mapping Quality vs Strand Bias (closer to 0 is better)\">\n    ## ##INFO=<ID=SCBZ,Number=1,Type=Float,Description=\"Mann-Whitney U-z test of Soft-Clip Length Bias (closer to 0 is better)\">\n    ## ##INFO=<ID=FS,Number=1,Type=Float,Description=\"Phred-scaled p-value using Fisher's exact test to detect strand bias\">\n    ## ##INFO=<ID=SGB,Number=1,Type=Float,Description=\"Segregation based metric.\">\n    ## ##INFO=<ID=MQ0F,Number=1,Type=Float,Description=\"Fraction of MQ0 reads (smaller is better)\">\n    ## ##FORMAT=<ID=PL,Number=G,Type=Integer,Description=\"List of Phred-scaled genotype likelihoods\">\n    ## ##FORMAT=<ID=GT,Number=1,Type=String,Description=\"Genotype\">\n    ## ##INFO=<ID=AC,Number=A,Type=Integer,Description=\"Allele count in genotypes for each ALT allele, in the same order as listed\">\n    ## ##INFO=<ID=AN,Number=1,Type=Integer,Description=\"Total number of alleles in called genotypes\">\n    ## ##INFO=<ID=DP4,Number=4,Type=Integer,Description=\"Number of high-quality ref-forward , ref-reverse, alt-forward and alt-reverse bases\">\n    ## ##INFO=<ID=MQ,Number=1,Type=Integer,Description=\"Average mapping quality\">\n    ## ##bcftools_callVersion=1.13+htslib-1.13\n    ## ##bcftools_callCommand=call --output-type v --multiallelic-caller --variants-only --threads 40; Date=Fri Sep 10 21:20:44 2021\n    ## #CHROM   POS ID  REF ALT QUAL    FILTER  INFO    FORMAT  d2_uninfected_decreased-temp    d2_infected_decreased-temp  d2_uninfected_elevated-temp d2_infected_elevated-temp\n    ## TRINITY_DN5604_c0_g2_i1  35  .   A   C   37.0646 .   DP=3;VDB=0.14;SGB=-0.314421;RPBZ=-1.22474;FS=0;MQ0F=0;AC=3;AN=4;DP4=1,0,2,0;MQ=60   GT:PL   ./.:0,0,0   0/1:31,0,31 ./.:0,0,0   1/1:37,3,0\n    ## TRINITY_DN5604_c0_g2_i1  391 .   C   G   71.5526 .   DP=3;VDB=0.6;SGB=-0.314421;FS=0;MQ0F=0;AC=4;AN=4;DP4=0,0,0,2;MQ=60  GT:PL   ./.:0,0,0   1/1:60,3,0  ./.:0,0,0   1/1:37,3,0\n    ## \n    ## -------------------------------------------------------------------------------------------------\n    ## \n    ## List of samples in VCF:\n    ## \n    ## d2_uninfected_decreased-temp\n    ## d2_infected_decreased-temp\n    ## d2_uninfected_elevated-temp\n    ## d2_infected_elevated-temp\n\n### Subset VCF to minimum coverage and quality\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    # Subset VCF to only SNPs with ${SNP_coverage}x raw read coverage\n    # and quality >= ${SNP_qual}\n    \"${bcftools}\" filter \\\n    --include \"TYPE='snp' & MIN(DP)>=${SNP_coverage} & QUAL>=${SNP_quality}\" \\\n    --threads ${threads} \\\n    ./data/${orig_vcf} \\\n    > ./analyses/${vcf_filtered}\n\n### Inspect filtered VCF\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    echo \"'head' view of ${vcf_filtered}:\"\n    echo \"\"\n    head \"./analyses/${vcf_filtered}\"\n    echo \"\"\n    echo \"End of 'head' view of ${vcf_filtered}\"\n    echo \"\"\n    echo \"${line}\"\n    echo \"\"\n\n    echo \"VCF header info:\"\n    echo \"\"\n\n    # Capture first line of header (skipping list of contigs)\n    begin=$(\"${bcftools}\" view --header-only ./analyses/${vcf_filtered} \\\n    | grep --line-number \"##ALT=<ID\" \\\n    | awk -F\":\" '{print $1}')\n\n    # Caputure last line of header\n    end=$(\"${bcftools}\" view --header-only ./analyses/${vcf_filtered} | wc -l)\n\n    # Use sed to print range of lines\n     sed --quiet \"${begin},${end} p\" ./analyses/${vcf_filtered}\n\n    echo \"\"\n    echo \"${line}\"\n    echo \"\"\n\n    echo \"List of samples in VCF:\"\n    echo \"\"\n    ${bcftools} query --list-samples ./analyses/${vcf_filtered}\n\n    ## 'head' view of cbai_v3.1-SNPS-30Q-10x.vcf:\n    ## \n    ## ##fileformat=VCFv4.2\n    ## ##FILTER=<ID=PASS,Description=\"All filters passed\">\n    ## ##bcftoolsVersion=1.13+htslib-1.13\n    ## ##bcftoolsCommand=mpileup --fasta-ref /gscratch/srlab/sam/data/C_bairdi/transcriptomes/cbai_transcriptome_v3.1.fasta --threads 40 --output-type u /gscratch/scrubbed/samwhite/outputs/20210908-cbai-hisat2-cbai_transcriptome_v3.1/380822.sorted.bam /gscratch/scrubbed/samwhite/outputs/20210908-cbai-hisat2-cbai_transcriptome_v3.1/380823.sorted.bam /gscratch/scrubbed/samwhite/outputs/20210908-cbai-hisat2-cbai_transcriptome_v3.1/380824.sorted.bam /gscratch/scrubbed/samwhite/outputs/20210908-cbai-hisat2-cbai_transcriptome_v3.1/380825.sorted.bam\n    ## ##reference=file:///gscratch/srlab/sam/data/C_bairdi/transcriptomes/cbai_transcriptome_v3.1.fasta\n    ## ##contig=<ID=TRINITY_DN5604_c0_g2_i1,length=2325>\n    ## ##contig=<ID=TRINITY_DN9_c4_g1_i10,length=1025>\n    ## ##contig=<ID=TRINITY_DN9_c4_g1_i9,length=999>\n    ## ##contig=<ID=TRINITY_DN38_c0_g3_i1,length=2357>\n    ## ##contig=<ID=TRINITY_DN81_c0_g1_i9,length=1451>\n    ## \n    ## End of 'head' view of cbai_v3.1-SNPS-30Q-10x.vcf\n    ## \n    ## -------------------------------------------------------------------------------------------------\n    ## \n    ## VCF header info:\n    ## \n    ## ##ALT=<ID=*,Description=\"Represents allele(s) other than observed.\">\n    ## ##INFO=<ID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\">\n    ## ##INFO=<ID=IDV,Number=1,Type=Integer,Description=\"Maximum number of raw reads supporting an indel\">\n    ## ##INFO=<ID=IMF,Number=1,Type=Float,Description=\"Maximum fraction of raw reads supporting an indel\">\n    ## ##INFO=<ID=DP,Number=1,Type=Integer,Description=\"Raw read depth\">\n    ## ##INFO=<ID=VDB,Number=1,Type=Float,Description=\"Variant Distance Bias for filtering splice-site artefacts in RNA-seq data (bigger is better)\",Version=\"3\">\n    ## ##INFO=<ID=RPBZ,Number=1,Type=Float,Description=\"Mann-Whitney U-z test of Read Position Bias (closer to 0 is better)\">\n    ## ##INFO=<ID=MQBZ,Number=1,Type=Float,Description=\"Mann-Whitney U-z test of Mapping Quality Bias (closer to 0 is better)\">\n    ## ##INFO=<ID=BQBZ,Number=1,Type=Float,Description=\"Mann-Whitney U-z test of Base Quality Bias (closer to 0 is better)\">\n    ## ##INFO=<ID=MQSBZ,Number=1,Type=Float,Description=\"Mann-Whitney U-z test of Mapping Quality vs Strand Bias (closer to 0 is better)\">\n    ## ##INFO=<ID=SCBZ,Number=1,Type=Float,Description=\"Mann-Whitney U-z test of Soft-Clip Length Bias (closer to 0 is better)\">\n    ## ##INFO=<ID=FS,Number=1,Type=Float,Description=\"Phred-scaled p-value using Fisher's exact test to detect strand bias\">\n    ## ##INFO=<ID=SGB,Number=1,Type=Float,Description=\"Segregation based metric.\">\n    ## ##INFO=<ID=MQ0F,Number=1,Type=Float,Description=\"Fraction of MQ0 reads (smaller is better)\">\n    ## ##FORMAT=<ID=PL,Number=G,Type=Integer,Description=\"List of Phred-scaled genotype likelihoods\">\n    ## ##FORMAT=<ID=GT,Number=1,Type=String,Description=\"Genotype\">\n    ## ##INFO=<ID=AC,Number=A,Type=Integer,Description=\"Allele count in genotypes for each ALT allele, in the same order as listed\">\n    ## ##INFO=<ID=AN,Number=1,Type=Integer,Description=\"Total number of alleles in called genotypes\">\n    ## ##INFO=<ID=DP4,Number=4,Type=Integer,Description=\"Number of high-quality ref-forward , ref-reverse, alt-forward and alt-reverse bases\">\n    ## ##INFO=<ID=MQ,Number=1,Type=Integer,Description=\"Average mapping quality\">\n    ## ##bcftools_callVersion=1.13+htslib-1.13\n    ## ##bcftools_callCommand=call --output-type v --multiallelic-caller --variants-only --threads 40; Date=Fri Sep 10 21:20:44 2021\n    ## ##bcftools_filterVersion=1.13+htslib-1.13\n    ## ##bcftools_filterCommand=filter --include 'TYPE='snp' & MIN(DP)>=10 & QUAL>=30' --threads 8 ./data/cbai_v3.1-SNPS.vcf; Date=Thu Oct  7 12:55:06 2021\n    ## #CHROM   POS ID  REF ALT QUAL    FILTER  INFO    FORMAT  d2_uninfected_decreased-temp    d2_infected_decreased-temp  d2_uninfected_elevated-temp d2_infected_elevated-temp\n    ## TRINITY_DN9_c4_g1_i10    661 .   T   C   125.719 PASS    DP=139;VDB=3.781e-05;SGB=-11.5772;RPBZ=-0.349139;MQBZ=0.473562;MQSBZ=0.168907;BQBZ=3.68777;SCBZ=-3.2251;FS=0;MQ0F=0.00719424;AC=2;AN=8;DP4=44,55,5,6;MQ=58  GT:PL   0/1:89,0,255    0/0:0,60,255    0/1:77,0,196    0/0:0,18,255\n    ## TRINITY_DN9_c4_g1_i10    662 .   G   A   125.924 PASS    DP=139;VDB=3.781e-05;SGB=-11.5772;RPBZ=-0.349216;MQBZ=0.473562;MQSBZ=0.168907;BQBZ=3.85055;SCBZ=-3.22016;FS=0;MQ0F=0.00719424;AC=2;AN=8;DP4=44,55,5,6;MQ=58 GT:PL   0/1:89,0,255    0/0:0,60,255    0/1:77,0,199    0/0:0,11,255\n    ## \n    ## -------------------------------------------------------------------------------------------------\n    ## \n    ## List of samples in VCF:\n    ## \n    ## d2_uninfected_decreased-temp\n    ## d2_infected_decreased-temp\n    ## d2_uninfected_elevated-temp\n    ## d2_infected_elevated-temp\n\n### Extract Transcripts Having SNPs with `${SNP_coverage}x` Read Coverage and Quality &gt;= `${SNP_qual}`\n\nThe resulting FastA is useful to use in IGV, so that we don’t have to\ndeal with browsing contigs with no variants.\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    # List of FastA IDs with ${SNP_coverage}x SNP coverage\n    # Uses awk to skip all lines beginning with '#'\n    awk '/^[^#]/{print $1}' ./analyses/${vcf_filtered} \\\n    | sort -u \\\n    > ./analyses/${contigs_list}\n\n    # Use seqtk to generate a FastA from original transcriptome assembly and list of contigs with ${SNP_coverage}x SNP coverage\n    \"${seqtk}\" subseq ./data/${transcriptome_fasta} ./analyses/${contigs_list} > ./data/${transcriptome_SNPS_fasta}\n\n    # Generate FastA index file for new FastA\n    \"${samtools}\" faidx ./data/${transcriptome_SNPS_fasta}\n\n    ls -ltrh ./analyses\n\n    ## total 22M\n    ## -rw-rw-r-- 1 sam sam  22M Oct  7 12:55 cbai_v3.1-SNPS-30Q-10x.vcf\n    ## -rw-rw-r-- 1 sam sam 423K Oct  7 12:55 cbai_v3.1-SNPS_30Q-10x_contig-IDs.txt\n\n### Compare number of original transcripts with number of those with SNPs\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    for fasta in ./data/*.fasta\n    do\n      grep --count --with-filename \"^>\" ${fasta}\n    done | column -t -s \":\"\n\n    ## ./data/cbai_transcriptome_v3.1.fasta               78649\n    ## ./data/cbai_transcriptome_v3.1_SNPs-30Q-10x.fasta  17680\n\n## SNP Stats\n\n### Summary stats\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    # Shows summary stats for all samples\n    ${bcftools} stats \\\n    --samples - \\\n    ./analyses/${vcf_filtered} \\\n    | head -n 31\n\n    ## # This file was produced by bcftools stats (1.13+htslib-1.13) and can be plotted using plot-vcfstats.\n    ## # The command line was:  bcftools stats  --samples - ./analyses/cbai_v3.1-SNPS-30Q-10x.vcf\n    ## #\n    ## # Definition of sets:\n    ## # ID [2]id   [3]tab-separated file names\n    ## ID   0   ./analyses/cbai_v3.1-SNPS-30Q-10x.vcf\n    ## # SN, Summary numbers:\n    ## #   number of records   .. number of data rows in the VCF\n    ## #   number of no-ALTs   .. reference-only sites, ALT is either \".\" or identical to REF\n    ## #   number of SNPs      .. number of rows with a SNP\n    ## #   number of MNPs      .. number of rows with a MNP, such as CC>TT\n    ## #   number of indels    .. number of rows with an indel\n    ## #   number of others    .. number of rows with other type, for example a symbolic allele or\n    ## #                          a complex substitution, such as ACT>TCGA\n    ## #   number of multiallelic sites     .. number of rows with multiple alternate alleles\n    ## #   number of multiallelic SNP sites .. number of rows with multiple alternate alleles, all SNPs\n    ## # \n    ## #   Note that rows containing multiple types will be counted multiple times, in each\n    ## #   counter. For example, a row with a SNP and an indel increments both the SNP and\n    ## #   the indel counter.\n    ## # \n    ## # SN [2]id   [3]key  [4]value\n    ## SN   0   number of samples:  4\n    ## SN   0   number of records:  79753\n    ## SN   0   number of no-ALTs:  0\n    ## SN   0   number of SNPs: 79753\n    ## SN   0   number of MNPs: 0\n    ## SN   0   number of indels:   0\n    ## SN   0   number of others:   0\n    ## SN   0   number of multiallelic sites:   785\n    ## SN   0   number of multiallelic SNP sites:   785\n\n#### Transitions/Transversions and Substitution types\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    ${bcftools} stats \\\n    --samples - \\\n    ./analyses/${vcf_filtered} \\\n    | grep \"ST\"\n\n    ## # TSTV, transitions/transversions:\n    ## # TSTV   [2]id   [3]ts   [4]tv   [5]ts/tv    [6]ts (1st ALT) [7]tv (1st ALT) [8]ts/tv (1st ALT)\n    ## TSTV 0   50173   30371   1.65    49905   29848   1.67\n    ## # ST, Substitution types:\n    ## # ST [2]id   [3]type [4]count\n    ## ST   0   A>C 4141\n    ## ST   0   A>G 10450\n    ## ST   0   A>T 3428\n    ## ST   0   C>A 4425\n    ## ST   0   C>G 3420\n    ## ST   0   C>T 14934\n    ## ST   0   G>A 14055\n    ## ST   0   G>C 3373\n    ## ST   0   G>T 3944\n    ## ST   0   T>A 3635\n    ## ST   0   T>C 10734\n    ## ST   0   T>G 4005\n\n### Individual sample stats\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    # Shows samples stats.\n    # Uses sed/column/tail to format output nicely\n    ${bcftools} stats \\\n    --samples - \\\n    ./analyses/${vcf_filtered} \\\n    | grep \"PSC\" \\\n    | sed 's/^# *//' \\\n    | sed 's/average depth/avg_dp/' \\\n    | column -t \\\n    | tail -n 5\n\n    ## PSC   [2]id       [3]sample                     [4]nRefHom  [5]nNonRefHom  [6]nHets  [7]nTransitions  [8]nTransversions  [9]nIndels  [10]avg_dp  [11]nSingletons  [12]nHapRef  [13]nHapAlt  [14]nMissing\n    ## PSC   0           d2_uninfected_decreased-temp  23566       20691          28356     29276            19771              0           0.0         5658             0            0            7140\n    ## PSC   0           d2_infected_decreased-temp    24704       20754          30361     30595            20520              0           0.0         4725             0            0            3934\n    ## PSC   0           d2_uninfected_elevated-temp   22246       19306          33690     31942            21054              0           0.0         5052             0            0            4511\n    ## PSC   0           d2_infected_elevated-temp     22970       20575          34095     32990            21680              0           0.0         5057             0            0            2113\n\n### Percentage of transcripts with SNPS\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    # Count number of transcripts in transcriptome assembly\n    transcripts_count=$(grep -c \"^>\" ./data/${transcriptome_fasta})\n    printf \"%s\\t%s\\n\" \"Original transcriptome transcripts:\" \"${transcripts_count}\"\n\n    # Count number of transcripts with SNPs\n    # Parses Trinity ID and counts unique Trinity IDs\n    snp_transcripts_count=$(awk '/^[^#]/{print $1}' ./analyses/${vcf_filtered} | sort -u| wc -l)\n    printf \"%s\\t%s\\n\" \"Transcripts with SNPs:\" \"${snp_transcripts_count}\"\n\n    echo \"\"\n    # Calculate percentage\n    printf \"%s\\t%s\\n\" \"Percentage of transcripts with SNPs:\" \"$(bc <<< \"scale=4; ( ${snp_transcripts_count} / ${transcripts_count} * 100)\")\"\n\n    ## Original transcriptome transcripts:  78649\n    ## Transcripts with SNPs:   17680\n    ## \n    ## Percentage of transcripts with SNPs: 22.4700\n\n### Get max/min/mean number of SNPs per transcript\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    awk '/^[^#]/{print $1}' ./analyses/${vcf_filtered} \\\n    | sort \\\n    | uniq -c \\\n    | sort -k1n,1 \\\n    | awk '{sum+=$1;cnt++;max=$1;min=cnt==1?$1:min} END{print \"min=\"min, \"max=\"max, \"mean=\"sum/cnt}'\n\n    ## min=1 max=334 mean=4.51092\n\n### Extract FastA IDs\n\nStrips Trinity isoform designations from end of ID to match gene IDs in\nGO term annotation file\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    awk '/^[^#]/{print $1}' ./analyses/${vcf_filtered} \\\n    | awk 'BEGIN { FS = \"_\"; OFS = \"_\" } {print $1, $2, $3, $4}' \\\n    | sort -u \\\n    > ./analyses/${genes_list}\n\n    wc -l ./analyses/\"${genes_list}\"\n\n    echo \"\"\n    echo \"${line}\"\n    echo \"\"\n\n    head ./analyses/\"${genes_list}\"\n\n    ## 10332 ./analyses/cbai_v3.1-SNPS_30Q-10x_gene-IDs.txt\n    ## \n    ## -------------------------------------------------------------------------------------------------\n    ## \n    ## TRINITY_DN1000_c1_g1\n    ## TRINITY_DN10011_c0_g1\n    ## TRINITY_DN10019_c0_g1\n    ## TRINITY_DN1001_c0_g1\n    ## TRINITY_DN10023_c0_g1\n    ## TRINITY_DN10023_c1_g1\n    ## TRINITY_DN10023_c2_g2\n    ## TRINITY_DN10025_c0_g1\n    ## TRINITY_DN1002_c2_g1\n    ## TRINITY_DN10030_c0_g1\n\n### Extract genes with SNPs from transcriptome annotation file\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    # Uses a list of Trinity gene IDs to extract gene IDs and corresponding GO accessions.\n    # Expects Trinotate annotations file as input.\n    # Uses sed to convert commas to tabs in preparation for subsequent \"flattening\"\n    while read -r line\n    do \n      grep \"${line}\" ./data/${cbai_v3_1_GO}\n    done < ./analyses/${genes_list} \\\n    | sed $'s/,/\\t/g' \\\n    > ./analyses/${genes_GO_list}\n\n    # Check number of records\n    wc -l ./analyses/${genes_GO_list}\n\n    echo \"\"\n    echo \"${line}\"\n    echo \"\"\n\n    head ./analyses/${genes_GO_list}\n\n    ## 6891 ./analyses/cbai_v3.1-SNPS_30Q-10x_GO.tab\n    ## \n    ## -------------------------------------------------------------------------------------------------\n    ## \n    ## TRINITY_DN1000_c1_g1 GO:0005575  GO:0005634  GO:0005737  GO:0008150  GO:0010494  GO:0010717  GO:0030529  GO:0032991  GO:0035770  GO:0036464  GO:0043226  GO:0043227  GO:0043228  GO:0043229  GO:0043231  GO:0043232  GO:0044424  GO:0044444  GO:0044464  GO:0045595  GO:0050789  GO:0050793  GO:0050794  GO:0051239  GO:0065007  GO:1990904  GO:2000026\n    ## TRINITY_DN10011_c0_g1    GO:0002082  GO:0003674  GO:0003824  GO:0004129  GO:0005215  GO:0005575  GO:0005739  GO:0005746  GO:0006140  GO:0006461  GO:0006996  GO:0007005  GO:0008150  GO:0008324  GO:0009055  GO:0009987  GO:0015002  GO:0015075  GO:0015077  GO:0015078  GO:0016021  GO:0016043  GO:0016491  GO:0016675  GO:0016676  GO:0019219  GO:0019220  GO:0019222  GO:0022607  GO:0022857  GO:0022890  GO:0022891  GO:0022892  GO:0031224  GO:0031323  GO:0034622  GO:0042325  GO:0043226  GO:0043227  GO:0043229  GO:0043231  GO:0043467  GO:0043623  GO:0043933  GO:0044422  GO:0044424  GO:0044425  GO:0044429  GO:0044444  GO:0044446  GO:0044455  GO:0044464  GO:0050789  GO:0050794  GO:0051171  GO:0051174  GO:0065003  GO:0065007  GO:0070469  GO:0071822  GO:0071840  GO:0080090  GO:0097250  GO:1900542  GO:1903578\n    ## TRINITY_DN1001_c0_g1 GO:0000096  GO:0000097  GO:0003674  GO:0003824  GO:0003962  GO:0004121  GO:0004123  GO:0005488  GO:0005575  GO:0005737  GO:0006082  GO:0006520  GO:0006534  GO:0006555  GO:0006790  GO:0006807  GO:0008150  GO:0008152  GO:0008652  GO:0009058  GO:0009066  GO:0009067  GO:0009069  GO:0009070  GO:0009086  GO:0009092  GO:0009987  GO:0016053  GO:0016740  GO:0016765  GO:0016829  GO:0016846  GO:0019343  GO:0019344  GO:0019346  GO:0019752  GO:0019842  GO:0030170  GO:0036094  GO:0043167  GO:0043168  GO:0043436  GO:0044237  GO:0044238  GO:0044249  GO:0044272  GO:0044281  GO:0044283  GO:0044424  GO:0044464  GO:0044699  GO:0044710  GO:0044711  GO:0044763  GO:0046394  GO:0047804  GO:0048037  GO:0050667  GO:0070279  GO:0071704  GO:0097159  GO:1901363  GO:1901564  GO:1901566  GO:1901576  GO:1901605  GO:1901607\n    ## TRINITY_DN10023_c0_g1    GO:0005575  GO:0005634  GO:0005730  GO:0005737  GO:0008150  GO:0022613  GO:0042254  GO:0043226  GO:0043227  GO:0043228  GO:0043229  GO:0043231  GO:0043232  GO:0044085  GO:0044422  GO:0044424  GO:0044428  GO:0044446  GO:0044464  GO:0071840\n    ## TRINITY_DN10023_c2_g2    GO:0001822  GO:0002376  GO:0003674  GO:0005488  GO:0005515  GO:0005575  GO:0005634  GO:0005829  GO:0006325  GO:0006464  GO:0006473  GO:0006475  GO:0006508  GO:0006511  GO:0006515  GO:0006807  GO:0006950  GO:0006974  GO:0006996  GO:0007130  GO:0007165  GO:0007276  GO:0007283  GO:0007420  GO:0008104  GO:0008150  GO:0008152  GO:0008630  GO:0009056  GO:0009057  GO:0009892  GO:0009894  GO:0009895  GO:0009987  GO:0010033  GO:0010243  GO:0010498  GO:0010605  GO:0010941  GO:0016043  GO:0018193  GO:0018205  GO:0018393  GO:0018394  GO:0019222  GO:0019538  GO:0019941  GO:0022402  GO:0022414  GO:0022607  GO:0030154  GO:0030162  GO:0030163  GO:0030324  GO:0030433  GO:0031323  GO:0031324  GO:0031329  GO:0031330  GO:0031593  GO:0031647  GO:0031982  GO:0032182  GO:0032268  GO:0032269  GO:0032403  GO:0032434  GO:0032435  GO:0032502  GO:0032991  GO:0033036  GO:0033554  GO:0034613  GO:0034976  GO:0035556  GO:0036211  GO:0036503  GO:0042176  GO:0042177  GO:0042221  GO:0042771  GO:0042981  GO:0043021  GO:0043022  GO:0043067  GO:0043130  GO:0043161  GO:0043170  GO:0043226  GO:0043227  GO:0043229  GO:0043230  GO:0043231  GO:0043234  GO:0043412  GO:0043543  GO:0043632  GO:0044237  GO:0044238  GO:0044248  GO:0044260  GO:0044265  GO:0044267  GO:0044421  GO:0044424  GO:0044444  GO:0044445  GO:0044464  GO:0044699  GO:0044702  GO:0044710  GO:0044712  GO:0044763  GO:0044767  GO:0044877  GO:0045048  GO:0045184  GO:0045861  GO:0045995  GO:0048232  GO:0048513  GO:0048519  GO:0048523  GO:0048609  GO:0048856  GO:0048869  GO:0050789  GO:0050793  GO:0050794  GO:0050821  GO:0050896  GO:0051171  GO:0051172  GO:0051179  GO:0051205  GO:0051234  GO:0051239  GO:0051246  GO:0051248  GO:0051276  GO:0051603  GO:0051641  GO:0051716  GO:0060255  GO:0061136  GO:0061857  GO:0065007  GO:0065008  GO:0070059  GO:0070062  GO:0070192  GO:0070193  GO:0070628  GO:0070727  GO:0071704  GO:0071712  GO:0071816  GO:0071818  GO:0071840  GO:0072331  GO:0072332  GO:0072379  GO:0072657  GO:0080090  GO:0090150  GO:0097190  GO:0097193  GO:1901564  GO:1901565  GO:1901575  GO:1901698  GO:1901799  GO:1903046  GO:1903050  GO:1903051  GO:1903362  GO:1903363  GO:1903561  GO:2000026\n    ## TRINITY_DN1002_c2_g1 GO:0003674  GO:0003676  GO:0003723  GO:0003729  GO:0005488  GO:0005515  GO:0005575  GO:0005634  GO:0006139  GO:0006396  GO:0006725  GO:0006807  GO:0008150  GO:0008152  GO:0009987  GO:0016070  GO:0031050  GO:0034641  GO:0035196  GO:0043170  GO:0043226  GO:0043227  GO:0043229  GO:0043231  GO:0044237  GO:0044238  GO:0044260  GO:0044424  GO:0044464  GO:0046483  GO:0070918  GO:0071704  GO:0090304  GO:0097159  GO:1901360  GO:1901363\n    ## TRINITY_DN10030_c0_g1    GO:0000166  GO:0000346  GO:0003674  GO:0003676  GO:0003677  GO:0003723  GO:0005488  GO:0005575  GO:0005730  GO:0006405  GO:0006406  GO:0006810  GO:0006913  GO:0008150  GO:0008284  GO:0008327  GO:0009893  GO:0010604  GO:0010638  GO:0015931  GO:0016604  GO:0016607  GO:0019222  GO:0030529  GO:0031056  GO:0031058  GO:0031060  GO:0031062  GO:0031323  GO:0031325  GO:0031399  GO:0031401  GO:0032268  GO:0032270  GO:0032781  GO:0032991  GO:0033043  GO:0033044  GO:0035770  GO:0036094  GO:0036464  GO:0042127  GO:0043085  GO:0043226  GO:0043228  GO:0043229  GO:0043232  GO:0043234  GO:0043462  GO:0043565  GO:0044093  GO:0044422  GO:0044424  GO:0044428  GO:0044444  GO:0044446  GO:0044451  GO:0044464  GO:0046907  GO:0048518  GO:0048522  GO:0050657  GO:0050658  GO:0050789  GO:0050790  GO:0050794  GO:0051028  GO:0051095  GO:0051096  GO:0051128  GO:0051130  GO:0051168  GO:0051169  GO:0051171  GO:0051173  GO:0051179  GO:0051234  GO:0051236  GO:0051246  GO:0051247  GO:0051336  GO:0051345  GO:0051641  GO:0051649  GO:0060255  GO:0065007  GO:0065009  GO:0071702  GO:0071705  GO:0080090  GO:0097159  GO:1901265  GO:1901363  GO:1902275  GO:1905269  GO:1990904  GO:2001252\n    ## TRINITY_DN10030_c2_g1    GO:0005575  GO:0005789  GO:0008150  GO:0009987  GO:0016020  GO:0016021  GO:0019725  GO:0031224  GO:0042592  GO:0044422  GO:0044424  GO:0044425  GO:0044432  GO:0044444  GO:0044446  GO:0044464  GO:0044699  GO:0044763  GO:0045454  GO:0050789  GO:0050794  GO:0065007  GO:0065008\n    ## TRINITY_DN10034_c0_g1    GO:0000166  GO:0000226  GO:0003674  GO:0003676  GO:0003677  GO:0003678  GO:0003824  GO:0004386  GO:0005488  GO:0005524  GO:0005575  GO:0005634  GO:0006139  GO:0006259  GO:0006260  GO:0006270  GO:0006725  GO:0006807  GO:0006996  GO:0007010  GO:0007017  GO:0007051  GO:0007052  GO:0008150  GO:0008152  GO:0009058  GO:0009059  GO:0009987  GO:0016043  GO:0016462  GO:0016787  GO:0016817  GO:0016818  GO:0016887  GO:0017076  GO:0017111  GO:0022402  GO:0030554  GO:0032553  GO:0032555  GO:0032559  GO:0032991  GO:0034641  GO:0034645  GO:0035639  GO:0036094  GO:0042555  GO:0043167  GO:0043168  GO:0043170  GO:0043226  GO:0043227  GO:0043229  GO:0043231  GO:0043234  GO:0044237  GO:0044238  GO:0044249  GO:0044260  GO:0044424  GO:0044464  GO:0046483  GO:0071704  GO:0071840  GO:0090304  GO:0097159  GO:0097367  GO:1901265  GO:1901360  GO:1901363  GO:1901576  GO:1902850  GO:1903047\n    ## TRINITY_DN10038_c0_g2    GO:0003674  GO:0003824  GO:0016301  GO:0016740  GO:0016772\n\n### Flatten `${genes_GO_list}` to have one GO accession per line.\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    # Identify first field containing a GO term.\n    # Search file with grep for \"GO:\" and pipe to awk.\n    # Awk sets tab as field delimiter (-F'\\t'), runs a for loop that looks for \"GO:\" (~/GO:/), and then prints the field number).\n    # Awk results are piped to sort, which sorts unique by number (-ug).\n    # Sort results are piped to head to retrieve the lowest value (i.e. the top of the list; \"-n1\").\n    begin_goterms=$(grep \"GO:\" ./analyses/\"${genes_GO_list}\" | awk -F'\\t' '{for (i=1;i<=NF;i++) if($i ~/GO:/) print i}' | sort -ug | head -n1)\n\n    # Flatten GO terms annotation file.\n    # Expects tab-delimited input file where:\n    ## First field (column) is Trinity gene IDs.\n    ## Remaining fields (columns) are each individual GO accessions.\n    while read -r line\n    do\n      # Capture maximum number of fields to handle differing number of GO terms.\n      max_field=$(echo \"$line\" | awk -F'\\t' '{print NF}')\n      \n      # Set which fields are \"fixed\" (i.e. Trinity gene IDs)\n      fixed_fields=$(echo \"$line\" | cut -f1)\n      \n      # Identifies if a line has GO accessions,\n      # reads them into an array,\n      # and then prints the Trinity Id and single GO accession on each line.\n      if (( \"$max_field\" < \"$begin_goterms\" )); then\n        printf \"%s\\n\" \"$line\"\n      else\n        # Set range of GO accessions for each line\n        goterms=$(echo \"$line\" | cut -f\"$begin_goterms\"-\"$max_field\")\n        # Set Internal Field Separator to a <tab> and read $goterms into array.\n        IFS=$'\\t' read -r -a array <<< \"$goterms\"\n        # Loop through array and print tab-delimited file of Trinity ID and single GO accession.\n        for element in \"${!array[@]}\"\n          do printf \"%s\\t%s\\n\" \"$fixed_fields\" \"${array[$element]}\"\n        done\n      fi\n    done < ./analyses/\"${genes_GO_list}\" > ./analyses/\"${flattened_GO}\"\n\n    # Check number of records\n    wc -l ./analyses/${flattened_GO}\n\n    echo \"\"\n    echo \"${line}\"\n    echo \"\"\n\n    head ./analyses/${flattened_GO}\n\n    ## 550412 ./analyses/cbai_v3_1-SNPS_30Q-10x_GO.flattened-go.txt\n    ## \n    ## \n    ## \n    ## TRINITY_DN1000_c1_g1 GO:0005575\n    ## TRINITY_DN1000_c1_g1 GO:0005634\n    ## TRINITY_DN1000_c1_g1 GO:0005737\n    ## TRINITY_DN1000_c1_g1 GO:0008150\n    ## TRINITY_DN1000_c1_g1 GO:0010494\n    ## TRINITY_DN1000_c1_g1 GO:0010717\n    ## TRINITY_DN1000_c1_g1 GO:0030529\n    ## TRINITY_DN1000_c1_g1 GO:0032991\n    ## TRINITY_DN1000_c1_g1 GO:0035770\n    ## TRINITY_DN1000_c1_g1 GO:0036464\n\n### Create file with path to `${flattened_GO}` file\n\nUsed to pass Bash variable to R.\n\n    source .rvars\n    echo \"./analyses/${flattened_GO}\" > .flattened_GO\n\n### Create R string with path to Bash variable, `${flattened_GO}`\n\n    string <- paste(readLines(\".flattened_GO\"), collapse=\" \")\n    print(string)\n\n    ## [1] \"./analyses/cbai_v3_1-SNPS_30Q-10x_GO.flattened-go.txt\"\n\n    library(GSEABase)\n\n    ## Loading required package: BiocGenerics\n\n    ## Loading required package: parallel\n\n    ## \n    ## Attaching package: 'BiocGenerics'\n\n    ## The following objects are masked from 'package:parallel':\n    ## \n    ##     clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,\n    ##     clusterExport, clusterMap, parApply, parCapply, parLapply,\n    ##     parLapplyLB, parRapply, parSapply, parSapplyLB\n\n    ## The following objects are masked from 'package:stats':\n    ## \n    ##     IQR, mad, sd, var, xtabs\n\n    ## The following objects are masked from 'package:base':\n    ## \n    ##     anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    ##     dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    ##     grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    ##     order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    ##     rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    ##     union, unique, unsplit, which.max, which.min\n\n    ## Loading required package: Biobase\n\n    ## Welcome to Bioconductor\n    ## \n    ##     Vignettes contain introductory material; view with\n    ##     'browseVignettes()'. To cite Bioconductor, see\n    ##     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n    ## Loading required package: annotate\n\n    ## Loading required package: AnnotationDbi\n\n    ## Loading required package: stats4\n\n    ## Loading required package: IRanges\n\n    ## Loading required package: S4Vectors\n\n    ## \n    ## Attaching package: 'S4Vectors'\n\n    ## The following object is masked from 'package:base':\n    ## \n    ##     expand.grid\n\n    ## Loading required package: XML\n\n    ## Loading required package: graph\n\n    ## \n    ## Attaching package: 'graph'\n\n    ## The following object is masked from 'package:XML':\n    ## \n    ##     addNode\n\n    library(tidyverse)\n\n    ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──\n\n    ## ✓ ggplot2 3.3.4     ✓ purrr   0.3.4\n    ## ✓ tibble  3.1.2     ✓ dplyr   1.0.6\n    ## ✓ tidyr   1.1.3     ✓ stringr 1.4.0\n    ## ✓ readr   1.4.0     ✓ forcats 0.5.1\n\n    ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n    ## x stringr::boundary() masks graph::boundary()\n    ## x dplyr::collapse()   masks IRanges::collapse()\n    ## x dplyr::combine()    masks Biobase::combine(), BiocGenerics::combine()\n    ## x dplyr::desc()       masks IRanges::desc()\n    ## x tidyr::expand()     masks S4Vectors::expand()\n    ## x dplyr::filter()     masks stats::filter()\n    ## x dplyr::first()      masks S4Vectors::first()\n    ## x dplyr::lag()        masks stats::lag()\n    ## x ggplot2::Position() masks BiocGenerics::Position(), base::Position()\n    ## x purrr::reduce()     masks IRanges::reduce()\n    ## x dplyr::rename()     masks S4Vectors::rename()\n    ## x dplyr::select()     masks AnnotationDbi::select()\n    ## x dplyr::slice()      masks IRanges::slice()\n\n    # Script to retrieve GOslims from Trinity-based, EdgeR GOseq differential gene expression.\n    # Identifies enriched and depleted output files.\n    # Requires \"goslim_generic.obo\" from http://geneontology.org/docs/go-subset-guide\n      \n      ## Get max number of fields\n      # Needed to handle reading in file with different number of columns in each row\n      max_fields <- max(na.omit((count.fields(string, sep = \"\\t\", blank.lines.skip = TRUE))))\n      \n      ## Read in tab-delimited GOseq file\n      # Use \"max_fields\" to populate all columns with a sequentially numbered header\n      go_seqs <- read.table(string,\n                            sep = \"\\t\",\n                            header = FALSE,\n                            col.names = paste0(\"V\",seq_len(max_fields)),\n                            fill = TRUE)\n      \n      ## Grab just the individual GO terms from the \"2nd\" column)\n      goterms <- as.character(go_seqs$V2)\n      \n      ### Use GSEA to map GO terms to GOslims\n      \n      ## Store goterms as GSEA object\n      myCollection <- GOCollection(goterms)\n\n    ## \n\n      ## Use generic GOslim file to create a GOslim collection\n      \n      # I downloaded goslim_generic.obo from http://geneontology.org/docs/go-subset-guide\n      # then i moved it to the R library for GSEABase in the extdata folder\n      # in addition to using the command here - I think they're both required.\n      slim <- getOBOCollection(\"~/data/goslim_generic.obo\")\n      \n      ## Map GO terms to GOslims and select Biological Processes group\n      slims <- goSlim(myCollection, slim, \"BP\", verbose = TRUE)\n      \n      # Rename first column\n      slims <- slims %>% rownames_to_column(var = \"GOslim\")\n      \n      ## Write output file\n      write.csv(slims, file = \"./analyses/S10-SNPs_GO-GOslims.csv\", quote = FALSE, row.names = FALSE)\n\n    # Remove GOslim accession for the generic \"biological_process\" term to improve visualization of other terms.\n    slims <- slims[slims$GOslim != \"GO:0008150\",]\n\n    # Create bar plot.\n    # \"Open\" PNG file for saving subsequent plot\n    pdf(\"./figures/S9-SNPs_GO-GOslims_barplot.pdf\", height = 10, width = 12)\n\n    ggplot(data = slims, aes(x=slims$Percent, y=slims$Term)) +\n      labs(title = \"\",\n           caption = \"Supplemental Figure 1. Barplot of percentages of gene ontology assignments to GOslims for transcripts containing at least on SNP.\n           Excludes the generic \\\"biological_process\\\" GOslim (55.53% of all GO terms) to aid in visualization of other GOslim categories.\",\n           x = \"Percent GO terms assigned to GOslim\",\n           y = \"GOslim\") +\n      geom_bar(stat = \"identity\") +\n      theme(plot.caption = element_text(hjust = 0)\n      )\n\n    ## Warning: Use of `slims$Percent` is discouraged. Use `Percent` instead.\n\n    ## Warning: Use of `slims$Term` is discouraged. Use `Term` instead.\n\n    # Close PNG file\n    dev.off()\n\n    ## png \n    ##   2\n\n---\n\n\n![Barplot of percentages of gene ontology accessions assigned to Biological Process GOslims for genes with at least one SNP. Excludes the generic \"biological_process\" GOslim to improve visualization of remaining categories.](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20211005_cbai_SNP_stats_barplot.png?raw=true)\n","srcMarkdownNoYaml":"\nI previously identified variants across the four Day 2 DEG pooled RNAseq samples (380822, 380823, 380824, 380825) [on 20210909](https://robertslab.github.io/sams-notebook/posts/2021/2021-09-09-SNP-Identification---C.bairdi-Day-2-DEG-Pooled-Samples-Using-bcftools-on-Mox/) within the `cbai_transcriptome_v3.1` transcriptome assembly. Now, I needed to actually do some analysis on the SNPs for the revisions to the [Tanner crab gene expression paper](https://github.com/RobertsLab/paper-tanner-crab) (GitHub Repo).\n\nI created an R Project and an R Markdown file to perform the analysis:\n\n- [20211005_cbai_SNP_stats](https://github.com/RobertsLab/code/tree/master/r_projects/sam/20211005_cbai_SNP_stats)\n\nThe R Markdown file ([20211005_cbai_SNP_stats/20211005_cbai_SNP_stats.Rmd](https://github.com/RobertsLab/code/blob/master/r_projects/sam/20211005_cbai_SNP_stats/20211005_cbai_SNP_stats.Rmd))will allow for complete reproduction of the analysis, including downloading necessary input files, as well as generating the final figure. Dependencies (i.e. external programs for VCF manipulation, R libraries, etc) are detailed at the beginning of the R Markdown file.\n\n\n---\n\n# RESULTS\n\nThe `knitr` to markdown rendering of the completed R Markdown file is here:\n\n- [20211005_cbai_SNP_stats/20211005_cbai_SNP_stats.md](https://github.com/RobertsLab/code/blob/master/r_projects/sam/20211005_cbai_SNP_stats/20211005_cbai_SNP_stats.md) (GitHub)\n\n\nRendering is pasted below:\n\n# Explore and extract SNP data from *C.bairdi* transcritpome assembly v3.1\n\nREQUIRES Linux-based system to run all cells properly; some cells will\nnot work on Mac OS!\n\nREQUIRES the following programs:\n\n-   [bcftools](https://github.com/samtools/bcftools)\n\n-   [samtools](https://github.com/samtools/samtools)\n\n-   [seqtk](https://github.com/lh3/seqtk)\n\nREQUIRES the following R libraries and dependencies:\n\n-   `goslim_generic.obo` Downloaded from\n    <http://geneontology.org/docs/go-subset-guide/>\n\n    -   then i moved it to the R library for GSEABase in the extdata\n        folder in addition to using the command here - I think they’re\n        both required.\n\n-   `GSEABase` (BioConductor)\n\n-   `tidyverse`\n\n### Display system info\n\n    ## TODAY'S DATE:\n    ## Thu 07 Oct 2021 12:54:49 PM PDT\n    ## ------------\n    ## \n    ## No LSB modules are available.\n    ## Distributor ID:  Ubuntu\n    ## Description: Ubuntu 20.04.3 LTS\n    ## Release: 20.04\n    ## Codename:    focal\n    ## \n    ## ------------\n    ## HOSTNAME: \n    ## computer\n    ## \n    ## ------------\n    ## Computer Specs:\n    ## \n    ## Architecture:                    x86_64\n    ## CPU op-mode(s):                  32-bit, 64-bit\n    ## Byte Order:                      Little Endian\n    ## Address sizes:                   45 bits physical, 48 bits virtual\n    ## CPU(s):                          2\n    ## On-line CPU(s) list:             0,1\n    ## Thread(s) per core:              1\n    ## Core(s) per socket:              1\n    ## Socket(s):                       2\n    ## NUMA node(s):                    1\n    ## Vendor ID:                       GenuineIntel\n    ## CPU family:                      6\n    ## Model:                           165\n    ## Model name:                      Intel(R) Core(TM) i9-10885H CPU @ 2.40GHz\n    ## Stepping:                        2\n    ## CPU MHz:                         2400.007\n    ## BogoMIPS:                        4800.01\n    ## Hypervisor vendor:               VMware\n    ## Virtualization type:             full\n    ## L1d cache:                       64 KiB\n    ## L1i cache:                       64 KiB\n    ## L2 cache:                        512 KiB\n    ## L3 cache:                        32 MiB\n    ## NUMA node0 CPU(s):               0,1\n    ## Vulnerability Itlb multihit:     KVM: Mitigation: VMX unsupported\n    ## Vulnerability L1tf:              Not affected\n    ## Vulnerability Mds:               Not affected\n    ## Vulnerability Meltdown:          Not affected\n    ## Vulnerability Spec store bypass: Mitigation; Speculative Store Bypass disabled via prctl and seccomp\n    ## Vulnerability Spectre v1:        Mitigation; usercopy/swapgs barriers and __user pointer sanitization\n    ## Vulnerability Spectre v2:        Mitigation; Full generic retpoline, IBPB conditional, IBRS_FW, STIBP disabled, RSB filling\n    ## Vulnerability Srbds:             Not affected\n    ## Vulnerability Tsx async abort:   Not affected\n    ## Flags:                           fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon nopl xtopology tsc_reliable nonstop_tsc cpuid pni pclmulqdq ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single ssbd ibrs ibpb stibp fsgsbase tsc_adjust bmi1 avx2 smep bmi2 invpcid rdseed adx smap clflushopt xsaveopt xsavec xgetbv1 xsaves arat flush_l1d arch_capabilities\n    ## \n    ## ------------\n    ## \n    ## Memory Specs\n    ## \n    ##               total        used        free      shared  buff/cache   available\n    ## Mem:           54Gi       5.6Gi        43Gi       135Mi       5.3Gi        48Gi\n    ## Swap:         2.0Gi          0B       2.0Gi\n\n### User-defined bash variables\n\nSet program paths for your own computer.\n\nVariables are saved to a “dot file” and that file needs to be sourced in\neach Bash chunk to have access to the Bash variables across Bash chunks.\n\n    {\n    echo \"# CPU threads\"\n    echo 'export threads=8'\n    echo \"\"\n    echo \"# Programs\"\n    echo 'export seqtk=\"/home/sam/programs/seqtk-1.3/seqtk\"'\n    echo 'export bcftools=\"/home/sam/programs/bcftools-1.13/bcftools\"'\n    echo 'export samtools=\"/home/sam/programs/samtools-1.12/samtools\"'\n    echo \"\"\n    } > .rvars\n\n### Input/output files variables\n\n    {\n    echo \"# SNP coverage\"\n    echo 'export SNP_coverage=10'\n    echo \"\"\n    echo \"# SNP quality\"\n    echo 'export SNP_quality=30'\n    echo \"\"\n\n    echo \"# Input files\"\n    echo \"\"\n    echo \"## Transcriptome assembly\"\n    echo 'export orig_fasta_url_dir=\"https://owl.fish.washington.edu/halfshell/genomic-databank\"'\n    echo 'export transcriptome_fasta=\"cbai_transcriptome_v3.1.fasta\"'\n    echo \"\"\n    echo \"## Transcriptome md5 checksum\"\n    echo 'export transcriptome_fasta_md5=\"aeec8ffbf8fa44fb1750caee6abaf68a\"'\n    echo \"\"\n    echo \"## Transcriptome GO terms\"\n    echo 'export cbai_v3_1_GO_url=\"https://gannet.fish.washington.edu/Atumefaciens/20200828_cbai_trinotate_transcriptome-v3.1\"'\n    echo 'export cbai_v3_1_GO=\"20200828.cbai_transcriptome_v3.1.fasta.trinotate.go_annotations.txt\"'\n    echo \"\"\n    echo \"## VCF with variant calls\"\n    echo 'export orig_vcf_url_dir=\"https://gannet.fish.washington.edu/Atumefaciens/20210909-cbai-bcftools-snp_calling\"'\n    echo 'export orig_vcf=\"cbai_v3.1-SNPS.vcf\"'\n    echo \"\"\n\n    echo \"# Output files\"\n    echo 'export transcriptome_SNPS_fasta=\"cbai_transcriptome_v3.1_SNPs-${SNP_quality}Q-${SNP_coverage}x.fasta\"'\n    echo 'export contigs_list=\"cbai_v3.1-SNPS_${SNP_quality}Q-${SNP_coverage}x_contig-IDs.txt\"'\n    echo 'export genes_list=\"cbai_v3.1-SNPS_${SNP_quality}Q-${SNP_coverage}x_gene-IDs.txt\"'\n    echo 'export vcf_filtered=\"cbai_v3.1-SNPS-${SNP_quality}Q-${SNP_coverage}x.vcf\"'\n    echo 'export genes_GO_list\"=cbai_v3.1-SNPS_${SNP_quality}Q-${SNP_coverage}x_GO.tab\"'\n    echo 'export flattened_GO=\"cbai_v3_1-SNPS_${SNP_quality}Q-${SNP_coverage}x_GO.flattened-go.txt\"'\n    echo \"\"\n\n    echo \"# Print formatting\"\n    echo 'export line=\"-------------------------------------------------------------------------------------------------\"'\n    echo \"\"\n    } >> .rvars\n\n### Confirm variables are accessible.\n\n    # Confirm contents of .rvars\n    cat .rvars\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    echo \"\"\n\n    echo \"Confirm variables are accessible.\"\n    echo \"Checking the variable \\$line:\"\n    echo \"${line}\"\n\n    ## # CPU threads\n    ## export threads=8\n    ## \n    ## # Programs\n    ## export seqtk=\"/home/sam/programs/seqtk-1.3/seqtk\"\n    ## export bcftools=\"/home/sam/programs/bcftools-1.13/bcftools\"\n    ## export samtools=\"/home/sam/programs/samtools-1.12/samtools\"\n    ## \n    ## # SNP coverage\n    ## export SNP_coverage=10\n    ## \n    ## # SNP quality\n    ## export SNP_quality=30\n    ## \n    ## # Input files\n    ## \n    ## ## Transcriptome assembly\n    ## export orig_fasta_url_dir=\"https://owl.fish.washington.edu/halfshell/genomic-databank\"\n    ## export transcriptome_fasta=\"cbai_transcriptome_v3.1.fasta\"\n    ## \n    ## ## Transcriptome md5 checksum\n    ## export transcriptome_fasta_md5=\"aeec8ffbf8fa44fb1750caee6abaf68a\"\n    ## \n    ## ## Transcriptome GO terms\n    ## export cbai_v3_1_GO_url=\"https://gannet.fish.washington.edu/Atumefaciens/20200828_cbai_trinotate_transcriptome-v3.1\"\n    ## export cbai_v3_1_GO=\"20200828.cbai_transcriptome_v3.1.fasta.trinotate.go_annotations.txt\"\n    ## \n    ## ## VCF with variant calls\n    ## export orig_vcf_url_dir=\"https://gannet.fish.washington.edu/Atumefaciens/20210909-cbai-bcftools-snp_calling\"\n    ## export orig_vcf=\"cbai_v3.1-SNPS.vcf\"\n    ## \n    ## # Output files\n    ## export transcriptome_SNPS_fasta=\"cbai_transcriptome_v3.1_SNPs-${SNP_quality}Q-${SNP_coverage}x.fasta\"\n    ## export contigs_list=\"cbai_v3.1-SNPS_${SNP_quality}Q-${SNP_coverage}x_contig-IDs.txt\"\n    ## export genes_list=\"cbai_v3.1-SNPS_${SNP_quality}Q-${SNP_coverage}x_gene-IDs.txt\"\n    ## export vcf_filtered=\"cbai_v3.1-SNPS-${SNP_quality}Q-${SNP_coverage}x.vcf\"\n    ## export genes_GO_list\"=cbai_v3.1-SNPS_${SNP_quality}Q-${SNP_coverage}x_GO.tab\"\n    ## export flattened_GO=\"cbai_v3_1-SNPS_${SNP_quality}Q-${SNP_coverage}x_GO.flattened-go.txt\"\n    ## \n    ## # Print formatting\n    ## export line=\"-------------------------------------------------------------------------------------------------\"\n    ## \n    ## \n    ## Confirm variables are accessible.\n    ## Checking the variable $line:\n    ## -------------------------------------------------------------------------------------------------\n\n### Get VCF\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    # Download with wget. Use --no-check-certificate to avoid issues with Gannet certificate\n    # Use --quiet option to prevent wget output from printing too many lines to notebook\n    wget --continue --no-check-certificate --quiet ${orig_vcf_url_dir}/${orig_vcf} \\\n    --directory-prefix ./data\n\n    wget --continue --no-check-certificate --quiet ${orig_vcf_url_dir}/checksums.md5 \\\n    --directory-prefix ./data\n\n    # Confirm checksum for transcriptome FastA is good\n    cd ./data\n    md5sum --check checksums.md5 | grep \"${orig_vcf}\"\n\n    ## md5sum: 20210909-cbai-bcftools-snp_calling.sh: No such file or directory\n    ## md5sum: input_bam_checksums.md5: No such file or directory\n    ## md5sum: slurm-2194047.out: No such file or directory\n    ## md5sum: WARNING: 3 listed files could not be read\n    ## cbai_v3.1-SNPS.vcf: OK\n\n### Get transcriptome\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    # Download with wget. Use --no-check-certificate to avoid issues with Gannet certificate\n    # Use --quiet option to prevent wget output from printing too many lines to notebook\n    wget --continue --no-check-certificate --quiet ${orig_fasta_url_dir}/${transcriptome_fasta} \\\n    --directory-prefix ./data\n\n\n    # Confirm checksum for transcriptome FastA is good\n    # Uses grep to highlight the desired file.\n    if [ \"$(md5sum ./data/${transcriptome_fasta} | awk '{print $1}')\" = \"${transcriptome_fasta_md5}\" ]; then echo \"Checksums match\"; fi\n\n    ## Checksums match\n\n### Get transcriptome GO annotations file\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    # Download with wget. Use --no-check-certificate to avoid issues with Gannet certificate\n    # Use --quiet option to prevent wget output from printing too many lines to notebook\n    wget --continue --no-check-certificate --quiet ${cbai_v3_1_GO_url}/${cbai_v3_1_GO} \\\n    --directory-prefix ./data\n\n    echo \"\"\n\n    head ./data/${cbai_v3_1_GO}\n\n    ## \n    ## TRINITY_DN100045_c0_g1   GO:0000323,GO:0001508,GO:0002027,GO:0003279,GO:0003283,GO:0003674,GO:0005198,GO:0005200,GO:0005488,GO:0005515,GO:0005575,GO:0005739,GO:0005764,GO:0005768,GO:0005769,GO:0005773,GO:0005829,GO:0005856,GO:0005886,GO:0005911,GO:0006810,GO:0006811,GO:0006812,GO:0006816,GO:0006873,GO:0006874,GO:0006875,GO:0006888,GO:0006897,GO:0006937,GO:0006942,GO:0007009,GO:0007043,GO:0007154,GO:0007165,GO:0008016,GO:0008092,GO:0008104,GO:0008150,GO:0009893,GO:0009987,GO:0010033,GO:0010468,GO:0010522,GO:0010604,GO:0010628,GO:0010646,GO:0010880,GO:0010881,GO:0010882,GO:0010927,GO:0010959,GO:0014704,GO:0015031,GO:0015833,GO:0016020,GO:0016043,GO:0016192,GO:0016323,GO:0016324,GO:0019222,GO:0019722,GO:0019725,GO:0019899,GO:0019900,GO:0019901,GO:0019932,GO:0022607,GO:0022898,GO:0023051,GO:0023052,GO:0030001,GO:0030003,GO:0030018,GO:0030054,GO:0030315,GO:0030507,GO:0030674,GO:0030913,GO:0031410,GO:0031430,GO:0031647,GO:0031672,GO:0031982,GO:0032409,GO:0032411,GO:0032412,GO:0032414,GO:0032501,GO:0032502,GO:0032844,GO:0032879,GO:0032970,GO:0033036,GO:0033267,GO:0033292,GO:0033365,GO:0034329,GO:0034330,GO:0034394,GO:0034613,GO:0034762,GO:0034764,GO:0034765,GO:0034767,GO:0035556,GO:0035637,GO:0036309,GO:0036371,GO:0042221,GO:0042383,GO:0042391,GO:0042592,GO:0042886,GO:0043034,GO:0043194,GO:0043226,GO:0043227,GO:0043228,GO:0043229,GO:0043231,GO:0043232,GO:0043266,GO:0043268,GO:0043269,GO:0043270,GO:0044057,GO:0044093,GO:0044291,GO:0044325,GO:0044422,GO:0044424,GO:0044425,GO:0044444,GO:0044449,GO:0044456,GO:0044459,GO:0044463,GO:0044464,GO:0044699,GO:0044700,GO:0044707,GO:0044763,GO:0044767,GO:0044802,GO:0045121,GO:0045184,GO:0045211,GO:0045216,GO:0046907,GO:0048193,GO:0048518,GO:0048522,GO:0048646,GO:0048856,GO:0048878,GO:0050789,GO:0050794,GO:0050801,GO:0050821,GO:0050896,GO:0051049,GO:0051050,GO:0051117,GO:0051179,GO:0051234,GO:0051239,GO:0051270,GO:0051279,GO:0051282,GO:0051597,GO:0051641,GO:0051649,GO:0051899,GO:0051924,GO:0051928,GO:0055037,GO:0055065,GO:0055074,GO:0055080,GO:0055082,GO:0055117,GO:0060090,GO:0060255,GO:0060306,GO:0060307,GO:0060341,GO:0061024,GO:0061337,GO:0065007,GO:0065008,GO:0065009,GO:0070296,GO:0070727,GO:0070838,GO:0070972,GO:0071702,GO:0071705,GO:0071840,GO:0072503,GO:0072507,GO:0072511,GO:0072657,GO:0072659,GO:0086001,GO:0086002,GO:0086004,GO:0086005,GO:0086010,GO:0086012,GO:0086014,GO:0086015,GO:0086046,GO:0086065,GO:0086066,GO:0086070,GO:0086091,GO:0090257,GO:0090279,GO:0097060,GO:0097458,GO:0097708,GO:0098589,GO:0098590,GO:0098771,GO:0098857,GO:0098900,GO:0098901,GO:0098907,GO:0098910,GO:0099623,GO:0140031,GO:1901016,GO:1901018,GO:1901019,GO:1901021,GO:1901379,GO:1901381,GO:1902578,GO:1902580,GO:1903115,GO:1903169,GO:1903522,GO:1903779,GO:1904062,GO:1904064,GO:1904427,GO:1990778,GO:2000021,GO:2001257,GO:2001259\n    ## TRINITY_DN10007_c0_g1    GO:0003674,GO:0003824,GO:0004497,GO:0005488,GO:0005506,GO:0005575,GO:0006082,GO:0006629,GO:0006631,GO:0008150,GO:0008152,GO:0009987,GO:0016021,GO:0016491,GO:0016705,GO:0016712,GO:0016713,GO:0018685,GO:0019752,GO:0020037,GO:0031224,GO:0032787,GO:0043167,GO:0043169,GO:0043436,GO:0044237,GO:0044238,GO:0044255,GO:0044281,GO:0044425,GO:0044699,GO:0044710,GO:0044763,GO:0046872,GO:0046906,GO:0046914,GO:0055114,GO:0070330,GO:0071704,GO:0097159,GO:1901363\n    ## TRINITY_DN10008_c0_gn    ## TRINITY_DN10009_c0_g1    GO:0003674,GO:0005488,GO:0005515,GO:0005575,GO:0005768,GO:0006810,GO:0008104,GO:0008150,GO:0015031,GO:0015833,GO:0016192,GO:0016197,GO:0031410,GO:0031982,GO:0033036,GO:0042886,GO:0043226,GO:0043227,GO:0043229,GO:0044424,GO:0044444,GO:0044464,GO:0045184,GO:0051179,GO:0051234,GO:0071702,GO:0071705,GO:0097708,GO:0098876,GO:1990126\n    ## TRINITY_DN1000_c1_g1 GO:0005575,GO:0005634,GO:0005737,GO:0008150,GO:0010494,GO:0010717,GO:0030529,GO:0032991,GO:0035770,GO:0036464,GO:0043226,GO:0043227,GO:0043228,GO:0043229,GO:0043231,GO:0043232,GO:0044424,GO:0044444,GO:0044464,GO:0045595,GO:0050789,GO:0050793,GO:0050794,GO:0051239,GO:0065007,GO:1990904,GO:2000026\n    ## TRINITY_DN10011_c0_g1    GO:0002082,GO:0003674,GO:0003824,GO:0004129,GO:0005215,GO:0005575,GO:0005739,GO:0005746,GO:0006140,GO:0006461,GO:0006996,GO:0007005,GO:0008150,GO:0008324,GO:0009055,GO:0009987,GO:0015002,GO:0015075,GO:0015077,GO:0015078,GO:0016021,GO:0016043,GO:0016491,GO:0016675,GO:0016676,GO:0019219,GO:0019220,GO:0019222,GO:0022607,GO:0022857,GO:0022890,GO:0022891,GO:0022892,GO:0031224,GO:0031323,GO:0034622,GO:0042325,GO:0043226,GO:0043227,GO:0043229,GO:0043231,GO:0043467,GO:0043623,GO:0043933,GO:0044422,GO:0044424,GO:0044425,GO:0044429,GO:0044444,GO:0044446,GO:0044455,GO:0044464,GO:0050789,GO:0050794,GO:0051171,GO:0051174,GO:0065003,GO:0065007,GO:0070469,GO:0071822,GO:0071840,GO:0080090,GO:0097250,GO:1900542,GO:1903578\n    ## TRINITY_DN100166_c0_g1   GO:0003674,GO:0003676,GO:0003677,GO:0005488,GO:0005575,GO:0005634,GO:0006355,GO:0008150,GO:0009889,GO:0010468,GO:0010556,GO:0019219,GO:0019222,GO:0031323,GO:0031326,GO:0043167,GO:0043169,GO:0043226,GO:0043227,GO:0043229,GO:0043231,GO:0044424,GO:0044464,GO:0046872,GO:0050789,GO:0050794,GO:0051171,GO:0051252,GO:0060255,GO:0065007,GO:0080090,GO:0097159,GO:1901363,GO:1903506,GO:2000112,GO:2001141\n    ## TRINITY_DN10017_c0_g1    GO:0000375,GO:0000377,GO:0000381,GO:0000398,GO:0003674,GO:0003676,GO:0003723,GO:0005488,GO:0005575,GO:0006139,GO:0006396,GO:0006397,GO:0006725,GO:0006807,GO:0007275,GO:0008150,GO:0008152,GO:0008380,GO:0009987,GO:0010468,GO:0016070,GO:0016071,GO:0016604,GO:0016607,GO:0019219,GO:0019222,GO:0031323,GO:0032501,GO:0032502,GO:0034641,GO:0043170,GO:0043484,GO:0044237,GO:0044238,GO:0044260,GO:0044422,GO:0044424,GO:0044428,GO:0044446,GO:0044451,GO:0044464,GO:0044699,GO:0044707,GO:0044767,GO:0045292,GO:0046483,GO:0048024,GO:0048856,GO:0050684,GO:0050789,GO:0050794,GO:0051171,GO:0051252,GO:0060255,GO:0065007,GO:0071704,GO:0080090,GO:0090304,GO:0097159,GO:1901360,GO:1901363,GO:1903311\n    ## TRINITY_DN1001_c0_g1 GO:0000096,GO:0000097,GO:0003674,GO:0003824,GO:0003962,GO:0004121,GO:0004123,GO:0005488,GO:0005575,GO:0005737,GO:0006082,GO:0006520,GO:0006534,GO:0006555,GO:0006790,GO:0006807,GO:0008150,GO:0008152,GO:0008652,GO:0009058,GO:0009066,GO:0009067,GO:0009069,GO:0009070,GO:0009086,GO:0009092,GO:0009987,GO:0016053,GO:0016740,GO:0016765,GO:0016829,GO:0016846,GO:0019343,GO:0019344,GO:0019346,GO:0019752,GO:0019842,GO:0030170,GO:0036094,GO:0043167,GO:0043168,GO:0043436,GO:0044237,GO:0044238,GO:0044249,GO:0044272,GO:0044281,GO:0044283,GO:0044424,GO:0044464,GO:0044699,GO:0044710,GO:0044711,GO:0044763,GO:0046394,GO:0047804,GO:0048037,GO:0050667,GO:0070279,GO:0071704,GO:0097159,GO:1901363,GO:1901564,GO:1901566,GO:1901576,GO:1901605,GO:1901607\n    ## TRINITY_DN10023_c0_g1    GO:0005575,GO:0005634,GO:0005730,GO:0005737,GO:0008150,GO:0022613,GO:0042254,GO:0043226,GO:0043227,GO:0043228,GO:0043229,GO:0043231,GO:0043232,GO:0044085,GO:0044422,GO:0044424,GO:0044428,GO:0044446,GO:0044464,GO:0071840\n\n### Inspect original VCF\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    echo \"'head' view of ${orig_vcf}:\"\n    echo \"\"\n    head \"./data/${orig_vcf}\"\n    echo \"\"\n    echo \"End of 'head' view of ${orig_vcf}\"\n    echo \"\"\n    echo \"${line}\"\n    echo \"\"\n\n    echo \"VCF header info:\"\n    echo \"\"\n\n    # Capture first line of header (skipping list of contigs)\n    begin=$(\"${bcftools}\" view --header-only ./data/${orig_vcf} \\\n    | grep --line-number \"##ALT=<ID\" \\\n    | awk -F\":\" '{print $1}')\n\n    # Caputure last line of header\n    end=$(\"${bcftools}\" view --header-only ./data/${orig_vcf} | wc -l)\n\n    # Use sed to print range of lines\n    sed --quiet \"${begin},${end} p\" ./data/${orig_vcf}\n    echo \"\"\n    echo \"${line}\"\n    echo \"\"\n\n    echo \"List of samples in VCF:\"\n    echo \"\"\n    ${bcftools} query --list-samples ./data/${orig_vcf}\n\n    ## 'head' view of cbai_v3.1-SNPS.vcf:\n    ## \n    ## ##fileformat=VCFv4.2\n    ## ##FILTER=<ID=PASS,Description=\"All filters passed\">\n    ## ##bcftoolsVersion=1.13+htslib-1.13\n    ## ##bcftoolsCommand=mpileup --fasta-ref /gscratch/srlab/sam/data/C_bairdi/transcriptomes/cbai_transcriptome_v3.1.fasta --threads 40 --output-type u /gscratch/scrubbed/samwhite/outputs/20210908-cbai-hisat2-cbai_transcriptome_v3.1/380822.sorted.bam /gscratch/scrubbed/samwhite/outputs/20210908-cbai-hisat2-cbai_transcriptome_v3.1/380823.sorted.bam /gscratch/scrubbed/samwhite/outputs/20210908-cbai-hisat2-cbai_transcriptome_v3.1/380824.sorted.bam /gscratch/scrubbed/samwhite/outputs/20210908-cbai-hisat2-cbai_transcriptome_v3.1/380825.sorted.bam\n    ## ##reference=file:///gscratch/srlab/sam/data/C_bairdi/transcriptomes/cbai_transcriptome_v3.1.fasta\n    ## ##contig=<ID=TRINITY_DN5604_c0_g2_i1,length=2325>\n    ## ##contig=<ID=TRINITY_DN9_c4_g1_i10,length=1025>\n    ## ##contig=<ID=TRINITY_DN9_c4_g1_i9,length=999>\n    ## ##contig=<ID=TRINITY_DN38_c0_g3_i1,length=2357>\n    ## ##contig=<ID=TRINITY_DN81_c0_g1_i9,length=1451>\n    ## \n    ## End of 'head' view of cbai_v3.1-SNPS.vcf\n    ## \n    ## -------------------------------------------------------------------------------------------------\n    ## \n    ## VCF header info:\n    ## \n    ## ##ALT=<ID=*,Description=\"Represents allele(s) other than observed.\">\n    ## ##INFO=<ID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\">\n    ## ##INFO=<ID=IDV,Number=1,Type=Integer,Description=\"Maximum number of raw reads supporting an indel\">\n    ## ##INFO=<ID=IMF,Number=1,Type=Float,Description=\"Maximum fraction of raw reads supporting an indel\">\n    ## ##INFO=<ID=DP,Number=1,Type=Integer,Description=\"Raw read depth\">\n    ## ##INFO=<ID=VDB,Number=1,Type=Float,Description=\"Variant Distance Bias for filtering splice-site artefacts in RNA-seq data (bigger is better)\",Version=\"3\">\n    ## ##INFO=<ID=RPBZ,Number=1,Type=Float,Description=\"Mann-Whitney U-z test of Read Position Bias (closer to 0 is better)\">\n    ## ##INFO=<ID=MQBZ,Number=1,Type=Float,Description=\"Mann-Whitney U-z test of Mapping Quality Bias (closer to 0 is better)\">\n    ## ##INFO=<ID=BQBZ,Number=1,Type=Float,Description=\"Mann-Whitney U-z test of Base Quality Bias (closer to 0 is better)\">\n    ## ##INFO=<ID=MQSBZ,Number=1,Type=Float,Description=\"Mann-Whitney U-z test of Mapping Quality vs Strand Bias (closer to 0 is better)\">\n    ## ##INFO=<ID=SCBZ,Number=1,Type=Float,Description=\"Mann-Whitney U-z test of Soft-Clip Length Bias (closer to 0 is better)\">\n    ## ##INFO=<ID=FS,Number=1,Type=Float,Description=\"Phred-scaled p-value using Fisher's exact test to detect strand bias\">\n    ## ##INFO=<ID=SGB,Number=1,Type=Float,Description=\"Segregation based metric.\">\n    ## ##INFO=<ID=MQ0F,Number=1,Type=Float,Description=\"Fraction of MQ0 reads (smaller is better)\">\n    ## ##FORMAT=<ID=PL,Number=G,Type=Integer,Description=\"List of Phred-scaled genotype likelihoods\">\n    ## ##FORMAT=<ID=GT,Number=1,Type=String,Description=\"Genotype\">\n    ## ##INFO=<ID=AC,Number=A,Type=Integer,Description=\"Allele count in genotypes for each ALT allele, in the same order as listed\">\n    ## ##INFO=<ID=AN,Number=1,Type=Integer,Description=\"Total number of alleles in called genotypes\">\n    ## ##INFO=<ID=DP4,Number=4,Type=Integer,Description=\"Number of high-quality ref-forward , ref-reverse, alt-forward and alt-reverse bases\">\n    ## ##INFO=<ID=MQ,Number=1,Type=Integer,Description=\"Average mapping quality\">\n    ## ##bcftools_callVersion=1.13+htslib-1.13\n    ## ##bcftools_callCommand=call --output-type v --multiallelic-caller --variants-only --threads 40; Date=Fri Sep 10 21:20:44 2021\n    ## #CHROM   POS ID  REF ALT QUAL    FILTER  INFO    FORMAT  d2_uninfected_decreased-temp    d2_infected_decreased-temp  d2_uninfected_elevated-temp d2_infected_elevated-temp\n    ## TRINITY_DN5604_c0_g2_i1  35  .   A   C   37.0646 .   DP=3;VDB=0.14;SGB=-0.314421;RPBZ=-1.22474;FS=0;MQ0F=0;AC=3;AN=4;DP4=1,0,2,0;MQ=60   GT:PL   ./.:0,0,0   0/1:31,0,31 ./.:0,0,0   1/1:37,3,0\n    ## TRINITY_DN5604_c0_g2_i1  391 .   C   G   71.5526 .   DP=3;VDB=0.6;SGB=-0.314421;FS=0;MQ0F=0;AC=4;AN=4;DP4=0,0,0,2;MQ=60  GT:PL   ./.:0,0,0   1/1:60,3,0  ./.:0,0,0   1/1:37,3,0\n    ## \n    ## -------------------------------------------------------------------------------------------------\n    ## \n    ## List of samples in VCF:\n    ## \n    ## d2_uninfected_decreased-temp\n    ## d2_infected_decreased-temp\n    ## d2_uninfected_elevated-temp\n    ## d2_infected_elevated-temp\n\n### Subset VCF to minimum coverage and quality\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    # Subset VCF to only SNPs with ${SNP_coverage}x raw read coverage\n    # and quality >= ${SNP_qual}\n    \"${bcftools}\" filter \\\n    --include \"TYPE='snp' & MIN(DP)>=${SNP_coverage} & QUAL>=${SNP_quality}\" \\\n    --threads ${threads} \\\n    ./data/${orig_vcf} \\\n    > ./analyses/${vcf_filtered}\n\n### Inspect filtered VCF\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    echo \"'head' view of ${vcf_filtered}:\"\n    echo \"\"\n    head \"./analyses/${vcf_filtered}\"\n    echo \"\"\n    echo \"End of 'head' view of ${vcf_filtered}\"\n    echo \"\"\n    echo \"${line}\"\n    echo \"\"\n\n    echo \"VCF header info:\"\n    echo \"\"\n\n    # Capture first line of header (skipping list of contigs)\n    begin=$(\"${bcftools}\" view --header-only ./analyses/${vcf_filtered} \\\n    | grep --line-number \"##ALT=<ID\" \\\n    | awk -F\":\" '{print $1}')\n\n    # Caputure last line of header\n    end=$(\"${bcftools}\" view --header-only ./analyses/${vcf_filtered} | wc -l)\n\n    # Use sed to print range of lines\n     sed --quiet \"${begin},${end} p\" ./analyses/${vcf_filtered}\n\n    echo \"\"\n    echo \"${line}\"\n    echo \"\"\n\n    echo \"List of samples in VCF:\"\n    echo \"\"\n    ${bcftools} query --list-samples ./analyses/${vcf_filtered}\n\n    ## 'head' view of cbai_v3.1-SNPS-30Q-10x.vcf:\n    ## \n    ## ##fileformat=VCFv4.2\n    ## ##FILTER=<ID=PASS,Description=\"All filters passed\">\n    ## ##bcftoolsVersion=1.13+htslib-1.13\n    ## ##bcftoolsCommand=mpileup --fasta-ref /gscratch/srlab/sam/data/C_bairdi/transcriptomes/cbai_transcriptome_v3.1.fasta --threads 40 --output-type u /gscratch/scrubbed/samwhite/outputs/20210908-cbai-hisat2-cbai_transcriptome_v3.1/380822.sorted.bam /gscratch/scrubbed/samwhite/outputs/20210908-cbai-hisat2-cbai_transcriptome_v3.1/380823.sorted.bam /gscratch/scrubbed/samwhite/outputs/20210908-cbai-hisat2-cbai_transcriptome_v3.1/380824.sorted.bam /gscratch/scrubbed/samwhite/outputs/20210908-cbai-hisat2-cbai_transcriptome_v3.1/380825.sorted.bam\n    ## ##reference=file:///gscratch/srlab/sam/data/C_bairdi/transcriptomes/cbai_transcriptome_v3.1.fasta\n    ## ##contig=<ID=TRINITY_DN5604_c0_g2_i1,length=2325>\n    ## ##contig=<ID=TRINITY_DN9_c4_g1_i10,length=1025>\n    ## ##contig=<ID=TRINITY_DN9_c4_g1_i9,length=999>\n    ## ##contig=<ID=TRINITY_DN38_c0_g3_i1,length=2357>\n    ## ##contig=<ID=TRINITY_DN81_c0_g1_i9,length=1451>\n    ## \n    ## End of 'head' view of cbai_v3.1-SNPS-30Q-10x.vcf\n    ## \n    ## -------------------------------------------------------------------------------------------------\n    ## \n    ## VCF header info:\n    ## \n    ## ##ALT=<ID=*,Description=\"Represents allele(s) other than observed.\">\n    ## ##INFO=<ID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\">\n    ## ##INFO=<ID=IDV,Number=1,Type=Integer,Description=\"Maximum number of raw reads supporting an indel\">\n    ## ##INFO=<ID=IMF,Number=1,Type=Float,Description=\"Maximum fraction of raw reads supporting an indel\">\n    ## ##INFO=<ID=DP,Number=1,Type=Integer,Description=\"Raw read depth\">\n    ## ##INFO=<ID=VDB,Number=1,Type=Float,Description=\"Variant Distance Bias for filtering splice-site artefacts in RNA-seq data (bigger is better)\",Version=\"3\">\n    ## ##INFO=<ID=RPBZ,Number=1,Type=Float,Description=\"Mann-Whitney U-z test of Read Position Bias (closer to 0 is better)\">\n    ## ##INFO=<ID=MQBZ,Number=1,Type=Float,Description=\"Mann-Whitney U-z test of Mapping Quality Bias (closer to 0 is better)\">\n    ## ##INFO=<ID=BQBZ,Number=1,Type=Float,Description=\"Mann-Whitney U-z test of Base Quality Bias (closer to 0 is better)\">\n    ## ##INFO=<ID=MQSBZ,Number=1,Type=Float,Description=\"Mann-Whitney U-z test of Mapping Quality vs Strand Bias (closer to 0 is better)\">\n    ## ##INFO=<ID=SCBZ,Number=1,Type=Float,Description=\"Mann-Whitney U-z test of Soft-Clip Length Bias (closer to 0 is better)\">\n    ## ##INFO=<ID=FS,Number=1,Type=Float,Description=\"Phred-scaled p-value using Fisher's exact test to detect strand bias\">\n    ## ##INFO=<ID=SGB,Number=1,Type=Float,Description=\"Segregation based metric.\">\n    ## ##INFO=<ID=MQ0F,Number=1,Type=Float,Description=\"Fraction of MQ0 reads (smaller is better)\">\n    ## ##FORMAT=<ID=PL,Number=G,Type=Integer,Description=\"List of Phred-scaled genotype likelihoods\">\n    ## ##FORMAT=<ID=GT,Number=1,Type=String,Description=\"Genotype\">\n    ## ##INFO=<ID=AC,Number=A,Type=Integer,Description=\"Allele count in genotypes for each ALT allele, in the same order as listed\">\n    ## ##INFO=<ID=AN,Number=1,Type=Integer,Description=\"Total number of alleles in called genotypes\">\n    ## ##INFO=<ID=DP4,Number=4,Type=Integer,Description=\"Number of high-quality ref-forward , ref-reverse, alt-forward and alt-reverse bases\">\n    ## ##INFO=<ID=MQ,Number=1,Type=Integer,Description=\"Average mapping quality\">\n    ## ##bcftools_callVersion=1.13+htslib-1.13\n    ## ##bcftools_callCommand=call --output-type v --multiallelic-caller --variants-only --threads 40; Date=Fri Sep 10 21:20:44 2021\n    ## ##bcftools_filterVersion=1.13+htslib-1.13\n    ## ##bcftools_filterCommand=filter --include 'TYPE='snp' & MIN(DP)>=10 & QUAL>=30' --threads 8 ./data/cbai_v3.1-SNPS.vcf; Date=Thu Oct  7 12:55:06 2021\n    ## #CHROM   POS ID  REF ALT QUAL    FILTER  INFO    FORMAT  d2_uninfected_decreased-temp    d2_infected_decreased-temp  d2_uninfected_elevated-temp d2_infected_elevated-temp\n    ## TRINITY_DN9_c4_g1_i10    661 .   T   C   125.719 PASS    DP=139;VDB=3.781e-05;SGB=-11.5772;RPBZ=-0.349139;MQBZ=0.473562;MQSBZ=0.168907;BQBZ=3.68777;SCBZ=-3.2251;FS=0;MQ0F=0.00719424;AC=2;AN=8;DP4=44,55,5,6;MQ=58  GT:PL   0/1:89,0,255    0/0:0,60,255    0/1:77,0,196    0/0:0,18,255\n    ## TRINITY_DN9_c4_g1_i10    662 .   G   A   125.924 PASS    DP=139;VDB=3.781e-05;SGB=-11.5772;RPBZ=-0.349216;MQBZ=0.473562;MQSBZ=0.168907;BQBZ=3.85055;SCBZ=-3.22016;FS=0;MQ0F=0.00719424;AC=2;AN=8;DP4=44,55,5,6;MQ=58 GT:PL   0/1:89,0,255    0/0:0,60,255    0/1:77,0,199    0/0:0,11,255\n    ## \n    ## -------------------------------------------------------------------------------------------------\n    ## \n    ## List of samples in VCF:\n    ## \n    ## d2_uninfected_decreased-temp\n    ## d2_infected_decreased-temp\n    ## d2_uninfected_elevated-temp\n    ## d2_infected_elevated-temp\n\n### Extract Transcripts Having SNPs with `${SNP_coverage}x` Read Coverage and Quality &gt;= `${SNP_qual}`\n\nThe resulting FastA is useful to use in IGV, so that we don’t have to\ndeal with browsing contigs with no variants.\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    # List of FastA IDs with ${SNP_coverage}x SNP coverage\n    # Uses awk to skip all lines beginning with '#'\n    awk '/^[^#]/{print $1}' ./analyses/${vcf_filtered} \\\n    | sort -u \\\n    > ./analyses/${contigs_list}\n\n    # Use seqtk to generate a FastA from original transcriptome assembly and list of contigs with ${SNP_coverage}x SNP coverage\n    \"${seqtk}\" subseq ./data/${transcriptome_fasta} ./analyses/${contigs_list} > ./data/${transcriptome_SNPS_fasta}\n\n    # Generate FastA index file for new FastA\n    \"${samtools}\" faidx ./data/${transcriptome_SNPS_fasta}\n\n    ls -ltrh ./analyses\n\n    ## total 22M\n    ## -rw-rw-r-- 1 sam sam  22M Oct  7 12:55 cbai_v3.1-SNPS-30Q-10x.vcf\n    ## -rw-rw-r-- 1 sam sam 423K Oct  7 12:55 cbai_v3.1-SNPS_30Q-10x_contig-IDs.txt\n\n### Compare number of original transcripts with number of those with SNPs\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    for fasta in ./data/*.fasta\n    do\n      grep --count --with-filename \"^>\" ${fasta}\n    done | column -t -s \":\"\n\n    ## ./data/cbai_transcriptome_v3.1.fasta               78649\n    ## ./data/cbai_transcriptome_v3.1_SNPs-30Q-10x.fasta  17680\n\n## SNP Stats\n\n### Summary stats\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    # Shows summary stats for all samples\n    ${bcftools} stats \\\n    --samples - \\\n    ./analyses/${vcf_filtered} \\\n    | head -n 31\n\n    ## # This file was produced by bcftools stats (1.13+htslib-1.13) and can be plotted using plot-vcfstats.\n    ## # The command line was:  bcftools stats  --samples - ./analyses/cbai_v3.1-SNPS-30Q-10x.vcf\n    ## #\n    ## # Definition of sets:\n    ## # ID [2]id   [3]tab-separated file names\n    ## ID   0   ./analyses/cbai_v3.1-SNPS-30Q-10x.vcf\n    ## # SN, Summary numbers:\n    ## #   number of records   .. number of data rows in the VCF\n    ## #   number of no-ALTs   .. reference-only sites, ALT is either \".\" or identical to REF\n    ## #   number of SNPs      .. number of rows with a SNP\n    ## #   number of MNPs      .. number of rows with a MNP, such as CC>TT\n    ## #   number of indels    .. number of rows with an indel\n    ## #   number of others    .. number of rows with other type, for example a symbolic allele or\n    ## #                          a complex substitution, such as ACT>TCGA\n    ## #   number of multiallelic sites     .. number of rows with multiple alternate alleles\n    ## #   number of multiallelic SNP sites .. number of rows with multiple alternate alleles, all SNPs\n    ## # \n    ## #   Note that rows containing multiple types will be counted multiple times, in each\n    ## #   counter. For example, a row with a SNP and an indel increments both the SNP and\n    ## #   the indel counter.\n    ## # \n    ## # SN [2]id   [3]key  [4]value\n    ## SN   0   number of samples:  4\n    ## SN   0   number of records:  79753\n    ## SN   0   number of no-ALTs:  0\n    ## SN   0   number of SNPs: 79753\n    ## SN   0   number of MNPs: 0\n    ## SN   0   number of indels:   0\n    ## SN   0   number of others:   0\n    ## SN   0   number of multiallelic sites:   785\n    ## SN   0   number of multiallelic SNP sites:   785\n\n#### Transitions/Transversions and Substitution types\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    ${bcftools} stats \\\n    --samples - \\\n    ./analyses/${vcf_filtered} \\\n    | grep \"ST\"\n\n    ## # TSTV, transitions/transversions:\n    ## # TSTV   [2]id   [3]ts   [4]tv   [5]ts/tv    [6]ts (1st ALT) [7]tv (1st ALT) [8]ts/tv (1st ALT)\n    ## TSTV 0   50173   30371   1.65    49905   29848   1.67\n    ## # ST, Substitution types:\n    ## # ST [2]id   [3]type [4]count\n    ## ST   0   A>C 4141\n    ## ST   0   A>G 10450\n    ## ST   0   A>T 3428\n    ## ST   0   C>A 4425\n    ## ST   0   C>G 3420\n    ## ST   0   C>T 14934\n    ## ST   0   G>A 14055\n    ## ST   0   G>C 3373\n    ## ST   0   G>T 3944\n    ## ST   0   T>A 3635\n    ## ST   0   T>C 10734\n    ## ST   0   T>G 4005\n\n### Individual sample stats\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    # Shows samples stats.\n    # Uses sed/column/tail to format output nicely\n    ${bcftools} stats \\\n    --samples - \\\n    ./analyses/${vcf_filtered} \\\n    | grep \"PSC\" \\\n    | sed 's/^# *//' \\\n    | sed 's/average depth/avg_dp/' \\\n    | column -t \\\n    | tail -n 5\n\n    ## PSC   [2]id       [3]sample                     [4]nRefHom  [5]nNonRefHom  [6]nHets  [7]nTransitions  [8]nTransversions  [9]nIndels  [10]avg_dp  [11]nSingletons  [12]nHapRef  [13]nHapAlt  [14]nMissing\n    ## PSC   0           d2_uninfected_decreased-temp  23566       20691          28356     29276            19771              0           0.0         5658             0            0            7140\n    ## PSC   0           d2_infected_decreased-temp    24704       20754          30361     30595            20520              0           0.0         4725             0            0            3934\n    ## PSC   0           d2_uninfected_elevated-temp   22246       19306          33690     31942            21054              0           0.0         5052             0            0            4511\n    ## PSC   0           d2_infected_elevated-temp     22970       20575          34095     32990            21680              0           0.0         5057             0            0            2113\n\n### Percentage of transcripts with SNPS\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    # Count number of transcripts in transcriptome assembly\n    transcripts_count=$(grep -c \"^>\" ./data/${transcriptome_fasta})\n    printf \"%s\\t%s\\n\" \"Original transcriptome transcripts:\" \"${transcripts_count}\"\n\n    # Count number of transcripts with SNPs\n    # Parses Trinity ID and counts unique Trinity IDs\n    snp_transcripts_count=$(awk '/^[^#]/{print $1}' ./analyses/${vcf_filtered} | sort -u| wc -l)\n    printf \"%s\\t%s\\n\" \"Transcripts with SNPs:\" \"${snp_transcripts_count}\"\n\n    echo \"\"\n    # Calculate percentage\n    printf \"%s\\t%s\\n\" \"Percentage of transcripts with SNPs:\" \"$(bc <<< \"scale=4; ( ${snp_transcripts_count} / ${transcripts_count} * 100)\")\"\n\n    ## Original transcriptome transcripts:  78649\n    ## Transcripts with SNPs:   17680\n    ## \n    ## Percentage of transcripts with SNPs: 22.4700\n\n### Get max/min/mean number of SNPs per transcript\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    awk '/^[^#]/{print $1}' ./analyses/${vcf_filtered} \\\n    | sort \\\n    | uniq -c \\\n    | sort -k1n,1 \\\n    | awk '{sum+=$1;cnt++;max=$1;min=cnt==1?$1:min} END{print \"min=\"min, \"max=\"max, \"mean=\"sum/cnt}'\n\n    ## min=1 max=334 mean=4.51092\n\n### Extract FastA IDs\n\nStrips Trinity isoform designations from end of ID to match gene IDs in\nGO term annotation file\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    awk '/^[^#]/{print $1}' ./analyses/${vcf_filtered} \\\n    | awk 'BEGIN { FS = \"_\"; OFS = \"_\" } {print $1, $2, $3, $4}' \\\n    | sort -u \\\n    > ./analyses/${genes_list}\n\n    wc -l ./analyses/\"${genes_list}\"\n\n    echo \"\"\n    echo \"${line}\"\n    echo \"\"\n\n    head ./analyses/\"${genes_list}\"\n\n    ## 10332 ./analyses/cbai_v3.1-SNPS_30Q-10x_gene-IDs.txt\n    ## \n    ## -------------------------------------------------------------------------------------------------\n    ## \n    ## TRINITY_DN1000_c1_g1\n    ## TRINITY_DN10011_c0_g1\n    ## TRINITY_DN10019_c0_g1\n    ## TRINITY_DN1001_c0_g1\n    ## TRINITY_DN10023_c0_g1\n    ## TRINITY_DN10023_c1_g1\n    ## TRINITY_DN10023_c2_g2\n    ## TRINITY_DN10025_c0_g1\n    ## TRINITY_DN1002_c2_g1\n    ## TRINITY_DN10030_c0_g1\n\n### Extract genes with SNPs from transcriptome annotation file\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    # Uses a list of Trinity gene IDs to extract gene IDs and corresponding GO accessions.\n    # Expects Trinotate annotations file as input.\n    # Uses sed to convert commas to tabs in preparation for subsequent \"flattening\"\n    while read -r line\n    do \n      grep \"${line}\" ./data/${cbai_v3_1_GO}\n    done < ./analyses/${genes_list} \\\n    | sed $'s/,/\\t/g' \\\n    > ./analyses/${genes_GO_list}\n\n    # Check number of records\n    wc -l ./analyses/${genes_GO_list}\n\n    echo \"\"\n    echo \"${line}\"\n    echo \"\"\n\n    head ./analyses/${genes_GO_list}\n\n    ## 6891 ./analyses/cbai_v3.1-SNPS_30Q-10x_GO.tab\n    ## \n    ## -------------------------------------------------------------------------------------------------\n    ## \n    ## TRINITY_DN1000_c1_g1 GO:0005575  GO:0005634  GO:0005737  GO:0008150  GO:0010494  GO:0010717  GO:0030529  GO:0032991  GO:0035770  GO:0036464  GO:0043226  GO:0043227  GO:0043228  GO:0043229  GO:0043231  GO:0043232  GO:0044424  GO:0044444  GO:0044464  GO:0045595  GO:0050789  GO:0050793  GO:0050794  GO:0051239  GO:0065007  GO:1990904  GO:2000026\n    ## TRINITY_DN10011_c0_g1    GO:0002082  GO:0003674  GO:0003824  GO:0004129  GO:0005215  GO:0005575  GO:0005739  GO:0005746  GO:0006140  GO:0006461  GO:0006996  GO:0007005  GO:0008150  GO:0008324  GO:0009055  GO:0009987  GO:0015002  GO:0015075  GO:0015077  GO:0015078  GO:0016021  GO:0016043  GO:0016491  GO:0016675  GO:0016676  GO:0019219  GO:0019220  GO:0019222  GO:0022607  GO:0022857  GO:0022890  GO:0022891  GO:0022892  GO:0031224  GO:0031323  GO:0034622  GO:0042325  GO:0043226  GO:0043227  GO:0043229  GO:0043231  GO:0043467  GO:0043623  GO:0043933  GO:0044422  GO:0044424  GO:0044425  GO:0044429  GO:0044444  GO:0044446  GO:0044455  GO:0044464  GO:0050789  GO:0050794  GO:0051171  GO:0051174  GO:0065003  GO:0065007  GO:0070469  GO:0071822  GO:0071840  GO:0080090  GO:0097250  GO:1900542  GO:1903578\n    ## TRINITY_DN1001_c0_g1 GO:0000096  GO:0000097  GO:0003674  GO:0003824  GO:0003962  GO:0004121  GO:0004123  GO:0005488  GO:0005575  GO:0005737  GO:0006082  GO:0006520  GO:0006534  GO:0006555  GO:0006790  GO:0006807  GO:0008150  GO:0008152  GO:0008652  GO:0009058  GO:0009066  GO:0009067  GO:0009069  GO:0009070  GO:0009086  GO:0009092  GO:0009987  GO:0016053  GO:0016740  GO:0016765  GO:0016829  GO:0016846  GO:0019343  GO:0019344  GO:0019346  GO:0019752  GO:0019842  GO:0030170  GO:0036094  GO:0043167  GO:0043168  GO:0043436  GO:0044237  GO:0044238  GO:0044249  GO:0044272  GO:0044281  GO:0044283  GO:0044424  GO:0044464  GO:0044699  GO:0044710  GO:0044711  GO:0044763  GO:0046394  GO:0047804  GO:0048037  GO:0050667  GO:0070279  GO:0071704  GO:0097159  GO:1901363  GO:1901564  GO:1901566  GO:1901576  GO:1901605  GO:1901607\n    ## TRINITY_DN10023_c0_g1    GO:0005575  GO:0005634  GO:0005730  GO:0005737  GO:0008150  GO:0022613  GO:0042254  GO:0043226  GO:0043227  GO:0043228  GO:0043229  GO:0043231  GO:0043232  GO:0044085  GO:0044422  GO:0044424  GO:0044428  GO:0044446  GO:0044464  GO:0071840\n    ## TRINITY_DN10023_c2_g2    GO:0001822  GO:0002376  GO:0003674  GO:0005488  GO:0005515  GO:0005575  GO:0005634  GO:0005829  GO:0006325  GO:0006464  GO:0006473  GO:0006475  GO:0006508  GO:0006511  GO:0006515  GO:0006807  GO:0006950  GO:0006974  GO:0006996  GO:0007130  GO:0007165  GO:0007276  GO:0007283  GO:0007420  GO:0008104  GO:0008150  GO:0008152  GO:0008630  GO:0009056  GO:0009057  GO:0009892  GO:0009894  GO:0009895  GO:0009987  GO:0010033  GO:0010243  GO:0010498  GO:0010605  GO:0010941  GO:0016043  GO:0018193  GO:0018205  GO:0018393  GO:0018394  GO:0019222  GO:0019538  GO:0019941  GO:0022402  GO:0022414  GO:0022607  GO:0030154  GO:0030162  GO:0030163  GO:0030324  GO:0030433  GO:0031323  GO:0031324  GO:0031329  GO:0031330  GO:0031593  GO:0031647  GO:0031982  GO:0032182  GO:0032268  GO:0032269  GO:0032403  GO:0032434  GO:0032435  GO:0032502  GO:0032991  GO:0033036  GO:0033554  GO:0034613  GO:0034976  GO:0035556  GO:0036211  GO:0036503  GO:0042176  GO:0042177  GO:0042221  GO:0042771  GO:0042981  GO:0043021  GO:0043022  GO:0043067  GO:0043130  GO:0043161  GO:0043170  GO:0043226  GO:0043227  GO:0043229  GO:0043230  GO:0043231  GO:0043234  GO:0043412  GO:0043543  GO:0043632  GO:0044237  GO:0044238  GO:0044248  GO:0044260  GO:0044265  GO:0044267  GO:0044421  GO:0044424  GO:0044444  GO:0044445  GO:0044464  GO:0044699  GO:0044702  GO:0044710  GO:0044712  GO:0044763  GO:0044767  GO:0044877  GO:0045048  GO:0045184  GO:0045861  GO:0045995  GO:0048232  GO:0048513  GO:0048519  GO:0048523  GO:0048609  GO:0048856  GO:0048869  GO:0050789  GO:0050793  GO:0050794  GO:0050821  GO:0050896  GO:0051171  GO:0051172  GO:0051179  GO:0051205  GO:0051234  GO:0051239  GO:0051246  GO:0051248  GO:0051276  GO:0051603  GO:0051641  GO:0051716  GO:0060255  GO:0061136  GO:0061857  GO:0065007  GO:0065008  GO:0070059  GO:0070062  GO:0070192  GO:0070193  GO:0070628  GO:0070727  GO:0071704  GO:0071712  GO:0071816  GO:0071818  GO:0071840  GO:0072331  GO:0072332  GO:0072379  GO:0072657  GO:0080090  GO:0090150  GO:0097190  GO:0097193  GO:1901564  GO:1901565  GO:1901575  GO:1901698  GO:1901799  GO:1903046  GO:1903050  GO:1903051  GO:1903362  GO:1903363  GO:1903561  GO:2000026\n    ## TRINITY_DN1002_c2_g1 GO:0003674  GO:0003676  GO:0003723  GO:0003729  GO:0005488  GO:0005515  GO:0005575  GO:0005634  GO:0006139  GO:0006396  GO:0006725  GO:0006807  GO:0008150  GO:0008152  GO:0009987  GO:0016070  GO:0031050  GO:0034641  GO:0035196  GO:0043170  GO:0043226  GO:0043227  GO:0043229  GO:0043231  GO:0044237  GO:0044238  GO:0044260  GO:0044424  GO:0044464  GO:0046483  GO:0070918  GO:0071704  GO:0090304  GO:0097159  GO:1901360  GO:1901363\n    ## TRINITY_DN10030_c0_g1    GO:0000166  GO:0000346  GO:0003674  GO:0003676  GO:0003677  GO:0003723  GO:0005488  GO:0005575  GO:0005730  GO:0006405  GO:0006406  GO:0006810  GO:0006913  GO:0008150  GO:0008284  GO:0008327  GO:0009893  GO:0010604  GO:0010638  GO:0015931  GO:0016604  GO:0016607  GO:0019222  GO:0030529  GO:0031056  GO:0031058  GO:0031060  GO:0031062  GO:0031323  GO:0031325  GO:0031399  GO:0031401  GO:0032268  GO:0032270  GO:0032781  GO:0032991  GO:0033043  GO:0033044  GO:0035770  GO:0036094  GO:0036464  GO:0042127  GO:0043085  GO:0043226  GO:0043228  GO:0043229  GO:0043232  GO:0043234  GO:0043462  GO:0043565  GO:0044093  GO:0044422  GO:0044424  GO:0044428  GO:0044444  GO:0044446  GO:0044451  GO:0044464  GO:0046907  GO:0048518  GO:0048522  GO:0050657  GO:0050658  GO:0050789  GO:0050790  GO:0050794  GO:0051028  GO:0051095  GO:0051096  GO:0051128  GO:0051130  GO:0051168  GO:0051169  GO:0051171  GO:0051173  GO:0051179  GO:0051234  GO:0051236  GO:0051246  GO:0051247  GO:0051336  GO:0051345  GO:0051641  GO:0051649  GO:0060255  GO:0065007  GO:0065009  GO:0071702  GO:0071705  GO:0080090  GO:0097159  GO:1901265  GO:1901363  GO:1902275  GO:1905269  GO:1990904  GO:2001252\n    ## TRINITY_DN10030_c2_g1    GO:0005575  GO:0005789  GO:0008150  GO:0009987  GO:0016020  GO:0016021  GO:0019725  GO:0031224  GO:0042592  GO:0044422  GO:0044424  GO:0044425  GO:0044432  GO:0044444  GO:0044446  GO:0044464  GO:0044699  GO:0044763  GO:0045454  GO:0050789  GO:0050794  GO:0065007  GO:0065008\n    ## TRINITY_DN10034_c0_g1    GO:0000166  GO:0000226  GO:0003674  GO:0003676  GO:0003677  GO:0003678  GO:0003824  GO:0004386  GO:0005488  GO:0005524  GO:0005575  GO:0005634  GO:0006139  GO:0006259  GO:0006260  GO:0006270  GO:0006725  GO:0006807  GO:0006996  GO:0007010  GO:0007017  GO:0007051  GO:0007052  GO:0008150  GO:0008152  GO:0009058  GO:0009059  GO:0009987  GO:0016043  GO:0016462  GO:0016787  GO:0016817  GO:0016818  GO:0016887  GO:0017076  GO:0017111  GO:0022402  GO:0030554  GO:0032553  GO:0032555  GO:0032559  GO:0032991  GO:0034641  GO:0034645  GO:0035639  GO:0036094  GO:0042555  GO:0043167  GO:0043168  GO:0043170  GO:0043226  GO:0043227  GO:0043229  GO:0043231  GO:0043234  GO:0044237  GO:0044238  GO:0044249  GO:0044260  GO:0044424  GO:0044464  GO:0046483  GO:0071704  GO:0071840  GO:0090304  GO:0097159  GO:0097367  GO:1901265  GO:1901360  GO:1901363  GO:1901576  GO:1902850  GO:1903047\n    ## TRINITY_DN10038_c0_g2    GO:0003674  GO:0003824  GO:0016301  GO:0016740  GO:0016772\n\n### Flatten `${genes_GO_list}` to have one GO accession per line.\n\n    # Load contents of .rvars into the environment\n    source .rvars\n\n    # Identify first field containing a GO term.\n    # Search file with grep for \"GO:\" and pipe to awk.\n    # Awk sets tab as field delimiter (-F'\\t'), runs a for loop that looks for \"GO:\" (~/GO:/), and then prints the field number).\n    # Awk results are piped to sort, which sorts unique by number (-ug).\n    # Sort results are piped to head to retrieve the lowest value (i.e. the top of the list; \"-n1\").\n    begin_goterms=$(grep \"GO:\" ./analyses/\"${genes_GO_list}\" | awk -F'\\t' '{for (i=1;i<=NF;i++) if($i ~/GO:/) print i}' | sort -ug | head -n1)\n\n    # Flatten GO terms annotation file.\n    # Expects tab-delimited input file where:\n    ## First field (column) is Trinity gene IDs.\n    ## Remaining fields (columns) are each individual GO accessions.\n    while read -r line\n    do\n      # Capture maximum number of fields to handle differing number of GO terms.\n      max_field=$(echo \"$line\" | awk -F'\\t' '{print NF}')\n      \n      # Set which fields are \"fixed\" (i.e. Trinity gene IDs)\n      fixed_fields=$(echo \"$line\" | cut -f1)\n      \n      # Identifies if a line has GO accessions,\n      # reads them into an array,\n      # and then prints the Trinity Id and single GO accession on each line.\n      if (( \"$max_field\" < \"$begin_goterms\" )); then\n        printf \"%s\\n\" \"$line\"\n      else\n        # Set range of GO accessions for each line\n        goterms=$(echo \"$line\" | cut -f\"$begin_goterms\"-\"$max_field\")\n        # Set Internal Field Separator to a <tab> and read $goterms into array.\n        IFS=$'\\t' read -r -a array <<< \"$goterms\"\n        # Loop through array and print tab-delimited file of Trinity ID and single GO accession.\n        for element in \"${!array[@]}\"\n          do printf \"%s\\t%s\\n\" \"$fixed_fields\" \"${array[$element]}\"\n        done\n      fi\n    done < ./analyses/\"${genes_GO_list}\" > ./analyses/\"${flattened_GO}\"\n\n    # Check number of records\n    wc -l ./analyses/${flattened_GO}\n\n    echo \"\"\n    echo \"${line}\"\n    echo \"\"\n\n    head ./analyses/${flattened_GO}\n\n    ## 550412 ./analyses/cbai_v3_1-SNPS_30Q-10x_GO.flattened-go.txt\n    ## \n    ## \n    ## \n    ## TRINITY_DN1000_c1_g1 GO:0005575\n    ## TRINITY_DN1000_c1_g1 GO:0005634\n    ## TRINITY_DN1000_c1_g1 GO:0005737\n    ## TRINITY_DN1000_c1_g1 GO:0008150\n    ## TRINITY_DN1000_c1_g1 GO:0010494\n    ## TRINITY_DN1000_c1_g1 GO:0010717\n    ## TRINITY_DN1000_c1_g1 GO:0030529\n    ## TRINITY_DN1000_c1_g1 GO:0032991\n    ## TRINITY_DN1000_c1_g1 GO:0035770\n    ## TRINITY_DN1000_c1_g1 GO:0036464\n\n### Create file with path to `${flattened_GO}` file\n\nUsed to pass Bash variable to R.\n\n    source .rvars\n    echo \"./analyses/${flattened_GO}\" > .flattened_GO\n\n### Create R string with path to Bash variable, `${flattened_GO}`\n\n    string <- paste(readLines(\".flattened_GO\"), collapse=\" \")\n    print(string)\n\n    ## [1] \"./analyses/cbai_v3_1-SNPS_30Q-10x_GO.flattened-go.txt\"\n\n    library(GSEABase)\n\n    ## Loading required package: BiocGenerics\n\n    ## Loading required package: parallel\n\n    ## \n    ## Attaching package: 'BiocGenerics'\n\n    ## The following objects are masked from 'package:parallel':\n    ## \n    ##     clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,\n    ##     clusterExport, clusterMap, parApply, parCapply, parLapply,\n    ##     parLapplyLB, parRapply, parSapply, parSapplyLB\n\n    ## The following objects are masked from 'package:stats':\n    ## \n    ##     IQR, mad, sd, var, xtabs\n\n    ## The following objects are masked from 'package:base':\n    ## \n    ##     anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    ##     dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    ##     grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    ##     order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    ##     rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    ##     union, unique, unsplit, which.max, which.min\n\n    ## Loading required package: Biobase\n\n    ## Welcome to Bioconductor\n    ## \n    ##     Vignettes contain introductory material; view with\n    ##     'browseVignettes()'. To cite Bioconductor, see\n    ##     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\n    ## Loading required package: annotate\n\n    ## Loading required package: AnnotationDbi\n\n    ## Loading required package: stats4\n\n    ## Loading required package: IRanges\n\n    ## Loading required package: S4Vectors\n\n    ## \n    ## Attaching package: 'S4Vectors'\n\n    ## The following object is masked from 'package:base':\n    ## \n    ##     expand.grid\n\n    ## Loading required package: XML\n\n    ## Loading required package: graph\n\n    ## \n    ## Attaching package: 'graph'\n\n    ## The following object is masked from 'package:XML':\n    ## \n    ##     addNode\n\n    library(tidyverse)\n\n    ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──\n\n    ## ✓ ggplot2 3.3.4     ✓ purrr   0.3.4\n    ## ✓ tibble  3.1.2     ✓ dplyr   1.0.6\n    ## ✓ tidyr   1.1.3     ✓ stringr 1.4.0\n    ## ✓ readr   1.4.0     ✓ forcats 0.5.1\n\n    ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n    ## x stringr::boundary() masks graph::boundary()\n    ## x dplyr::collapse()   masks IRanges::collapse()\n    ## x dplyr::combine()    masks Biobase::combine(), BiocGenerics::combine()\n    ## x dplyr::desc()       masks IRanges::desc()\n    ## x tidyr::expand()     masks S4Vectors::expand()\n    ## x dplyr::filter()     masks stats::filter()\n    ## x dplyr::first()      masks S4Vectors::first()\n    ## x dplyr::lag()        masks stats::lag()\n    ## x ggplot2::Position() masks BiocGenerics::Position(), base::Position()\n    ## x purrr::reduce()     masks IRanges::reduce()\n    ## x dplyr::rename()     masks S4Vectors::rename()\n    ## x dplyr::select()     masks AnnotationDbi::select()\n    ## x dplyr::slice()      masks IRanges::slice()\n\n    # Script to retrieve GOslims from Trinity-based, EdgeR GOseq differential gene expression.\n    # Identifies enriched and depleted output files.\n    # Requires \"goslim_generic.obo\" from http://geneontology.org/docs/go-subset-guide\n      \n      ## Get max number of fields\n      # Needed to handle reading in file with different number of columns in each row\n      max_fields <- max(na.omit((count.fields(string, sep = \"\\t\", blank.lines.skip = TRUE))))\n      \n      ## Read in tab-delimited GOseq file\n      # Use \"max_fields\" to populate all columns with a sequentially numbered header\n      go_seqs <- read.table(string,\n                            sep = \"\\t\",\n                            header = FALSE,\n                            col.names = paste0(\"V\",seq_len(max_fields)),\n                            fill = TRUE)\n      \n      ## Grab just the individual GO terms from the \"2nd\" column)\n      goterms <- as.character(go_seqs$V2)\n      \n      ### Use GSEA to map GO terms to GOslims\n      \n      ## Store goterms as GSEA object\n      myCollection <- GOCollection(goterms)\n\n    ## \n\n      ## Use generic GOslim file to create a GOslim collection\n      \n      # I downloaded goslim_generic.obo from http://geneontology.org/docs/go-subset-guide\n      # then i moved it to the R library for GSEABase in the extdata folder\n      # in addition to using the command here - I think they're both required.\n      slim <- getOBOCollection(\"~/data/goslim_generic.obo\")\n      \n      ## Map GO terms to GOslims and select Biological Processes group\n      slims <- goSlim(myCollection, slim, \"BP\", verbose = TRUE)\n      \n      # Rename first column\n      slims <- slims %>% rownames_to_column(var = \"GOslim\")\n      \n      ## Write output file\n      write.csv(slims, file = \"./analyses/S10-SNPs_GO-GOslims.csv\", quote = FALSE, row.names = FALSE)\n\n    # Remove GOslim accession for the generic \"biological_process\" term to improve visualization of other terms.\n    slims <- slims[slims$GOslim != \"GO:0008150\",]\n\n    # Create bar plot.\n    # \"Open\" PNG file for saving subsequent plot\n    pdf(\"./figures/S9-SNPs_GO-GOslims_barplot.pdf\", height = 10, width = 12)\n\n    ggplot(data = slims, aes(x=slims$Percent, y=slims$Term)) +\n      labs(title = \"\",\n           caption = \"Supplemental Figure 1. Barplot of percentages of gene ontology assignments to GOslims for transcripts containing at least on SNP.\n           Excludes the generic \\\"biological_process\\\" GOslim (55.53% of all GO terms) to aid in visualization of other GOslim categories.\",\n           x = \"Percent GO terms assigned to GOslim\",\n           y = \"GOslim\") +\n      geom_bar(stat = \"identity\") +\n      theme(plot.caption = element_text(hjust = 0)\n      )\n\n    ## Warning: Use of `slims$Percent` is discouraged. Use `Percent` instead.\n\n    ## Warning: Use of `slims$Term` is discouraged. Use `Term` instead.\n\n    # Close PNG file\n    dev.off()\n\n    ## png \n    ##   2\n\n---\n\n\n![Barplot of percentages of gene ontology accessions assigned to Biological Process GOslims for genes with at least one SNP. Excludes the generic \"biological_process\" GOslim to improve visualization of remaining categories.](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20211005_cbai_SNP_stats_barplot.png?raw=true)\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"SNP Characterization - C.bairdi v3.1 Transcriptome Assembly and Day2 DEG Pooled Samples RNAseq Data","date":"2021-10-05 06:45","tags":["Tanner crab","bcftools","R project","Chionoecetes bairdi"],"categories":["2021","Tanner Crab RNAseq"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}