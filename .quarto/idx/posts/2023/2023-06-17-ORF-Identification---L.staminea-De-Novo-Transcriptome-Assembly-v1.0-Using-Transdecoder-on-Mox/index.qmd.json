{"title":"ORF Identification - L.staminea De Novo Transcriptome Assembly v1.0 Using Transdecoder on Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"ORF Identification - L.staminea De Novo Transcriptome Assembly v1.0 Using Transdecoder on Mox","date":"2023-06-17 15:27","tags":["Leukoma staminea","little neck clam","transdecoder","mox"],"categories":["2023","Miscellaneous"]},"headingText":"Job Name","containsRefs":false,"markdown":"\nAfter [performing a _de novo_ transcriptome assembly with _L.staminea_ RNA-seq data](https://robertslab.github.io/sams-notebook/posts/2023/2023-06-16-Transcriptome-Assembly---De-Novo-L.staminea-Trimmed-RNAseq-Using-Trinity-on-Mox/), the [`Trinity`](https://github.com/trinityrnaseq/trinityrnaseq/wiki) assembly stats were quite a bit more \"exaggerated\" than normally expected. In an attempt to get a better sense of which contigs might be more useful candidates for downstream analysis, I decided to run the assembly through [Transdecoder](https://github.com/TransDecoder/TransDecoder/wiki) to identify open reading frames (ORFs). This was run on Mox.\n\nSLURM script (GitHub):\n\n- [20230617-lsta-transdecoder-transcriptome_v1.0.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20230617-lsta-transdecoder-transcriptome_v1.0.sh)\n\n```bash\n#!/bin/bash\n#SBATCH --job-name=20230617-lsta-transdecoder-transcriptome_v1.0\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=05-00:00:00\n## Memory per node\n#SBATCH --mem=200G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20230617-lsta-transdecoder-transcriptome_v1.0\n\n# Transdecoder to identify ORFs and \"functional\" contigs from 20230616 L.staminea\n# de novo transcriptome assembly v1.0.\n\n###################################################################################\n# These variables need to be set by user\n\n## Assign Variables\n\nthreads=28\n\n\n# Paths to input/output files\n\ntrinity_fasta=\"/gscratch/scrubbed/samwhite/outputs/20230616-lsta-trinity-RNAseq/lsta-de_novo-transcriptome_v1.0.fasta\"\ntrinity_gene_trans_map=\"/gscratch/scrubbed/samwhite/outputs/20230616-lsta-trinity-RNAseq/lsta-de_novo-transcriptome_v1.0.fasta.gene_trans_map\"\n\nblastp_out_dir=\"blastp_out\"\ntransdecoder_out_dir=\"${trinity_fasta##*/}.transdecoder_dir\"\npfam_out_dir=\"pfam_out\"\nblastp_out=\"${blastp_out_dir}/blastp.outfmt6\"\n\npfam_out=\"${pfam_out_dir}/pfam.domtblout\"\nlORFs_pep=\"${transdecoder_out_dir}/longest_orfs.pep\"\npfam_db=\"/gscratch/srlab/programs/Trinotate-v3.1.1/admin/Pfam-A.hmm\"\nsp_db=\"/gscratch/srlab/programs/Trinotate-v3.1.1/admin/uniprot_sprot.pep\"\n\n# Paths to programs\nblast_dir=\"/gscratch/srlab/programs/ncbi-blast-2.8.1+/bin\"\nblastp=\"${blast_dir}/blastp\"\nhmmer_dir=\"/gscratch/srlab/programs/hmmer-3.2.1/src\"\nhmmscan=\"${hmmer_dir}/hmmscan\"\ntransdecoder_dir=\"/gscratch/srlab/programs/TransDecoder-v5.5.0\"\ntransdecoder_lORFs=\"${transdecoder_dir}/TransDecoder.LongOrfs\"\ntransdecoder_predict=\"${transdecoder_dir}/TransDecoder.Predict\"\n###################################################################################\n\n\n# Load Python Mox module for Python module availability\nmodule load intel-python3_2017\n\n\n# Make output directories\nmkdir --parents \"${blastp_out_dir}\"\nmkdir --parents \"${pfam_out_dir}\"\n\n# Extract long open reading frames\n${transdecoder_lORFs} \\\n-t ${trinity_fasta} \\\n--gene_trans_map ${trinity_gene_trans_map}\n\n# Run blastp on long ORFs\n${blastp} \\\n-query ${lORFs_pep} \\\n-db ${sp_db} \\\n-max_target_seqs 1 \\\n-outfmt 6 \\\n-evalue 1e-5 \\\n-num_threads ${threads} \\\n> ${blastp_out}\n\n# Run pfam search\n${hmmscan} \\\n--cpu ${threads} \\\n--domtblout ${pfam_out} \\\n${pfam_db} \\\n${lORFs_pep}\n\n# Run Transdecoder with blastp and Pfam results\n${transdecoder_predict} \\\n-t ${trinity_fasta} \\\n--retain_pfam_hits ${pfam_out} \\\n--retain_blastp_hits ${blastp_out}\n\n####################################################################\n\n# Capture program options\nif [[ \"${#programs_array[@]}\" -gt 0 ]]; then\n  echo \"Logging program options...\"\n  for program in \"${!programs_array[@]}\"\n  do\n    {\n    echo \"Program options for ${program}: \"\n    echo \"\"\n    # Handle samtools help menus\n    if [[ \"${program}\" == \"samtools_index\" ]] \\\n    || [[ \"${program}\" == \"samtools_sort\" ]] \\\n    || [[ \"${program}\" == \"samtools_view\" ]]\n    then\n      ${programs_array[$program]}\n\n    # Handle DIAMOND BLAST menu\n    elif [[ \"${program}\" == \"diamond\" ]]; then\n      ${programs_array[$program]} help\n\n    # Handle NCBI BLASTx menu\n    elif [[ \"${program}\" == \"blastx\" ]]; then\n      ${programs_array[$program]} -help\n\n    # Handle fastp menu\n    elif [[ \"${program}\" == \"fastp\" ]]; then\n      ${programs_array[$program]} --help\n    fi\n    ${programs_array[$program]} -h\n    echo \"\"\n    echo \"\"\n    echo \"----------------------------------------------\"\n    echo \"\"\n    echo \"\"\n  } &>> program_options.log || true\n\n    # If MultiQC is in programs_array, copy the config file to this directory.\n    if [[ \"${program}\" == \"multiqc\" ]]; then\n      cp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n    fi\n  done\nfi\n\n\n# Document programs in PATH (primarily for program version ID)\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n```\n\n\n---\n\n# RESULTS\n\nRun time was nearly 20hrs.\n\n![Screencap of L.staminea Transdecoder run time on Mox showing a run time of 19hrs, 12mins, 51secs](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20230617-lsta-transdecoder-transcriptome_v1.0-runtime.png?raw=true)\n\nOutput folder:\n\n- [20230617-lsta-transdecoder-transcriptome_v1.0/](https://gannet.fish.washington.edu/Atumefaciens/20230617-lsta-transdecoder-transcriptome_v1.0/)\n\n  #### BED (text)\n  - [lsta-de_novo-transcriptome_v1.0.fasta.transdecoder.bed](https://gannet.fish.washington.edu/Atumefaciens/20230617-lsta-transdecoder-transcriptome_v1.0/lsta-de_novo-transcriptome_v1.0.fasta.transdecoder.bed) (30M)\n\n    - MD5: `02497568c87e65279e83551ba8fb43ae`\n\n  #### Coding Sequences (FastA)\n  - [lsta-de_novo-transcriptome_v1.0.fasta.transdecoder.cds](https://gannet.fish.washington.edu/Atumefaciens/20230617-lsta-transdecoder-transcriptome_v1.0/lsta-de_novo-transcriptome_v1.0.fasta.transdecoder.cds) (98M)\n\n    - MD5: `1517d724b18d0bd8759cbccc0487e460`\n\n  #### GFF (text)\n  - [lsta-de_novo-transcriptome_v1.0.fasta.transdecoder.gff3](https://gannet.fish.washington.edu/Atumefaciens/20230617-lsta-transdecoder-transcriptome_v1.0/lsta-de_novo-transcriptome_v1.0.fasta.transdecoder.gff3) (99M)\n\n    - MD5: `901ab1c9ca1c0998714ff9cd602b2063`\n\n  #### Peptide Sequences (FastA)\n  - [lsta-de_novo-transcriptome_v1.0.fasta.transdecoder.pep](https://gannet.fish.washington.edu/Atumefaciens/20230617-lsta-transdecoder-transcriptome_v1.0/lsta-de_novo-transcriptome_v1.0.fasta.transdecoder.pep) (52M)\n\n    - MD5: `53752bdb28bf2f89a04620bcee109a4f`\n\n  #### Pfam output (text)\n  - [pfam.domtblout](https://gannet.fish.washington.edu/Atumefaciens/20230617-lsta-transdecoder-transcriptome_v1.0/pfam_out/pfam.domtblout) (132M)\n\n  - MD5: `18cd0fdff4993ed7f1d8f7d36f83e1d6`\n\n  #### BLASTp output (format 6; text)\n  - [blastp.outfmt6](https://gannet.fish.washington.edu/Atumefaciens/20230617-lsta-transdecoder-transcriptome_v1.0/blastp_out/blastp.outfmt6) (6.2M)\n\n  - MD5: `c416fbe543555672083f1a63a4935ed0`\n\nWhen counting complete ORFs (`awk -F\"\\t\" '$3==\"gene\"' lsta-de_novo-transcriptome_v1.0.fasta.transdecoder.gff3 | grep -c \"complete\"`), the result is 28,451. This is a _significant_ reduction in potential genes compared to what [Trinity identified in the _do novo_ assembly from yesterday](https://robertslab.github.io/sams-notebook/posts/2023/2023-06-16-Transcriptome-Assembly---De-Novo-L.staminea-Trimmed-RNAseq-Using-Trinity-on-Mox/) (502,826 \"genes\"). Additionally, this is a much more realistic number of genes. Overall, ORF identification broke out like so:\n\n```\n74533 CDS\n74533 exon\n35983 five_prime_UTR\n74533 gene\n74533 mRNA\n43403 three_prime_UTR\n```\n\nThese numbers include partial ORFs. Even including the partial OFRs, these counts are much more realistic compared to the Trinity _de novo_ assembly stats. \n","srcMarkdownNoYaml":"\nAfter [performing a _de novo_ transcriptome assembly with _L.staminea_ RNA-seq data](https://robertslab.github.io/sams-notebook/posts/2023/2023-06-16-Transcriptome-Assembly---De-Novo-L.staminea-Trimmed-RNAseq-Using-Trinity-on-Mox/), the [`Trinity`](https://github.com/trinityrnaseq/trinityrnaseq/wiki) assembly stats were quite a bit more \"exaggerated\" than normally expected. In an attempt to get a better sense of which contigs might be more useful candidates for downstream analysis, I decided to run the assembly through [Transdecoder](https://github.com/TransDecoder/TransDecoder/wiki) to identify open reading frames (ORFs). This was run on Mox.\n\nSLURM script (GitHub):\n\n- [20230617-lsta-transdecoder-transcriptome_v1.0.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20230617-lsta-transdecoder-transcriptome_v1.0.sh)\n\n```bash\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=20230617-lsta-transdecoder-transcriptome_v1.0\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=05-00:00:00\n## Memory per node\n#SBATCH --mem=200G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20230617-lsta-transdecoder-transcriptome_v1.0\n\n# Transdecoder to identify ORFs and \"functional\" contigs from 20230616 L.staminea\n# de novo transcriptome assembly v1.0.\n\n###################################################################################\n# These variables need to be set by user\n\n## Assign Variables\n\nthreads=28\n\n\n# Paths to input/output files\n\ntrinity_fasta=\"/gscratch/scrubbed/samwhite/outputs/20230616-lsta-trinity-RNAseq/lsta-de_novo-transcriptome_v1.0.fasta\"\ntrinity_gene_trans_map=\"/gscratch/scrubbed/samwhite/outputs/20230616-lsta-trinity-RNAseq/lsta-de_novo-transcriptome_v1.0.fasta.gene_trans_map\"\n\nblastp_out_dir=\"blastp_out\"\ntransdecoder_out_dir=\"${trinity_fasta##*/}.transdecoder_dir\"\npfam_out_dir=\"pfam_out\"\nblastp_out=\"${blastp_out_dir}/blastp.outfmt6\"\n\npfam_out=\"${pfam_out_dir}/pfam.domtblout\"\nlORFs_pep=\"${transdecoder_out_dir}/longest_orfs.pep\"\npfam_db=\"/gscratch/srlab/programs/Trinotate-v3.1.1/admin/Pfam-A.hmm\"\nsp_db=\"/gscratch/srlab/programs/Trinotate-v3.1.1/admin/uniprot_sprot.pep\"\n\n# Paths to programs\nblast_dir=\"/gscratch/srlab/programs/ncbi-blast-2.8.1+/bin\"\nblastp=\"${blast_dir}/blastp\"\nhmmer_dir=\"/gscratch/srlab/programs/hmmer-3.2.1/src\"\nhmmscan=\"${hmmer_dir}/hmmscan\"\ntransdecoder_dir=\"/gscratch/srlab/programs/TransDecoder-v5.5.0\"\ntransdecoder_lORFs=\"${transdecoder_dir}/TransDecoder.LongOrfs\"\ntransdecoder_predict=\"${transdecoder_dir}/TransDecoder.Predict\"\n###################################################################################\n\n\n# Load Python Mox module for Python module availability\nmodule load intel-python3_2017\n\n\n# Make output directories\nmkdir --parents \"${blastp_out_dir}\"\nmkdir --parents \"${pfam_out_dir}\"\n\n# Extract long open reading frames\n${transdecoder_lORFs} \\\n-t ${trinity_fasta} \\\n--gene_trans_map ${trinity_gene_trans_map}\n\n# Run blastp on long ORFs\n${blastp} \\\n-query ${lORFs_pep} \\\n-db ${sp_db} \\\n-max_target_seqs 1 \\\n-outfmt 6 \\\n-evalue 1e-5 \\\n-num_threads ${threads} \\\n> ${blastp_out}\n\n# Run pfam search\n${hmmscan} \\\n--cpu ${threads} \\\n--domtblout ${pfam_out} \\\n${pfam_db} \\\n${lORFs_pep}\n\n# Run Transdecoder with blastp and Pfam results\n${transdecoder_predict} \\\n-t ${trinity_fasta} \\\n--retain_pfam_hits ${pfam_out} \\\n--retain_blastp_hits ${blastp_out}\n\n####################################################################\n\n# Capture program options\nif [[ \"${#programs_array[@]}\" -gt 0 ]]; then\n  echo \"Logging program options...\"\n  for program in \"${!programs_array[@]}\"\n  do\n    {\n    echo \"Program options for ${program}: \"\n    echo \"\"\n    # Handle samtools help menus\n    if [[ \"${program}\" == \"samtools_index\" ]] \\\n    || [[ \"${program}\" == \"samtools_sort\" ]] \\\n    || [[ \"${program}\" == \"samtools_view\" ]]\n    then\n      ${programs_array[$program]}\n\n    # Handle DIAMOND BLAST menu\n    elif [[ \"${program}\" == \"diamond\" ]]; then\n      ${programs_array[$program]} help\n\n    # Handle NCBI BLASTx menu\n    elif [[ \"${program}\" == \"blastx\" ]]; then\n      ${programs_array[$program]} -help\n\n    # Handle fastp menu\n    elif [[ \"${program}\" == \"fastp\" ]]; then\n      ${programs_array[$program]} --help\n    fi\n    ${programs_array[$program]} -h\n    echo \"\"\n    echo \"\"\n    echo \"----------------------------------------------\"\n    echo \"\"\n    echo \"\"\n  } &>> program_options.log || true\n\n    # If MultiQC is in programs_array, copy the config file to this directory.\n    if [[ \"${program}\" == \"multiqc\" ]]; then\n      cp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n    fi\n  done\nfi\n\n\n# Document programs in PATH (primarily for program version ID)\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n```\n\n\n---\n\n# RESULTS\n\nRun time was nearly 20hrs.\n\n![Screencap of L.staminea Transdecoder run time on Mox showing a run time of 19hrs, 12mins, 51secs](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20230617-lsta-transdecoder-transcriptome_v1.0-runtime.png?raw=true)\n\nOutput folder:\n\n- [20230617-lsta-transdecoder-transcriptome_v1.0/](https://gannet.fish.washington.edu/Atumefaciens/20230617-lsta-transdecoder-transcriptome_v1.0/)\n\n  #### BED (text)\n  - [lsta-de_novo-transcriptome_v1.0.fasta.transdecoder.bed](https://gannet.fish.washington.edu/Atumefaciens/20230617-lsta-transdecoder-transcriptome_v1.0/lsta-de_novo-transcriptome_v1.0.fasta.transdecoder.bed) (30M)\n\n    - MD5: `02497568c87e65279e83551ba8fb43ae`\n\n  #### Coding Sequences (FastA)\n  - [lsta-de_novo-transcriptome_v1.0.fasta.transdecoder.cds](https://gannet.fish.washington.edu/Atumefaciens/20230617-lsta-transdecoder-transcriptome_v1.0/lsta-de_novo-transcriptome_v1.0.fasta.transdecoder.cds) (98M)\n\n    - MD5: `1517d724b18d0bd8759cbccc0487e460`\n\n  #### GFF (text)\n  - [lsta-de_novo-transcriptome_v1.0.fasta.transdecoder.gff3](https://gannet.fish.washington.edu/Atumefaciens/20230617-lsta-transdecoder-transcriptome_v1.0/lsta-de_novo-transcriptome_v1.0.fasta.transdecoder.gff3) (99M)\n\n    - MD5: `901ab1c9ca1c0998714ff9cd602b2063`\n\n  #### Peptide Sequences (FastA)\n  - [lsta-de_novo-transcriptome_v1.0.fasta.transdecoder.pep](https://gannet.fish.washington.edu/Atumefaciens/20230617-lsta-transdecoder-transcriptome_v1.0/lsta-de_novo-transcriptome_v1.0.fasta.transdecoder.pep) (52M)\n\n    - MD5: `53752bdb28bf2f89a04620bcee109a4f`\n\n  #### Pfam output (text)\n  - [pfam.domtblout](https://gannet.fish.washington.edu/Atumefaciens/20230617-lsta-transdecoder-transcriptome_v1.0/pfam_out/pfam.domtblout) (132M)\n\n  - MD5: `18cd0fdff4993ed7f1d8f7d36f83e1d6`\n\n  #### BLASTp output (format 6; text)\n  - [blastp.outfmt6](https://gannet.fish.washington.edu/Atumefaciens/20230617-lsta-transdecoder-transcriptome_v1.0/blastp_out/blastp.outfmt6) (6.2M)\n\n  - MD5: `c416fbe543555672083f1a63a4935ed0`\n\nWhen counting complete ORFs (`awk -F\"\\t\" '$3==\"gene\"' lsta-de_novo-transcriptome_v1.0.fasta.transdecoder.gff3 | grep -c \"complete\"`), the result is 28,451. This is a _significant_ reduction in potential genes compared to what [Trinity identified in the _do novo_ assembly from yesterday](https://robertslab.github.io/sams-notebook/posts/2023/2023-06-16-Transcriptome-Assembly---De-Novo-L.staminea-Trimmed-RNAseq-Using-Trinity-on-Mox/) (502,826 \"genes\"). Additionally, this is a much more realistic number of genes. Overall, ORF identification broke out like so:\n\n```\n74533 CDS\n74533 exon\n35983 five_prime_UTR\n74533 gene\n74533 mRNA\n43403 three_prime_UTR\n```\n\nThese numbers include partial ORFs. Even including the partial OFRs, these counts are much more realistic compared to the Trinity _de novo_ assembly stats. \n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"ORF Identification - L.staminea De Novo Transcriptome Assembly v1.0 Using Transdecoder on Mox","date":"2023-06-17 15:27","tags":["Leukoma staminea","little neck clam","transdecoder","mox"],"categories":["2023","Miscellaneous"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}