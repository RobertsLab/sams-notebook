{"title":"Transcript Identification and Alignments - P.verrucosa RNA-seq with Pver_genome_assembly_v1.0 Using HiSat2 and Stringtie on Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"Transcript Identification and Alignments - P.verrucosa RNA-seq with Pver_genome_assembly_v1.0 Using HiSat2 and Stringtie on Mox","date":"2023-02-16 08:20","tags":["hisat2","stringtie","mox","RNAseq","ballgown","Pocllipora verrucosa","cora","E5"],"categories":["2023","E5"]},"headingText":"Job Name","containsRefs":false,"markdown":"\nAfter getting the [RNA-seq data trimmed](https://robertslab.github.io/sams-notebook/posts/2023/2023-02-15-FastQ-Trimming-and-QC---P.verrucosa-RNA-seq-Data-from-Danielle-Becker-in-Hollie-Putnam-Lab-Using-fastp-FastQC-and-MultiQC-on-Mox/), it was time to perform alignments and determine expression levels of transcripts/isoforms using with [`HISAT2`](https://daehwankimlab.github.io/hisat2/) and [`StringTie`](https://ccb.jhu.edu/software/stringtie/), respectively. [`StringTie`](https://ccb.jhu.edu/software/stringtie/) was set to output tables formatted for import into [`ballgown`](https://github.com/alyssafrazee/ballgown). After those two analyses were complete, I ran [`gffcompare`](https://ccb.jhu.edu/software/stringtie/gffcompare.shtml), using the merged [`StringTie`](https://ccb.jhu.edu/software/stringtie/) GTF and the input GFF3. I caught this in one of Danielle Becker's scripts and thought it might be interesting. The analsyes were run on Mox.\n\nSBATCH Script (GitHub):\n\n- [20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms.sh)\n\n```shell\n#!/bin/bash\n#SBATCH --job-name=20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=07-00:00:00\n## Memory per node\n#SBATCH --mem=120G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms\n\n\n## Script using Stringtie with P.verrucosa v1.0 genome assembly\n## and HiSat2 index generated on 20230131.\n\n## Genome and GFF from here: http://pver.reefgenomics.org/download\n\n## GTF generated on 20230127 by SJW:\n## https://robertslab.github.io/sams-notebook/posts/2023/2023-01-27-Data-Wrangling---P.verrucosa-Genome-GFF-to-GTF-Using-gffread/\n\n## HiSat2 index generated on 20230131 by SJW:\n## https://robertslab.github.io/sams-notebook/posts/2023/2023-01-31-Genome-Indexing---P.verrucosa-v1.0-Assembly-with-HiSat2-on-Mox/\n\n## Using trimmed FastQs from 20230215.\n\n## Expects FastQ input filenames to match <sample name>_R[12].fastp-trim.20230215.fq.gz\n\n\n###################################################################################\n# These variables need to be set by user\n\n## Assign Variables\n\n# Set total number of SAMPLES (NOT number of FastQ files)\ntotal_samples=32\n\n# Set number of CPUs to use\nthreads=28\n\n# Index name for Hisat2 use\n# Needs to match index naem used in previous Hisat2 indexing step\ngenome_index_name=\"Pver_genome_assembly_v1.0\"\n\n# HiSat2 indexes tarball\nindex_tarball=\"Pver_genome_assembly_v1.0-hisat2-indices.tar.gz\"\n\n# Set input FastQ patterns\nR1_fastq_pattern='*R1*fq.gz'\nR2_fastq_pattern='*R2*fq.gz'\nfastq_pattern='*.fastp-trim.20230215.fq.gz'\n\n# Location of Hisat2 index files\n# Must keep variable name formatting, as it's used by HiSat2\nHISAT2_INDEXES=$(pwd)\nexport HISAT2_INDEXES\n\n# Paths to programs\ngffcompare=\"/gscratch/srlab/programs/gffcompare-0.12.6.Linux_x86_64/gffcompare\"\nhisat2_dir=\"/gscratch/srlab/programs/hisat2-2.1.0\"\nhisat2=\"${hisat2_dir}/hisat2\"\nsamtools=\"/gscratch/srlab/programs/samtools-1.10/samtools\"\nstringtie=\"/gscratch/srlab/programs/stringtie-2.2.1.Linux_x86_64/stringtie\"\n\n# Input/output files\ngenome_index_dir=\"/gscratch/srlab/sam/data/P_verrucosa/genomes\"\ngenome_gff=\"${genome_index_dir}/Pver_genome_assembly_v1.0-valid.gff3\"\nfastq_dir=\"/gscratch/srlab/sam/data/P_verrucosa/RNAseq/\"\ngtf_list=\"gtf_list.txt\"\nmerged_bam=\"20230216-pver-stringtie-pver_v1.0-sorted-bams-merged.bam\"\n\n# Declare associative array of sample names and metadata\ndeclare -A samples_associative_array=()\n\n# Programs associative array\ndeclare -A programs_array\nprograms_array=(\n[gffcompare]=\"${gffcompare}\" \\\n[hisat2]=\"${hisat2}\" \\\n[samtools_index]=\"${samtools} index\" \\\n[samtools_merge]=\"${samtools} merge\" \\\n[samtools_sort]=\"${samtools} sort\" \\\n[samtools_view]=\"${samtools} view\" \\\n[stringtie]=\"${stringtie}\"\n)\n\n\n###################################################################################################\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n## Load associative array\n## Only need to use one set of reads to capture sample name\n\n# Set sample counter for array verification\nsample_counter=0\n\n# Load array\n# DO NOT QUOTE ${R1_fastq_pattern} - WILL NOT POPULATE ARRAY!\nfor fastq in \"${fastq_dir}\"${R1_fastq_pattern}\ndo\n  # Increment counter\n  ((sample_counter+=1))\n\n  # Remove path\n  sample_name=\"${fastq##*/}\"\n\n  # Get sample name from first _-delimited field\n  sample_name=$(echo \"${sample_name}\" | awk -F \"_\" '{print $1}')\n  \n  # Set treatment condition for each sample\n  # Used for setting read group (@RG) in SAM files\n  if [[ \"${sample_name}\" == \"C17\" ]] || \\\n[[ \"${sample_name}\" == \"C18\" ]] || \\\n[[ \"${sample_name}\" == \"C19\" ]] || \\\n[[ \"${sample_name}\" == \"C20\" ]] || \\\n[[ \"${sample_name}\" == \"C21\" ]] || \\\n[[ \"${sample_name}\" == \"C22\" ]] || \\\n[[ \"${sample_name}\" == \"C23\" ]] || \\\n[[ \"${sample_name}\" == \"C24\" ]] || \\\n[[ \"${sample_name}\" == \"C25\" ]] || \\\n[[ \"${sample_name}\" == \"C26\" ]] || \\\n[[ \"${sample_name}\" == \"C27\" ]] || \\\n[[ \"${sample_name}\" == \"C28\" ]] || \\\n[[ \"${sample_name}\" == \"C29\" ]] || \\\n[[ \"${sample_name}\" == \"C30\" ]] || \\\n[[ \"${sample_name}\" == \"C31\" ]] || \\\n[[ \"${sample_name}\" == \"C32\" ]];\n  then\n    treatment=\"control\"\n  else\n    treatment=\"enriched\"\n  fi\n\n  # Append to associative array\n  samples_associative_array+=([\"${sample_name}\"]=\"${treatment}\")\n\ndone\n\n# Check array size to confirm it has all expected samples\n# Exit if mismatch\nif [[ \"${#samples_associative_array[@]}\" != \"${sample_counter}\" ]] \\\n|| [[ \"${#samples_associative_array[@]}\" != \"${total_samples}\" ]]\n  then\n    echo \"samples_associative_array doesn't have all ${total_samples} samples.\"\n    echo \"\"\n    echo \"samples_associative_array contents:\"\n    echo \"\"\n    for item in \"${!samples_associative_array[@]}\"\n    do\n      printf \"%s\\t%s\\n\" \"${item}\" \"${samples_associative_array[${item}]}\"\n    done\n\n    exit\nfi\n\n# Copy Hisat2 genome index files\necho \"\"\necho \"Transferring HiSat2 index file now.\"\necho \"\"\nrsync -av \"${genome_index_dir}/${index_tarball}\" .\necho \"\"\n\n# Unpack Hisat2 index files\necho \"\"\necho \"Unpacking Hisat2 index tarball: ${index_tarball}...\"\necho \"\"\ntar -xzvf ${index_tarball}\necho \"Finished unpacking ${index_tarball}\"\necho \"\"\n\n#### BEGIN HISAT2 ALIGNMENTS ####\necho \"Beginning HiSat2 alignments and StringTie analysis...\"\necho \"\"\nfor sample in \"${!samples_associative_array[@]}\"\ndo\n\n  ## Inititalize arrays\n  fastq_array_R1=()\n  fastq_array_R2=()\n\n  # Create array of fastq R1 files\n  # and generated MD5 checksums file.\n\n  # DO NOT QUOTE ${fastq_pattern} \n  for fastq in \"${fastq_dir}\"${R1_fastq_pattern}\n  do\n\n    # Remove path\n    sample_name=\"${fastq##*/}\"\n\n    # Get sample name from first _-delimited field\n    sample_name=$(echo \"${sample_name}\" | awk -F \"_\" '{print $1}')\n\n    # Check sample names for match\n    if [[ \"${sample_name}\" == \"${sample}\" ]]\n    then\n      echo \"Now working on ${sample} Read 1 FastQs.\"\n\n      fastq_array_R1+=(\"${fastq}\")\n\n      echo \"Generating checksum for ${fastq}...\"\n\n      md5sum \"${fastq}\" >> input_fastqs_checksums.md5\n\n      echo \"Checksum for ${fastq} completed.\"\n      echo \"\"\n    fi\n\n  done\n\n  # Create array of fastq R2 files\n  # DO NOT QUOTE ${fastq_pattern} \n  for fastq in \"${fastq_dir}\"${R2_fastq_pattern}\n  do\n    # Remove path\n    sample_name=\"${fastq##*/}\"\n\n    # Get sample name from first _-delimited field\n    sample_name=$(echo \"${sample_name}\" | awk -F \"_\" '{print $1}')\n\n    # Check sample names for match\n    if [[ \"${sample_name}\" == \"${sample}\" ]]\n    then\n      echo \"Now working on ${sample} Read 2 FastQs.\"\n\n      fastq_array_R2+=(\"${fastq}\")\n\n      echo \"Generating checksum for ${fastq}...\"\n\n      md5sum \"${fastq}\" >> input_fastqs_checksums.md5\n      \n      echo \"Checksum for ${fastq} completed.\"\n      echo \"\"\n    fi\n  done\n\n  echo \"Checksums for ${sample} Read 1 and 2 completed.\"\n\n  # Create comma-separated lists of FastQs for Hisat2\n  printf -v joined_R1 '%s,' \"${fastq_array_R1[@]}\"\n  fastq_list_R1=$(echo \"${joined_R1%,}\")\n\n  printf -v joined_R2 '%s,' \"${fastq_array_R2[@]}\"\n  fastq_list_R2=$(echo \"${joined_R2%,}\")\n\n  # Create and switch to dedicated sample directory\n  echo \"\"\n  echo \"Creating ${sample} directory.\"\n  mkdir \"${sample}\" && cd \"$_\"\n  echo \"Now in ${sample} directory.\"\n\n  # HiSat2 alignments\n  # Sets read group info (RG) using samples array\n  echo \"\"\n  echo \"Running HiSat2 for sample ${sample}.\"\n  \"${programs_array[hisat2]}\" \\\n  -x \"${genome_index_name}\" \\\n  -1 \"${fastq_list_R1}\" \\\n  -2 \"${fastq_list_R2}\" \\\n  -S \"${sample}\".sam \\\n  --rg-id \"${sample}\" \\\n  --rg \"SM:\"\"${samples_associative_array[$sample]}\" \\\n  --threads \"${threads}\" \\\n  2> \"${sample}-hisat2_stats.txt\"\n  echo \"\"\n  echo \"Hisat2 for  ${fastq_list_R1} and ${fastq_list_R2} complete.\"\n  echo \"\"\n\n  # Sort SAM files, convert to BAM, and index\n  echo \"\"\n  echo \"Sorting ${sample}.sam and creating sorted BAM.\"\n  echo \"\"\n  ${programs_array[samtools_view]} \\\n  -@ \"${threads}\" \\\n  -Su \"${sample}\".sam \\\n  | ${programs_array[samtools_sort]} - \\\n  -@ \"${threads}\" \\\n  -o \"${sample}\".sorted.bam\n  echo \"Created ${sample}.sorted.bam\"\n  echo \"\"\n\n\n  # Index BAM\n  echo \"\"\n  echo \"Indexing ${sample}.sorted.bam...\"\n  ${programs_array[samtools_index]} \"${sample}\".sorted.bam\n  echo \"\"\n  echo \"Indexing complete for ${sample}.sorted.bam.\"\n  echo \"\"\n\n  echo \"\"\n  echo \"HiSat2 completed for sample ${sample}.\"\n  echo \"\"\n\n\n#### END HISAT2 ALIGNMENTS ####\n\n#### BEGIN STRINGTIE ####\n\n  # Run stringtie on alignments\n  # Uses \"-B\" option to output tables intended for use in Ballgown\n  # Uses \"-e\" option; recommended when using \"-B\" option.\n  # Limits analysis to only reads alignments matching reference.\n  echo \"Beginning StringTie analysis on ${sample}.sorted.bam.\"\n  \"${programs_array[stringtie]}\" \"${sample}\".sorted.bam \\\n  -p \"${threads}\" \\\n  -o \"${sample}\".gtf \\\n  -G \"${genome_gff}\" \\\n  -C \"${sample}.cov_refs.gtf\" \\\n  -B\n  \n  echo \"StringTie analysis finished for ${sample}.sorted.bam.\"\n  echo \"\"\n#### END STRINGTIE ####\n\n# Add GTFs to list file, only if non-empty\n# Identifies GTF files that only have header\n  echo \"\"\n  echo \"Adding ${sample}.gtf to ../${gtf_list}.\"\n  gtf_lines=$(wc -l < \"${sample}\".gtf )\n  if [ \"${gtf_lines}\" -gt 2 ]; then\n    echo \"$(pwd)/${sample}.gtf\" >> ../\"${gtf_list}\"\n  fi\n  echo \"\"\n\n  # Delete unneeded SAM files\n  echo \"Removing any SAM files.\"\n  echo \"\"\n  rm ./*.sam\n\n  # Generate checksums\n  for file in *\n  do\n    echo \"\"\n    echo \"Generating MD5 checksum for ${file}.\"\n    echo \"\"\n    md5sum \"${file}\" | tee --append \"${sample}_checksums.md5\"\n    echo \"\"\n    echo \"${file} checksum added to ${sample}_checksums.md5.\"\n    echo \"\"\n  done\n\n  # Move up to orig. working directory\n  echo \"Moving to original working directory.\"\n  echo \"\"\n  cd ..\n  echo \"Now in $(pwd).\"\n  echo \"\"\n\n  echo \"Finished HiSat2 alignments and StringTie analysis for ${sample} FastQs.\"\n  echo \"\"\n\ndone\n\necho \"Finished all HiSat2 alignments and StringTie analysis.\"\necho \"\"\n\n\n#### BEGIN MERGING BAMs ####\n\n# Merge all BAMs to singular BAM for use in transcriptome assembly later\n## Create list of sorted BAMs for merging\necho \"\"\necho \"Creating list file of sorted BAMs...\"\nfind . -name \"*sorted.bam\" > sorted_bams.list\necho \"List of BAMs created: sorted_bams.list\"\necho \"\"\n\n## Merge sorted BAMs\necho \"Merging all BAM files...\"\necho \"\"\n${programs_array[samtools_merge]} \\\n-b sorted_bams.list \\\n${merged_bam} \\\n--threads ${threads}\necho \"\"\necho \"Finished creating ${merged_bam}.\"\n\n#### END MERGING BAMs ####\n\n#### BEGIN INDEXING MERGED BAM ####\n\n## Index merged BAM\necho \"\"\necho \"Indexing ${merged_bam}...\"\necho \"\"\n${programs_array[samtools_index]} ${merged_bam}\necho \"Finished indexing ${merged_bam}.\"\necho \"\"\n\n#### END INDEXING MERGED BAM ####\n\n#### BEGIN MERGE STRINGTIE GTFs ####\n\n# Create singular transcript file, using GTF list file\necho \"Merging GTFs...\"\necho \"\"\n\"${programs_array[stringtie]}\" --merge \\\n\"${gtf_list}\" \\\n-p \"${threads}\" \\\n-G \"${genome_gff}\" \\\n-o \"${genome_index_name}.stringtie.gtf\"\necho \"\"\necho \"Finished merging GTFs into ${genome_index_name}.stringtie.gtf\"\necho \"\"\n#### END MERGE STRINGTIE GTFs ####\n\n# Delete unneccessary index files\necho \"\"\necho \"Removing HiSat2 *.ht2 genome index files...\"\necho \"\"\nrm \"${genome_index_name}\"*.ht2\necho \"All genome index files removed.\"\necho \"\"\n\n#### BEGIN GFFCOMPARE ####\necho \"\"\necho \"Beginning gffcompare...\"\necho \"\"\n\n# Make ggfcompare output directory and\n# change into that directory\nmkdir --parents gffcompare && cd \"$_\"\n\n\"${programs_array[gffcompare]}\" \\\n-r \"${genome_gff}\" \\\n-o \"${genome_index_name}-gffcmp\" \\\n../\"${genome_index_name}.stringtie.gtf\"\necho \"\"\necho \"Finished gffcompare\"\necho \"\"\n\n# Generate checksums\nfor file in *\ndo\n  echo \"\"\n  echo \"Generating checksum for ${file}...\"\n  echo \"\"\n\n  md5sum \"${file}\" | tee --append checksums.md5\n\n  echo \"Checksum generated.\"\ndone\n\n# Move to previous directory\necho \"Moving to previous directory...\"\necho \"\"\n\ncd -\n\necho \"Now in $(pwd).\"\necho \"\"\n\n#### END GFFCOMPARE ####\n\n# Generate checksums\necho \"Generating checksums for files in $(pwd).\"\n\nfor file in *\ndo\n  echo \"\"\n  echo \"Generating checksum for ${file}...\"\n  echo \"\"\n\n  md5sum \"${file}\" | tee --append checksums.md5\n\n  echo \"Checksum generated.\"\ndone\n\n# Remove genome index tarball\necho \"\"\necho \"Removing ${index_tarball}.\"\n\nrm \"${index_tarball}\"\n\necho \"${index_tarball} has been deleted.\"\necho \"\"\n\n#######################################################################################################\n\n# Capture program options\nif [[ \"${#programs_array[@]}\" -gt 0 ]]; then\n  echo \"Logging program options...\"\n  for program in \"${!programs_array[@]}\"\n  do\n    {\n    echo \"Program options for ${program}: \"\n    echo \"\"\n    # Handle samtools help menus\n    if [[ \"${program}\" == \"samtools_index\" ]] \\\n    || [[ \"${program}\" == \"samtools_sort\" ]] \\\n    || [[ \"${program}\" == \"samtools_view\" ]]\n    then\n      ${programs_array[$program]}\n\n    # Handle DIAMOND BLAST menu\n    elif [[ \"${program}\" == \"diamond\" ]]; then\n      ${programs_array[$program]} help\n\n    # Handle NCBI BLASTx menu\n    elif [[ \"${program}\" == \"blastx\" ]]; then\n      ${programs_array[$program]} -help\n    fi\n    ${programs_array[$program]} -h\n    echo \"\"\n    echo \"\"\n    echo \"----------------------------------------------\"\n    echo \"\"\n    echo \"\"\n  } &>> program_options.log || true\n\n    # If MultiQC is in programs_array, copy the config file to this directory.\n    if [[ \"${program}\" == \"multiqc\" ]]; then\n      cp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n    fi\n  done\n  echo \"Finished logging programs options.\"\n  echo \"\"\nfi\n\n\n# Document programs in PATH (primarily for program version ID)\necho \"Logging system $PATH...\"\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\necho \"Finished logging system $PATH.\"\n```\n\n---\n\n# RESULTS\n\nThis took a bit over 2 days to run. I'm not posting a screencap of runtime like I usually do because the job died due to the Mox `scrubbed` partition being full. I ran the remaining commands manually in order to get this done while that storage issue got resolved.\n\nOutput folder:\n\n- [20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms](https://gannet.fish.washington.edu/Atumefaciens/20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms)\n\n  - List of input FastQs and checksums (text):\n\n    - [20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms/input_fastqs_checksums.md5](https://gannet.fish.washington.edu/Atumefaciens/20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms/input_fastqs_checksums.md5)\n\n  - Merged GTF file (GTF; 37MB):\n\n    - [20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms/Pver_genome_assembly_v1.0.stringtie.gtf](https://gannet.fish.washington.edu/Atumefaciens/20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms/Pver_genome_assembly_v1.0.stringtie.gtf)\n\n  - Merged BAM file (95GB):\n\n    - [20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms/20230216-pver-stringtie-pver_v1.0-sorted-bams-merged.bam](https://gannet.fish.washington.edu/Atumefaciens/20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms/20230216-pver-stringtie-pver_v1.0-sorted-bams-merged.bam)\n\n      - MD5 checksum:\n\n        - `6b57660fa1795fdb478850ad09b88b51`\n\n    - Merged BAM index file (useful for IGV; 11MB):\n\n      - [20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms/20230216-pver-stringtie-pver_v1.0-sorted-bams-merged.bam.bai](https://gannet.fish.washington.edu/Atumefaciens/20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms/20230216-pver-stringtie-pver_v1.0-sorted-bams-merged.bam.bai)\n\n    - [`gffcompare`](https://ccb.jhu.edu/software/stringtie/gffcompare.shtml) files (text):\n\n      - `Pver_genome_assembly_v1.0-gffcmp*`: See link above for file descriptions. Contents of summary file (`Pver_genome_assembly_v1.0-gffcmp`):\n\n          ```\n          # gffcompare v0.12.6 | Command line was:\n          #/gscratch/srlab/programs/gffcompare-0.12.6.Linux_x86_64/gffcompare -r /gscratch/srlab/sam/data/P_verrucosa/genomes/Pver_genome_assembly_v1.0-valid.gff3 -o Pver_genome_assembly_v1.0-gffcmp Pver_genome_assembly_v1.0.stringtie.gtf\n          #\n\n          #= Summary for dataset: Pver_genome_assembly_v1.0.stringtie.gtf \n          #     Query mRNAs :   27730 in   27400 loci  (24124 multi-exon transcripts)\n          #            (294 multi-transcript loci, ~1.0 transcripts per locus)\n          # Reference mRNAs :   27695 in   27400 loci  (24124 multi-exon)\n          # Super-loci w/ reference transcripts:    27400\n          #-----------------| Sensitivity | Precision  |\n                  Base level:   100.0     |   100.0    |\n                  Exon level:   100.0     |   100.0    |\n                Intron level:   100.0     |   100.0    |\n          Intron chain level:   100.0     |   100.0    |\n            Transcript level:   100.0     |    99.9    |\n                Locus level:   100.0     |   100.0    |\n\n              Matching intron chains:   24124\n                Matching transcripts:   27695\n                        Matching loci:   27400\n\n                    Missed exons:       0/208892\t(  0.0%)\n                    Novel exons:       0/208892\t(  0.0%)\n                  Missed introns:       0/181193\t(  0.0%)\n                  Novel introns:       0/181193\t(  0.0%)\n                    Missed loci:       0/27400\t(  0.0%)\n                      Novel loci:       0/27400\t(  0.0%)\n\n          Total union super-loci across all input datasets: 27400 \n          27730 out of 27730 consensus transcripts written in Pver_genome_assembly_v1.0-gffcmp.annotated.gtf (0 discarded as redundant)\n          ```\n\nSince there are a large number of folders/files, the resulting directory structure for all of the [`StringTie`](https://ccb.jhu.edu/software/stringtie/) output is shown at the end of this post. Here's a description of all the file types found in each directory:\n\n- `*.ctab`: See [`ballgown` documentation](https://github.com/alyssafrazee/ballgown) for description of these.\n\n- `*.checksums.md5`: MD5 checksums for all files in each directory.\n\n- `*.cov_refs.gtf`: Coverage GTF generate by [`StringTie`](https://ccb.jhu.edu/software/stringtie/) and used to generate final GTF for each sample.\n\n- `*.gtf`: Final GTF file produced by [`StringTie`](https://ccb.jhu.edu/software/stringtie/) for each sample.\n\n- `*_hisat2.err`: Standard error output from [`HISAT2`](https://daehwankimlab.github.io/hisat2/). Contains alignment info.\n\n- `*.sorted.bam`: Sorted BAM alignments file produced by [`HISAT2`](https://daehwankimlab.github.io/hisat2/).\n\n- `*.sorted.bam.bai`: BAM index file.\n\n\nNext up is to get these files imported into [`ballgown`](https://github.com/alyssafrazee/ballgown) for expression/isoform analyses.\n\n\n```\n[205G]  .\n|-- [ 12K]  20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms.sh\n|-- [ 95G]  20230216-pver-stringtie-pver_v1.0-sorted-bams-merged.bam\n|-- [ 11M]  20230216-pver-stringtie-pver_v1.0-sorted-bams-merged.bam.bai\n|-- [3.0G]  C17\n|   |-- [ 474]  C17_checksums.md5\n|   |-- [7.8M]  C17.cov_refs.gtf\n|   |-- [ 36M]  C17.gtf\n|   |-- [1014]  C17-hisat2_stats.txt\n|   |-- [3.0G]  C17.sorted.bam\n|   |-- [1.7M]  C17.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.6G]  C18\n|   |-- [ 474]  C18_checksums.md5\n|   |-- [7.9M]  C18.cov_refs.gtf\n|   |-- [ 36M]  C18.gtf\n|   |-- [1011]  C18-hisat2_stats.txt\n|   |-- [2.5G]  C18.sorted.bam\n|   |-- [1.6M]  C18.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.8G]  C19\n|   |-- [ 474]  C19_checksums.md5\n|   |-- [7.8M]  C19.cov_refs.gtf\n|   |-- [ 36M]  C19.gtf\n|   |-- [1012]  C19-hisat2_stats.txt\n|   |-- [2.7G]  C19.sorted.bam\n|   |-- [1.6M]  C19.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.8G]  C20\n|   |-- [ 474]  C20_checksums.md5\n|   |-- [7.9M]  C20.cov_refs.gtf\n|   |-- [ 36M]  C20.gtf\n|   |-- [1011]  C20-hisat2_stats.txt\n|   |-- [2.7G]  C20.sorted.bam\n|   |-- [1.6M]  C20.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [1.9G]  C21\n|   |-- [ 474]  C21_checksums.md5\n|   |-- [7.4M]  C21.cov_refs.gtf\n|   |-- [ 36M]  C21.gtf\n|   |-- [1008]  C21-hisat2_stats.txt\n|   |-- [1.9G]  C21.sorted.bam\n|   |-- [1.4M]  C21.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.8G]  C22\n|   |-- [ 474]  C22_checksums.md5\n|   |-- [7.7M]  C22.cov_refs.gtf\n|   |-- [ 36M]  C22.gtf\n|   |-- [1014]  C22-hisat2_stats.txt\n|   |-- [2.7G]  C22.sorted.bam\n|   |-- [1.6M]  C22.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.4G]  C23\n|   |-- [ 474]  C23_checksums.md5\n|   |-- [7.5M]  C23.cov_refs.gtf\n|   |-- [ 36M]  C23.gtf\n|   |-- [1011]  C23-hisat2_stats.txt\n|   |-- [2.3G]  C23.sorted.bam\n|   |-- [1.5M]  C23.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.8G]  C24\n|   |-- [ 474]  C24_checksums.md5\n|   |-- [7.7M]  C24.cov_refs.gtf\n|   |-- [ 36M]  C24.gtf\n|   |-- [1014]  C24-hisat2_stats.txt\n|   |-- [2.7G]  C24.sorted.bam\n|   |-- [1.7M]  C24.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [3.6G]  C25\n|   |-- [ 474]  C25_checksums.md5\n|   |-- [8.2M]  C25.cov_refs.gtf\n|   |-- [ 36M]  C25.gtf\n|   |-- [1014]  C25-hisat2_stats.txt\n|   |-- [3.5G]  C25.sorted.bam\n|   |-- [1.8M]  C25.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.8G]  C26\n|   |-- [ 474]  C26_checksums.md5\n|   |-- [7.8M]  C26.cov_refs.gtf\n|   |-- [ 36M]  C26.gtf\n|   |-- [1014]  C26-hisat2_stats.txt\n|   |-- [2.8G]  C26.sorted.bam\n|   |-- [1.7M]  C26.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [3.0G]  C27\n|   |-- [ 474]  C27_checksums.md5\n|   |-- [7.9M]  C27.cov_refs.gtf\n|   |-- [ 36M]  C27.gtf\n|   |-- [1014]  C27-hisat2_stats.txt\n|   |-- [2.9G]  C27.sorted.bam\n|   |-- [1.7M]  C27.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.9G]  C28\n|   |-- [ 474]  C28_checksums.md5\n|   |-- [8.0M]  C28.cov_refs.gtf\n|   |-- [ 36M]  C28.gtf\n|   |-- [1014]  C28-hisat2_stats.txt\n|   |-- [2.8G]  C28.sorted.bam\n|   |-- [1.7M]  C28.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.2G]  C29\n|   |-- [ 474]  C29_checksums.md5\n|   |-- [7.6M]  C29.cov_refs.gtf\n|   |-- [ 36M]  C29.gtf\n|   |-- [1010]  C29-hisat2_stats.txt\n|   |-- [2.1G]  C29.sorted.bam\n|   |-- [1.6M]  C29.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [3.2G]  C30\n|   |-- [ 474]  C30_checksums.md5\n|   |-- [7.9M]  C30.cov_refs.gtf\n|   |-- [ 36M]  C30.gtf\n|   |-- [1014]  C30-hisat2_stats.txt\n|   |-- [3.1G]  C30.sorted.bam\n|   |-- [1.7M]  C30.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.8G]  C31\n|   |-- [ 474]  C31_checksums.md5\n|   |-- [7.9M]  C31.cov_refs.gtf\n|   |-- [ 36M]  C31.gtf\n|   |-- [1012]  C31-hisat2_stats.txt\n|   |-- [2.7G]  C31.sorted.bam\n|   |-- [1.6M]  C31.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [3.2G]  C32\n|   |-- [ 474]  C32_checksums.md5\n|   |-- [8.0M]  C32.cov_refs.gtf\n|   |-- [ 36M]  C32.gtf\n|   |-- [1014]  C32-hisat2_stats.txt\n|   |-- [3.1G]  C32.sorted.bam\n|   |-- [1.7M]  C32.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [1.1K]  checksums.md5\n|-- [ 23G]  E1\n|   |-- [ 469]  E1_checksums.md5\n|   |-- [9.8M]  E1.cov_refs.gtf\n|   |-- [ 36M]  E1.gtf\n|   |-- [1022]  E1-hisat2_stats.txt\n|   |-- [ 22G]  E1.sorted.bam\n|   |-- [4.0M]  E1.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 19M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 11M]  i_data.ctab\n|   `-- [2.9M]  t_data.ctab\n|-- [3.5G]  E10\n|   |-- [ 474]  E10_checksums.md5\n|   |-- [8.0M]  E10.cov_refs.gtf\n|   |-- [ 36M]  E10.gtf\n|   |-- [1014]  E10-hisat2_stats.txt\n|   |-- [3.4G]  E10.sorted.bam\n|   |-- [1.8M]  E10.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.2G]  E11\n|   |-- [ 474]  E11_checksums.md5\n|   |-- [7.6M]  E11.cov_refs.gtf\n|   |-- [ 36M]  E11.gtf\n|   |-- [1008]  E11-hisat2_stats.txt\n|   |-- [2.1G]  E11.sorted.bam\n|   |-- [1.5M]  E11.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [3.4G]  E12\n|   |-- [ 474]  E12_checksums.md5\n|   |-- [8.0M]  E12.cov_refs.gtf\n|   |-- [ 36M]  E12.gtf\n|   |-- [1014]  E12-hisat2_stats.txt\n|   |-- [3.3G]  E12.sorted.bam\n|   |-- [1.7M]  E12.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [3.0G]  E13\n|   |-- [ 474]  E13_checksums.md5\n|   |-- [7.9M]  E13.cov_refs.gtf\n|   |-- [ 36M]  E13.gtf\n|   |-- [1014]  E13-hisat2_stats.txt\n|   |-- [2.9G]  E13.sorted.bam\n|   |-- [1.7M]  E13.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.6G]  E14\n|   |-- [ 474]  E14_checksums.md5\n|   |-- [7.8M]  E14.cov_refs.gtf\n|   |-- [ 36M]  E14.gtf\n|   |-- [1011]  E14-hisat2_stats.txt\n|   |-- [2.5G]  E14.sorted.bam\n|   |-- [1.6M]  E14.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.8G]  E15\n|   |-- [ 474]  E15_checksums.md5\n|   |-- [7.7M]  E15.cov_refs.gtf\n|   |-- [ 36M]  E15.gtf\n|   |-- [1013]  E15-hisat2_stats.txt\n|   |-- [2.8G]  E15.sorted.bam\n|   |-- [1.6M]  E15.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [3.3G]  E16\n|   |-- [ 474]  E16_checksums.md5\n|   |-- [8.1M]  E16.cov_refs.gtf\n|   |-- [ 36M]  E16.gtf\n|   |-- [1013]  E16-hisat2_stats.txt\n|   |-- [3.2G]  E16.sorted.bam\n|   |-- [1.7M]  E16.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.9G]  E2\n|   |-- [ 469]  E2_checksums.md5\n|   |-- [8.0M]  E2.cov_refs.gtf\n|   |-- [ 36M]  E2.gtf\n|   |-- [1014]  E2-hisat2_stats.txt\n|   |-- [2.8G]  E2.sorted.bam\n|   |-- [1.7M]  E2.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.9G]  E3\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 469]  E3_checksums.md5\n|   |-- [7.9M]  E3.cov_refs.gtf\n|   |-- [ 36M]  E3.gtf\n|   |-- [1012]  E3-hisat2_stats.txt\n|   |-- [2.8G]  E3.sorted.bam\n|   |-- [1.6M]  E3.sorted.bam.bai\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.5G]  E4\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 469]  E4_checksums.md5\n|   |-- [7.7M]  E4.cov_refs.gtf\n|   |-- [ 36M]  E4.gtf\n|   |-- [1011]  E4-hisat2_stats.txt\n|   |-- [2.4G]  E4.sorted.bam\n|   |-- [1.5M]  E4.sorted.bam.bai\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.0G]  E5\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 469]  E5_checksums.md5\n|   |-- [7.5M]  E5.cov_refs.gtf\n|   |-- [ 36M]  E5.gtf\n|   |-- [1010]  E5-hisat2_stats.txt\n|   |-- [2.0G]  E5.sorted.bam\n|   |-- [1.5M]  E5.sorted.bam.bai\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.8G]  E6\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 469]  E6_checksums.md5\n|   |-- [7.7M]  E6.cov_refs.gtf\n|   |-- [ 36M]  E6.gtf\n|   |-- [1011]  E6-hisat2_stats.txt\n|   |-- [2.7G]  E6.sorted.bam\n|   |-- [1.6M]  E6.sorted.bam.bai\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.7G]  E7\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 469]  E7_checksums.md5\n|   |-- [8.0M]  E7.cov_refs.gtf\n|   |-- [ 36M]  E7.gtf\n|   |-- [1011]  E7-hisat2_stats.txt\n|   |-- [2.7G]  E7.sorted.bam\n|   |-- [1.6M]  E7.sorted.bam.bai\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.7G]  E8\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 469]  E8_checksums.md5\n|   |-- [7.8M]  E8.cov_refs.gtf\n|   |-- [ 36M]  E8.gtf\n|   |-- [1011]  E8-hisat2_stats.txt\n|   |-- [2.6G]  E8.sorted.bam\n|   |-- [1.6M]  E8.sorted.bam.bai\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [3.1G]  E9\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 469]  E9_checksums.md5\n|   |-- [7.8M]  E9.cov_refs.gtf\n|   |-- [ 36M]  E9.gtf\n|   |-- [1014]  E9-hisat2_stats.txt\n|   |-- [3.0G]  E9.sorted.bam\n|   |-- [1.7M]  E9.sorted.bam.bai\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [3.3K]  gtf_list.txt\n|-- [8.4K]  input_fastqs_checksums.md5\n|-- [1.5K]  Pver_genome_assembly_v1.0-gffcmp\n|-- [ 33M]  Pver_genome_assembly_v1.0-gffcmp.annotated.gtf\n|-- [2.6M]  Pver_genome_assembly_v1.0-gffcmp.loci\n|-- [1.6M]  Pver_genome_assembly_v1.0-gffcmp.Pver_genome_assembly_v1.0.stringtie.gtf.refmap\n|-- [3.1M]  Pver_genome_assembly_v1.0-gffcmp.Pver_genome_assembly_v1.0.stringtie.gtf.tmap\n|-- [3.3M]  Pver_genome_assembly_v1.0-gffcmp.tracking\n|-- [ 37M]  Pver_genome_assembly_v1.0.stringtie.gtf\n|-- [ 87K]  slurm-4469382.out\n`-- [ 654]  sorted_bams.list\n\n 205G used in 32 directories, 367 files\n ```\n","srcMarkdownNoYaml":"\nAfter getting the [RNA-seq data trimmed](https://robertslab.github.io/sams-notebook/posts/2023/2023-02-15-FastQ-Trimming-and-QC---P.verrucosa-RNA-seq-Data-from-Danielle-Becker-in-Hollie-Putnam-Lab-Using-fastp-FastQC-and-MultiQC-on-Mox/), it was time to perform alignments and determine expression levels of transcripts/isoforms using with [`HISAT2`](https://daehwankimlab.github.io/hisat2/) and [`StringTie`](https://ccb.jhu.edu/software/stringtie/), respectively. [`StringTie`](https://ccb.jhu.edu/software/stringtie/) was set to output tables formatted for import into [`ballgown`](https://github.com/alyssafrazee/ballgown). After those two analyses were complete, I ran [`gffcompare`](https://ccb.jhu.edu/software/stringtie/gffcompare.shtml), using the merged [`StringTie`](https://ccb.jhu.edu/software/stringtie/) GTF and the input GFF3. I caught this in one of Danielle Becker's scripts and thought it might be interesting. The analsyes were run on Mox.\n\nSBATCH Script (GitHub):\n\n- [20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms.sh)\n\n```shell\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=07-00:00:00\n## Memory per node\n#SBATCH --mem=120G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms\n\n\n## Script using Stringtie with P.verrucosa v1.0 genome assembly\n## and HiSat2 index generated on 20230131.\n\n## Genome and GFF from here: http://pver.reefgenomics.org/download\n\n## GTF generated on 20230127 by SJW:\n## https://robertslab.github.io/sams-notebook/posts/2023/2023-01-27-Data-Wrangling---P.verrucosa-Genome-GFF-to-GTF-Using-gffread/\n\n## HiSat2 index generated on 20230131 by SJW:\n## https://robertslab.github.io/sams-notebook/posts/2023/2023-01-31-Genome-Indexing---P.verrucosa-v1.0-Assembly-with-HiSat2-on-Mox/\n\n## Using trimmed FastQs from 20230215.\n\n## Expects FastQ input filenames to match <sample name>_R[12].fastp-trim.20230215.fq.gz\n\n\n###################################################################################\n# These variables need to be set by user\n\n## Assign Variables\n\n# Set total number of SAMPLES (NOT number of FastQ files)\ntotal_samples=32\n\n# Set number of CPUs to use\nthreads=28\n\n# Index name for Hisat2 use\n# Needs to match index naem used in previous Hisat2 indexing step\ngenome_index_name=\"Pver_genome_assembly_v1.0\"\n\n# HiSat2 indexes tarball\nindex_tarball=\"Pver_genome_assembly_v1.0-hisat2-indices.tar.gz\"\n\n# Set input FastQ patterns\nR1_fastq_pattern='*R1*fq.gz'\nR2_fastq_pattern='*R2*fq.gz'\nfastq_pattern='*.fastp-trim.20230215.fq.gz'\n\n# Location of Hisat2 index files\n# Must keep variable name formatting, as it's used by HiSat2\nHISAT2_INDEXES=$(pwd)\nexport HISAT2_INDEXES\n\n# Paths to programs\ngffcompare=\"/gscratch/srlab/programs/gffcompare-0.12.6.Linux_x86_64/gffcompare\"\nhisat2_dir=\"/gscratch/srlab/programs/hisat2-2.1.0\"\nhisat2=\"${hisat2_dir}/hisat2\"\nsamtools=\"/gscratch/srlab/programs/samtools-1.10/samtools\"\nstringtie=\"/gscratch/srlab/programs/stringtie-2.2.1.Linux_x86_64/stringtie\"\n\n# Input/output files\ngenome_index_dir=\"/gscratch/srlab/sam/data/P_verrucosa/genomes\"\ngenome_gff=\"${genome_index_dir}/Pver_genome_assembly_v1.0-valid.gff3\"\nfastq_dir=\"/gscratch/srlab/sam/data/P_verrucosa/RNAseq/\"\ngtf_list=\"gtf_list.txt\"\nmerged_bam=\"20230216-pver-stringtie-pver_v1.0-sorted-bams-merged.bam\"\n\n# Declare associative array of sample names and metadata\ndeclare -A samples_associative_array=()\n\n# Programs associative array\ndeclare -A programs_array\nprograms_array=(\n[gffcompare]=\"${gffcompare}\" \\\n[hisat2]=\"${hisat2}\" \\\n[samtools_index]=\"${samtools} index\" \\\n[samtools_merge]=\"${samtools} merge\" \\\n[samtools_sort]=\"${samtools} sort\" \\\n[samtools_view]=\"${samtools} view\" \\\n[stringtie]=\"${stringtie}\"\n)\n\n\n###################################################################################################\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n## Load associative array\n## Only need to use one set of reads to capture sample name\n\n# Set sample counter for array verification\nsample_counter=0\n\n# Load array\n# DO NOT QUOTE ${R1_fastq_pattern} - WILL NOT POPULATE ARRAY!\nfor fastq in \"${fastq_dir}\"${R1_fastq_pattern}\ndo\n  # Increment counter\n  ((sample_counter+=1))\n\n  # Remove path\n  sample_name=\"${fastq##*/}\"\n\n  # Get sample name from first _-delimited field\n  sample_name=$(echo \"${sample_name}\" | awk -F \"_\" '{print $1}')\n  \n  # Set treatment condition for each sample\n  # Used for setting read group (@RG) in SAM files\n  if [[ \"${sample_name}\" == \"C17\" ]] || \\\n[[ \"${sample_name}\" == \"C18\" ]] || \\\n[[ \"${sample_name}\" == \"C19\" ]] || \\\n[[ \"${sample_name}\" == \"C20\" ]] || \\\n[[ \"${sample_name}\" == \"C21\" ]] || \\\n[[ \"${sample_name}\" == \"C22\" ]] || \\\n[[ \"${sample_name}\" == \"C23\" ]] || \\\n[[ \"${sample_name}\" == \"C24\" ]] || \\\n[[ \"${sample_name}\" == \"C25\" ]] || \\\n[[ \"${sample_name}\" == \"C26\" ]] || \\\n[[ \"${sample_name}\" == \"C27\" ]] || \\\n[[ \"${sample_name}\" == \"C28\" ]] || \\\n[[ \"${sample_name}\" == \"C29\" ]] || \\\n[[ \"${sample_name}\" == \"C30\" ]] || \\\n[[ \"${sample_name}\" == \"C31\" ]] || \\\n[[ \"${sample_name}\" == \"C32\" ]];\n  then\n    treatment=\"control\"\n  else\n    treatment=\"enriched\"\n  fi\n\n  # Append to associative array\n  samples_associative_array+=([\"${sample_name}\"]=\"${treatment}\")\n\ndone\n\n# Check array size to confirm it has all expected samples\n# Exit if mismatch\nif [[ \"${#samples_associative_array[@]}\" != \"${sample_counter}\" ]] \\\n|| [[ \"${#samples_associative_array[@]}\" != \"${total_samples}\" ]]\n  then\n    echo \"samples_associative_array doesn't have all ${total_samples} samples.\"\n    echo \"\"\n    echo \"samples_associative_array contents:\"\n    echo \"\"\n    for item in \"${!samples_associative_array[@]}\"\n    do\n      printf \"%s\\t%s\\n\" \"${item}\" \"${samples_associative_array[${item}]}\"\n    done\n\n    exit\nfi\n\n# Copy Hisat2 genome index files\necho \"\"\necho \"Transferring HiSat2 index file now.\"\necho \"\"\nrsync -av \"${genome_index_dir}/${index_tarball}\" .\necho \"\"\n\n# Unpack Hisat2 index files\necho \"\"\necho \"Unpacking Hisat2 index tarball: ${index_tarball}...\"\necho \"\"\ntar -xzvf ${index_tarball}\necho \"Finished unpacking ${index_tarball}\"\necho \"\"\n\n#### BEGIN HISAT2 ALIGNMENTS ####\necho \"Beginning HiSat2 alignments and StringTie analysis...\"\necho \"\"\nfor sample in \"${!samples_associative_array[@]}\"\ndo\n\n  ## Inititalize arrays\n  fastq_array_R1=()\n  fastq_array_R2=()\n\n  # Create array of fastq R1 files\n  # and generated MD5 checksums file.\n\n  # DO NOT QUOTE ${fastq_pattern} \n  for fastq in \"${fastq_dir}\"${R1_fastq_pattern}\n  do\n\n    # Remove path\n    sample_name=\"${fastq##*/}\"\n\n    # Get sample name from first _-delimited field\n    sample_name=$(echo \"${sample_name}\" | awk -F \"_\" '{print $1}')\n\n    # Check sample names for match\n    if [[ \"${sample_name}\" == \"${sample}\" ]]\n    then\n      echo \"Now working on ${sample} Read 1 FastQs.\"\n\n      fastq_array_R1+=(\"${fastq}\")\n\n      echo \"Generating checksum for ${fastq}...\"\n\n      md5sum \"${fastq}\" >> input_fastqs_checksums.md5\n\n      echo \"Checksum for ${fastq} completed.\"\n      echo \"\"\n    fi\n\n  done\n\n  # Create array of fastq R2 files\n  # DO NOT QUOTE ${fastq_pattern} \n  for fastq in \"${fastq_dir}\"${R2_fastq_pattern}\n  do\n    # Remove path\n    sample_name=\"${fastq##*/}\"\n\n    # Get sample name from first _-delimited field\n    sample_name=$(echo \"${sample_name}\" | awk -F \"_\" '{print $1}')\n\n    # Check sample names for match\n    if [[ \"${sample_name}\" == \"${sample}\" ]]\n    then\n      echo \"Now working on ${sample} Read 2 FastQs.\"\n\n      fastq_array_R2+=(\"${fastq}\")\n\n      echo \"Generating checksum for ${fastq}...\"\n\n      md5sum \"${fastq}\" >> input_fastqs_checksums.md5\n      \n      echo \"Checksum for ${fastq} completed.\"\n      echo \"\"\n    fi\n  done\n\n  echo \"Checksums for ${sample} Read 1 and 2 completed.\"\n\n  # Create comma-separated lists of FastQs for Hisat2\n  printf -v joined_R1 '%s,' \"${fastq_array_R1[@]}\"\n  fastq_list_R1=$(echo \"${joined_R1%,}\")\n\n  printf -v joined_R2 '%s,' \"${fastq_array_R2[@]}\"\n  fastq_list_R2=$(echo \"${joined_R2%,}\")\n\n  # Create and switch to dedicated sample directory\n  echo \"\"\n  echo \"Creating ${sample} directory.\"\n  mkdir \"${sample}\" && cd \"$_\"\n  echo \"Now in ${sample} directory.\"\n\n  # HiSat2 alignments\n  # Sets read group info (RG) using samples array\n  echo \"\"\n  echo \"Running HiSat2 for sample ${sample}.\"\n  \"${programs_array[hisat2]}\" \\\n  -x \"${genome_index_name}\" \\\n  -1 \"${fastq_list_R1}\" \\\n  -2 \"${fastq_list_R2}\" \\\n  -S \"${sample}\".sam \\\n  --rg-id \"${sample}\" \\\n  --rg \"SM:\"\"${samples_associative_array[$sample]}\" \\\n  --threads \"${threads}\" \\\n  2> \"${sample}-hisat2_stats.txt\"\n  echo \"\"\n  echo \"Hisat2 for  ${fastq_list_R1} and ${fastq_list_R2} complete.\"\n  echo \"\"\n\n  # Sort SAM files, convert to BAM, and index\n  echo \"\"\n  echo \"Sorting ${sample}.sam and creating sorted BAM.\"\n  echo \"\"\n  ${programs_array[samtools_view]} \\\n  -@ \"${threads}\" \\\n  -Su \"${sample}\".sam \\\n  | ${programs_array[samtools_sort]} - \\\n  -@ \"${threads}\" \\\n  -o \"${sample}\".sorted.bam\n  echo \"Created ${sample}.sorted.bam\"\n  echo \"\"\n\n\n  # Index BAM\n  echo \"\"\n  echo \"Indexing ${sample}.sorted.bam...\"\n  ${programs_array[samtools_index]} \"${sample}\".sorted.bam\n  echo \"\"\n  echo \"Indexing complete for ${sample}.sorted.bam.\"\n  echo \"\"\n\n  echo \"\"\n  echo \"HiSat2 completed for sample ${sample}.\"\n  echo \"\"\n\n\n#### END HISAT2 ALIGNMENTS ####\n\n#### BEGIN STRINGTIE ####\n\n  # Run stringtie on alignments\n  # Uses \"-B\" option to output tables intended for use in Ballgown\n  # Uses \"-e\" option; recommended when using \"-B\" option.\n  # Limits analysis to only reads alignments matching reference.\n  echo \"Beginning StringTie analysis on ${sample}.sorted.bam.\"\n  \"${programs_array[stringtie]}\" \"${sample}\".sorted.bam \\\n  -p \"${threads}\" \\\n  -o \"${sample}\".gtf \\\n  -G \"${genome_gff}\" \\\n  -C \"${sample}.cov_refs.gtf\" \\\n  -B\n  \n  echo \"StringTie analysis finished for ${sample}.sorted.bam.\"\n  echo \"\"\n#### END STRINGTIE ####\n\n# Add GTFs to list file, only if non-empty\n# Identifies GTF files that only have header\n  echo \"\"\n  echo \"Adding ${sample}.gtf to ../${gtf_list}.\"\n  gtf_lines=$(wc -l < \"${sample}\".gtf )\n  if [ \"${gtf_lines}\" -gt 2 ]; then\n    echo \"$(pwd)/${sample}.gtf\" >> ../\"${gtf_list}\"\n  fi\n  echo \"\"\n\n  # Delete unneeded SAM files\n  echo \"Removing any SAM files.\"\n  echo \"\"\n  rm ./*.sam\n\n  # Generate checksums\n  for file in *\n  do\n    echo \"\"\n    echo \"Generating MD5 checksum for ${file}.\"\n    echo \"\"\n    md5sum \"${file}\" | tee --append \"${sample}_checksums.md5\"\n    echo \"\"\n    echo \"${file} checksum added to ${sample}_checksums.md5.\"\n    echo \"\"\n  done\n\n  # Move up to orig. working directory\n  echo \"Moving to original working directory.\"\n  echo \"\"\n  cd ..\n  echo \"Now in $(pwd).\"\n  echo \"\"\n\n  echo \"Finished HiSat2 alignments and StringTie analysis for ${sample} FastQs.\"\n  echo \"\"\n\ndone\n\necho \"Finished all HiSat2 alignments and StringTie analysis.\"\necho \"\"\n\n\n#### BEGIN MERGING BAMs ####\n\n# Merge all BAMs to singular BAM for use in transcriptome assembly later\n## Create list of sorted BAMs for merging\necho \"\"\necho \"Creating list file of sorted BAMs...\"\nfind . -name \"*sorted.bam\" > sorted_bams.list\necho \"List of BAMs created: sorted_bams.list\"\necho \"\"\n\n## Merge sorted BAMs\necho \"Merging all BAM files...\"\necho \"\"\n${programs_array[samtools_merge]} \\\n-b sorted_bams.list \\\n${merged_bam} \\\n--threads ${threads}\necho \"\"\necho \"Finished creating ${merged_bam}.\"\n\n#### END MERGING BAMs ####\n\n#### BEGIN INDEXING MERGED BAM ####\n\n## Index merged BAM\necho \"\"\necho \"Indexing ${merged_bam}...\"\necho \"\"\n${programs_array[samtools_index]} ${merged_bam}\necho \"Finished indexing ${merged_bam}.\"\necho \"\"\n\n#### END INDEXING MERGED BAM ####\n\n#### BEGIN MERGE STRINGTIE GTFs ####\n\n# Create singular transcript file, using GTF list file\necho \"Merging GTFs...\"\necho \"\"\n\"${programs_array[stringtie]}\" --merge \\\n\"${gtf_list}\" \\\n-p \"${threads}\" \\\n-G \"${genome_gff}\" \\\n-o \"${genome_index_name}.stringtie.gtf\"\necho \"\"\necho \"Finished merging GTFs into ${genome_index_name}.stringtie.gtf\"\necho \"\"\n#### END MERGE STRINGTIE GTFs ####\n\n# Delete unneccessary index files\necho \"\"\necho \"Removing HiSat2 *.ht2 genome index files...\"\necho \"\"\nrm \"${genome_index_name}\"*.ht2\necho \"All genome index files removed.\"\necho \"\"\n\n#### BEGIN GFFCOMPARE ####\necho \"\"\necho \"Beginning gffcompare...\"\necho \"\"\n\n# Make ggfcompare output directory and\n# change into that directory\nmkdir --parents gffcompare && cd \"$_\"\n\n\"${programs_array[gffcompare]}\" \\\n-r \"${genome_gff}\" \\\n-o \"${genome_index_name}-gffcmp\" \\\n../\"${genome_index_name}.stringtie.gtf\"\necho \"\"\necho \"Finished gffcompare\"\necho \"\"\n\n# Generate checksums\nfor file in *\ndo\n  echo \"\"\n  echo \"Generating checksum for ${file}...\"\n  echo \"\"\n\n  md5sum \"${file}\" | tee --append checksums.md5\n\n  echo \"Checksum generated.\"\ndone\n\n# Move to previous directory\necho \"Moving to previous directory...\"\necho \"\"\n\ncd -\n\necho \"Now in $(pwd).\"\necho \"\"\n\n#### END GFFCOMPARE ####\n\n# Generate checksums\necho \"Generating checksums for files in $(pwd).\"\n\nfor file in *\ndo\n  echo \"\"\n  echo \"Generating checksum for ${file}...\"\n  echo \"\"\n\n  md5sum \"${file}\" | tee --append checksums.md5\n\n  echo \"Checksum generated.\"\ndone\n\n# Remove genome index tarball\necho \"\"\necho \"Removing ${index_tarball}.\"\n\nrm \"${index_tarball}\"\n\necho \"${index_tarball} has been deleted.\"\necho \"\"\n\n#######################################################################################################\n\n# Capture program options\nif [[ \"${#programs_array[@]}\" -gt 0 ]]; then\n  echo \"Logging program options...\"\n  for program in \"${!programs_array[@]}\"\n  do\n    {\n    echo \"Program options for ${program}: \"\n    echo \"\"\n    # Handle samtools help menus\n    if [[ \"${program}\" == \"samtools_index\" ]] \\\n    || [[ \"${program}\" == \"samtools_sort\" ]] \\\n    || [[ \"${program}\" == \"samtools_view\" ]]\n    then\n      ${programs_array[$program]}\n\n    # Handle DIAMOND BLAST menu\n    elif [[ \"${program}\" == \"diamond\" ]]; then\n      ${programs_array[$program]} help\n\n    # Handle NCBI BLASTx menu\n    elif [[ \"${program}\" == \"blastx\" ]]; then\n      ${programs_array[$program]} -help\n    fi\n    ${programs_array[$program]} -h\n    echo \"\"\n    echo \"\"\n    echo \"----------------------------------------------\"\n    echo \"\"\n    echo \"\"\n  } &>> program_options.log || true\n\n    # If MultiQC is in programs_array, copy the config file to this directory.\n    if [[ \"${program}\" == \"multiqc\" ]]; then\n      cp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n    fi\n  done\n  echo \"Finished logging programs options.\"\n  echo \"\"\nfi\n\n\n# Document programs in PATH (primarily for program version ID)\necho \"Logging system $PATH...\"\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\necho \"Finished logging system $PATH.\"\n```\n\n---\n\n# RESULTS\n\nThis took a bit over 2 days to run. I'm not posting a screencap of runtime like I usually do because the job died due to the Mox `scrubbed` partition being full. I ran the remaining commands manually in order to get this done while that storage issue got resolved.\n\nOutput folder:\n\n- [20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms](https://gannet.fish.washington.edu/Atumefaciens/20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms)\n\n  - List of input FastQs and checksums (text):\n\n    - [20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms/input_fastqs_checksums.md5](https://gannet.fish.washington.edu/Atumefaciens/20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms/input_fastqs_checksums.md5)\n\n  - Merged GTF file (GTF; 37MB):\n\n    - [20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms/Pver_genome_assembly_v1.0.stringtie.gtf](https://gannet.fish.washington.edu/Atumefaciens/20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms/Pver_genome_assembly_v1.0.stringtie.gtf)\n\n  - Merged BAM file (95GB):\n\n    - [20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms/20230216-pver-stringtie-pver_v1.0-sorted-bams-merged.bam](https://gannet.fish.washington.edu/Atumefaciens/20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms/20230216-pver-stringtie-pver_v1.0-sorted-bams-merged.bam)\n\n      - MD5 checksum:\n\n        - `6b57660fa1795fdb478850ad09b88b51`\n\n    - Merged BAM index file (useful for IGV; 11MB):\n\n      - [20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms/20230216-pver-stringtie-pver_v1.0-sorted-bams-merged.bam.bai](https://gannet.fish.washington.edu/Atumefaciens/20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms/20230216-pver-stringtie-pver_v1.0-sorted-bams-merged.bam.bai)\n\n    - [`gffcompare`](https://ccb.jhu.edu/software/stringtie/gffcompare.shtml) files (text):\n\n      - `Pver_genome_assembly_v1.0-gffcmp*`: See link above for file descriptions. Contents of summary file (`Pver_genome_assembly_v1.0-gffcmp`):\n\n          ```\n          # gffcompare v0.12.6 | Command line was:\n          #/gscratch/srlab/programs/gffcompare-0.12.6.Linux_x86_64/gffcompare -r /gscratch/srlab/sam/data/P_verrucosa/genomes/Pver_genome_assembly_v1.0-valid.gff3 -o Pver_genome_assembly_v1.0-gffcmp Pver_genome_assembly_v1.0.stringtie.gtf\n          #\n\n          #= Summary for dataset: Pver_genome_assembly_v1.0.stringtie.gtf \n          #     Query mRNAs :   27730 in   27400 loci  (24124 multi-exon transcripts)\n          #            (294 multi-transcript loci, ~1.0 transcripts per locus)\n          # Reference mRNAs :   27695 in   27400 loci  (24124 multi-exon)\n          # Super-loci w/ reference transcripts:    27400\n          #-----------------| Sensitivity | Precision  |\n                  Base level:   100.0     |   100.0    |\n                  Exon level:   100.0     |   100.0    |\n                Intron level:   100.0     |   100.0    |\n          Intron chain level:   100.0     |   100.0    |\n            Transcript level:   100.0     |    99.9    |\n                Locus level:   100.0     |   100.0    |\n\n              Matching intron chains:   24124\n                Matching transcripts:   27695\n                        Matching loci:   27400\n\n                    Missed exons:       0/208892\t(  0.0%)\n                    Novel exons:       0/208892\t(  0.0%)\n                  Missed introns:       0/181193\t(  0.0%)\n                  Novel introns:       0/181193\t(  0.0%)\n                    Missed loci:       0/27400\t(  0.0%)\n                      Novel loci:       0/27400\t(  0.0%)\n\n          Total union super-loci across all input datasets: 27400 \n          27730 out of 27730 consensus transcripts written in Pver_genome_assembly_v1.0-gffcmp.annotated.gtf (0 discarded as redundant)\n          ```\n\nSince there are a large number of folders/files, the resulting directory structure for all of the [`StringTie`](https://ccb.jhu.edu/software/stringtie/) output is shown at the end of this post. Here's a description of all the file types found in each directory:\n\n- `*.ctab`: See [`ballgown` documentation](https://github.com/alyssafrazee/ballgown) for description of these.\n\n- `*.checksums.md5`: MD5 checksums for all files in each directory.\n\n- `*.cov_refs.gtf`: Coverage GTF generate by [`StringTie`](https://ccb.jhu.edu/software/stringtie/) and used to generate final GTF for each sample.\n\n- `*.gtf`: Final GTF file produced by [`StringTie`](https://ccb.jhu.edu/software/stringtie/) for each sample.\n\n- `*_hisat2.err`: Standard error output from [`HISAT2`](https://daehwankimlab.github.io/hisat2/). Contains alignment info.\n\n- `*.sorted.bam`: Sorted BAM alignments file produced by [`HISAT2`](https://daehwankimlab.github.io/hisat2/).\n\n- `*.sorted.bam.bai`: BAM index file.\n\n\nNext up is to get these files imported into [`ballgown`](https://github.com/alyssafrazee/ballgown) for expression/isoform analyses.\n\n\n```\n[205G]  .\n|-- [ 12K]  20230216-pver-stringtie-Pver_genome_assembly_v1.0-isoforms.sh\n|-- [ 95G]  20230216-pver-stringtie-pver_v1.0-sorted-bams-merged.bam\n|-- [ 11M]  20230216-pver-stringtie-pver_v1.0-sorted-bams-merged.bam.bai\n|-- [3.0G]  C17\n|   |-- [ 474]  C17_checksums.md5\n|   |-- [7.8M]  C17.cov_refs.gtf\n|   |-- [ 36M]  C17.gtf\n|   |-- [1014]  C17-hisat2_stats.txt\n|   |-- [3.0G]  C17.sorted.bam\n|   |-- [1.7M]  C17.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.6G]  C18\n|   |-- [ 474]  C18_checksums.md5\n|   |-- [7.9M]  C18.cov_refs.gtf\n|   |-- [ 36M]  C18.gtf\n|   |-- [1011]  C18-hisat2_stats.txt\n|   |-- [2.5G]  C18.sorted.bam\n|   |-- [1.6M]  C18.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.8G]  C19\n|   |-- [ 474]  C19_checksums.md5\n|   |-- [7.8M]  C19.cov_refs.gtf\n|   |-- [ 36M]  C19.gtf\n|   |-- [1012]  C19-hisat2_stats.txt\n|   |-- [2.7G]  C19.sorted.bam\n|   |-- [1.6M]  C19.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.8G]  C20\n|   |-- [ 474]  C20_checksums.md5\n|   |-- [7.9M]  C20.cov_refs.gtf\n|   |-- [ 36M]  C20.gtf\n|   |-- [1011]  C20-hisat2_stats.txt\n|   |-- [2.7G]  C20.sorted.bam\n|   |-- [1.6M]  C20.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [1.9G]  C21\n|   |-- [ 474]  C21_checksums.md5\n|   |-- [7.4M]  C21.cov_refs.gtf\n|   |-- [ 36M]  C21.gtf\n|   |-- [1008]  C21-hisat2_stats.txt\n|   |-- [1.9G]  C21.sorted.bam\n|   |-- [1.4M]  C21.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.8G]  C22\n|   |-- [ 474]  C22_checksums.md5\n|   |-- [7.7M]  C22.cov_refs.gtf\n|   |-- [ 36M]  C22.gtf\n|   |-- [1014]  C22-hisat2_stats.txt\n|   |-- [2.7G]  C22.sorted.bam\n|   |-- [1.6M]  C22.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.4G]  C23\n|   |-- [ 474]  C23_checksums.md5\n|   |-- [7.5M]  C23.cov_refs.gtf\n|   |-- [ 36M]  C23.gtf\n|   |-- [1011]  C23-hisat2_stats.txt\n|   |-- [2.3G]  C23.sorted.bam\n|   |-- [1.5M]  C23.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.8G]  C24\n|   |-- [ 474]  C24_checksums.md5\n|   |-- [7.7M]  C24.cov_refs.gtf\n|   |-- [ 36M]  C24.gtf\n|   |-- [1014]  C24-hisat2_stats.txt\n|   |-- [2.7G]  C24.sorted.bam\n|   |-- [1.7M]  C24.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [3.6G]  C25\n|   |-- [ 474]  C25_checksums.md5\n|   |-- [8.2M]  C25.cov_refs.gtf\n|   |-- [ 36M]  C25.gtf\n|   |-- [1014]  C25-hisat2_stats.txt\n|   |-- [3.5G]  C25.sorted.bam\n|   |-- [1.8M]  C25.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.8G]  C26\n|   |-- [ 474]  C26_checksums.md5\n|   |-- [7.8M]  C26.cov_refs.gtf\n|   |-- [ 36M]  C26.gtf\n|   |-- [1014]  C26-hisat2_stats.txt\n|   |-- [2.8G]  C26.sorted.bam\n|   |-- [1.7M]  C26.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [3.0G]  C27\n|   |-- [ 474]  C27_checksums.md5\n|   |-- [7.9M]  C27.cov_refs.gtf\n|   |-- [ 36M]  C27.gtf\n|   |-- [1014]  C27-hisat2_stats.txt\n|   |-- [2.9G]  C27.sorted.bam\n|   |-- [1.7M]  C27.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.9G]  C28\n|   |-- [ 474]  C28_checksums.md5\n|   |-- [8.0M]  C28.cov_refs.gtf\n|   |-- [ 36M]  C28.gtf\n|   |-- [1014]  C28-hisat2_stats.txt\n|   |-- [2.8G]  C28.sorted.bam\n|   |-- [1.7M]  C28.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.2G]  C29\n|   |-- [ 474]  C29_checksums.md5\n|   |-- [7.6M]  C29.cov_refs.gtf\n|   |-- [ 36M]  C29.gtf\n|   |-- [1010]  C29-hisat2_stats.txt\n|   |-- [2.1G]  C29.sorted.bam\n|   |-- [1.6M]  C29.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [3.2G]  C30\n|   |-- [ 474]  C30_checksums.md5\n|   |-- [7.9M]  C30.cov_refs.gtf\n|   |-- [ 36M]  C30.gtf\n|   |-- [1014]  C30-hisat2_stats.txt\n|   |-- [3.1G]  C30.sorted.bam\n|   |-- [1.7M]  C30.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.8G]  C31\n|   |-- [ 474]  C31_checksums.md5\n|   |-- [7.9M]  C31.cov_refs.gtf\n|   |-- [ 36M]  C31.gtf\n|   |-- [1012]  C31-hisat2_stats.txt\n|   |-- [2.7G]  C31.sorted.bam\n|   |-- [1.6M]  C31.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [3.2G]  C32\n|   |-- [ 474]  C32_checksums.md5\n|   |-- [8.0M]  C32.cov_refs.gtf\n|   |-- [ 36M]  C32.gtf\n|   |-- [1014]  C32-hisat2_stats.txt\n|   |-- [3.1G]  C32.sorted.bam\n|   |-- [1.7M]  C32.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [1.1K]  checksums.md5\n|-- [ 23G]  E1\n|   |-- [ 469]  E1_checksums.md5\n|   |-- [9.8M]  E1.cov_refs.gtf\n|   |-- [ 36M]  E1.gtf\n|   |-- [1022]  E1-hisat2_stats.txt\n|   |-- [ 22G]  E1.sorted.bam\n|   |-- [4.0M]  E1.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 19M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 11M]  i_data.ctab\n|   `-- [2.9M]  t_data.ctab\n|-- [3.5G]  E10\n|   |-- [ 474]  E10_checksums.md5\n|   |-- [8.0M]  E10.cov_refs.gtf\n|   |-- [ 36M]  E10.gtf\n|   |-- [1014]  E10-hisat2_stats.txt\n|   |-- [3.4G]  E10.sorted.bam\n|   |-- [1.8M]  E10.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.2G]  E11\n|   |-- [ 474]  E11_checksums.md5\n|   |-- [7.6M]  E11.cov_refs.gtf\n|   |-- [ 36M]  E11.gtf\n|   |-- [1008]  E11-hisat2_stats.txt\n|   |-- [2.1G]  E11.sorted.bam\n|   |-- [1.5M]  E11.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [3.4G]  E12\n|   |-- [ 474]  E12_checksums.md5\n|   |-- [8.0M]  E12.cov_refs.gtf\n|   |-- [ 36M]  E12.gtf\n|   |-- [1014]  E12-hisat2_stats.txt\n|   |-- [3.3G]  E12.sorted.bam\n|   |-- [1.7M]  E12.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [3.0G]  E13\n|   |-- [ 474]  E13_checksums.md5\n|   |-- [7.9M]  E13.cov_refs.gtf\n|   |-- [ 36M]  E13.gtf\n|   |-- [1014]  E13-hisat2_stats.txt\n|   |-- [2.9G]  E13.sorted.bam\n|   |-- [1.7M]  E13.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.6G]  E14\n|   |-- [ 474]  E14_checksums.md5\n|   |-- [7.8M]  E14.cov_refs.gtf\n|   |-- [ 36M]  E14.gtf\n|   |-- [1011]  E14-hisat2_stats.txt\n|   |-- [2.5G]  E14.sorted.bam\n|   |-- [1.6M]  E14.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.8G]  E15\n|   |-- [ 474]  E15_checksums.md5\n|   |-- [7.7M]  E15.cov_refs.gtf\n|   |-- [ 36M]  E15.gtf\n|   |-- [1013]  E15-hisat2_stats.txt\n|   |-- [2.8G]  E15.sorted.bam\n|   |-- [1.6M]  E15.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [3.3G]  E16\n|   |-- [ 474]  E16_checksums.md5\n|   |-- [8.1M]  E16.cov_refs.gtf\n|   |-- [ 36M]  E16.gtf\n|   |-- [1013]  E16-hisat2_stats.txt\n|   |-- [3.2G]  E16.sorted.bam\n|   |-- [1.7M]  E16.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.9G]  E2\n|   |-- [ 469]  E2_checksums.md5\n|   |-- [8.0M]  E2.cov_refs.gtf\n|   |-- [ 36M]  E2.gtf\n|   |-- [1014]  E2-hisat2_stats.txt\n|   |-- [2.8G]  E2.sorted.bam\n|   |-- [1.7M]  E2.sorted.bam.bai\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.9G]  E3\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 469]  E3_checksums.md5\n|   |-- [7.9M]  E3.cov_refs.gtf\n|   |-- [ 36M]  E3.gtf\n|   |-- [1012]  E3-hisat2_stats.txt\n|   |-- [2.8G]  E3.sorted.bam\n|   |-- [1.6M]  E3.sorted.bam.bai\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.5G]  E4\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 469]  E4_checksums.md5\n|   |-- [7.7M]  E4.cov_refs.gtf\n|   |-- [ 36M]  E4.gtf\n|   |-- [1011]  E4-hisat2_stats.txt\n|   |-- [2.4G]  E4.sorted.bam\n|   |-- [1.5M]  E4.sorted.bam.bai\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.0G]  E5\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 469]  E5_checksums.md5\n|   |-- [7.5M]  E5.cov_refs.gtf\n|   |-- [ 36M]  E5.gtf\n|   |-- [1010]  E5-hisat2_stats.txt\n|   |-- [2.0G]  E5.sorted.bam\n|   |-- [1.5M]  E5.sorted.bam.bai\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.8G]  E6\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 469]  E6_checksums.md5\n|   |-- [7.7M]  E6.cov_refs.gtf\n|   |-- [ 36M]  E6.gtf\n|   |-- [1011]  E6-hisat2_stats.txt\n|   |-- [2.7G]  E6.sorted.bam\n|   |-- [1.6M]  E6.sorted.bam.bai\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.7G]  E7\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 469]  E7_checksums.md5\n|   |-- [8.0M]  E7.cov_refs.gtf\n|   |-- [ 36M]  E7.gtf\n|   |-- [1011]  E7-hisat2_stats.txt\n|   |-- [2.7G]  E7.sorted.bam\n|   |-- [1.6M]  E7.sorted.bam.bai\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [2.7G]  E8\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 469]  E8_checksums.md5\n|   |-- [7.8M]  E8.cov_refs.gtf\n|   |-- [ 36M]  E8.gtf\n|   |-- [1011]  E8-hisat2_stats.txt\n|   |-- [2.6G]  E8.sorted.bam\n|   |-- [1.6M]  E8.sorted.bam.bai\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [3.1G]  E9\n|   |-- [2.4M]  e2t.ctab\n|   |-- [ 469]  E9_checksums.md5\n|   |-- [7.8M]  E9.cov_refs.gtf\n|   |-- [ 36M]  E9.gtf\n|   |-- [1014]  E9-hisat2_stats.txt\n|   |-- [3.0G]  E9.sorted.bam\n|   |-- [1.7M]  E9.sorted.bam.bai\n|   |-- [ 18M]  e_data.ctab\n|   |-- [2.1M]  i2t.ctab\n|   |-- [ 10M]  i_data.ctab\n|   `-- [2.8M]  t_data.ctab\n|-- [3.3K]  gtf_list.txt\n|-- [8.4K]  input_fastqs_checksums.md5\n|-- [1.5K]  Pver_genome_assembly_v1.0-gffcmp\n|-- [ 33M]  Pver_genome_assembly_v1.0-gffcmp.annotated.gtf\n|-- [2.6M]  Pver_genome_assembly_v1.0-gffcmp.loci\n|-- [1.6M]  Pver_genome_assembly_v1.0-gffcmp.Pver_genome_assembly_v1.0.stringtie.gtf.refmap\n|-- [3.1M]  Pver_genome_assembly_v1.0-gffcmp.Pver_genome_assembly_v1.0.stringtie.gtf.tmap\n|-- [3.3M]  Pver_genome_assembly_v1.0-gffcmp.tracking\n|-- [ 37M]  Pver_genome_assembly_v1.0.stringtie.gtf\n|-- [ 87K]  slurm-4469382.out\n`-- [ 654]  sorted_bams.list\n\n 205G used in 32 directories, 367 files\n ```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"Transcript Identification and Alignments - P.verrucosa RNA-seq with Pver_genome_assembly_v1.0 Using HiSat2 and Stringtie on Mox","date":"2023-02-16 08:20","tags":["hisat2","stringtie","mox","RNAseq","ballgown","Pocllipora verrucosa","cora","E5"],"categories":["2023","E5"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}