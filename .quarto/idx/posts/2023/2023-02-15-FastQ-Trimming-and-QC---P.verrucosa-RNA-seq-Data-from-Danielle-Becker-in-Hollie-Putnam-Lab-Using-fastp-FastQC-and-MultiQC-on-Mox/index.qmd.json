{"title":"FastQ Trimming and QC - P.verrucosa RNA-seq Data from Danielle Becker in Hollie Putnam Lab Using fastp FastQC and MultiQC on Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"FastQ Trimming and QC - P.verrucosa RNA-seq Data from Danielle Becker in Hollie Putnam Lab Using fastp FastQC and MultiQC on Mox","date":"2023-02-15 12:09","tags":["RNAseq","fastp","FastQC","MultiQC","mox","Pocillopora verrucosa"],"categories":["2023","E5"]},"headingText":"Job Name","containsRefs":false,"markdown":"\nAfter receiving the _P.verrucosa_ RNA-seq data from Danielle Becker (Hollie Putnam's Lab, Univ. of Rhode Island), I noticed that [the trimmed reads](https://gannet.fish.washington.edu/Atumefaciens/hputnam-Becker_E5/Becker_RNASeq/data/trimmed/) didn't appear to actually be trimmed. There was still adapter contamination (solely in R2 reads - suggesting the `detect_adapter_for_pe` option had been omitted from the `fastp` command?), but the reads had an average read length of 150bp - _except_ when looking at the adapter content report!!??.\n\n![Screencap of FastQC Adapter content report for trimmed sample C17_R2_001.fastq.gz. Plot shows read lengths of 150bp, despite trimming. Additionally, shows \"bumpy\" stuff in first 20bp of all reads.](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20230215-pver-fastqc-fastp-multiqc-E5-RNAseq-previous_fastqc-01.png?raw=true)\n\n![Screencap of FastQC Per base sequence content report for trimmed sample C17_R2_001.fastq.gz. Plot shows residual adapter content, and, inexplicalbly, shows read lengths of <150bp, despite what's reported in all other length-based reports in the FastQC output!](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20230215-pver-fastqc-fastp-multiqc-E5-RNAseq-previous_fastqc-02.png?raw=true)\n\n\n\nIf they had been trimmed, then the average read length should be shorter than 150bp... Oddly, I experienced this [with other coral sequencing data from the Putnam Lab back in January](https://robertslab.github.io/sams-notebook/posts/2023/2023-01-13-SRA-Data---Coral-SRA-BioProject-PRJNA744403-Download-and-QC/).\n\nSo, with all of this info, I decided to trim the raw FastQs using [`fastp`](https://github.com/OpenGene/fastp), and perform a 20bp 5' end hard trim to all reads like I did [with the other coral sequencing data from the Putnam Lab back in January](https://robertslab.github.io/sams-notebook/posts/2023/2023-01-13-SRA-Data---Coral-SRA-BioProject-PRJNA744403-Download-and-QC/).\n\nJob was run on Mox using [`fastp`](https://github.com/OpenGene/fastp), [`FastQC`](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/), and [`MultiQC`](https://multiqc.info/).\n\nSBATCH script (GitHub):\n\n- [20230215-pver-fastqc-fastp-multiqc-E5-RNAseq.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20230215-pver-fastqc-fastp-multiqc-E5-RNAseq.sh)\n\n\n```shell\n#!/bin/bash\n#SBATCH --job-name=20230215-pver-fastqc-fastp-multiqc-E5-RNAseq\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=5-00:00:00\n## Memory per node\n#SBATCH --mem=500G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20230215-pver-fastqc-fastp-multiqc-E5-RNAseq\n\n### FastQC and fastp trimming E5 coral project P.verrucosa RNA-seq data from Danielle Becker.\n\n### fastp expects input FastQ files to be in format: *R[12]_001.fastq.gz\n### E.g. C17_R1_001.fastq.gz\n\n\n###################################################################################\n# These variables need to be set by user\n\n## Assign Variables\n\n# Set FastQ filename patterns\nfastq_pattern='*.fastq.gz'\nR1_fastq_pattern='*R1_001.fastq.gz'\nR2_fastq_pattern='*R2_001.fastq.gz'\n\n# Set number of CPUs to use\nthreads=40\n\n# Input/output files\ntrimmed_checksums=trimmed_fastq_checksums.md5\nfastq_checksums=input_fastq_checksums.md5\n\n# FastQC output directory\noutput_dir=$(pwd)\n\n# Data directories\nreads_dir=/gscratch/srlab/sam/data/hputnam-Becker_E5/Becker_RNASeq/data/raw\n\n\n## Inititalize arrays\nraw_fastqs_array=()\nR1_names_array=()\nR2_names_array=()\n\n# Paths to programs\nfastp=/gscratch/srlab/programs/fastp.0.23.1\nfastqc=/gscratch/srlab/programs/fastqc_v0.11.9/fastqc\nmultiqc=/gscratch/srlab/programs/anaconda3/bin/multiqc\n\n# Programs associative array\ndeclare -A programs_array\nprograms_array=(\n[fastqc]=\"${fastqc}\"\n[fastp]=\"${fastp}\" \\\n[multiqc]=\"${multiqc}\"\n)\n\n\n###################################################################################\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\nmodule load intel-python3_2017\n\n# Capture date\ntimestamp=$(date +%Y%m%d)\n\n# Sync raw FastQ files to working directory\necho \"\"\necho \"Transferring files via rsync...\"\nrsync --archive --verbose \\\n\"${reads_dir}\"${fastq_pattern} .\necho \"\"\necho \"File transfer complete.\"\necho \"\"\n\n### Run FastQC ###\n\n### NOTE: Do NOT quote raw_fastqc_list\n# Create array of trimmed FastQs\nraw_fastqs_array=(${fastq_pattern})\n\n# Pass array contents to new variable as space-delimited list\nraw_fastqc_list=$(echo \"${raw_fastqs_array[*]}\")\n\necho \"Beginning FastQC on raw reads...\"\necho \"\"\n\n# Run FastQC\n${programs_array[fastqc]} \\\n--threads ${threads} \\\n--outdir ${output_dir} \\\n${raw_fastqc_list}\n\necho \"FastQC on raw reads complete!\"\necho \"\"\n\n### END FASTQC ###\n\n# Create arrays of fastq R1 files and sample names\n# Do NOT quote R1_fastq_pattern variable\nfor fastq in ${R1_fastq_pattern}\ndo\n  fastq_array_R1+=(\"${fastq}\")\n\n  # Use parameter substitution to remove all text up to and including first \"_\" from\n  # right side of string.\n  R1_names_array+=(\"${fastq%_*}\")\ndone\n\n# Create array of fastq R2 files\n# Do NOT quote R2_fastq_pattern variable\nfor fastq in ${R2_fastq_pattern}\ndo\n  fastq_array_R2+=(\"${fastq}\")\n\n  # Use parameter substitution to remove all text up to and including first \"_\" from\n  # right side of string.\n  R2_names_array+=(\"${fastq%_*}\")\ndone\n\n\n# Create MD5 checksums for raw FastQs\nfor fastq in ${fastq_pattern}\ndo\n  echo \"Generating checksum for ${fastq}\"\n  md5sum \"${fastq}\" | tee --append ${fastq_checksums}\n  echo \"\"\ndone\n\n\n### RUN FASTP ###\n\n# Run fastp on files\n# Adds JSON report output for downstream usage by MultiQC\n# Trims 20bp from 5' end of all reads\n# Trims poly G, if present\n# Uses parameter substitution (e.g. ${R1_sample_name%%_*})to rm the _R[12] for report names.\necho \"Beginning fastp trimming.\"\necho \"\"\n\nfor index in \"${!fastq_array_R1[@]}\"\ndo\n  R1_sample_name=\"${R1_names_array[index]}\"\n  R2_sample_name=\"${R2_names_array[index]}\"\n  ${fastp} \\\n  --in1 ${fastq_array_R1[index]} \\\n  --in2 ${fastq_array_R2[index]} \\\n  --detect_adapter_for_pe \\\n  --trim_poly_g \\\n  --trim_front1 20 \\\n  --trim_front2 20 \\\n  --thread ${threads} \\\n  --html \"${R1_sample_name%%_*}\".fastp-trim.\"${timestamp}\".report.html \\\n  --json \"${R1_sample_name%%_*}\".fastp-trim.\"${timestamp}\".report.json \\\n  --out1 \"${R1_sample_name}\".fastp-trim.\"${timestamp}\".fq.gz \\\n  --out2 \"${R2_sample_name}\".fastp-trim.\"${timestamp}\".fq.gz\n\n  # Generate md5 checksums for newly trimmed files\n  {\n      md5sum \"${R1_sample_name}\".fastp-trim.\"${timestamp}\".fq.gz\n      md5sum \"${R2_sample_name}\".fastp-trim.\"${timestamp}\".fq.gz\n  } >> \"${trimmed_checksums}\"\n  \n  # Remove original FastQ files\n  echo \"\"\n  echo \" Removing ${fastq_array_R1[index]} and ${fastq_array_R2[index]}.\"\n  rm \"${fastq_array_R1[index]}\" \"${fastq_array_R2[index]}\"\ndone\n\necho \"\"\necho \"fastp trimming complete.\"\necho \"\"\n\n### END FASTP ###\n\n\n### RUN FASTQC ###\n\n### NOTE: Do NOT quote ${trimmed_fastqc_list}\n\n# Create array of trimmed FastQs\ntrimmed_fastq_array=(*fastp-trim*.fq.gz)\n\n# Pass array contents to new variable as space-delimited list\ntrimmed_fastqc_list=$(echo \"${trimmed_fastq_array[*]}\")\n\n# Run FastQC\necho \"Beginning FastQC on trimmed reads...\"\necho \"\"\n${programs_array[fastqc]} \\\n--threads ${threads} \\\n--outdir ${output_dir} \\\n${trimmed_fastqc_list}\n\necho \"\"\necho \"FastQC on trimmed reads complete!\"\necho \"\"\n\n### END FASTQC ###\n\n### RUN MULTIQC ###\necho \"Beginning MultiQC...\"\necho \"\"\n${multiqc} .\necho \"\"\necho \"MultiQC complete.\"\necho \"\"\n\n### END MULTIQC ###\n\n####################################################################\n\n# Capture program options\nif [[ \"${#programs_array[@]}\" -gt 0 ]]; then\n  echo \"Logging program options...\"\n  for program in \"${!programs_array[@]}\"\n  do\n    {\n    echo \"Program options for ${program}: \"\n    echo \"\"\n    # Handle samtools help menus\n    if [[ \"${program}\" == \"samtools_index\" ]] \\\n    || [[ \"${program}\" == \"samtools_sort\" ]] \\\n    || [[ \"${program}\" == \"samtools_view\" ]]\n    then\n      ${programs_array[$program]}\n\n    # Handle DIAMOND BLAST menu\n    elif [[ \"${program}\" == \"diamond\" ]]; then\n      ${programs_array[$program]} help\n\n    # Handle NCBI BLASTx menu\n    elif [[ \"${program}\" == \"blastx\" ]]; then\n      ${programs_array[$program]} -help\n    fi\n    ${programs_array[$program]} -h\n    echo \"\"\n    echo \"\"\n    echo \"----------------------------------------------\"\n    echo \"\"\n    echo \"\"\n  } &>> program_options.log || true\n\n    # If MultiQC is in programs_array, copy the config file to this directory.\n    if [[ \"${program}\" == \"multiqc\" ]]; then\n      cp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n    fi\n  done\nfi\n\n\n# Document programs in PATH (primarily for program version ID)\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n```\n\n---\n\n# RESULTS\n\nRuntime was Just under two hours:\n\n![Screencap showing runtime of 1 hour 48 minutes and 29 seconds for trimming and QC on Mox for Danielle Becker RNA-seq data](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20230215-pver-fastqc-fastp-multiqc-E5-RNAseq_runtime.png?raw=true)\n\n\nOutput folder:\n\n- [20230215-pver-fastqc-fastp-multiqc-E5-RNAseq/](https://gannet.fish.washington.edu/Atumefaciens/20230215-pver-fastqc-fastp-multiqc-E5-RNAseq/)  \n    - #### Trimmed FastQs (FastQ)\n        - All trimmed FastQs follow this pattern: `*fastp-trim.20230215.fq.gz`\n    - #### Trimmed FastQ MD5 checksums (text)\n        - [20230215-pver-fastqc-fastp-multiqc-E5-RNAseq/trimmed_fastq_checksums.md5](https://gannet.fish.washington.edu/Atumefaciens/20230215-pver-fastqc-fastp-multiqc-E5-RNAseq/trimmed_fastq_checksums.md5)\n    - #### MultiQC Report (HTML)\n        - [20230215-pver-fastqc-fastp-multiqc-E5-RNAseq/multiqc_report.html](https://gannet.fish.washington.edu/Atumefaciens/20230215-pver-fastqc-fastp-multiqc-E5-RNAseq/multiqc_report.html)\n        - NOTE: The report is a bit confusing due to the fact that it has summarized the follwing in a single report:\n            - _raw_ (e.g. `C17_R[12]_001`)\n            - _trimmed_ (e.g. `C17_R[12]`)\n            - _fastp_ (e.g. `C17`)\n\nOkay, the trimmed FastQs look better - no adapter contamination in R1 or R2 reads, and no \"bumpy stuff\" at 5' ends of reads. Plus, average read length is 130bp, reflecting the trimming that was supposed to take place. Next steps will be to align the trimmed reads to the _P.verrucosa_ genomes and the endosymbiont genome(s) in order to seperate reads matching to each genome.\n","srcMarkdownNoYaml":"\nAfter receiving the _P.verrucosa_ RNA-seq data from Danielle Becker (Hollie Putnam's Lab, Univ. of Rhode Island), I noticed that [the trimmed reads](https://gannet.fish.washington.edu/Atumefaciens/hputnam-Becker_E5/Becker_RNASeq/data/trimmed/) didn't appear to actually be trimmed. There was still adapter contamination (solely in R2 reads - suggesting the `detect_adapter_for_pe` option had been omitted from the `fastp` command?), but the reads had an average read length of 150bp - _except_ when looking at the adapter content report!!??.\n\n![Screencap of FastQC Adapter content report for trimmed sample C17_R2_001.fastq.gz. Plot shows read lengths of 150bp, despite trimming. Additionally, shows \"bumpy\" stuff in first 20bp of all reads.](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20230215-pver-fastqc-fastp-multiqc-E5-RNAseq-previous_fastqc-01.png?raw=true)\n\n![Screencap of FastQC Per base sequence content report for trimmed sample C17_R2_001.fastq.gz. Plot shows residual adapter content, and, inexplicalbly, shows read lengths of <150bp, despite what's reported in all other length-based reports in the FastQC output!](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20230215-pver-fastqc-fastp-multiqc-E5-RNAseq-previous_fastqc-02.png?raw=true)\n\n\n\nIf they had been trimmed, then the average read length should be shorter than 150bp... Oddly, I experienced this [with other coral sequencing data from the Putnam Lab back in January](https://robertslab.github.io/sams-notebook/posts/2023/2023-01-13-SRA-Data---Coral-SRA-BioProject-PRJNA744403-Download-and-QC/).\n\nSo, with all of this info, I decided to trim the raw FastQs using [`fastp`](https://github.com/OpenGene/fastp), and perform a 20bp 5' end hard trim to all reads like I did [with the other coral sequencing data from the Putnam Lab back in January](https://robertslab.github.io/sams-notebook/posts/2023/2023-01-13-SRA-Data---Coral-SRA-BioProject-PRJNA744403-Download-and-QC/).\n\nJob was run on Mox using [`fastp`](https://github.com/OpenGene/fastp), [`FastQC`](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/), and [`MultiQC`](https://multiqc.info/).\n\nSBATCH script (GitHub):\n\n- [20230215-pver-fastqc-fastp-multiqc-E5-RNAseq.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20230215-pver-fastqc-fastp-multiqc-E5-RNAseq.sh)\n\n\n```shell\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=20230215-pver-fastqc-fastp-multiqc-E5-RNAseq\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=5-00:00:00\n## Memory per node\n#SBATCH --mem=500G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20230215-pver-fastqc-fastp-multiqc-E5-RNAseq\n\n### FastQC and fastp trimming E5 coral project P.verrucosa RNA-seq data from Danielle Becker.\n\n### fastp expects input FastQ files to be in format: *R[12]_001.fastq.gz\n### E.g. C17_R1_001.fastq.gz\n\n\n###################################################################################\n# These variables need to be set by user\n\n## Assign Variables\n\n# Set FastQ filename patterns\nfastq_pattern='*.fastq.gz'\nR1_fastq_pattern='*R1_001.fastq.gz'\nR2_fastq_pattern='*R2_001.fastq.gz'\n\n# Set number of CPUs to use\nthreads=40\n\n# Input/output files\ntrimmed_checksums=trimmed_fastq_checksums.md5\nfastq_checksums=input_fastq_checksums.md5\n\n# FastQC output directory\noutput_dir=$(pwd)\n\n# Data directories\nreads_dir=/gscratch/srlab/sam/data/hputnam-Becker_E5/Becker_RNASeq/data/raw\n\n\n## Inititalize arrays\nraw_fastqs_array=()\nR1_names_array=()\nR2_names_array=()\n\n# Paths to programs\nfastp=/gscratch/srlab/programs/fastp.0.23.1\nfastqc=/gscratch/srlab/programs/fastqc_v0.11.9/fastqc\nmultiqc=/gscratch/srlab/programs/anaconda3/bin/multiqc\n\n# Programs associative array\ndeclare -A programs_array\nprograms_array=(\n[fastqc]=\"${fastqc}\"\n[fastp]=\"${fastp}\" \\\n[multiqc]=\"${multiqc}\"\n)\n\n\n###################################################################################\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\nmodule load intel-python3_2017\n\n# Capture date\ntimestamp=$(date +%Y%m%d)\n\n# Sync raw FastQ files to working directory\necho \"\"\necho \"Transferring files via rsync...\"\nrsync --archive --verbose \\\n\"${reads_dir}\"${fastq_pattern} .\necho \"\"\necho \"File transfer complete.\"\necho \"\"\n\n### Run FastQC ###\n\n### NOTE: Do NOT quote raw_fastqc_list\n# Create array of trimmed FastQs\nraw_fastqs_array=(${fastq_pattern})\n\n# Pass array contents to new variable as space-delimited list\nraw_fastqc_list=$(echo \"${raw_fastqs_array[*]}\")\n\necho \"Beginning FastQC on raw reads...\"\necho \"\"\n\n# Run FastQC\n${programs_array[fastqc]} \\\n--threads ${threads} \\\n--outdir ${output_dir} \\\n${raw_fastqc_list}\n\necho \"FastQC on raw reads complete!\"\necho \"\"\n\n### END FASTQC ###\n\n# Create arrays of fastq R1 files and sample names\n# Do NOT quote R1_fastq_pattern variable\nfor fastq in ${R1_fastq_pattern}\ndo\n  fastq_array_R1+=(\"${fastq}\")\n\n  # Use parameter substitution to remove all text up to and including first \"_\" from\n  # right side of string.\n  R1_names_array+=(\"${fastq%_*}\")\ndone\n\n# Create array of fastq R2 files\n# Do NOT quote R2_fastq_pattern variable\nfor fastq in ${R2_fastq_pattern}\ndo\n  fastq_array_R2+=(\"${fastq}\")\n\n  # Use parameter substitution to remove all text up to and including first \"_\" from\n  # right side of string.\n  R2_names_array+=(\"${fastq%_*}\")\ndone\n\n\n# Create MD5 checksums for raw FastQs\nfor fastq in ${fastq_pattern}\ndo\n  echo \"Generating checksum for ${fastq}\"\n  md5sum \"${fastq}\" | tee --append ${fastq_checksums}\n  echo \"\"\ndone\n\n\n### RUN FASTP ###\n\n# Run fastp on files\n# Adds JSON report output for downstream usage by MultiQC\n# Trims 20bp from 5' end of all reads\n# Trims poly G, if present\n# Uses parameter substitution (e.g. ${R1_sample_name%%_*})to rm the _R[12] for report names.\necho \"Beginning fastp trimming.\"\necho \"\"\n\nfor index in \"${!fastq_array_R1[@]}\"\ndo\n  R1_sample_name=\"${R1_names_array[index]}\"\n  R2_sample_name=\"${R2_names_array[index]}\"\n  ${fastp} \\\n  --in1 ${fastq_array_R1[index]} \\\n  --in2 ${fastq_array_R2[index]} \\\n  --detect_adapter_for_pe \\\n  --trim_poly_g \\\n  --trim_front1 20 \\\n  --trim_front2 20 \\\n  --thread ${threads} \\\n  --html \"${R1_sample_name%%_*}\".fastp-trim.\"${timestamp}\".report.html \\\n  --json \"${R1_sample_name%%_*}\".fastp-trim.\"${timestamp}\".report.json \\\n  --out1 \"${R1_sample_name}\".fastp-trim.\"${timestamp}\".fq.gz \\\n  --out2 \"${R2_sample_name}\".fastp-trim.\"${timestamp}\".fq.gz\n\n  # Generate md5 checksums for newly trimmed files\n  {\n      md5sum \"${R1_sample_name}\".fastp-trim.\"${timestamp}\".fq.gz\n      md5sum \"${R2_sample_name}\".fastp-trim.\"${timestamp}\".fq.gz\n  } >> \"${trimmed_checksums}\"\n  \n  # Remove original FastQ files\n  echo \"\"\n  echo \" Removing ${fastq_array_R1[index]} and ${fastq_array_R2[index]}.\"\n  rm \"${fastq_array_R1[index]}\" \"${fastq_array_R2[index]}\"\ndone\n\necho \"\"\necho \"fastp trimming complete.\"\necho \"\"\n\n### END FASTP ###\n\n\n### RUN FASTQC ###\n\n### NOTE: Do NOT quote ${trimmed_fastqc_list}\n\n# Create array of trimmed FastQs\ntrimmed_fastq_array=(*fastp-trim*.fq.gz)\n\n# Pass array contents to new variable as space-delimited list\ntrimmed_fastqc_list=$(echo \"${trimmed_fastq_array[*]}\")\n\n# Run FastQC\necho \"Beginning FastQC on trimmed reads...\"\necho \"\"\n${programs_array[fastqc]} \\\n--threads ${threads} \\\n--outdir ${output_dir} \\\n${trimmed_fastqc_list}\n\necho \"\"\necho \"FastQC on trimmed reads complete!\"\necho \"\"\n\n### END FASTQC ###\n\n### RUN MULTIQC ###\necho \"Beginning MultiQC...\"\necho \"\"\n${multiqc} .\necho \"\"\necho \"MultiQC complete.\"\necho \"\"\n\n### END MULTIQC ###\n\n####################################################################\n\n# Capture program options\nif [[ \"${#programs_array[@]}\" -gt 0 ]]; then\n  echo \"Logging program options...\"\n  for program in \"${!programs_array[@]}\"\n  do\n    {\n    echo \"Program options for ${program}: \"\n    echo \"\"\n    # Handle samtools help menus\n    if [[ \"${program}\" == \"samtools_index\" ]] \\\n    || [[ \"${program}\" == \"samtools_sort\" ]] \\\n    || [[ \"${program}\" == \"samtools_view\" ]]\n    then\n      ${programs_array[$program]}\n\n    # Handle DIAMOND BLAST menu\n    elif [[ \"${program}\" == \"diamond\" ]]; then\n      ${programs_array[$program]} help\n\n    # Handle NCBI BLASTx menu\n    elif [[ \"${program}\" == \"blastx\" ]]; then\n      ${programs_array[$program]} -help\n    fi\n    ${programs_array[$program]} -h\n    echo \"\"\n    echo \"\"\n    echo \"----------------------------------------------\"\n    echo \"\"\n    echo \"\"\n  } &>> program_options.log || true\n\n    # If MultiQC is in programs_array, copy the config file to this directory.\n    if [[ \"${program}\" == \"multiqc\" ]]; then\n      cp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n    fi\n  done\nfi\n\n\n# Document programs in PATH (primarily for program version ID)\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n```\n\n---\n\n# RESULTS\n\nRuntime was Just under two hours:\n\n![Screencap showing runtime of 1 hour 48 minutes and 29 seconds for trimming and QC on Mox for Danielle Becker RNA-seq data](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20230215-pver-fastqc-fastp-multiqc-E5-RNAseq_runtime.png?raw=true)\n\n\nOutput folder:\n\n- [20230215-pver-fastqc-fastp-multiqc-E5-RNAseq/](https://gannet.fish.washington.edu/Atumefaciens/20230215-pver-fastqc-fastp-multiqc-E5-RNAseq/)  \n    - #### Trimmed FastQs (FastQ)\n        - All trimmed FastQs follow this pattern: `*fastp-trim.20230215.fq.gz`\n    - #### Trimmed FastQ MD5 checksums (text)\n        - [20230215-pver-fastqc-fastp-multiqc-E5-RNAseq/trimmed_fastq_checksums.md5](https://gannet.fish.washington.edu/Atumefaciens/20230215-pver-fastqc-fastp-multiqc-E5-RNAseq/trimmed_fastq_checksums.md5)\n    - #### MultiQC Report (HTML)\n        - [20230215-pver-fastqc-fastp-multiqc-E5-RNAseq/multiqc_report.html](https://gannet.fish.washington.edu/Atumefaciens/20230215-pver-fastqc-fastp-multiqc-E5-RNAseq/multiqc_report.html)\n        - NOTE: The report is a bit confusing due to the fact that it has summarized the follwing in a single report:\n            - _raw_ (e.g. `C17_R[12]_001`)\n            - _trimmed_ (e.g. `C17_R[12]`)\n            - _fastp_ (e.g. `C17`)\n\nOkay, the trimmed FastQs look better - no adapter contamination in R1 or R2 reads, and no \"bumpy stuff\" at 5' ends of reads. Plus, average read length is 130bp, reflecting the trimming that was supposed to take place. Next steps will be to align the trimmed reads to the _P.verrucosa_ genomes and the endosymbiont genome(s) in order to seperate reads matching to each genome.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"FastQ Trimming and QC - P.verrucosa RNA-seq Data from Danielle Becker in Hollie Putnam Lab Using fastp FastQC and MultiQC on Mox","date":"2023-02-15 12:09","tags":["RNAseq","fastp","FastQC","MultiQC","mox","Pocillopora verrucosa"],"categories":["2023","E5"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}