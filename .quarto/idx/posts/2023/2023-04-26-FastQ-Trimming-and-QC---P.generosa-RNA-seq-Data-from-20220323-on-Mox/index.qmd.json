{"title":"FastQ Trimming and QC - P.generosa RNA-seq Data from 20220323 on Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"FastQ Trimming and QC - P.generosa RNA-seq Data from 20220323 on Mox","date":"2023-04-26 10:56","tags":["mox","Panopea generosa","Pacific geoduck","fastp","RNA-seq","MultiQC","FastQC","trimming"],"categories":["2023","Miscellaneous"]},"headingText":"Job Name","containsRefs":false,"markdown":"\nAddressing the update to [this GitHub Issue](https://github.com/RobertsLab/resources/issues/1434) regarding identifying [_Panopea generosa_ (Pacific geoduck)](http://en.wikipedia.org/wiki/Geoduck) long non-coding RNAs (lncRNAs), I used the RNA-seq data from [the Nextflow NF-Core RNAseq pipeline run on 20220323](https://robertslab.github.io/sams-notebook/posts/2022/2022-03-23-Differential-Gene-Expression---P.generosa-DGE-Between-Tissues-Using-Nextlow-NF-Core-RNAseq-Pipeline-on-Mox/). Although that data was supposed to have been trimmed in the Nextflow NF-Core RNA-seq pipeline, the FastQC reports still show adapter contamination and some funky stuff happening at the 5' end of the reads. So, I've opted to trim the \"trimmed\" files with [`fastp`](https://github.com/OpenGene/fastp), using a hard 20bp trim at the 5' end of all reads. [`FastQC`](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/) and [`MultiQC`](https://multiqc.info/) were run before/after trimming. Job was run on Mox.\n\nSLURM Script (GitHub):\n\n- [20230426-pgen-fastqc-fastp-multiqc-RNAseq.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20230426-pgen-fastqc-fastp-multiqc-RNAseq.sh)\n\n```bash\n#!/bin/bash\n#SBATCH --job-name=20230426-pgen-fastqc-fastp-multiqc-RNAseq\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=5-00:00:00\n## Memory per node\n#SBATCH --mem=120G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20230426-pgen-fastqc-fastp-multiqc-RNAseq\n\n### FastQC and fastp trimming of P.generosa RNA-seq data from 20220323.\n\nhttps://robertslab.github.io/sams-notebook/posts/2022/2022-03-23-Differential-Gene-Expression---P.generosa-DGE-Between-Tissues-Using-Nextlow-NF-Core-RNAseq-Pipeline-on-Mox/\n\n### fastp expects input FastQ files to be in format: *[12]_val_[12].fq.gz\n### E.g. heart_1_val_1.fq.gz\n\n\n###################################################################################\n# These variables need to be set by user\n\n## Assign Variables\n\n# Set FastQ filename patterns\nfastq_pattern='*.fq.gz'\nR1_fastq_pattern='*val_1.fq.gz'\nR2_fastq_pattern='*val_2.fq.gz'\n\n# Set number of CPUs to use\nthreads=40\n\n# Input/output files\ntrimmed_checksums=trimmed_fastq_checksums.md5\nfastq_checksums=input_fastq_checksums.md5\n\n# FastQC output directory\noutput_dir=$(pwd)\n\n# Data directories\nreads_dir=/gscratch/scrubbed/samwhite/data/P_generosa/RNAseq\n\n\n## Inititalize arrays\nraw_fastqs_array=()\nR1_names_array=()\nR2_names_array=()\n\n# Paths to programs\nfastp=/gscratch/srlab/programs/fastp.0.23.1\nfastqc=/gscratch/srlab/programs/fastqc_v0.11.9/fastqc\nmultiqc=/gscratch/srlab/programs/anaconda3/bin/multiqc\n\n# Programs associative array\ndeclare -A programs_array\nprograms_array=(\n[fastqc]=\"${fastqc}\"\n[fastp]=\"${fastp}\" \\\n[multiqc]=\"${multiqc}\"\n)\n\n\n###################################################################################\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\nmodule load intel-python3_2017\n\n# Capture date\ntimestamp=$(date +%Y%m%d)\n\n# Sync raw FastQ files to working directory\necho \"\"\necho \"Transferring files via rsync...\"\nrsync --archive --verbose \\\n\"${reads_dir}\"${fastq_pattern} .\necho \"\"\necho \"File transfer complete.\"\necho \"\"\n\n### Run FastQC ###\n\n### NOTE: Do NOT quote raw_fastqc_list\n# Create array of trimmed FastQs\nraw_fastqs_array=(${fastq_pattern})\n\n# Pass array contents to new variable as space-delimited list\nraw_fastqc_list=$(echo \"${raw_fastqs_array[*]}\")\n\necho \"Beginning FastQC on raw reads...\"\necho \"\"\n\n# Run FastQC\n${programs_array[fastqc]} \\\n--threads ${threads} \\\n--outdir ${output_dir} \\\n${raw_fastqc_list}\n\necho \"FastQC on raw reads complete!\"\necho \"\"\n\n### END FASTQC ###\n\n# Create arrays of fastq R1 files and sample names\n# Do NOT quote R1_fastq_pattern variable\nfor fastq in ${R1_fastq_pattern}\ndo\n  fastq_array_R1+=(\"${fastq}\")\n\n  # Use parameter substitution to remove all text up to and including last \".\" from\n  # right side of string.\n  R1_names_array+=(\"${fastq%%.*}\")\ndone\n\n# Create array of fastq R2 files\n# Do NOT quote R2_fastq_pattern variable\nfor fastq in ${R2_fastq_pattern}\ndo\n  fastq_array_R2+=(\"${fastq}\")\n\n  # Use parameter substitution to remove all text up to and including last \".\" from\n  # right side of string.\n  R2_names_array+=(\"${fastq%%.*}\")\ndone\n\n\n# Create MD5 checksums for raw FastQs\nfor fastq in ${fastq_pattern}\ndo\n  echo \"Generating checksum for ${fastq}\"\n  md5sum \"${fastq}\" | tee --append ${fastq_checksums}\n  echo \"\"\ndone\n\n\n### RUN FASTP ###\n\n# Run fastp on files\n# Adds JSON report output for downstream usage by MultiQC\n# Trims 20bp from 5' end of all reads\n# Trims poly G, if present\n# Uses parameter substitution (e.g. ${R1_sample_name%%_*})to rm the _R[12] for report names.\necho \"Beginning fastp trimming.\"\necho \"\"\n\nfor index in \"${!fastq_array_R1[@]}\"\ndo\n  R1_sample_name=\"${R1_names_array[index]}\"\n  R2_sample_name=\"${R2_names_array[index]}\"\n  ${fastp} \\\n  --in1 ${fastq_array_R1[index]} \\\n  --in2 ${fastq_array_R2[index]} \\\n  --detect_adapter_for_pe \\\n  --trim_poly_g \\\n  --trim_front1 20 \\\n  --trim_front2 20 \\\n  --thread ${threads} \\\n  --html \"${R1_sample_name%%_*}\".fastp-trim.\"${timestamp}\".report.html \\\n  --json \"${R1_sample_name%%_*}\".fastp-trim.\"${timestamp}\".report.json \\\n  --out1 \"${R1_sample_name}\".fastp-trim.\"${timestamp}\".fq.gz \\\n  --out2 \"${R2_sample_name}\".fastp-trim.\"${timestamp}\".fq.gz\n\n  # Generate md5 checksums for newly trimmed files\n  {\n      md5sum \"${R1_sample_name}\".fastp-trim.\"${timestamp}\".fq.gz\n      md5sum \"${R2_sample_name}\".fastp-trim.\"${timestamp}\".fq.gz\n  } >> \"${trimmed_checksums}\"\n  \n  # Remove original FastQ files\n  echo \"\"\n  echo \" Removing ${fastq_array_R1[index]} and ${fastq_array_R2[index]}.\"\n  rm \"${fastq_array_R1[index]}\" \"${fastq_array_R2[index]}\"\ndone\n\necho \"\"\necho \"fastp trimming complete.\"\necho \"\"\n\n### END FASTP ###\n\n\n### RUN FASTQC ###\n\n### NOTE: Do NOT quote ${trimmed_fastqc_list}\n\n# Create array of trimmed FastQs\ntrimmed_fastq_array=(*fastp-trim*.fq.gz)\n\n# Pass array contents to new variable as space-delimited list\ntrimmed_fastqc_list=$(echo \"${trimmed_fastq_array[*]}\")\n\n# Run FastQC\necho \"Beginning FastQC on trimmed reads...\"\necho \"\"\n${programs_array[fastqc]} \\\n--threads ${threads} \\\n--outdir ${output_dir} \\\n${trimmed_fastqc_list}\n\necho \"\"\necho \"FastQC on trimmed reads complete!\"\necho \"\"\n\n### END FASTQC ###\n\n### RUN MULTIQC ###\necho \"Beginning MultiQC...\"\necho \"\"\n${multiqc} .\necho \"\"\necho \"MultiQC complete.\"\necho \"\"\n\n### END MULTIQC ###\n\n####################################################################\n\n# Capture program options\nif [[ \"${#programs_array[@]}\" -gt 0 ]]; then\n  echo \"Logging program options...\"\n  for program in \"${!programs_array[@]}\"\n  do\n    {\n    echo \"Program options for ${program}: \"\n    echo \"\"\n    # Handle samtools help menus\n    if [[ \"${program}\" == \"samtools_index\" ]] \\\n    || [[ \"${program}\" == \"samtools_sort\" ]] \\\n    || [[ \"${program}\" == \"samtools_view\" ]]\n    then\n      ${programs_array[$program]}\n\n    # Handle DIAMOND BLAST menu\n    elif [[ \"${program}\" == \"diamond\" ]]; then\n      ${programs_array[$program]} help\n\n    # Handle NCBI BLASTx menu\n    elif [[ \"${program}\" == \"blastx\" ]]; then\n      ${programs_array[$program]} -help\n    fi\n    ${programs_array[$program]} -h\n    echo \"\"\n    echo \"\"\n    echo \"----------------------------------------------\"\n    echo \"\"\n    echo \"\"\n  } &>> program_options.log || true\n\n    # If MultiQC is in programs_array, copy the config file to this directory.\n    if [[ \"${program}\" == \"multiqc\" ]]; then\n      cp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n    fi\n  done\nfi\n\n\n# Document programs in PATH (primarily for program version ID)\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n```\n\n\n---\n\n# RESULTS\n\nRun time was ~2hrs 45mins:\n\n![Screencap showing runtime of 02:43:56](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20230426-pgen-fastqc-fastp-multiqc-RNAseq-runtime.png?raw=true)\n\nOverall, trimming looks satisfactory. Will proceed with next step(s) - [`HISAT2`](https://daehwankimlab.github.io/hisat2/) alignment, [`StringTie`](https://ccb.jhu.edu/software/stringtie/) analysis, and gffcompare.\n\n---\n\nOutput folder:\n\n- [20230426-pgen-fastqc-fastp-multiqc-RNAseq/](https://gannet.fish.washington.edu/Atumefaciens/20230426-pgen-fastqc-fastp-multiqc-RNAseq/)\n\n  #### MultiQC Report (HTML)\n\n  - [20230426-pgen-fastqc-fastp-multiqc-RNAseq/multiqc_report.html](https://gannet.fish.washington.edu/Atumefaciens/20230426-pgen-fastqc-fastp-multiqc-RNAseq/multiqc_report.html)\n\n  #### Trimmed FastQs\n\n  - [ctenidia_1_val_1.fastp-trim.20230426.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20230426-pgen-fastqc-fastp-multiqc-RNAseq/ctenidia_1_val_1.fastp-trim.20230426.fq.gz) (3.8G)\n\n    - MD5: `d8dfc9356937726c87f8a9e0cccc54f7`\n\n  - [ctenidia_2_val_2.fastp-trim.20230426.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20230426-pgen-fastqc-fastp-multiqc-RNAseq/ctenidia_2_val_2.fastp-trim.20230426.fq.gz) (4.0G)\n\n    - MD5: `c922ade826ad86785f5fab83d14402bf`\n\n  - [gonad_1_val_1.fastp-trim.20230426.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20230426-pgen-fastqc-fastp-multiqc-RNAseq/gonad_1_val_1.fastp-trim.20230426.fq.gz) (4.1G)\n\n    - MD5: `ba2fe679cb38f69678a92ec30558003b`\n\n  - [gonad_2_val_2.fastp-trim.20230426.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20230426-pgen-fastqc-fastp-multiqc-RNAseq/gonad_2_val_2.fastp-trim.20230426.fq.gz) (4.4G)\n\n    - MD5: `9628a62060e456e9e3a9522580306cd4`\n\n  - [heart_1_val_1.fastp-trim.20230426.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20230426-pgen-fastqc-fastp-multiqc-RNAseq/heart_1_val_1.fastp-trim.20230426.fq.gz) (7.2G)\n\n    - MD5: `7a0752fe1d366cd6e9dbd16288c9785d`\n\n  - [heart_2_val_2.fastp-trim.20230426.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20230426-pgen-fastqc-fastp-multiqc-RNAseq/heart_2_val_2.fastp-trim.20230426.fq.gz) (7.1G)\n\n    - MD5: `34519d234870317a953939f1742f5ea2`\n\n  - [juvenile_1_val_1.fastp-trim.20230426.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20230426-pgen-fastqc-fastp-multiqc-RNAseq/juvenile_1_val_1.fastp-trim.20230426.fq.gz) (23G)\n\n    - MD5: `974d17adfd390c6dba379c06d3d5b637`\n\n  - [juvenile_2_val_2.fastp-trim.20230426.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20230426-pgen-fastqc-fastp-multiqc-RNAseq/juvenile_2_val_2.fastp-trim.20230426.fq.gz) (23G)\n\n    - MD5: `6740608da69688b7d8e61d4c5ae431e1`\n\n  - [larvae_1_val_1.fastp-trim.20230426.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20230426-pgen-fastqc-fastp-multiqc-RNAseq/larvae_1_val_1.fastp-trim.20230426.fq.gz) (4.7G)\n\n    - MD5: `97c5715a26ade72efb305b9496bd1cec`\n\n  - [larvae_2_val_2.fastp-trim.20230426.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20230426-pgen-fastqc-fastp-multiqc-RNAseq/larvae_2_val_2.fastp-trim.20230426.fq.gz) (5.0G)\n\n    - MD5: `49217a766a3f835f53b93441b890fa5e`\n","srcMarkdownNoYaml":"\nAddressing the update to [this GitHub Issue](https://github.com/RobertsLab/resources/issues/1434) regarding identifying [_Panopea generosa_ (Pacific geoduck)](http://en.wikipedia.org/wiki/Geoduck) long non-coding RNAs (lncRNAs), I used the RNA-seq data from [the Nextflow NF-Core RNAseq pipeline run on 20220323](https://robertslab.github.io/sams-notebook/posts/2022/2022-03-23-Differential-Gene-Expression---P.generosa-DGE-Between-Tissues-Using-Nextlow-NF-Core-RNAseq-Pipeline-on-Mox/). Although that data was supposed to have been trimmed in the Nextflow NF-Core RNA-seq pipeline, the FastQC reports still show adapter contamination and some funky stuff happening at the 5' end of the reads. So, I've opted to trim the \"trimmed\" files with [`fastp`](https://github.com/OpenGene/fastp), using a hard 20bp trim at the 5' end of all reads. [`FastQC`](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/) and [`MultiQC`](https://multiqc.info/) were run before/after trimming. Job was run on Mox.\n\nSLURM Script (GitHub):\n\n- [20230426-pgen-fastqc-fastp-multiqc-RNAseq.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20230426-pgen-fastqc-fastp-multiqc-RNAseq.sh)\n\n```bash\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=20230426-pgen-fastqc-fastp-multiqc-RNAseq\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=5-00:00:00\n## Memory per node\n#SBATCH --mem=120G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20230426-pgen-fastqc-fastp-multiqc-RNAseq\n\n### FastQC and fastp trimming of P.generosa RNA-seq data from 20220323.\n\nhttps://robertslab.github.io/sams-notebook/posts/2022/2022-03-23-Differential-Gene-Expression---P.generosa-DGE-Between-Tissues-Using-Nextlow-NF-Core-RNAseq-Pipeline-on-Mox/\n\n### fastp expects input FastQ files to be in format: *[12]_val_[12].fq.gz\n### E.g. heart_1_val_1.fq.gz\n\n\n###################################################################################\n# These variables need to be set by user\n\n## Assign Variables\n\n# Set FastQ filename patterns\nfastq_pattern='*.fq.gz'\nR1_fastq_pattern='*val_1.fq.gz'\nR2_fastq_pattern='*val_2.fq.gz'\n\n# Set number of CPUs to use\nthreads=40\n\n# Input/output files\ntrimmed_checksums=trimmed_fastq_checksums.md5\nfastq_checksums=input_fastq_checksums.md5\n\n# FastQC output directory\noutput_dir=$(pwd)\n\n# Data directories\nreads_dir=/gscratch/scrubbed/samwhite/data/P_generosa/RNAseq\n\n\n## Inititalize arrays\nraw_fastqs_array=()\nR1_names_array=()\nR2_names_array=()\n\n# Paths to programs\nfastp=/gscratch/srlab/programs/fastp.0.23.1\nfastqc=/gscratch/srlab/programs/fastqc_v0.11.9/fastqc\nmultiqc=/gscratch/srlab/programs/anaconda3/bin/multiqc\n\n# Programs associative array\ndeclare -A programs_array\nprograms_array=(\n[fastqc]=\"${fastqc}\"\n[fastp]=\"${fastp}\" \\\n[multiqc]=\"${multiqc}\"\n)\n\n\n###################################################################################\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\nmodule load intel-python3_2017\n\n# Capture date\ntimestamp=$(date +%Y%m%d)\n\n# Sync raw FastQ files to working directory\necho \"\"\necho \"Transferring files via rsync...\"\nrsync --archive --verbose \\\n\"${reads_dir}\"${fastq_pattern} .\necho \"\"\necho \"File transfer complete.\"\necho \"\"\n\n### Run FastQC ###\n\n### NOTE: Do NOT quote raw_fastqc_list\n# Create array of trimmed FastQs\nraw_fastqs_array=(${fastq_pattern})\n\n# Pass array contents to new variable as space-delimited list\nraw_fastqc_list=$(echo \"${raw_fastqs_array[*]}\")\n\necho \"Beginning FastQC on raw reads...\"\necho \"\"\n\n# Run FastQC\n${programs_array[fastqc]} \\\n--threads ${threads} \\\n--outdir ${output_dir} \\\n${raw_fastqc_list}\n\necho \"FastQC on raw reads complete!\"\necho \"\"\n\n### END FASTQC ###\n\n# Create arrays of fastq R1 files and sample names\n# Do NOT quote R1_fastq_pattern variable\nfor fastq in ${R1_fastq_pattern}\ndo\n  fastq_array_R1+=(\"${fastq}\")\n\n  # Use parameter substitution to remove all text up to and including last \".\" from\n  # right side of string.\n  R1_names_array+=(\"${fastq%%.*}\")\ndone\n\n# Create array of fastq R2 files\n# Do NOT quote R2_fastq_pattern variable\nfor fastq in ${R2_fastq_pattern}\ndo\n  fastq_array_R2+=(\"${fastq}\")\n\n  # Use parameter substitution to remove all text up to and including last \".\" from\n  # right side of string.\n  R2_names_array+=(\"${fastq%%.*}\")\ndone\n\n\n# Create MD5 checksums for raw FastQs\nfor fastq in ${fastq_pattern}\ndo\n  echo \"Generating checksum for ${fastq}\"\n  md5sum \"${fastq}\" | tee --append ${fastq_checksums}\n  echo \"\"\ndone\n\n\n### RUN FASTP ###\n\n# Run fastp on files\n# Adds JSON report output for downstream usage by MultiQC\n# Trims 20bp from 5' end of all reads\n# Trims poly G, if present\n# Uses parameter substitution (e.g. ${R1_sample_name%%_*})to rm the _R[12] for report names.\necho \"Beginning fastp trimming.\"\necho \"\"\n\nfor index in \"${!fastq_array_R1[@]}\"\ndo\n  R1_sample_name=\"${R1_names_array[index]}\"\n  R2_sample_name=\"${R2_names_array[index]}\"\n  ${fastp} \\\n  --in1 ${fastq_array_R1[index]} \\\n  --in2 ${fastq_array_R2[index]} \\\n  --detect_adapter_for_pe \\\n  --trim_poly_g \\\n  --trim_front1 20 \\\n  --trim_front2 20 \\\n  --thread ${threads} \\\n  --html \"${R1_sample_name%%_*}\".fastp-trim.\"${timestamp}\".report.html \\\n  --json \"${R1_sample_name%%_*}\".fastp-trim.\"${timestamp}\".report.json \\\n  --out1 \"${R1_sample_name}\".fastp-trim.\"${timestamp}\".fq.gz \\\n  --out2 \"${R2_sample_name}\".fastp-trim.\"${timestamp}\".fq.gz\n\n  # Generate md5 checksums for newly trimmed files\n  {\n      md5sum \"${R1_sample_name}\".fastp-trim.\"${timestamp}\".fq.gz\n      md5sum \"${R2_sample_name}\".fastp-trim.\"${timestamp}\".fq.gz\n  } >> \"${trimmed_checksums}\"\n  \n  # Remove original FastQ files\n  echo \"\"\n  echo \" Removing ${fastq_array_R1[index]} and ${fastq_array_R2[index]}.\"\n  rm \"${fastq_array_R1[index]}\" \"${fastq_array_R2[index]}\"\ndone\n\necho \"\"\necho \"fastp trimming complete.\"\necho \"\"\n\n### END FASTP ###\n\n\n### RUN FASTQC ###\n\n### NOTE: Do NOT quote ${trimmed_fastqc_list}\n\n# Create array of trimmed FastQs\ntrimmed_fastq_array=(*fastp-trim*.fq.gz)\n\n# Pass array contents to new variable as space-delimited list\ntrimmed_fastqc_list=$(echo \"${trimmed_fastq_array[*]}\")\n\n# Run FastQC\necho \"Beginning FastQC on trimmed reads...\"\necho \"\"\n${programs_array[fastqc]} \\\n--threads ${threads} \\\n--outdir ${output_dir} \\\n${trimmed_fastqc_list}\n\necho \"\"\necho \"FastQC on trimmed reads complete!\"\necho \"\"\n\n### END FASTQC ###\n\n### RUN MULTIQC ###\necho \"Beginning MultiQC...\"\necho \"\"\n${multiqc} .\necho \"\"\necho \"MultiQC complete.\"\necho \"\"\n\n### END MULTIQC ###\n\n####################################################################\n\n# Capture program options\nif [[ \"${#programs_array[@]}\" -gt 0 ]]; then\n  echo \"Logging program options...\"\n  for program in \"${!programs_array[@]}\"\n  do\n    {\n    echo \"Program options for ${program}: \"\n    echo \"\"\n    # Handle samtools help menus\n    if [[ \"${program}\" == \"samtools_index\" ]] \\\n    || [[ \"${program}\" == \"samtools_sort\" ]] \\\n    || [[ \"${program}\" == \"samtools_view\" ]]\n    then\n      ${programs_array[$program]}\n\n    # Handle DIAMOND BLAST menu\n    elif [[ \"${program}\" == \"diamond\" ]]; then\n      ${programs_array[$program]} help\n\n    # Handle NCBI BLASTx menu\n    elif [[ \"${program}\" == \"blastx\" ]]; then\n      ${programs_array[$program]} -help\n    fi\n    ${programs_array[$program]} -h\n    echo \"\"\n    echo \"\"\n    echo \"----------------------------------------------\"\n    echo \"\"\n    echo \"\"\n  } &>> program_options.log || true\n\n    # If MultiQC is in programs_array, copy the config file to this directory.\n    if [[ \"${program}\" == \"multiqc\" ]]; then\n      cp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n    fi\n  done\nfi\n\n\n# Document programs in PATH (primarily for program version ID)\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n```\n\n\n---\n\n# RESULTS\n\nRun time was ~2hrs 45mins:\n\n![Screencap showing runtime of 02:43:56](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20230426-pgen-fastqc-fastp-multiqc-RNAseq-runtime.png?raw=true)\n\nOverall, trimming looks satisfactory. Will proceed with next step(s) - [`HISAT2`](https://daehwankimlab.github.io/hisat2/) alignment, [`StringTie`](https://ccb.jhu.edu/software/stringtie/) analysis, and gffcompare.\n\n---\n\nOutput folder:\n\n- [20230426-pgen-fastqc-fastp-multiqc-RNAseq/](https://gannet.fish.washington.edu/Atumefaciens/20230426-pgen-fastqc-fastp-multiqc-RNAseq/)\n\n  #### MultiQC Report (HTML)\n\n  - [20230426-pgen-fastqc-fastp-multiqc-RNAseq/multiqc_report.html](https://gannet.fish.washington.edu/Atumefaciens/20230426-pgen-fastqc-fastp-multiqc-RNAseq/multiqc_report.html)\n\n  #### Trimmed FastQs\n\n  - [ctenidia_1_val_1.fastp-trim.20230426.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20230426-pgen-fastqc-fastp-multiqc-RNAseq/ctenidia_1_val_1.fastp-trim.20230426.fq.gz) (3.8G)\n\n    - MD5: `d8dfc9356937726c87f8a9e0cccc54f7`\n\n  - [ctenidia_2_val_2.fastp-trim.20230426.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20230426-pgen-fastqc-fastp-multiqc-RNAseq/ctenidia_2_val_2.fastp-trim.20230426.fq.gz) (4.0G)\n\n    - MD5: `c922ade826ad86785f5fab83d14402bf`\n\n  - [gonad_1_val_1.fastp-trim.20230426.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20230426-pgen-fastqc-fastp-multiqc-RNAseq/gonad_1_val_1.fastp-trim.20230426.fq.gz) (4.1G)\n\n    - MD5: `ba2fe679cb38f69678a92ec30558003b`\n\n  - [gonad_2_val_2.fastp-trim.20230426.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20230426-pgen-fastqc-fastp-multiqc-RNAseq/gonad_2_val_2.fastp-trim.20230426.fq.gz) (4.4G)\n\n    - MD5: `9628a62060e456e9e3a9522580306cd4`\n\n  - [heart_1_val_1.fastp-trim.20230426.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20230426-pgen-fastqc-fastp-multiqc-RNAseq/heart_1_val_1.fastp-trim.20230426.fq.gz) (7.2G)\n\n    - MD5: `7a0752fe1d366cd6e9dbd16288c9785d`\n\n  - [heart_2_val_2.fastp-trim.20230426.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20230426-pgen-fastqc-fastp-multiqc-RNAseq/heart_2_val_2.fastp-trim.20230426.fq.gz) (7.1G)\n\n    - MD5: `34519d234870317a953939f1742f5ea2`\n\n  - [juvenile_1_val_1.fastp-trim.20230426.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20230426-pgen-fastqc-fastp-multiqc-RNAseq/juvenile_1_val_1.fastp-trim.20230426.fq.gz) (23G)\n\n    - MD5: `974d17adfd390c6dba379c06d3d5b637`\n\n  - [juvenile_2_val_2.fastp-trim.20230426.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20230426-pgen-fastqc-fastp-multiqc-RNAseq/juvenile_2_val_2.fastp-trim.20230426.fq.gz) (23G)\n\n    - MD5: `6740608da69688b7d8e61d4c5ae431e1`\n\n  - [larvae_1_val_1.fastp-trim.20230426.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20230426-pgen-fastqc-fastp-multiqc-RNAseq/larvae_1_val_1.fastp-trim.20230426.fq.gz) (4.7G)\n\n    - MD5: `97c5715a26ade72efb305b9496bd1cec`\n\n  - [larvae_2_val_2.fastp-trim.20230426.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20230426-pgen-fastqc-fastp-multiqc-RNAseq/larvae_2_val_2.fastp-trim.20230426.fq.gz) (5.0G)\n\n    - MD5: `49217a766a3f835f53b93441b890fa5e`\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"FastQ Trimming and QC - P.generosa RNA-seq Data from 20220323 on Mox","date":"2023-04-26 10:56","tags":["mox","Panopea generosa","Pacific geoduck","fastp","RNA-seq","MultiQC","FastQC","trimming"],"categories":["2023","Miscellaneous"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}