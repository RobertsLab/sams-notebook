{"title":"Transcriptome Assembly - De Novo L.staminea Trimmed RNAseq Using Trinity on Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"Transcriptome Assembly - De Novo L.staminea Trimmed RNAseq Using Trinity on Mox","date":"2023-06-16 21:03","tags":["transcriptome assembly","RNAseq","mox","de novo","Leukoma staminea","trinity"],"categories":["2023","Miscellaneous"]},"headingText":"Job Name","containsRefs":false,"markdown":"\nAs part of [this GitHub Issue to create a _de novo_ transcriptome assembly](https://github.com/RobertsLab/resources/issues/1655) from _L.staminea_ RNA-seq data, I [trimmed the reads earlier today](https://robertslab.github.io/sams-notebook/posts/2023/2023-06-16-Trimming---L.staminea-RNA-seq-Using-FastQC-fastp-and-MultiQC-on-Mox/). Next up is the actual _do novo_ assembly. I performed this using [`Trinity`](https://github.com/trinityrnaseq/trinityrnaseq/wiki) on Mox.\n\nSLURM script (GitHub):\n\n- [20230616-lsta-trinity-RNAseq.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20230616-lsta-trinity-RNAseq.sh)\n\n```bash\n#!/bin/bash\n#SBATCH --job-name=20230616-lsta-trinity-RNAseq\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=10-00:00:00\n## Memory per node\n#SBATCH --mem=500G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20230616-lsta-trinity-RNAseq\n\n\n### Expects input FastQs to be in following format: *_R[12]_001.fastp-trim.20230616.fastq.gz \n\n\n###################################################################################\n# These variables need to be set by user\n\n## Assign Variables\n\n# These variables need to be set by user\n\n# RNAseq FastQs directory\nreads_dir=/gscratch/scrubbed/samwhite/outputs/20230616-lsta-fastqc-fastp-multiqc-RNAseq/trimmed\n\n# Set FastQ filename patterns\nfastq_pattern='*.fastq.gz'\nR1_fastq_pattern='*_R1_*.fastq.gz'\nR2_fastq_pattern='*_R2_*.fastq.gz'\n\n# Inititalize arrays\n# Leave empty!!\nR1_array=()\nR2_array=()\n\n# Variables for R1/R2 lists\n# Leave empty!!!\nR1_list=\"\"\nR2_list=\"\"\n\n\n\n# Create array of fastq R1 files\n# Set filename pattern\nR1_array=(\"${reads_dir}\"/${R1_fastq_pattern})\n\n# Create array of fastq R2 files\n# Set filename pattern\nR2_array=(\"${reads_dir}\"/${R2_fastq_pattern})\n\n# Transcriptomes directory\ntranscriptomes_dir=/gscratch/srlab/sam/data/L_staminea/transcriptomes\n\n# CPU threads\nthreads=40\n\n# Recommended maximum memory is 100GB, per Trinity developer\nmax_mem=100G\n\n# Name output files\nfasta_name=\"lsta-de_novo-transcriptome_v1.0.fasta\"\nassembly_stats=\"${fasta_name}_assembly_stats.txt\"\n\n# Paths to programs\nsamtools=\"/gscratch/srlab/programs/samtools-1.10/samtools\"\ntrinity_dir=\"/gscratch/srlab/programs/trinityrnaseq-v2.12.0\"\ntrinity=${trinity_dir}/Trinity\n\n\n# Programs associative array\ndeclare -A programs_array\nprograms_array=(\n[samtools_faidx]=\"${samtools} faidx\" \\\n[samtools_index]=\"${samtools} index\" \\\n[samtools_sort]=\"${samtools} sort\" \\\n[samtools_view]=\"${samtools} view\" \\\n[trinity]=\"${trinity}\"\n)\n\n###################################################################################\n\n# Exit script if a command fails\nset -e\n\n# Load Python Mox module for Python module availability\nmodule load intel-python3_2017\n\n\n\n# Create list of fastq files used in analysis\n## Uses parameter substitution to strip leading path from filename\nfor fastq in \"${!R1_array[@]}\"\ndo\n  {\n    md5sum \"${R1_array[${fastq}]}\"\n    md5sum \"${R2_array[${fastq}]}\"\n  } >> input_fastqs.md5\ndone\n\n# Create comma-separated lists of FastQ reads\nR1_list=$(echo \"${R1_array[@]}\" | tr \" \" \",\")\nR2_list=$(echo \"${R2_array[@]}\" | tr \" \" \",\")\n\n\n# Run Trinity\n## Running as \"stranded\" (--SS_lib_type)\n${programs_array[trinity]} \\\n--seqType fq \\\n--SS_lib_type RF \\\n--max_memory ${max_mem} \\\n--CPU ${threads} \\\n--left \"${R1_list}\" \\\n--right \"${R2_list}\"\n\n# Rename generic assembly FastA\nfind . -name \"Trinity*.fasta\" -exec mv {} trinity_out_dir/\"${fasta_name}\" \\;\n\n# Assembly stats\n${trinity_dir}/util/TrinityStats.pl trinity_out_dir/\"${fasta_name}\" \\\n> ${assembly_stats}\n\n# Create gene map files\n${trinity_dir}/util/support_scripts/get_Trinity_gene_to_trans_map.pl \\\ntrinity_out_dir/\"${fasta_name}\" \\\n> \"${fasta_name}\".gene_trans_map\n\n# Create sequence lengths file (used for differential gene expression)\n${trinity_dir}/util/misc/fasta_seq_length.pl \\\ntrinity_out_dir/\"${fasta_name}\" \\\n> \"${fasta_name}\".seq_lens\n\n# Move FastA to working directory\nmv trinity_out_dir/\"${fasta_name}\" .\n\n# Create FastA index\n${programs_array[samtools_faidx]} \\\n\"${fasta_name}\"\n\n# Copy files to transcriptome directory\nmkdir --parents \"${transcriptomes_dir}\"\nrsync -av \\\n\"${fasta_name}\"* \\\n\"${transcriptomes_dir}\"\n\n# Cleanup\nrm -rf trinity_out_dir\n\n# Generate MD5 checksums\nfor file in *\ndo\n  echo \"\"\n  echo \"Generating MD5 checksums for ${file}:\"\n  md5sum \"${file}\" | tee --append checksums.md5\n  echo \"\"\ndone\n\n\n#######################################################################################################\n\n# Disable exit on error\nset +e\n\n# Capture program options\nif [[ \"${#programs_array[@]}\" -gt 0 ]]; then\n  echo \"Logging program options...\"\n  for program in \"${!programs_array[@]}\"\n  do\n    {\n    echo \"Program options for ${program}: \"\n    echo \"\"\n    # Handle samtools help menus\n    if [[ \"${program}\" == \"samtools_index\" ]] \\\n    || [[ \"${program}\" == \"samtools_sort\" ]] \\\n    || [[ \"${program}\" == \"samtools_view\" ]]\n    then\n      ${programs_array[$program]}\n\n    # Handle DIAMOND BLAST menu\n    elif [[ \"${program}\" == \"diamond\" ]]; then\n      ${programs_array[$program]} help\n\n    # Handle NCBI BLASTx menu\n    elif [[ \"${program}\" == \"blastx\" ]]; then\n      ${programs_array[$program]} -help\n\n    # Handle fastp menu\n    elif [[ \"${program}\" == \"fastp\" ]]; then\n      ${programs_array[$program]} --help\n    fi\n    ${programs_array[$program]} -h\n    echo \"\"\n    echo \"\"\n    echo \"----------------------------------------------\"\n    echo \"\"\n    echo \"\"\n  } &>> program_options.log || true\n\n    # If MultiQC is in programs_array, copy the config file to this directory.\n    if [[ \"${program}\" == \"multiqc\" ]]; then\n      cp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n    fi\n  done\nfi\n\n\n# Document programs in PATH (primarily for program version ID)\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n```\n\n---\n\n# RESULTS\n\nRun time was ~20hrs:\n\n![Screencap of Trinity runtime on Mox showing a run time of 20hrs, 12mins, 57secs](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20230616-lsta-trinity-RNAseq-runtime.png?raw=true)\n\nOutput folder:\n\n- [20230616-lsta-trinity-RNAseq/](https://gannet.fish.washington.edu/Atumefaciens/20230616-lsta-trinity-RNAseq/)\n\n  #### Transcriptome FastA\n\n  - [lsta-de_novo-transcriptome_v1.0.fasta](https://gannet.fish.washington.edu/Atumefaciens/20230616-lsta-trinity-RNAseq/lsta-de_novo-transcriptome_v1.0.fasta) (360M)\n\n    - MD5: `1b5029cd4dbd5ff55bcf81c8dd62f236`\n\n  #### FastA Index (text)\n  - [lsta-de_novo-transcriptome_v1.0.fasta.fai](https://gannet.fish.washington.edu/Atumefaciens/20230616-lsta-trinity-RNAseq/lsta-de_novo-transcriptome_v1.0.fasta.fai) (30M)\n\n    - MD5: `72a57424bd9f93fbca20abca48cdc4fb`\n\n  #### Trinity gene-to-transcript map (text)\n  - [lsta-de_novo-transcriptome_v1.0.fasta.gene_trans_map](https://gannet.fish.washington.edu/Atumefaciens/20230616-lsta-trinity-RNAseq/lsta-de_novo-transcriptome_v1.0.fasta.gene_trans_map) (30M)\n\n    - MD5: `0ee5004626d3b7f4cb8baabf859b6208`\n\n  #### Trinity sequence lengths file (text)\n\n  This is useful for other Trinity-related downstream tools (e.g. Transdecoder and Trinotate\n  )\n  - [lsta-de_novo-transcriptome_v1.0.fasta.seq_lens](https://gannet.fish.washington.edu/Atumefaciens/20230616-lsta-trinity-RNAseq/lsta-de_novo-transcriptome_v1.0.fasta.seq_lens) (19M)\n\n    - MD5: `703959bd01bd2b948d800c51a2bc684c`\n\n  #### Trinity assembly stats (text)\n  - [lsta-de_novo-transcriptome_v1.0.fasta_assembly_stats.txt](https://gannet.fish.washington.edu/Atumefaciens/20230616-lsta-trinity-RNAseq/lsta-de_novo-transcriptome_v1.0.fasta_assembly_stats.txt) (4.0K)\n\n    - MD5: `bf44012682dee5edf5c27ca5cb738960`\n\n```\n################################\n## Counts of transcripts, etc.\n################################\nTotal trinity 'genes':\t502826\nTotal trinity transcripts:\t645444\nPercent GC: 36.80\n\n########################################\nStats based on ALL transcript contigs:\n########################################\n\n\tContig N10: 3398\n\tContig N20: 2073\n\tContig N30: 1301\n\tContig N40: 862\n\tContig N50: 609\n\n\tMedian contig length: 319\n\tAverage contig: 516.94\n\tTotal assembled bases: 333658646\n\n\n#####################################################\n## Stats based on ONLY LONGEST ISOFORM per 'GENE':\n#####################################################\n\n\tContig N10: 2495\n\tContig N20: 1337\n\tContig N30: 829\n\tContig N40: 588\n\tContig N50: 455\n\n\tMedian contig length: 300\n\tAverage contig: 439.38\n\tTotal assembled bases: 220929754\n```\n\nWell, there are very large numbers of \"genes\" and transcripts! I'm not sure I've seen such high numbers in a transcriptome assembly before. I expect the numbers to be large (100,000 - 300,000 is somewhat normal), but no this large. I'm wondering if this is due to the limited data set used for assembly. The assembly was generated with just one set of paired-end reads. This could lead to a _lot_ of reads that don't end up aligning with anything. It also increases the likelihood of picking up lots of lowly expressed transcripts which normally are missed when there's an overwhelming amount of data present for assembly.\n\nI'll go ahead and run this assembly through [Transdecoder](https://github.com/TransDecoder/TransDecoder/wiki) to identify open reading frames and try to get a better idea of which contigs are potentially \"functional.\" Could provide a more \"realistic\" set of genes for use (in whatever this project is; I haven't been given much background info on this).\n\n","srcMarkdownNoYaml":"\nAs part of [this GitHub Issue to create a _de novo_ transcriptome assembly](https://github.com/RobertsLab/resources/issues/1655) from _L.staminea_ RNA-seq data, I [trimmed the reads earlier today](https://robertslab.github.io/sams-notebook/posts/2023/2023-06-16-Trimming---L.staminea-RNA-seq-Using-FastQC-fastp-and-MultiQC-on-Mox/). Next up is the actual _do novo_ assembly. I performed this using [`Trinity`](https://github.com/trinityrnaseq/trinityrnaseq/wiki) on Mox.\n\nSLURM script (GitHub):\n\n- [20230616-lsta-trinity-RNAseq.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20230616-lsta-trinity-RNAseq.sh)\n\n```bash\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=20230616-lsta-trinity-RNAseq\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=10-00:00:00\n## Memory per node\n#SBATCH --mem=500G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20230616-lsta-trinity-RNAseq\n\n\n### Expects input FastQs to be in following format: *_R[12]_001.fastp-trim.20230616.fastq.gz \n\n\n###################################################################################\n# These variables need to be set by user\n\n## Assign Variables\n\n# These variables need to be set by user\n\n# RNAseq FastQs directory\nreads_dir=/gscratch/scrubbed/samwhite/outputs/20230616-lsta-fastqc-fastp-multiqc-RNAseq/trimmed\n\n# Set FastQ filename patterns\nfastq_pattern='*.fastq.gz'\nR1_fastq_pattern='*_R1_*.fastq.gz'\nR2_fastq_pattern='*_R2_*.fastq.gz'\n\n# Inititalize arrays\n# Leave empty!!\nR1_array=()\nR2_array=()\n\n# Variables for R1/R2 lists\n# Leave empty!!!\nR1_list=\"\"\nR2_list=\"\"\n\n\n\n# Create array of fastq R1 files\n# Set filename pattern\nR1_array=(\"${reads_dir}\"/${R1_fastq_pattern})\n\n# Create array of fastq R2 files\n# Set filename pattern\nR2_array=(\"${reads_dir}\"/${R2_fastq_pattern})\n\n# Transcriptomes directory\ntranscriptomes_dir=/gscratch/srlab/sam/data/L_staminea/transcriptomes\n\n# CPU threads\nthreads=40\n\n# Recommended maximum memory is 100GB, per Trinity developer\nmax_mem=100G\n\n# Name output files\nfasta_name=\"lsta-de_novo-transcriptome_v1.0.fasta\"\nassembly_stats=\"${fasta_name}_assembly_stats.txt\"\n\n# Paths to programs\nsamtools=\"/gscratch/srlab/programs/samtools-1.10/samtools\"\ntrinity_dir=\"/gscratch/srlab/programs/trinityrnaseq-v2.12.0\"\ntrinity=${trinity_dir}/Trinity\n\n\n# Programs associative array\ndeclare -A programs_array\nprograms_array=(\n[samtools_faidx]=\"${samtools} faidx\" \\\n[samtools_index]=\"${samtools} index\" \\\n[samtools_sort]=\"${samtools} sort\" \\\n[samtools_view]=\"${samtools} view\" \\\n[trinity]=\"${trinity}\"\n)\n\n###################################################################################\n\n# Exit script if a command fails\nset -e\n\n# Load Python Mox module for Python module availability\nmodule load intel-python3_2017\n\n\n\n# Create list of fastq files used in analysis\n## Uses parameter substitution to strip leading path from filename\nfor fastq in \"${!R1_array[@]}\"\ndo\n  {\n    md5sum \"${R1_array[${fastq}]}\"\n    md5sum \"${R2_array[${fastq}]}\"\n  } >> input_fastqs.md5\ndone\n\n# Create comma-separated lists of FastQ reads\nR1_list=$(echo \"${R1_array[@]}\" | tr \" \" \",\")\nR2_list=$(echo \"${R2_array[@]}\" | tr \" \" \",\")\n\n\n# Run Trinity\n## Running as \"stranded\" (--SS_lib_type)\n${programs_array[trinity]} \\\n--seqType fq \\\n--SS_lib_type RF \\\n--max_memory ${max_mem} \\\n--CPU ${threads} \\\n--left \"${R1_list}\" \\\n--right \"${R2_list}\"\n\n# Rename generic assembly FastA\nfind . -name \"Trinity*.fasta\" -exec mv {} trinity_out_dir/\"${fasta_name}\" \\;\n\n# Assembly stats\n${trinity_dir}/util/TrinityStats.pl trinity_out_dir/\"${fasta_name}\" \\\n> ${assembly_stats}\n\n# Create gene map files\n${trinity_dir}/util/support_scripts/get_Trinity_gene_to_trans_map.pl \\\ntrinity_out_dir/\"${fasta_name}\" \\\n> \"${fasta_name}\".gene_trans_map\n\n# Create sequence lengths file (used for differential gene expression)\n${trinity_dir}/util/misc/fasta_seq_length.pl \\\ntrinity_out_dir/\"${fasta_name}\" \\\n> \"${fasta_name}\".seq_lens\n\n# Move FastA to working directory\nmv trinity_out_dir/\"${fasta_name}\" .\n\n# Create FastA index\n${programs_array[samtools_faidx]} \\\n\"${fasta_name}\"\n\n# Copy files to transcriptome directory\nmkdir --parents \"${transcriptomes_dir}\"\nrsync -av \\\n\"${fasta_name}\"* \\\n\"${transcriptomes_dir}\"\n\n# Cleanup\nrm -rf trinity_out_dir\n\n# Generate MD5 checksums\nfor file in *\ndo\n  echo \"\"\n  echo \"Generating MD5 checksums for ${file}:\"\n  md5sum \"${file}\" | tee --append checksums.md5\n  echo \"\"\ndone\n\n\n#######################################################################################################\n\n# Disable exit on error\nset +e\n\n# Capture program options\nif [[ \"${#programs_array[@]}\" -gt 0 ]]; then\n  echo \"Logging program options...\"\n  for program in \"${!programs_array[@]}\"\n  do\n    {\n    echo \"Program options for ${program}: \"\n    echo \"\"\n    # Handle samtools help menus\n    if [[ \"${program}\" == \"samtools_index\" ]] \\\n    || [[ \"${program}\" == \"samtools_sort\" ]] \\\n    || [[ \"${program}\" == \"samtools_view\" ]]\n    then\n      ${programs_array[$program]}\n\n    # Handle DIAMOND BLAST menu\n    elif [[ \"${program}\" == \"diamond\" ]]; then\n      ${programs_array[$program]} help\n\n    # Handle NCBI BLASTx menu\n    elif [[ \"${program}\" == \"blastx\" ]]; then\n      ${programs_array[$program]} -help\n\n    # Handle fastp menu\n    elif [[ \"${program}\" == \"fastp\" ]]; then\n      ${programs_array[$program]} --help\n    fi\n    ${programs_array[$program]} -h\n    echo \"\"\n    echo \"\"\n    echo \"----------------------------------------------\"\n    echo \"\"\n    echo \"\"\n  } &>> program_options.log || true\n\n    # If MultiQC is in programs_array, copy the config file to this directory.\n    if [[ \"${program}\" == \"multiqc\" ]]; then\n      cp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n    fi\n  done\nfi\n\n\n# Document programs in PATH (primarily for program version ID)\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n```\n\n---\n\n# RESULTS\n\nRun time was ~20hrs:\n\n![Screencap of Trinity runtime on Mox showing a run time of 20hrs, 12mins, 57secs](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20230616-lsta-trinity-RNAseq-runtime.png?raw=true)\n\nOutput folder:\n\n- [20230616-lsta-trinity-RNAseq/](https://gannet.fish.washington.edu/Atumefaciens/20230616-lsta-trinity-RNAseq/)\n\n  #### Transcriptome FastA\n\n  - [lsta-de_novo-transcriptome_v1.0.fasta](https://gannet.fish.washington.edu/Atumefaciens/20230616-lsta-trinity-RNAseq/lsta-de_novo-transcriptome_v1.0.fasta) (360M)\n\n    - MD5: `1b5029cd4dbd5ff55bcf81c8dd62f236`\n\n  #### FastA Index (text)\n  - [lsta-de_novo-transcriptome_v1.0.fasta.fai](https://gannet.fish.washington.edu/Atumefaciens/20230616-lsta-trinity-RNAseq/lsta-de_novo-transcriptome_v1.0.fasta.fai) (30M)\n\n    - MD5: `72a57424bd9f93fbca20abca48cdc4fb`\n\n  #### Trinity gene-to-transcript map (text)\n  - [lsta-de_novo-transcriptome_v1.0.fasta.gene_trans_map](https://gannet.fish.washington.edu/Atumefaciens/20230616-lsta-trinity-RNAseq/lsta-de_novo-transcriptome_v1.0.fasta.gene_trans_map) (30M)\n\n    - MD5: `0ee5004626d3b7f4cb8baabf859b6208`\n\n  #### Trinity sequence lengths file (text)\n\n  This is useful for other Trinity-related downstream tools (e.g. Transdecoder and Trinotate\n  )\n  - [lsta-de_novo-transcriptome_v1.0.fasta.seq_lens](https://gannet.fish.washington.edu/Atumefaciens/20230616-lsta-trinity-RNAseq/lsta-de_novo-transcriptome_v1.0.fasta.seq_lens) (19M)\n\n    - MD5: `703959bd01bd2b948d800c51a2bc684c`\n\n  #### Trinity assembly stats (text)\n  - [lsta-de_novo-transcriptome_v1.0.fasta_assembly_stats.txt](https://gannet.fish.washington.edu/Atumefaciens/20230616-lsta-trinity-RNAseq/lsta-de_novo-transcriptome_v1.0.fasta_assembly_stats.txt) (4.0K)\n\n    - MD5: `bf44012682dee5edf5c27ca5cb738960`\n\n```\n################################\n## Counts of transcripts, etc.\n################################\nTotal trinity 'genes':\t502826\nTotal trinity transcripts:\t645444\nPercent GC: 36.80\n\n########################################\nStats based on ALL transcript contigs:\n########################################\n\n\tContig N10: 3398\n\tContig N20: 2073\n\tContig N30: 1301\n\tContig N40: 862\n\tContig N50: 609\n\n\tMedian contig length: 319\n\tAverage contig: 516.94\n\tTotal assembled bases: 333658646\n\n\n#####################################################\n## Stats based on ONLY LONGEST ISOFORM per 'GENE':\n#####################################################\n\n\tContig N10: 2495\n\tContig N20: 1337\n\tContig N30: 829\n\tContig N40: 588\n\tContig N50: 455\n\n\tMedian contig length: 300\n\tAverage contig: 439.38\n\tTotal assembled bases: 220929754\n```\n\nWell, there are very large numbers of \"genes\" and transcripts! I'm not sure I've seen such high numbers in a transcriptome assembly before. I expect the numbers to be large (100,000 - 300,000 is somewhat normal), but no this large. I'm wondering if this is due to the limited data set used for assembly. The assembly was generated with just one set of paired-end reads. This could lead to a _lot_ of reads that don't end up aligning with anything. It also increases the likelihood of picking up lots of lowly expressed transcripts which normally are missed when there's an overwhelming amount of data present for assembly.\n\nI'll go ahead and run this assembly through [Transdecoder](https://github.com/TransDecoder/TransDecoder/wiki) to identify open reading frames and try to get a better idea of which contigs are potentially \"functional.\" Could provide a more \"realistic\" set of genes for use (in whatever this project is; I haven't been given much background info on this).\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"Transcriptome Assembly - De Novo L.staminea Trimmed RNAseq Using Trinity on Mox","date":"2023-06-16 21:03","tags":["transcriptome assembly","RNAseq","mox","de novo","Leukoma staminea","trinity"],"categories":["2023","Miscellaneous"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}