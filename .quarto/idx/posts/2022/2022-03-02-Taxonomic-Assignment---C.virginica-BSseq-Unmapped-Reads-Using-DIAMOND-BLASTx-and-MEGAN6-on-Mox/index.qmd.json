{"title":"Taxonomic Assignment - C.virginica BSseq Unmapped Reads Using DIAMOND BLASTx and MEGAN6 on Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"Taxonomic Assignment - C.virginica BSseq Unmapped Reads Using DIAMOND BLASTx and MEGAN6 on Mox","date":"2022-03-02 11:50","tags":["MEGAN6","taxonomy","Crassostrea virginica","Eastern oyster","BSseq"],"categories":["2022","Miscellaneous"]},"headingText":"Job Name","containsRefs":false,"markdown":"\nAfter mapping bisulfite sequencing (BSseq) data to the [_Crassostrea virginica_ (Eastern oyster)](https://en.wikipedia.org/wiki/Eastern_oyster) genome, Steven noticed that there were a large number of unmapped reads. He asked [that I attempt to taxonomically claissify the unmapped reads](https://github.com/sr320/ceabigr/issues/22) (GitHub Issue), with the [idea that maybe these reads could provide additional data on an associated microbiome](https://github.com/sr320/ceabigr/discussions/11) (GitHub Discussion).\n\nTo handle this issue, I used [`DIAMOND`](https://github.com/bbuchfink/diamond) BLASTx, followed by the MEGAN6 tool `daa-meganizer` to prepare the output files for import in MEGAN6 to view taxonomic assignments. See the SBATCH script and the RESULTS section below for info on BLAST database and input FastQ files used, respectively. FastQ files were provided by Steven, so I don't have any info on how they were generated; although, I'm assuming they came from [`Bismark`](https://github.com/FelixKrueger/Bismark).\n\nOne side note on this process. In the past, I've opted to convert the output DAA files into RMA6 format instead of performing the \"meganization\" of the DAA files. The rationale for this was that when you import the DAA files into MEGAN6, they get converted to RMA6, so it seems reasonable to use a more powerful computer (e.g. Mox) to do this conversion. However, the developer indicates that this conversion via the `daa-rma` tool is slow and it is faster/more efficient to \"meganize\" the DAA files and import them into MEGAN6. So, that's why I've reverted back to just performing the \"meganization\" of the DAA files instead of converting directly to RMA6.\n\nSBATCH script (GitHub):\n\n- [20220302-cvir-diamond-meganizer-unmapped_bsseq.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20220302-cvir-diamond-meganizer-unmapped_bsseq.sh)\n\n```shell\n#!/bin/bash\n#SBATCH --job-name=20220302-cvir-diamond-meganizer-unmapped_bsseq\n## Allocation Definition\n#SBATCH --account=coenv\n#SBATCH --partition=coenv\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=3-12:00:00\n## Memory per node\n#SBATCH --mem=200G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20220302-cvir-diamond-meganizer-unmapped_bsseq\n\n## Perform DIAMOND BLASTx on unmapped C.virginica BSseq FastQ files.\n\n## Unmapped reads generated by Steven Roberts, per this GitHub Issue:\n## https://github.com/sr320/ceabigr/issues/22\n\n## Expects input FastQ files to be match this pattern: *unmapped_reads*.fq.gz\n\n\n###################################################################################\n# These variables need to be set by user\n\n## Assign Variables\n\n# Program paths\ndiamond=/gscratch/srlab/programs/diamond-0.9.29/diamond\nmeganizer=/gscratch/srlab/programs/MEGAN-6.22.0/tools/daa-meganizer\n\n# DIAMOND NCBI nr database\ndmnd_db=/gscratch/srlab/blastdbs/ncbi-nr-20190925/nr.dmnd\n\n# MEGAN mapping files\nmegan_mapping_dir=/gscratch/srlab/sam/data/databases/MEGAN\nprot_acc2tax=${megan_mapping_dir}/prot_acc2tax-Jul2019X1.abin\nacc2interpro=${megan_mapping_dir}/acc2interpro-Jul2019X.abin\nacc2eggnog=${megan_mapping_dir}/acc2eggnog-Jul2019X.abin\n\n# FastQ files directory\nfastq_dir=/gscratch/srlab/sam/data/C_virginica/BSseq\n\n# CPU threads\nthreads=40\n\n# Programs associative array\ndeclare -A programs_array\nprograms_array=(\n[diamond]=\"${diamond}\" \\\n[meganizer]=\"${meganizer}\"\n)\n\n###################################################################################################\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\nmodule load intel-python3_2017\n\n\n# Loop through FastQ files, log filenames to fastq_list.txt.\n# Run DIAMOND on each FastQ\nfor fastq in \"${fastq_dir}\"/*unmapped_reads*.fq.gz\ndo\n\t# Log input FastQs\n    echo \"\"\n    echo \"Generating MD5 checksum for ${fastq}...\"\n\tmd5sum \"${fastq}\" | tee --append input_fastqs.md5\n    echo \"\"\n\n\t# Strip leading path and extensions\n\tno_path=$(echo \"${fastq##*/}\")\n\tno_ext=$(echo \"${no_path%%.*}\")\n\n\t# Run DIAMOND with blastx\n\t# Output format 100 produces a DAA binary file for use with MEGAN\n\t\"${programs_array[diamond]}\" blastx \\\n\t--db ${dmnd_db} \\\n\t--query \"${fastq}\" \\\n\t--out \"${no_ext}\".blastx.meganized.daa \\\n\t--outfmt 100 \\\n\t--top 5 \\\n\t--block-size 15.0 \\\n\t--index-chunks 4 \\\n    --threads ${threads}\n\n    # Meganize DAA files\n    # Used for ability to import into MEGAN6\n    \"${programs_array[meganizer]}\" \\\n    --in \"${no_ext}\".blastx.meganized.daa \\\n    --threads ${threads} \\\n    --acc2taxa ${prot_acc2tax} \\\n    --acc2interpro2go ${acc2interpro} \\\n    --acc2eggnog ${acc2eggnog}\n\ndone\n\n# Generate MD5 checksums\nfor file in *\ndo\n  echo \"\"\n  echo \"Generating MD5 checksums for ${file}:\"\n  md5sum \"${file}\" | tee --append checksums.md5\n  echo \"\"\ndone\n\n#######################################################################################################\n\n# Capture program options\nif [[ \"${#programs_array[@]}\" -gt 0 ]]; then\n  echo \"Logging program options...\"\n  for program in \"${!programs_array[@]}\"\n  do\n    {\n    echo \"Program options for ${program}: \"\n    echo \"\"\n    # Handle samtools help menus\n    if [[ \"${program}\" == \"samtools_index\" ]] \\\n    || [[ \"${program}\" == \"samtools_sort\" ]] \\\n    || [[ \"${program}\" == \"samtools_view\" ]]\n    then\n      ${programs_array[$program]}\n\n    # Handle DIAMOND BLAST menu\n    elif [[ \"${program}\" == \"diamond\" ]]; then\n      ${programs_array[$program]} help\n\n    # Handle NCBI BLASTx menu\n    elif [[ \"${program}\" == \"blastx\" ]]; then\n      ${programs_array[$program]} -help\n    fi\n    ${programs_array[$program]} -h\n    echo \"\"\n    echo \"\"\n    echo \"----------------------------------------------\"\n    echo \"\"\n    echo \"\"\n  } &>> program_options.log || true\n\n    # If MultiQC is in programs_array, copy the config file to this directory.\n    if [[ \"${program}\" == \"multiqc\" ]]; then\n      cp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n    fi\n  done\n  echo \"Finished logging programs options.\"\n  echo \"\"\nfi\n\n\n# Document programs in PATH (primarily for program version ID)\necho \"Logging system $PATH...\"\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\necho \"Finished logging system $PATH.\"\n```\n\n---\n\n# RESULTS\n\nRun time was was ~3.25 days:\n\n![Run time of DIAMOND BLASTx and MEGAN6 daa-meganizer on Mox](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20220302-cvir-diamond-meganizer-unmapped_bsseq_runtime.png?raw=true)\n\nOutput folder:\n\n- [20220302-cvir-diamond-meganizer-unmapped_bsseq/](https://gannet.fish.washington.edu/Atumefaciens/20220302-cvir-diamond-meganizer-unmapped_bsseq/)\n\n  - #### Meganized DAA files:\n\n    - `*blastx.meganized.daa`\n\n    - These are all ~100MB.\n\n  - #### List of input FastQs and MD5 checksums (text)\n\n    - [20220302-cvir-diamond-meganizer-unmapped_bsseq/input_fastqs.md5](https://gannet.fish.washington.edu/Atumefaciens/20220302-cvir-diamond-meganizer-unmapped_bsseq/input_fastqs.md5)\n\n\nThese are now ready for import into MEGAN6 to view taxonomic distribution of reads.\n","srcMarkdownNoYaml":"\nAfter mapping bisulfite sequencing (BSseq) data to the [_Crassostrea virginica_ (Eastern oyster)](https://en.wikipedia.org/wiki/Eastern_oyster) genome, Steven noticed that there were a large number of unmapped reads. He asked [that I attempt to taxonomically claissify the unmapped reads](https://github.com/sr320/ceabigr/issues/22) (GitHub Issue), with the [idea that maybe these reads could provide additional data on an associated microbiome](https://github.com/sr320/ceabigr/discussions/11) (GitHub Discussion).\n\nTo handle this issue, I used [`DIAMOND`](https://github.com/bbuchfink/diamond) BLASTx, followed by the MEGAN6 tool `daa-meganizer` to prepare the output files for import in MEGAN6 to view taxonomic assignments. See the SBATCH script and the RESULTS section below for info on BLAST database and input FastQ files used, respectively. FastQ files were provided by Steven, so I don't have any info on how they were generated; although, I'm assuming they came from [`Bismark`](https://github.com/FelixKrueger/Bismark).\n\nOne side note on this process. In the past, I've opted to convert the output DAA files into RMA6 format instead of performing the \"meganization\" of the DAA files. The rationale for this was that when you import the DAA files into MEGAN6, they get converted to RMA6, so it seems reasonable to use a more powerful computer (e.g. Mox) to do this conversion. However, the developer indicates that this conversion via the `daa-rma` tool is slow and it is faster/more efficient to \"meganize\" the DAA files and import them into MEGAN6. So, that's why I've reverted back to just performing the \"meganization\" of the DAA files instead of converting directly to RMA6.\n\nSBATCH script (GitHub):\n\n- [20220302-cvir-diamond-meganizer-unmapped_bsseq.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20220302-cvir-diamond-meganizer-unmapped_bsseq.sh)\n\n```shell\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=20220302-cvir-diamond-meganizer-unmapped_bsseq\n## Allocation Definition\n#SBATCH --account=coenv\n#SBATCH --partition=coenv\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=3-12:00:00\n## Memory per node\n#SBATCH --mem=200G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20220302-cvir-diamond-meganizer-unmapped_bsseq\n\n## Perform DIAMOND BLASTx on unmapped C.virginica BSseq FastQ files.\n\n## Unmapped reads generated by Steven Roberts, per this GitHub Issue:\n## https://github.com/sr320/ceabigr/issues/22\n\n## Expects input FastQ files to be match this pattern: *unmapped_reads*.fq.gz\n\n\n###################################################################################\n# These variables need to be set by user\n\n## Assign Variables\n\n# Program paths\ndiamond=/gscratch/srlab/programs/diamond-0.9.29/diamond\nmeganizer=/gscratch/srlab/programs/MEGAN-6.22.0/tools/daa-meganizer\n\n# DIAMOND NCBI nr database\ndmnd_db=/gscratch/srlab/blastdbs/ncbi-nr-20190925/nr.dmnd\n\n# MEGAN mapping files\nmegan_mapping_dir=/gscratch/srlab/sam/data/databases/MEGAN\nprot_acc2tax=${megan_mapping_dir}/prot_acc2tax-Jul2019X1.abin\nacc2interpro=${megan_mapping_dir}/acc2interpro-Jul2019X.abin\nacc2eggnog=${megan_mapping_dir}/acc2eggnog-Jul2019X.abin\n\n# FastQ files directory\nfastq_dir=/gscratch/srlab/sam/data/C_virginica/BSseq\n\n# CPU threads\nthreads=40\n\n# Programs associative array\ndeclare -A programs_array\nprograms_array=(\n[diamond]=\"${diamond}\" \\\n[meganizer]=\"${meganizer}\"\n)\n\n###################################################################################################\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\nmodule load intel-python3_2017\n\n\n# Loop through FastQ files, log filenames to fastq_list.txt.\n# Run DIAMOND on each FastQ\nfor fastq in \"${fastq_dir}\"/*unmapped_reads*.fq.gz\ndo\n\t# Log input FastQs\n    echo \"\"\n    echo \"Generating MD5 checksum for ${fastq}...\"\n\tmd5sum \"${fastq}\" | tee --append input_fastqs.md5\n    echo \"\"\n\n\t# Strip leading path and extensions\n\tno_path=$(echo \"${fastq##*/}\")\n\tno_ext=$(echo \"${no_path%%.*}\")\n\n\t# Run DIAMOND with blastx\n\t# Output format 100 produces a DAA binary file for use with MEGAN\n\t\"${programs_array[diamond]}\" blastx \\\n\t--db ${dmnd_db} \\\n\t--query \"${fastq}\" \\\n\t--out \"${no_ext}\".blastx.meganized.daa \\\n\t--outfmt 100 \\\n\t--top 5 \\\n\t--block-size 15.0 \\\n\t--index-chunks 4 \\\n    --threads ${threads}\n\n    # Meganize DAA files\n    # Used for ability to import into MEGAN6\n    \"${programs_array[meganizer]}\" \\\n    --in \"${no_ext}\".blastx.meganized.daa \\\n    --threads ${threads} \\\n    --acc2taxa ${prot_acc2tax} \\\n    --acc2interpro2go ${acc2interpro} \\\n    --acc2eggnog ${acc2eggnog}\n\ndone\n\n# Generate MD5 checksums\nfor file in *\ndo\n  echo \"\"\n  echo \"Generating MD5 checksums for ${file}:\"\n  md5sum \"${file}\" | tee --append checksums.md5\n  echo \"\"\ndone\n\n#######################################################################################################\n\n# Capture program options\nif [[ \"${#programs_array[@]}\" -gt 0 ]]; then\n  echo \"Logging program options...\"\n  for program in \"${!programs_array[@]}\"\n  do\n    {\n    echo \"Program options for ${program}: \"\n    echo \"\"\n    # Handle samtools help menus\n    if [[ \"${program}\" == \"samtools_index\" ]] \\\n    || [[ \"${program}\" == \"samtools_sort\" ]] \\\n    || [[ \"${program}\" == \"samtools_view\" ]]\n    then\n      ${programs_array[$program]}\n\n    # Handle DIAMOND BLAST menu\n    elif [[ \"${program}\" == \"diamond\" ]]; then\n      ${programs_array[$program]} help\n\n    # Handle NCBI BLASTx menu\n    elif [[ \"${program}\" == \"blastx\" ]]; then\n      ${programs_array[$program]} -help\n    fi\n    ${programs_array[$program]} -h\n    echo \"\"\n    echo \"\"\n    echo \"----------------------------------------------\"\n    echo \"\"\n    echo \"\"\n  } &>> program_options.log || true\n\n    # If MultiQC is in programs_array, copy the config file to this directory.\n    if [[ \"${program}\" == \"multiqc\" ]]; then\n      cp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n    fi\n  done\n  echo \"Finished logging programs options.\"\n  echo \"\"\nfi\n\n\n# Document programs in PATH (primarily for program version ID)\necho \"Logging system $PATH...\"\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\necho \"Finished logging system $PATH.\"\n```\n\n---\n\n# RESULTS\n\nRun time was was ~3.25 days:\n\n![Run time of DIAMOND BLASTx and MEGAN6 daa-meganizer on Mox](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20220302-cvir-diamond-meganizer-unmapped_bsseq_runtime.png?raw=true)\n\nOutput folder:\n\n- [20220302-cvir-diamond-meganizer-unmapped_bsseq/](https://gannet.fish.washington.edu/Atumefaciens/20220302-cvir-diamond-meganizer-unmapped_bsseq/)\n\n  - #### Meganized DAA files:\n\n    - `*blastx.meganized.daa`\n\n    - These are all ~100MB.\n\n  - #### List of input FastQs and MD5 checksums (text)\n\n    - [20220302-cvir-diamond-meganizer-unmapped_bsseq/input_fastqs.md5](https://gannet.fish.washington.edu/Atumefaciens/20220302-cvir-diamond-meganizer-unmapped_bsseq/input_fastqs.md5)\n\n\nThese are now ready for import into MEGAN6 to view taxonomic distribution of reads.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"Taxonomic Assignment - C.virginica BSseq Unmapped Reads Using DIAMOND BLASTx and MEGAN6 on Mox","date":"2022-03-02 11:50","tags":["MEGAN6","taxonomy","Crassostrea virginica","Eastern oyster","BSseq"],"categories":["2022","Miscellaneous"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}