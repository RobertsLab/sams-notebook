{"title":"RNAseq Alignment - C.virginica Adult OA Gonad Data to GCF_002022765.2 Genome Using HISAT2 on Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"RNAseq Alignment - C.virginica Adult OA Gonad Data to GCF_002022765.2 Genome Using HISAT2 on Mox","date":"2022-01-31 13:35","categories":["HISAT2","Crassostrea virginica","RNAseq","Mox","Eastern oyster ","2022","Miscellaneous"]},"headingText":"Job Name","containsRefs":false,"markdown":"\nAs part of this project epigeneticstoocean/2018_L18-adult-methylation (private GitHub repo), Steven's asked that [I identify long, non-coding RNAs (lncRNAs)](https://github.com/RobertsLab/resources/issues/1375) (GitHub Issue) in the [_Crassostrea virginica_ (Eastern oyster)](https://en.wikipedia.org/wiki/Eastern_oyster) adult OA gonad RNAseq data we have. The initial step for this is to assemble transcriptome. Since there is a [published genome (NCBI RefSeq GCF_002022765.2_C_virginica-3.0)](https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/002/022/765/GCF_002022765.2_C_virginica-3.0/) for [_Crassostrea virginica_ (Eastern oyster)](https://en.wikipedia.org/wiki/Eastern_oyster), I will perform a genome-guided assembly using [`Trinity`](https://github.com/trinityrnaseq/trinityrnaseq/wiki). That process requires a sorted BAM file as input. In order to generate that file, I used [`HISAT2`](https://daehwankimlab.github.io/hisat2/). I've already generated the necessary [`HISAT2`](https://daehwankimlab.github.io/hisat2/) genome index files ([as of 20210720](../../2021/2021-07-20-Genome-Annotations---Splice-Site-and-Exon-Extractions-for-C.virginica-GCF_002022765.2-Genome-Using-Hisat2-on-Mox/index.qmd)), which also identified/incorporated splice sites and exons, which the [`HISAT2`](https://daehwankimlab.github.io/hisat2/) alignment process requires to run.\n\n[`fastp`](https://github.com/OpenGene/fastp)-trimmed RNAseq data from [20210714](../../2021/2021-07-14-Trimming---C.virginica-Gonad-RNAseq-with-FastP-on-Mox/index.qmd) was used.\n\nThe [`HISAT2`](https://daehwankimlab.github.io/hisat2/) alignment job was run on Mox.\n\n\nSBATCH script (GitHub):\n\n- [20220131_cvir_hisat2-GCF_002022765.2_adult-oa-gonad.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20220131_cvir_hisat2-GCF_002022765.2_adult-oa-gonad.sh)\n\n```shell\n#!/bin/bash\n#SBATCH --job-name=20220131_cvir_hisat2-GCF_002022765.2_adult-oa-gonad\n## Allocation Definition\n#SBATCH --account=coenv\n#SBATCH --partition=coenv\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=5-00:00:00\n## Memory per node\n#SBATCH --mem=200G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20220131_cvir_hisat2-GCF_002022765.2_adult-oa-gonad\n\n## Hisat2 alignment of C.virginica adult OA gonad RNAseq to NCBI C.virginica genome assembly\n## using HiSat2 index generated on 20210720.\n\n## Expects FastQ input filenames to match *fastp-trim.20210714.fq.gz\n\n\n###################################################################################\n# These variables need to be set by user\n\n## Assign Variables\n\n# Set number of CPUs to use\nthreads=40\n\n# Index name for Hisat2 use\n# Needs to match index naem used in previous Hisat2 indexing step\ngenome_index_name=\"cvir_GCF_002022765.2\"\n\n# Set output filename\nsample_name=\"20210131-cvir-hisat2\"\n\n# Paths to programs\nhisat2_dir=\"/gscratch/srlab/programs/hisat2-2.1.0\"\nhisat2=\"${hisat2_dir}/hisat2\"\nsamtools=\"/gscratch/srlab/programs/samtools-1.10/samtools\"\n\n\n# Input/output files\ngenome_index_dir=\"/gscratch/srlab/sam/data/C_virginica/genomes\"\nfastq_dir=\"/gscratch/srlab/sam/data/C_virginica/RNAseq/\"\n\n\n# Programs associative array\ndeclare -A programs_array\nprograms_array=(\n[hisat2]=\"${hisat2}\" \\\n[samtools_index]=\"${samtools} index\" \\\n[samtools_sort]=\"${samtools} sort\" \\\n[samtools_view]=\"${samtools} view\"\n)\n\n\n###################################################################################################\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n## Inititalize arrays\nfastq_array_R1=()\nfastq_array_R2=()\n\n# Copy Hisat2 genome index files\nrsync -av \"${genome_index_dir}\"/${genome_index_name}*.ht2 .\n\n# Create array of fastq R1 files\n# and generate MD5 checksums file.\nfor fastq in \"${fastq_dir}\"*fastp-trim.20210714.fq.gz\ndo\n  fastq_array_R1+=(\"${fastq}\")\n  echo \"Generating checksum for ${fastq}...\"\n  md5sum \"${fastq}\" >> input_fastqs_checksums.md5\n  echo \"Checksum for ${fastq} completed.\"\n  echo \"\"\ndone\n\n# Create array of fastq R2 files\n# and append to MD5 checksums file.\nfor fastq in \"${fastq_dir}\"*fastp-trim.20210714.fq.gz\ndo\n  fastq_array_R2+=(\"${fastq}\")\n  echo \"Generating checksum for ${fastq}...\"\n  md5sum \"${fastq}\" >> input_fastqs_checksums.md5\n  echo \"Checksum for ${fastq} completed.\"\n  echo \"\"\ndone\n\n# Create comma-separated lists of FastQs for Hisat2\nprintf -v joined_R1 '%s,' \"${fastq_array_R1[@]}\"\nfastq_list_R1=$(echo \"${joined_R1%,}\")\n\nprintf -v joined_R2 '%s,' \"${fastq_array_R2[@]}\"\nfastq_list_R2=$(echo \"${joined_R2%,}\")\n\n\n# Hisat2 alignments\n\"${programs_array[hisat2]}\" \\\n-x \"${genome_index_name}\" \\\n-1 \"${fastq_list_R1}\" \\\n-2 \"${fastq_list_R2}\" \\\n-S \"${sample_name}\".sam \\\n2> \"${sample_name}\"_hisat2.err\n\n# Sort SAM files, convert to BAM, and index\n${programs_array[samtools_view]} \\\n-@ \"${threads}\" \\\n-Su \"${sample_name}\".sam \\\n| ${programs_array[samtools_sort]} - \\\n-@ \"${threads}\" \\\n-o \"${sample_name}\".sorted.bam\n${programs_array[samtools_index]} \"${sample_name}\".sorted.bam\n\n\n# Delete unneccessary index files\nrm \"${genome_index_name}\"*.ht2\n\n# Delete unneded SAM files\nrm ./*.sam\n\n# Generate checksums\nfor file in *\ndo\n  md5sum \"${file}\" >> checksums.md5\ndone\n\n#######################################################################################################\n\n# Capture program options\nif [[ \"${#programs_array[@]}\" -gt 0 ]]; then\n  echo \"Logging program options...\"\n  for program in \"${!programs_array[@]}\"\n  do\n    {\n    echo \"Program options for ${program}: \"\n    echo \"\"\n    # Handle samtools help menus\n    if [[ \"${program}\" == \"samtools_index\" ]] \\\n    || [[ \"${program}\" == \"samtools_sort\" ]] \\\n    || [[ \"${program}\" == \"samtools_view\" ]]\n    then\n      ${programs_array[$program]}\n\n    # Handle DIAMOND BLAST menu\n    elif [[ \"${program}\" == \"diamond\" ]]; then\n      ${programs_array[$program]} help\n\n    # Handle NCBI BLASTx menu\n    elif [[ \"${program}\" == \"blastx\" ]]; then\n      ${programs_array[$program]} -help\n    fi\n    ${programs_array[$program]} -h\n    echo \"\"\n    echo \"\"\n    echo \"----------------------------------------------\"\n    echo \"\"\n    echo \"\"\n  } &>> program_options.log || true\n\n    # If MultiQC is in programs_array, copy the config file to this directory.\n    if [[ \"${program}\" == \"multiqc\" ]]; then\n      cp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n    fi\n  done\nfi\n\n\n# Document programs in PATH (primarily for program version ID)\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n```\n\n---\n\n# RESULTS\n\nRuntime was ~6 days, 7hrs:\n\n![HISAT2 runtime for C.virginica adult gonad OA exposed RNAseq on Mox](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20220131_cvir_hisat2-GCF_002022765.2_adult-oa-gonad_runtime.png?raw=true)\n\nOutput folder:\n\n- [20220131_cvir_hisat2-GCF_002022765.2_adult-oa-gonad/](https://gannet.fish.washington.edu/Atumefaciens/20220131_cvir_hisat2-GCF_002022765.2_adult-oa-gonad/)\n\n  - BAM alignment file and corresponding BAM index file (useful for IGV):\n\n    - [20210131-cvir-hisat2.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20220131_cvir_hisat2-GCF_002022765.2_adult-oa-gonad/20210131-cvir-hisat2.sorted.bam) (99G)\n\n      - MD5: `8cbd5bb64759411927de6a46785b28d6`\n\n    - [20210131-cvir-hisat2.sorted.bam.bai](https://gannet.fish.washington.edu/Atumefaciens/20220131_cvir_hisat2-GCF_002022765.2_adult-oa-gonad/20210131-cvir-hisat2.sorted.bam.bai) (38M)\n\n      - MD5: `92c6e7d6106ffc91ab9a5cb420376783`\n\n  - List of input FASTQ files (and corresponding MD5 checksums)\n\n    - [input_fastqs_checksums.md5](https://gannet.fish.washington.edu/Atumefaciens/20220131_cvir_hisat2-GCF_002022765.2_adult-oa-gonad/input_fastqs_checksums.md5) (128K)\n\n\n  - Standard error output (text; alignment stats):\n\n    - [20220131_cvir_hisat2-GCF_002022765.2_adult-oa-gonad/20210131-cvir-hisat2_hisat2.err](https://gannet.fish.washington.edu/Atumefaciens/20220131_cvir_hisat2-GCF_002022765.2_adult-oa-gonad/20210131-cvir-hisat2_hisat2.err)\n\n    ```\n    1355938330 reads; of these:\n    1355938330 (100.00%) were paired; of these:\n      1342685071 (99.02%) aligned concordantly 0 times\n      81131 (0.01%) aligned concordantly exactly 1 time\n      13172128 (0.97%) aligned concordantly >1 times\n      ----\n      1342685071 pairs aligned concordantly 0 times; of these:\n        585339805 (43.59%) aligned discordantly 1 time\n      ----\n      757345266 pairs aligned 0 times concordantly or discordantly; of these:\n        1514690532 mates make up the pairs; of these:\n          879327626 (58.05%) aligned 0 times\n          346977576 (22.91%) aligned exactly 1 time\n          288385330 (19.04%) aligned >1 times\n    67.57% overall alignment rate\n    ```\n\n\nThe overall alignment rate was surprisingly low. For a good set of RNAseq, I'd fully expect >80% of reads to align. I revisted the [`fastp` trimming performed on 20210714](../../2021/2021-07-14-Trimming---C.virginica-Gonad-RNAseq-with-FastP-on-Mox/index.qmd) and confirmed that paired-end adaptor trimming was enabled. Additionally, the [MultiQC report from the trimming](https://gannet.fish.washington.edu/Atumefaciens/20210714_cvir_gonad_RNAseq_fastp_trimming/multiqc_report/) shows that the post-trim read quality is good; nothing to be concerned about. Those two variables would've been the easiest things to explain a low alignment rate like this, but they don't seem to be the cause. With that being the case, I'm wondering if there's a lot of residual rRNA in the samples (which wouldn't map due to their highly repetetive nature and the fact that they would end up being mapped to multiple locations throughout the genome - leading them to be discarded when mapping).\n\nAfter looking into this a bit futher, I'm wondering if [ZymoResearch's modified rRNA removal technique](https://github.com/RobertsLab/project-oyster-comparative-omics/blob/master/metadata/RNA-Seq%20Synopsis_Venkataraman_zr4059.pdf) (PDF of Zymo project summary) still doesn't work for shellfish rRNA (like other kits)... In the future, we should remember to specifically request polyA selection as the means for mRNA enrichment. It's not a huge deal, as we still have a ton of RNAseq data, but it's still a shame that a lot of the sequencing data may have ended up just capturing rRNA...\n\nAlignments completed. Next up is to perform a genome-guided transcriptome assembly using the BAM file generated by [`HISAT2`](https://daehwankimlab.github.io/hisat2/) with [`Trinity`](https://github.com/trinityrnaseq/trinityrnaseq/wiki).\n","srcMarkdownNoYaml":"\nAs part of this project epigeneticstoocean/2018_L18-adult-methylation (private GitHub repo), Steven's asked that [I identify long, non-coding RNAs (lncRNAs)](https://github.com/RobertsLab/resources/issues/1375) (GitHub Issue) in the [_Crassostrea virginica_ (Eastern oyster)](https://en.wikipedia.org/wiki/Eastern_oyster) adult OA gonad RNAseq data we have. The initial step for this is to assemble transcriptome. Since there is a [published genome (NCBI RefSeq GCF_002022765.2_C_virginica-3.0)](https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/002/022/765/GCF_002022765.2_C_virginica-3.0/) for [_Crassostrea virginica_ (Eastern oyster)](https://en.wikipedia.org/wiki/Eastern_oyster), I will perform a genome-guided assembly using [`Trinity`](https://github.com/trinityrnaseq/trinityrnaseq/wiki). That process requires a sorted BAM file as input. In order to generate that file, I used [`HISAT2`](https://daehwankimlab.github.io/hisat2/). I've already generated the necessary [`HISAT2`](https://daehwankimlab.github.io/hisat2/) genome index files ([as of 20210720](../../2021/2021-07-20-Genome-Annotations---Splice-Site-and-Exon-Extractions-for-C.virginica-GCF_002022765.2-Genome-Using-Hisat2-on-Mox/index.qmd)), which also identified/incorporated splice sites and exons, which the [`HISAT2`](https://daehwankimlab.github.io/hisat2/) alignment process requires to run.\n\n[`fastp`](https://github.com/OpenGene/fastp)-trimmed RNAseq data from [20210714](../../2021/2021-07-14-Trimming---C.virginica-Gonad-RNAseq-with-FastP-on-Mox/index.qmd) was used.\n\nThe [`HISAT2`](https://daehwankimlab.github.io/hisat2/) alignment job was run on Mox.\n\n\nSBATCH script (GitHub):\n\n- [20220131_cvir_hisat2-GCF_002022765.2_adult-oa-gonad.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20220131_cvir_hisat2-GCF_002022765.2_adult-oa-gonad.sh)\n\n```shell\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=20220131_cvir_hisat2-GCF_002022765.2_adult-oa-gonad\n## Allocation Definition\n#SBATCH --account=coenv\n#SBATCH --partition=coenv\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=5-00:00:00\n## Memory per node\n#SBATCH --mem=200G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20220131_cvir_hisat2-GCF_002022765.2_adult-oa-gonad\n\n## Hisat2 alignment of C.virginica adult OA gonad RNAseq to NCBI C.virginica genome assembly\n## using HiSat2 index generated on 20210720.\n\n## Expects FastQ input filenames to match *fastp-trim.20210714.fq.gz\n\n\n###################################################################################\n# These variables need to be set by user\n\n## Assign Variables\n\n# Set number of CPUs to use\nthreads=40\n\n# Index name for Hisat2 use\n# Needs to match index naem used in previous Hisat2 indexing step\ngenome_index_name=\"cvir_GCF_002022765.2\"\n\n# Set output filename\nsample_name=\"20210131-cvir-hisat2\"\n\n# Paths to programs\nhisat2_dir=\"/gscratch/srlab/programs/hisat2-2.1.0\"\nhisat2=\"${hisat2_dir}/hisat2\"\nsamtools=\"/gscratch/srlab/programs/samtools-1.10/samtools\"\n\n\n# Input/output files\ngenome_index_dir=\"/gscratch/srlab/sam/data/C_virginica/genomes\"\nfastq_dir=\"/gscratch/srlab/sam/data/C_virginica/RNAseq/\"\n\n\n# Programs associative array\ndeclare -A programs_array\nprograms_array=(\n[hisat2]=\"${hisat2}\" \\\n[samtools_index]=\"${samtools} index\" \\\n[samtools_sort]=\"${samtools} sort\" \\\n[samtools_view]=\"${samtools} view\"\n)\n\n\n###################################################################################################\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n## Inititalize arrays\nfastq_array_R1=()\nfastq_array_R2=()\n\n# Copy Hisat2 genome index files\nrsync -av \"${genome_index_dir}\"/${genome_index_name}*.ht2 .\n\n# Create array of fastq R1 files\n# and generate MD5 checksums file.\nfor fastq in \"${fastq_dir}\"*fastp-trim.20210714.fq.gz\ndo\n  fastq_array_R1+=(\"${fastq}\")\n  echo \"Generating checksum for ${fastq}...\"\n  md5sum \"${fastq}\" >> input_fastqs_checksums.md5\n  echo \"Checksum for ${fastq} completed.\"\n  echo \"\"\ndone\n\n# Create array of fastq R2 files\n# and append to MD5 checksums file.\nfor fastq in \"${fastq_dir}\"*fastp-trim.20210714.fq.gz\ndo\n  fastq_array_R2+=(\"${fastq}\")\n  echo \"Generating checksum for ${fastq}...\"\n  md5sum \"${fastq}\" >> input_fastqs_checksums.md5\n  echo \"Checksum for ${fastq} completed.\"\n  echo \"\"\ndone\n\n# Create comma-separated lists of FastQs for Hisat2\nprintf -v joined_R1 '%s,' \"${fastq_array_R1[@]}\"\nfastq_list_R1=$(echo \"${joined_R1%,}\")\n\nprintf -v joined_R2 '%s,' \"${fastq_array_R2[@]}\"\nfastq_list_R2=$(echo \"${joined_R2%,}\")\n\n\n# Hisat2 alignments\n\"${programs_array[hisat2]}\" \\\n-x \"${genome_index_name}\" \\\n-1 \"${fastq_list_R1}\" \\\n-2 \"${fastq_list_R2}\" \\\n-S \"${sample_name}\".sam \\\n2> \"${sample_name}\"_hisat2.err\n\n# Sort SAM files, convert to BAM, and index\n${programs_array[samtools_view]} \\\n-@ \"${threads}\" \\\n-Su \"${sample_name}\".sam \\\n| ${programs_array[samtools_sort]} - \\\n-@ \"${threads}\" \\\n-o \"${sample_name}\".sorted.bam\n${programs_array[samtools_index]} \"${sample_name}\".sorted.bam\n\n\n# Delete unneccessary index files\nrm \"${genome_index_name}\"*.ht2\n\n# Delete unneded SAM files\nrm ./*.sam\n\n# Generate checksums\nfor file in *\ndo\n  md5sum \"${file}\" >> checksums.md5\ndone\n\n#######################################################################################################\n\n# Capture program options\nif [[ \"${#programs_array[@]}\" -gt 0 ]]; then\n  echo \"Logging program options...\"\n  for program in \"${!programs_array[@]}\"\n  do\n    {\n    echo \"Program options for ${program}: \"\n    echo \"\"\n    # Handle samtools help menus\n    if [[ \"${program}\" == \"samtools_index\" ]] \\\n    || [[ \"${program}\" == \"samtools_sort\" ]] \\\n    || [[ \"${program}\" == \"samtools_view\" ]]\n    then\n      ${programs_array[$program]}\n\n    # Handle DIAMOND BLAST menu\n    elif [[ \"${program}\" == \"diamond\" ]]; then\n      ${programs_array[$program]} help\n\n    # Handle NCBI BLASTx menu\n    elif [[ \"${program}\" == \"blastx\" ]]; then\n      ${programs_array[$program]} -help\n    fi\n    ${programs_array[$program]} -h\n    echo \"\"\n    echo \"\"\n    echo \"----------------------------------------------\"\n    echo \"\"\n    echo \"\"\n  } &>> program_options.log || true\n\n    # If MultiQC is in programs_array, copy the config file to this directory.\n    if [[ \"${program}\" == \"multiqc\" ]]; then\n      cp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n    fi\n  done\nfi\n\n\n# Document programs in PATH (primarily for program version ID)\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n```\n\n---\n\n# RESULTS\n\nRuntime was ~6 days, 7hrs:\n\n![HISAT2 runtime for C.virginica adult gonad OA exposed RNAseq on Mox](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20220131_cvir_hisat2-GCF_002022765.2_adult-oa-gonad_runtime.png?raw=true)\n\nOutput folder:\n\n- [20220131_cvir_hisat2-GCF_002022765.2_adult-oa-gonad/](https://gannet.fish.washington.edu/Atumefaciens/20220131_cvir_hisat2-GCF_002022765.2_adult-oa-gonad/)\n\n  - BAM alignment file and corresponding BAM index file (useful for IGV):\n\n    - [20210131-cvir-hisat2.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20220131_cvir_hisat2-GCF_002022765.2_adult-oa-gonad/20210131-cvir-hisat2.sorted.bam) (99G)\n\n      - MD5: `8cbd5bb64759411927de6a46785b28d6`\n\n    - [20210131-cvir-hisat2.sorted.bam.bai](https://gannet.fish.washington.edu/Atumefaciens/20220131_cvir_hisat2-GCF_002022765.2_adult-oa-gonad/20210131-cvir-hisat2.sorted.bam.bai) (38M)\n\n      - MD5: `92c6e7d6106ffc91ab9a5cb420376783`\n\n  - List of input FASTQ files (and corresponding MD5 checksums)\n\n    - [input_fastqs_checksums.md5](https://gannet.fish.washington.edu/Atumefaciens/20220131_cvir_hisat2-GCF_002022765.2_adult-oa-gonad/input_fastqs_checksums.md5) (128K)\n\n\n  - Standard error output (text; alignment stats):\n\n    - [20220131_cvir_hisat2-GCF_002022765.2_adult-oa-gonad/20210131-cvir-hisat2_hisat2.err](https://gannet.fish.washington.edu/Atumefaciens/20220131_cvir_hisat2-GCF_002022765.2_adult-oa-gonad/20210131-cvir-hisat2_hisat2.err)\n\n    ```\n    1355938330 reads; of these:\n    1355938330 (100.00%) were paired; of these:\n      1342685071 (99.02%) aligned concordantly 0 times\n      81131 (0.01%) aligned concordantly exactly 1 time\n      13172128 (0.97%) aligned concordantly >1 times\n      ----\n      1342685071 pairs aligned concordantly 0 times; of these:\n        585339805 (43.59%) aligned discordantly 1 time\n      ----\n      757345266 pairs aligned 0 times concordantly or discordantly; of these:\n        1514690532 mates make up the pairs; of these:\n          879327626 (58.05%) aligned 0 times\n          346977576 (22.91%) aligned exactly 1 time\n          288385330 (19.04%) aligned >1 times\n    67.57% overall alignment rate\n    ```\n\n\nThe overall alignment rate was surprisingly low. For a good set of RNAseq, I'd fully expect >80% of reads to align. I revisted the [`fastp` trimming performed on 20210714](../../2021/2021-07-14-Trimming---C.virginica-Gonad-RNAseq-with-FastP-on-Mox/index.qmd) and confirmed that paired-end adaptor trimming was enabled. Additionally, the [MultiQC report from the trimming](https://gannet.fish.washington.edu/Atumefaciens/20210714_cvir_gonad_RNAseq_fastp_trimming/multiqc_report/) shows that the post-trim read quality is good; nothing to be concerned about. Those two variables would've been the easiest things to explain a low alignment rate like this, but they don't seem to be the cause. With that being the case, I'm wondering if there's a lot of residual rRNA in the samples (which wouldn't map due to their highly repetetive nature and the fact that they would end up being mapped to multiple locations throughout the genome - leading them to be discarded when mapping).\n\nAfter looking into this a bit futher, I'm wondering if [ZymoResearch's modified rRNA removal technique](https://github.com/RobertsLab/project-oyster-comparative-omics/blob/master/metadata/RNA-Seq%20Synopsis_Venkataraman_zr4059.pdf) (PDF of Zymo project summary) still doesn't work for shellfish rRNA (like other kits)... In the future, we should remember to specifically request polyA selection as the means for mRNA enrichment. It's not a huge deal, as we still have a ton of RNAseq data, but it's still a shame that a lot of the sequencing data may have ended up just capturing rRNA...\n\nAlignments completed. Next up is to perform a genome-guided transcriptome assembly using the BAM file generated by [`HISAT2`](https://daehwankimlab.github.io/hisat2/) with [`Trinity`](https://github.com/trinityrnaseq/trinityrnaseq/wiki).\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"RNAseq Alignment - C.virginica Adult OA Gonad Data to GCF_002022765.2 Genome Using HISAT2 on Mox","date":"2022-01-31 13:35","categories":["HISAT2","Crassostrea virginica","RNAseq","Mox","Eastern oyster ","2022","Miscellaneous"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}