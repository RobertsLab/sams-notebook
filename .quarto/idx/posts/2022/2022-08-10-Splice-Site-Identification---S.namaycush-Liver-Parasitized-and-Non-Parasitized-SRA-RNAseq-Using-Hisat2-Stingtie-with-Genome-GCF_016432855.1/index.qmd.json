{"title":"Splice Site Identification - S.namaycush Liver Parasitized and Non-Parasitized SRA RNAseq Using Hisat2-Stingtie with Genome GCF_016432855.1","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"Splice Site Identification - S.namaycush Liver Parasitized and Non-Parasitized SRA RNAseq Using Hisat2-Stingtie with Genome GCF_016432855.1","date":"2022-08-10 16:45","tags":["hisat2","lake trout","siscowet","lean","Salvelinus namaycush","stringtie","splice","RNAseq","SRA","GCF_016432855.1"],"categories":["2022","Miscellaneous"]},"headingText":"Job Name","containsRefs":false,"markdown":"\nAfter previously [downloading/trimming/QCing _S.namaycush_ SRA liver RNAseq data on 20220706](https://robertslab.github.io/sams-notebook/posts/2022/2022-07-06-SRA-Data---S.namaycush-SRA-BioProject-PRJNA674328-Download-and-QC/), Steven asked that I [run through Hisat2 for splice site identification](https://github.com/RobertsLab/resources/issues/1505) (GitHub Issue).\n\nTo do so, I downloaded the following NCBI files to Mox:\n\n- FastA: [https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/016/432/855/GCF_016432855.1_SaNama_1.0/GCF_016432855.1_SaNama_1.0_genomic.fna.gz](https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/016/432/855/GCF_016432855.1_SaNama_1.0/GCF_016432855.1_SaNama_1.0_genomic.fna.gz)\n\n- GFF: [https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/016/432/855/GCF_016432855.1_SaNama_1.0/GCF_016432855.1_SaNama_1.0_genomic.gff.gz](https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/016/432/855/GCF_016432855.1_SaNama_1.0/GCF_016432855.1_SaNama_1.0_genomic.gff.gz)\n\n- GTF: [https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/016/432/855/GCF_016432855.1_SaNama_1.0/GCF_016432855.1_SaNama_1.0_genomic.gtf.gz](https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/016/432/855/GCF_016432855.1_SaNama_1.0/GCF_016432855.1_SaNama_1.0_genomic.gtf.gz)\n\nI also reviewd the metadata for [BioProject PRJNA316738](https://www.ncbi.nlm.nih.gov/bioproject/PRJNA316738) and downloaded the metadata for the project:\n\n- Metadata website: [https://www.ncbi.nlm.nih.gov/Traces/study/?acc=SRP072750&o=acc_s%3Aa](https://www.ncbi.nlm.nih.gov/Traces/study/?acc=SRP072750&o=acc_s%3Aa)\n\n- Metadata file (CSV): [SraRunTable.txt](https://gannet.fish.washington.edu/Atumefaciens/20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms/SraRunTable.txt)\n\nUpon reviewing the metadata, it became clear that each SRA run was part of a set of three sequencing runs for each sample (see the \"Library Name\" column in the [SraRunTable.txt](https://gannet.fish.washington.edu/Atumefaciens/20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms/SraRunTable.txt)). I used this information to concatenate corresponding FastQs and for setting a read group (RG) in the resulting BAM files for the two subspecies (lean and siscowet), as well as indicate non-parasitized and parasitized. Although, each set of three library sets are part of one of four BioSamples:\n\n| BioSample    | Ecotype                |\n|--------------|------------------------|\n| SAMN04590682 | Lean parasitized       |\n| SAMN04590683 | Lean nonparasitized    |\n| SAMN04590684 | Siscowet parasitized   |\n| SAMN04590685 | Sicowet nonparasitized |\n\nIt's possible I should've set up FastQ concatenation and the BAM RG fields using this information, but this can be dealt with downstream, if desired.\n\nAnyway, an overview of the proccess:\n\n1. Create [`HISAT2`](https://daehwankimlab.github.io/hisat2/) genome index.\n\n2. Identify genome exons and splice sites using [`HISAT2`](https://daehwankimlab.github.io/hisat2/).\n\n3. Align trimmed, concatenated RNAseq reads (single-end) to genome using [`HISAT2`](https://daehwankimlab.github.io/hisat2/).\n\n4. Use [`StringTie`](https://ccb.jhu.edu/software/stringtie/) to idenify alternative isoforms and create output files ready for import to [Ballgown](https://github.com/alyssafrazee/ballgown).\n\n\nAnalysis was run on Mox.\n\n\nSBATCH script (GitHub):\n\n- [20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms.sh)\n\n\n```shell\n#!/bin/bash\n#SBATCH --job-name=20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=21-00:00:00\n## Memory per node\n#SBATCH --mem=500G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms\n\n\n## Script for HiSat2 indexing of NCBI S.namaycush genome assembly GCF_016432855.1\n## aligning trimmed SRA RNAseq from 20220706, and running Stringtie to identify splice sites.\n\n###################################################################################\n# These variables need to be set by user\n\n## Assign Variables\n\n# Set number of CPUs to use\nthreads=28\n\n# Index name for Hisat2 use\n# Needs to match index naem used in previous Hisat2 indexing step\ngenome_index_name=\"snam-GCF_016432855.1\"\n\n# Location of Hisat2 index files\n# Must keep variable name formatting, as it's used by HiSat2\nHISAT2_INDEXES=$(pwd)\nexport HISAT2_INDEXES\n\n# Paths to programs\nhisat2_dir=\"/gscratch/srlab/programs/hisat2-2.1.0\"\nhisat2=\"${hisat2_dir}/hisat2\"\nhisat2_build=\"${hisat2_dir}/hisat2-build\"\nhisat2_exons=\"${hisat2_dir}/hisat2_extract_exons.py\"\nhisat2_splice_sites=\"${hisat2_dir}/hisat2_extract_splice_sites.py\"\nsamtools=\"/gscratch/srlab/programs/samtools-1.10/samtools\"\nstringtie=\"/gscratch/srlab/programs/stringtie-1.3.6.Linux_x86_64/stringtie\"\n\n# Input/output files\nexons=\"snam-GCF_016432855.1_hisat2_exons.tab\"\nfastq_dir=\"/gscratch/srlab/sam/data/S_namaycush/RNAseq/\"\ngenome_dir=\"/gscratch/srlab/sam/data/S_namaycush/genomes\"\ngenome_index_dir=\"/gscratch/srlab/sam/data/S_namaycush/genomes\"\ngenome_fasta=\"${genome_dir}/GCF_016432855.1_SaNama_1.0_genomic.fna\"\ngenome_gff=\"${genome_index_dir}/GCF_016432855.1_SaNama_1.0_genomic.gff\"\ngtf_list=\"gtf_list.txt\"\nmerged_bam=\"20220810-snam-stringtie-GCF_016432855.1-sorted_bams-merged.bam\"\nsplice_sites=\"snam-GCF_016432855.1_hisat2_splice_sites.tab\"\ntranscripts_gtf=\"${genome_dir}/GCF_016432855.1_SaNama_1.0_genomic.gtf\"\n\n# Set FastQ naming pattern\nfastq_pattern=\".fastq.trimmed.20220707.fq.gz\"\n\n# Declare associative array of sample names and metadata\ndeclare -A samples_associative_array=()\n\n# Set total number of samples (NOT number of FastQ files)\ntotal_samples=24\n\n# Set total of original FastQ files\ntotal_fastqs=72\n\n# Programs associative array\ndeclare -A programs_array\nprograms_array=(\n[hisat2]=\"${hisat2}\" \\\n[hisat2_build]=\"${hisat2_build}\" \\\n[hisat2_exons]=\"${hisat2_exons}\" \\\n[hisat2_splice_sites]=\"${hisat2_splice_sites}\"\n[samtools_index]=\"${samtools} index\" \\\n[samtools_merge]=\"${samtools} merge\" \\\n[samtools_sort]=\"${samtools} sort\" \\\n[samtools_view]=\"${samtools} view\" \\\n[stringtie]=\"${stringtie}\"\n)\n\n\n###################################################################################################\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n\n\n# Create Hisat2 exons tab file\n\"${programs_array[hisat2_exons]}\" \\\n\"${transcripts_gtf}\" \\\n> \"${exons}\"\n\n# Create Hisat2 splice sites tab file\n\"${programs_array[hisat2_splice_sites]}\" \\\n\"${transcripts_gtf}\" \\\n> \"${splice_sites}\"\n\n# Build Hisat2 reference index using splice sites and exons\n\"${programs_array[hisat2_build]}\" \\\n\"${genome_fasta}\" \\\n\"${genome_index_name}\" \\\n--exon \"${exons}\" \\\n--ss \"${splice_sites}\" \\\n-p \"${threads}\" \\\n2> hisat2_build.err\n\n# Generate checksums for all files\nmd5sum ./* >> checksums.md5\n\n# Copy Hisat2 index files to my data directory for later use with StringTie\nrsync -av \"${genome_index_name}\"*.ht2 \"${genome_dir}\"\n\n###### Load associative array ######\n\n# Set sample counter for array verification\nfastq_counter=0\n\n# Load array\nfor fastq in \"${fastq_dir}\"*\"${fastq_pattern}\"\ndo\n\n  # Generate MD5 checksums for original set of FastQs\n  md5sum \"${fastq}\" >> original-fastq-checksums.md5\n\n  # Increment counter\n  ((fastq_counter+=1))\n\n  # Remove path\n  sample_name=\"${fastq##*/}\"\n\n  # Get sample name from first \".\"-delimited field\n  sample_name=$(echo \"${sample_name}\" | awk -F \".\" '{print $1}')\n\n  # Concatenate reads from multiple runs\n  if\n    [[ \"${sample_name}\" == \"SRR3321200\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321217\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321243\" ]]\n  then\n    cat \"${fastq}\" >> NPLL32.SRR3321200-SRR3321217-SRR3321243\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321201\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321218\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321244\" ]]\n  then\n    cat \"${fastq}\" >> NPLL34.SRR3321201-SRR3321218-SRR3321244\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321212\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321219\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321246\" ]]\n  then\n    cat \"${fastq}\" >> NPLL44.SRR3321212-SRR3321219-SRR3321246\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321223\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321220\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321247\" ]]\n  then\n    cat \"${fastq}\" >> NPLL46.SRR3321223-SRR3321220-SRR3321247\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321234\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321221\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321248\" ]]\n  then\n    cat \"${fastq}\" >> NPLL56.SRR3321234-SRR3321221-SRR3321248\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321245\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321222\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321249\" ]]\n  then\n    cat \"${fastq}\" >> NPLL61.SRR3321245-SRR3321222-SRR3321249\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321256\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321224\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321250\" ]]\n  then\n    cat \"${fastq}\" >> NPSL15.SRR3321256-SRR3321224-SRR3321250\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321267\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321225\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321251\" ]]\n  then\n    cat \"${fastq}\" >> NPSL24.SRR3321267-SRR3321225-SRR3321251\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321270\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321226\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321252\" ]]\n  then\n    cat \"${fastq}\" >> NPSL29.SRR3321270-SRR3321226-SRR3321252\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321271\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321227\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321253\" ]]\n  then\n    cat \"${fastq}\" >> NPSL36.SRR3321271-SRR3321227-SRR3321253\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321202\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321228\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321254\" ]]\n  then\n    cat \"${fastq}\" >> NPSL50.SRR3321202-SRR3321228-SRR3321254\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321203\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321229\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321255\" ]]\n  then\n    cat \"${fastq}\" >> NPSL58.SRR3321203-SRR3321229-SRR3321255\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321204\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321230\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321257\" ]]\n  then\n    cat \"${fastq}\" >> PLL20.SRR3321204-SRR3321230-SRR3321257\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321205\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321231\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321258\" ]]\n  then\n    cat \"${fastq}\" >> PLL31.SRR3321205-SRR3321231-SRR3321258\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321206\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321232\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321259\" ]]\n  then\n    cat \"${fastq}\" >> PLL43.SRR3321206-SRR3321232-SRR3321259\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321207\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321233\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321260\" ]]\n  then\n    cat \"${fastq}\" >> PLL55.SRR3321207-SRR3321233-SRR3321260\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321208\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321235\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321261\" ]]\n  then\n    cat \"${fastq}\" >> PLL59.SRR3321208-SRR3321235-SRR3321261\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321209\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321236\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321262\" ]]\n  then\n    cat \"${fastq}\" >> PLL62.SRR3321209-SRR3321236-SRR3321262\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321210\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321237\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321263\" ]]\n  then\n    cat \"${fastq}\" >> PSL13.SRR3321210-SRR3321237-SRR3321263\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321211\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321238\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321264\" ]]\n  then\n    cat \"${fastq}\" >> PSL16.SRR3321211-SRR3321238-SRR3321264\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321213\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321239\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321265\" ]]\n  then\n    cat \"${fastq}\" >> PSL35.SRR3321213-SRR3321239-SRR3321265\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321214\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321240\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321266\" ]]\n  then\n    cat \"${fastq}\" >> PSL49.SRR3321214-SRR3321240-SRR3321266\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321215\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321241\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321268\" ]]\n  then\n    cat \"${fastq}\" >> PSL53.SRR3321215-SRR3321241-SRR3321268\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321216\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321242\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321269\" ]]\n  then\n    cat \"${fastq}\" >> PSL63.SRR3321216-SRR3321242-SRR3321269\"${fastq_pattern}\"\n  fi\n\ndone\n\n# Check array size to confirm it has all expected samples\n# Exit if mismatch\nif [[ \"${fastq_counter}\" != \"${total_fastqs}\" ]]\nthen\n  echo \"Expected ${total_fastqs} FastQs, but only found ${fastq_counter}!\"\n  echo \"\"\n  echo \"Check original-fastq-checksums.md5 file for list of FastQs processed.\"\n  echo \"\"\n  exit\nfi\n\n###### Load associative array ######\n\n# Set sample counter for array verification\nsample_counter=0\n\nfor fastq in *\"${fastq_pattern}\"\ndo\n  # Generate MD5 checksums for original set of FastQs\n  md5sum \"${fastq}\" >> concatenated-fastq-checksums.md5\n\n  # Increment counter\n  ((sample_counter+=1))\n\n  # Remove path\n  sample_name=\"${fastq##*/}\"\n\n  # Get sample name from first \".\"-delimited field\n  sample_name=$(echo \"${sample_name}\" | awk -F \".\" '{print $1}')\n\n\n  # Set treatment condition for each sample\n  # Primarily used for setting read group (RG) during BAM creation\n  if\n    [[ \"${sample_name}\" == \"NPLL32\" ]] \\\n    || [[ \"${sample_name}\" == \"NPLL34\" ]] \\\n    || [[ \"${sample_name}\" == \"NPLL44\" ]] \\\n    || [[ \"${sample_name}\" == \"NPLL46\" ]] \\\n    || [[ \"${sample_name}\" == \"NPLL56\" ]] \\\n    || [[ \"${sample_name}\" == \"NPLL61\" ]]\n  then\n    treatment=\"lean-non_parasitized\"\n  elif\n    [[ \"${sample_name}\" == \"NPSL15\" ]] \\\n    || [[ \"${sample_name}\" == \"NPSL24\" ]] \\\n    || [[ \"${sample_name}\" == \"NPSL29\" ]] \\\n    || [[ \"${sample_name}\" == \"NPSL36\" ]] \\\n    || [[ \"${sample_name}\" == \"NPSL50\" ]] \\\n    || [[ \"${sample_name}\" == \"NPSL58\" ]]\n  then\n    treatment=\"siscowet-non_parasitized\"\n  elif\n    [[ \"${sample_name}\" == \"PLL20\" ]] \\\n    || [[ \"${sample_name}\" == \"PLL31\" ]] \\\n    || [[ \"${sample_name}\" == \"PLL43\" ]] \\\n    || [[ \"${sample_name}\" == \"PLL55\" ]] \\\n    || [[ \"${sample_name}\" == \"PLL59\" ]] \\\n    || [[ \"${sample_name}\" == \"PLL62\" ]]\n  then\n    treatment=\"lean-parasitized\"\n  else\n    treatment=\"siscowet-parasitized\"  \n  fi\n\n  # Append to associative array\n  samples_associative_array+=([\"${sample_name}\"]=\"${treatment}\")\n\ndone\n\n# Check array size to confirm it has all expected samples\n# Exit if mismatch\nif [[ \"${#samples_associative_array[@]}\" != \"${sample_counter}\" ]] \\\n|| [[ \"${#samples_associative_array[@]}\" != \"${total_samples}\" ]]\n  then\n    echo \"samples_associative_array doesn't have all ${total_samples} samples.\"\n    echo \"\"\n    echo \"samples_associative_array contents:\"\n    echo \"\"\n    for item in \"${!samples_associative_array[@]}\"\n    do\n      printf \"%s\\t%s\\n\" \"${item}\" \"${samples_associative_array[${item}]}\"\n    done\n\n    exit\nfi\n\n# Run Hisat2 on each FastQ file\nfor sample in \"${!samples_associative_array[@]}\"\ndo\n  # Identify corresponding FastQ file\n  # Pipe to sed replace leading \"./\" with \"../\" to manage relative FastQ path\n  fastq=$(find . -name \"${sample}*${fastq_pattern}\" | sed 's/.\\//..\\//')\n\n  # Create and switch to dedicated sample directory\n  mkdir \"${sample}\" && cd \"$_\"\n\n  # Hisat2 alignments\n  # Sets read group info (RG) using samples array\n  # Uses -U for single-end reads\n  \"${programs_array[hisat2]}\" \\\n  -x \"${genome_index_name}\" \\\n  -U \"${fastq}\" \\\n  -S \"${sample}\".sam \\\n  --rg-id \"${sample}\" \\\n  --rg \"SM:\"\"${samples_associative_array[$sample]}\" \\\n  2> \"${sample}\"_hisat2.err\n\n  # Sort SAM files, convert to BAM, and index\n  ${programs_array[samtools_view]} \\\n  -@ \"${threads}\" \\\n  -Su \"${sample}\".sam \\\n  | ${programs_array[samtools_sort]} - \\\n  -@ \"${threads}\" \\\n  -o \"${sample}\".sorted.bam\n\n\n  # Index BAM\n  ${programs_array[samtools_index]} \"${sample}\".sorted.bam\n\n\n  # Run stringtie on alignments\n  # Uses \"-B\" option to output tables intended for use in Ballgown\n  # Uses \"-e\" option; recommended when using \"-B\" option.\n  # Limits analysis to only reads alignments matching reference.\n  \"${programs_array[stringtie]}\" \"${sample}\".sorted.bam \\\n  -p \"${threads}\" \\\n  -o \"${sample}\".gtf \\\n  -G \"${genome_gff}\" \\\n  -C \"${sample}.cov_refs.gtf\" \\\n  -B \\\n  -e\n\n# Add GTFs to list file, only if non-empty\n# Identifies GTF files that only have header\n  gtf_lines=$(wc -l < \"${sample}\".gtf )\n  if [ \"${gtf_lines}\" -gt 2 ]; then\n    echo \"$(pwd)/${sample}.gtf\" >> ../\"${gtf_list}\"\n  fi\n\n  # Delete unneeded SAM files\n  rm ./*.sam\n\n  # Generate checksums\n  for file in *\n  do\n    md5sum \"${file}\" >> \"${sample}\"-checksums.md5\n  done\n\n  # Move up to orig. working directory\n  cd ..\n\ndone\n\n# Merge all BAMs to singular BAM for use in transcriptome assembly later\n## Create list of sorted BAMs for merging\nfind . -name \"*sorted.bam\" > sorted_bams.list\n\n## Merge sorted BAMs\n${programs_array[samtools_merge]} \\\n-b sorted_bams.list \\\n${merged_bam} \\\n--threads ${threads}\n\n## Index merged BAM\n${programs_array[samtools_index]} ${merged_bam}\n\n\n\n# Create singular transcript file, using GTF list file\n\"${programs_array[stringtie]}\" --merge \\\n\"${gtf_list}\" \\\n-p \"${threads}\" \\\n-G \"${genome_gff}\" \\\n-o \"${genome_index_name}\".stringtie.gtf\n\n\n# Generate checksums\nfind . -type f -maxdepth 1 -exec md5sum {} + >> checksums.md5\n\n\n#######################################################################################################\n\n# Capture program options\nif [[ \"${#programs_array[@]}\" -gt 0 ]]; then\n  echo \"Logging program options...\"\n  for program in \"${!programs_array[@]}\"\n  do\n    {\n    echo \"Program options for ${program}: \"\n    echo \"\"\n    # Handle samtools help menus\n    if [[ \"${program}\" == \"samtools_index\" ]] \\\n    || [[ \"${program}\" == \"samtools_sort\" ]] \\\n    || [[ \"${program}\" == \"samtools_view\" ]]\n    then\n      ${programs_array[$program]}\n\n    # Handle DIAMOND BLAST menu\n    elif [[ \"${program}\" == \"diamond\" ]]; then\n      ${programs_array[$program]} help\n\n    # Handle NCBI BLASTx menu\n    elif [[ \"${program}\" == \"blastx\" ]]; then\n      ${programs_array[$program]} -help\n    fi\n    ${programs_array[$program]} -h\n    echo \"\"\n    echo \"\"\n    echo \"----------------------------------------------\"\n    echo \"\"\n    echo \"\"\n  } &>> program_options.log || true\n\n    # If MultiQC is in programs_array, copy the config file to this directory.\n    if [[ \"${program}\" == \"multiqc\" ]]; then\n      cp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n    fi\n  done\n  echo \"Finished logging programs options.\"\n  echo \"\"\nfi\n\n\n# Document programs in PATH (primarily for program version ID)\necho \"Logging system $PATH...\"\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\necho \"Finished logging system $PATH.\"\n```\n\n\n---\n\n# RESULTS\n\nRuntime was almost exactly 7hrs:\n\n![Screencap of Mox job runtime](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms_runtime.png?raw=true)\n\nOutput folder:\n\n- [20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms/](https://gannet.fish.washington.edu/Atumefaciens/20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms/)\n\n  #### MultiQC Report for Hisat2 alignments\n\n    - [20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms/multiqc_report.html](https://gannet.fish.washington.edu/Atumefaciens/20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms/multiqc_report.html) (HTML; opens in browser)\n\n  #### Merged BAM file\n\n    - [20220810-snam-stringtie-GCF_016432855.1-sorted_bams-merged.bam](https://gannet.fish.washington.edu/Atumefaciens/20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms/20220810-snam-stringtie-GCF_016432855.1-sorted_bams-merged.bam) (20G)\n\n      - MD5: `6911d3fc9f725a09a09a4c584b68ddfa`\n\n  #### Merged BAM index file (useful for IGV)\n\n    - [20220810-snam-stringtie-GCF_016432855.1-sorted_bams-merged.bam.bai](https://gannet.fish.washington.edu/Atumefaciens/20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms/20220810-snam-stringtie-GCF_016432855.1-sorted_bams-merged.bam.bai) (3.3M)\n\n      - MD5: `368e45c560e61f812522a00c71a89eee`\n\n  #### StringTie GTF\n\n    - [snam-GCF_016432855.1.stringtie.gtf](https://gannet.fish.washington.edu/Atumefaciens/20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms/snam-GCF_016432855.1.stringtie.gtf) (125M)\n\n      - MD5: `7396cc52190b6c6408c0f3bbc82e9ed6`\n\nIndividual library alignments can be found in their respective subdirectories, along with their BAM, BAM index, GTF, and Ballgown tables (`*.ctab`). See the directory tree below for a better overview.\n\n---\n\nDirectory tree:\n\n```shell\n├── 20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms.sh\n├── 20220810-snam-stringtie-GCF_016432855.1-sorted_bams-merged.bam\n├── 20220810-snam-stringtie-GCF_016432855.1-sorted_bams-merged.bam.bai\n├── checksums.md5\n├── concatenated-fastq-checksums.md5\n├── gtf_list.txt\n├── hisat2_build.err\n├── NPLL32\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── NPLL32-checksums.md5\n│   ├── NPLL32.cov_refs.gtf\n│   ├── NPLL32.gtf\n│   ├── NPLL32_hisat2.err\n│   ├── NPLL32.sorted.bam\n│   ├── NPLL32.sorted.bam.bai\n│   └── t_data.ctab\n├── NPLL32.SRR3321200-SRR3321217-SRR3321243.fastq.trimmed.20220707.fq.gz\n├── NPLL34\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── NPLL34-checksums.md5\n│   ├── NPLL34.cov_refs.gtf\n│   ├── NPLL34.gtf\n│   ├── NPLL34_hisat2.err\n│   ├── NPLL34.sorted.bam\n│   ├── NPLL34.sorted.bam.bai\n│   └── t_data.ctab\n├── NPLL34.SRR3321201-SRR3321218-SRR3321244.fastq.trimmed.20220707.fq.gz\n├── NPLL44\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── NPLL44-checksums.md5\n│   ├── NPLL44.cov_refs.gtf\n│   ├── NPLL44.gtf\n│   ├── NPLL44_hisat2.err\n│   ├── NPLL44.sorted.bam\n│   ├── NPLL44.sorted.bam.bai\n│   └── t_data.ctab\n├── NPLL44.SRR3321212-SRR3321219-SRR3321246.fastq.trimmed.20220707.fq.gz\n├── NPLL46\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── NPLL46-checksums.md5\n│   ├── NPLL46.cov_refs.gtf\n│   ├── NPLL46.gtf\n│   ├── NPLL46_hisat2.err\n│   ├── NPLL46.sorted.bam\n│   ├── NPLL46.sorted.bam.bai\n│   └── t_data.ctab\n├── NPLL46.SRR3321223-SRR3321220-SRR3321247.fastq.trimmed.20220707.fq.gz\n├── NPLL56\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── NPLL56-checksums.md5\n│   ├── NPLL56.cov_refs.gtf\n│   ├── NPLL56.gtf\n│   ├── NPLL56_hisat2.err\n│   ├── NPLL56.sorted.bam\n│   ├── NPLL56.sorted.bam.bai\n│   └── t_data.ctab\n├── NPLL56.SRR3321234-SRR3321221-SRR3321248.fastq.trimmed.20220707.fq.gz\n├── NPLL61\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── NPLL61-checksums.md5\n│   ├── NPLL61.cov_refs.gtf\n│   ├── NPLL61.gtf\n│   ├── NPLL61_hisat2.err\n│   ├── NPLL61.sorted.bam\n│   ├── NPLL61.sorted.bam.bai\n│   └── t_data.ctab\n├── NPLL61.SRR3321245-SRR3321222-SRR3321249.fastq.trimmed.20220707.fq.gz\n├── NPSL15\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── NPSL15-checksums.md5\n│   ├── NPSL15.cov_refs.gtf\n│   ├── NPSL15.gtf\n│   ├── NPSL15_hisat2.err\n│   ├── NPSL15.sorted.bam\n│   ├── NPSL15.sorted.bam.bai\n│   └── t_data.ctab\n├── NPSL15.SRR3321256-SRR3321224-SRR3321250.fastq.trimmed.20220707.fq.gz\n├── NPSL24\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── NPSL24-checksums.md5\n│   ├── NPSL24.cov_refs.gtf\n│   ├── NPSL24.gtf\n│   ├── NPSL24_hisat2.err\n│   ├── NPSL24.sorted.bam\n│   ├── NPSL24.sorted.bam.bai\n│   └── t_data.ctab\n├── NPSL24.SRR3321267-SRR3321225-SRR3321251.fastq.trimmed.20220707.fq.gz\n├── NPSL29\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── NPSL29-checksums.md5\n│   ├── NPSL29.cov_refs.gtf\n│   ├── NPSL29.gtf\n│   ├── NPSL29_hisat2.err\n│   ├── NPSL29.sorted.bam\n│   ├── NPSL29.sorted.bam.bai\n│   └── t_data.ctab\n├── NPSL29.SRR3321270-SRR3321226-SRR3321252.fastq.trimmed.20220707.fq.gz\n├── NPSL36\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── NPSL36-checksums.md5\n│   ├── NPSL36.cov_refs.gtf\n│   ├── NPSL36.gtf\n│   ├── NPSL36_hisat2.err\n│   ├── NPSL36.sorted.bam\n│   ├── NPSL36.sorted.bam.bai\n│   └── t_data.ctab\n├── NPSL36.SRR3321271-SRR3321227-SRR3321253.fastq.trimmed.20220707.fq.gz\n├── NPSL50\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── NPSL50-checksums.md5\n│   ├── NPSL50.cov_refs.gtf\n│   ├── NPSL50.gtf\n│   ├── NPSL50_hisat2.err\n│   ├── NPSL50.sorted.bam\n│   ├── NPSL50.sorted.bam.bai\n│   └── t_data.ctab\n├── NPSL50.SRR3321202-SRR3321228-SRR3321254.fastq.trimmed.20220707.fq.gz\n├── NPSL58\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── NPSL58-checksums.md5\n│   ├── NPSL58.cov_refs.gtf\n│   ├── NPSL58.gtf\n│   ├── NPSL58_hisat2.err\n│   ├── NPSL58.sorted.bam\n│   ├── NPSL58.sorted.bam.bai\n│   └── t_data.ctab\n├── NPSL58.SRR3321203-SRR3321229-SRR3321255.fastq.trimmed.20220707.fq.gz\n├── original-fastq-checksums.md5\n├── PLL20\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── PLL20-checksums.md5\n│   ├── PLL20.cov_refs.gtf\n│   ├── PLL20.gtf\n│   ├── PLL20_hisat2.err\n│   ├── PLL20.sorted.bam\n│   ├── PLL20.sorted.bam.bai\n│   └── t_data.ctab\n├── PLL20.SRR3321204-SRR3321230-SRR3321257.fastq.trimmed.20220707.fq.gz\n├── PLL31\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── PLL31-checksums.md5\n│   ├── PLL31.cov_refs.gtf\n│   ├── PLL31.gtf\n│   ├── PLL31_hisat2.err\n│   ├── PLL31.sorted.bam\n│   ├── PLL31.sorted.bam.bai\n│   └── t_data.ctab\n├── PLL31.SRR3321205-SRR3321231-SRR3321258.fastq.trimmed.20220707.fq.gz\n├── PLL43\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── PLL43-checksums.md5\n│   ├── PLL43.cov_refs.gtf\n│   ├── PLL43.gtf\n│   ├── PLL43_hisat2.err\n│   ├── PLL43.sorted.bam\n│   ├── PLL43.sorted.bam.bai\n│   └── t_data.ctab\n├── PLL43.SRR3321206-SRR3321232-SRR3321259.fastq.trimmed.20220707.fq.gz\n├── PLL55\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── PLL55-checksums.md5\n│   ├── PLL55.cov_refs.gtf\n│   ├── PLL55.gtf\n│   ├── PLL55_hisat2.err\n│   ├── PLL55.sorted.bam\n│   ├── PLL55.sorted.bam.bai\n│   └── t_data.ctab\n├── PLL55.SRR3321207-SRR3321233-SRR3321260.fastq.trimmed.20220707.fq.gz\n├── PLL59\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── PLL59-checksums.md5\n│   ├── PLL59.cov_refs.gtf\n│   ├── PLL59.gtf\n│   ├── PLL59_hisat2.err\n│   ├── PLL59.sorted.bam\n│   ├── PLL59.sorted.bam.bai\n│   └── t_data.ctab\n├── PLL59.SRR3321208-SRR3321235-SRR3321261.fastq.trimmed.20220707.fq.gz\n├── PLL62\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── PLL62-checksums.md5\n│   ├── PLL62.cov_refs.gtf\n│   ├── PLL62.gtf\n│   ├── PLL62_hisat2.err\n│   ├── PLL62.sorted.bam\n│   ├── PLL62.sorted.bam.bai\n│   └── t_data.ctab\n├── PLL62.SRR3321209-SRR3321236-SRR3321262.fastq.trimmed.20220707.fq.gz\n├── program_options.log\n├── PSL13\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── PSL13-checksums.md5\n│   ├── PSL13.cov_refs.gtf\n│   ├── PSL13.gtf\n│   ├── PSL13_hisat2.err\n│   ├── PSL13.sorted.bam\n│   ├── PSL13.sorted.bam.bai\n│   └── t_data.ctab\n├── PSL13.SRR3321210-SRR3321237-SRR3321263.fastq.trimmed.20220707.fq.gz\n├── PSL16\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── PSL16-checksums.md5\n│   ├── PSL16.cov_refs.gtf\n│   ├── PSL16.gtf\n│   ├── PSL16_hisat2.err\n│   ├── PSL16.sorted.bam\n│   ├── PSL16.sorted.bam.bai\n│   └── t_data.ctab\n├── PSL16.SRR3321211-SRR3321238-SRR3321264.fastq.trimmed.20220707.fq.gz\n├── PSL35\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── PSL35-checksums.md5\n│   ├── PSL35.cov_refs.gtf\n│   ├── PSL35.gtf\n│   ├── PSL35_hisat2.err\n│   ├── PSL35.sorted.bam\n│   ├── PSL35.sorted.bam.bai\n│   └── t_data.ctab\n├── PSL35.SRR3321213-SRR3321239-SRR3321265.fastq.trimmed.20220707.fq.gz\n├── PSL49\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── PSL49-checksums.md5\n│   ├── PSL49.cov_refs.gtf\n│   ├── PSL49.gtf\n│   ├── PSL49_hisat2.err\n│   ├── PSL49.sorted.bam\n│   ├── PSL49.sorted.bam.bai\n│   └── t_data.ctab\n├── PSL49.SRR3321214-SRR3321240-SRR3321266.fastq.trimmed.20220707.fq.gz\n├── PSL53\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── PSL53-checksums.md5\n│   ├── PSL53.cov_refs.gtf\n│   ├── PSL53.gtf\n│   ├── PSL53_hisat2.err\n│   ├── PSL53.sorted.bam\n│   ├── PSL53.sorted.bam.bai\n│   └── t_data.ctab\n├── PSL53.SRR3321215-SRR3321241-SRR3321268.fastq.trimmed.20220707.fq.gz\n├── PSL63\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── PSL63-checksums.md5\n│   ├── PSL63.cov_refs.gtf\n│   ├── PSL63.gtf\n│   ├── PSL63_hisat2.err\n│   ├── PSL63.sorted.bam\n│   ├── PSL63.sorted.bam.bai\n│   └── t_data.ctab\n├── PSL63.SRR3321216-SRR3321242-SRR3321269.fastq.trimmed.20220707.fq.gz\n├── slurm-3459606.out\n├── snam-GCF_016432855.1.1.ht2\n├── snam-GCF_016432855.1.2.ht2\n├── snam-GCF_016432855.1.3.ht2\n├── snam-GCF_016432855.1.4.ht2\n├── snam-GCF_016432855.1.5.ht2\n├── snam-GCF_016432855.1.6.ht2\n├── snam-GCF_016432855.1.7.ht2\n├── snam-GCF_016432855.1.8.ht2\n├── snam-GCF_016432855.1_hisat2_exons.tab\n├── snam-GCF_016432855.1_hisat2_splice_sites.tab\n├── snam-GCF_016432855.1.stringtie.gtf\n├── sorted_bams.list\n├── SraRunTable.txt\n└── system_path.log\n```\n","srcMarkdownNoYaml":"\nAfter previously [downloading/trimming/QCing _S.namaycush_ SRA liver RNAseq data on 20220706](https://robertslab.github.io/sams-notebook/posts/2022/2022-07-06-SRA-Data---S.namaycush-SRA-BioProject-PRJNA674328-Download-and-QC/), Steven asked that I [run through Hisat2 for splice site identification](https://github.com/RobertsLab/resources/issues/1505) (GitHub Issue).\n\nTo do so, I downloaded the following NCBI files to Mox:\n\n- FastA: [https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/016/432/855/GCF_016432855.1_SaNama_1.0/GCF_016432855.1_SaNama_1.0_genomic.fna.gz](https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/016/432/855/GCF_016432855.1_SaNama_1.0/GCF_016432855.1_SaNama_1.0_genomic.fna.gz)\n\n- GFF: [https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/016/432/855/GCF_016432855.1_SaNama_1.0/GCF_016432855.1_SaNama_1.0_genomic.gff.gz](https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/016/432/855/GCF_016432855.1_SaNama_1.0/GCF_016432855.1_SaNama_1.0_genomic.gff.gz)\n\n- GTF: [https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/016/432/855/GCF_016432855.1_SaNama_1.0/GCF_016432855.1_SaNama_1.0_genomic.gtf.gz](https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/016/432/855/GCF_016432855.1_SaNama_1.0/GCF_016432855.1_SaNama_1.0_genomic.gtf.gz)\n\nI also reviewd the metadata for [BioProject PRJNA316738](https://www.ncbi.nlm.nih.gov/bioproject/PRJNA316738) and downloaded the metadata for the project:\n\n- Metadata website: [https://www.ncbi.nlm.nih.gov/Traces/study/?acc=SRP072750&o=acc_s%3Aa](https://www.ncbi.nlm.nih.gov/Traces/study/?acc=SRP072750&o=acc_s%3Aa)\n\n- Metadata file (CSV): [SraRunTable.txt](https://gannet.fish.washington.edu/Atumefaciens/20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms/SraRunTable.txt)\n\nUpon reviewing the metadata, it became clear that each SRA run was part of a set of three sequencing runs for each sample (see the \"Library Name\" column in the [SraRunTable.txt](https://gannet.fish.washington.edu/Atumefaciens/20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms/SraRunTable.txt)). I used this information to concatenate corresponding FastQs and for setting a read group (RG) in the resulting BAM files for the two subspecies (lean and siscowet), as well as indicate non-parasitized and parasitized. Although, each set of three library sets are part of one of four BioSamples:\n\n| BioSample    | Ecotype                |\n|--------------|------------------------|\n| SAMN04590682 | Lean parasitized       |\n| SAMN04590683 | Lean nonparasitized    |\n| SAMN04590684 | Siscowet parasitized   |\n| SAMN04590685 | Sicowet nonparasitized |\n\nIt's possible I should've set up FastQ concatenation and the BAM RG fields using this information, but this can be dealt with downstream, if desired.\n\nAnyway, an overview of the proccess:\n\n1. Create [`HISAT2`](https://daehwankimlab.github.io/hisat2/) genome index.\n\n2. Identify genome exons and splice sites using [`HISAT2`](https://daehwankimlab.github.io/hisat2/).\n\n3. Align trimmed, concatenated RNAseq reads (single-end) to genome using [`HISAT2`](https://daehwankimlab.github.io/hisat2/).\n\n4. Use [`StringTie`](https://ccb.jhu.edu/software/stringtie/) to idenify alternative isoforms and create output files ready for import to [Ballgown](https://github.com/alyssafrazee/ballgown).\n\n\nAnalysis was run on Mox.\n\n\nSBATCH script (GitHub):\n\n- [20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms.sh)\n\n\n```shell\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=21-00:00:00\n## Memory per node\n#SBATCH --mem=500G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms\n\n\n## Script for HiSat2 indexing of NCBI S.namaycush genome assembly GCF_016432855.1\n## aligning trimmed SRA RNAseq from 20220706, and running Stringtie to identify splice sites.\n\n###################################################################################\n# These variables need to be set by user\n\n## Assign Variables\n\n# Set number of CPUs to use\nthreads=28\n\n# Index name for Hisat2 use\n# Needs to match index naem used in previous Hisat2 indexing step\ngenome_index_name=\"snam-GCF_016432855.1\"\n\n# Location of Hisat2 index files\n# Must keep variable name formatting, as it's used by HiSat2\nHISAT2_INDEXES=$(pwd)\nexport HISAT2_INDEXES\n\n# Paths to programs\nhisat2_dir=\"/gscratch/srlab/programs/hisat2-2.1.0\"\nhisat2=\"${hisat2_dir}/hisat2\"\nhisat2_build=\"${hisat2_dir}/hisat2-build\"\nhisat2_exons=\"${hisat2_dir}/hisat2_extract_exons.py\"\nhisat2_splice_sites=\"${hisat2_dir}/hisat2_extract_splice_sites.py\"\nsamtools=\"/gscratch/srlab/programs/samtools-1.10/samtools\"\nstringtie=\"/gscratch/srlab/programs/stringtie-1.3.6.Linux_x86_64/stringtie\"\n\n# Input/output files\nexons=\"snam-GCF_016432855.1_hisat2_exons.tab\"\nfastq_dir=\"/gscratch/srlab/sam/data/S_namaycush/RNAseq/\"\ngenome_dir=\"/gscratch/srlab/sam/data/S_namaycush/genomes\"\ngenome_index_dir=\"/gscratch/srlab/sam/data/S_namaycush/genomes\"\ngenome_fasta=\"${genome_dir}/GCF_016432855.1_SaNama_1.0_genomic.fna\"\ngenome_gff=\"${genome_index_dir}/GCF_016432855.1_SaNama_1.0_genomic.gff\"\ngtf_list=\"gtf_list.txt\"\nmerged_bam=\"20220810-snam-stringtie-GCF_016432855.1-sorted_bams-merged.bam\"\nsplice_sites=\"snam-GCF_016432855.1_hisat2_splice_sites.tab\"\ntranscripts_gtf=\"${genome_dir}/GCF_016432855.1_SaNama_1.0_genomic.gtf\"\n\n# Set FastQ naming pattern\nfastq_pattern=\".fastq.trimmed.20220707.fq.gz\"\n\n# Declare associative array of sample names and metadata\ndeclare -A samples_associative_array=()\n\n# Set total number of samples (NOT number of FastQ files)\ntotal_samples=24\n\n# Set total of original FastQ files\ntotal_fastqs=72\n\n# Programs associative array\ndeclare -A programs_array\nprograms_array=(\n[hisat2]=\"${hisat2}\" \\\n[hisat2_build]=\"${hisat2_build}\" \\\n[hisat2_exons]=\"${hisat2_exons}\" \\\n[hisat2_splice_sites]=\"${hisat2_splice_sites}\"\n[samtools_index]=\"${samtools} index\" \\\n[samtools_merge]=\"${samtools} merge\" \\\n[samtools_sort]=\"${samtools} sort\" \\\n[samtools_view]=\"${samtools} view\" \\\n[stringtie]=\"${stringtie}\"\n)\n\n\n###################################################################################################\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n\n\n# Create Hisat2 exons tab file\n\"${programs_array[hisat2_exons]}\" \\\n\"${transcripts_gtf}\" \\\n> \"${exons}\"\n\n# Create Hisat2 splice sites tab file\n\"${programs_array[hisat2_splice_sites]}\" \\\n\"${transcripts_gtf}\" \\\n> \"${splice_sites}\"\n\n# Build Hisat2 reference index using splice sites and exons\n\"${programs_array[hisat2_build]}\" \\\n\"${genome_fasta}\" \\\n\"${genome_index_name}\" \\\n--exon \"${exons}\" \\\n--ss \"${splice_sites}\" \\\n-p \"${threads}\" \\\n2> hisat2_build.err\n\n# Generate checksums for all files\nmd5sum ./* >> checksums.md5\n\n# Copy Hisat2 index files to my data directory for later use with StringTie\nrsync -av \"${genome_index_name}\"*.ht2 \"${genome_dir}\"\n\n###### Load associative array ######\n\n# Set sample counter for array verification\nfastq_counter=0\n\n# Load array\nfor fastq in \"${fastq_dir}\"*\"${fastq_pattern}\"\ndo\n\n  # Generate MD5 checksums for original set of FastQs\n  md5sum \"${fastq}\" >> original-fastq-checksums.md5\n\n  # Increment counter\n  ((fastq_counter+=1))\n\n  # Remove path\n  sample_name=\"${fastq##*/}\"\n\n  # Get sample name from first \".\"-delimited field\n  sample_name=$(echo \"${sample_name}\" | awk -F \".\" '{print $1}')\n\n  # Concatenate reads from multiple runs\n  if\n    [[ \"${sample_name}\" == \"SRR3321200\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321217\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321243\" ]]\n  then\n    cat \"${fastq}\" >> NPLL32.SRR3321200-SRR3321217-SRR3321243\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321201\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321218\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321244\" ]]\n  then\n    cat \"${fastq}\" >> NPLL34.SRR3321201-SRR3321218-SRR3321244\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321212\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321219\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321246\" ]]\n  then\n    cat \"${fastq}\" >> NPLL44.SRR3321212-SRR3321219-SRR3321246\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321223\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321220\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321247\" ]]\n  then\n    cat \"${fastq}\" >> NPLL46.SRR3321223-SRR3321220-SRR3321247\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321234\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321221\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321248\" ]]\n  then\n    cat \"${fastq}\" >> NPLL56.SRR3321234-SRR3321221-SRR3321248\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321245\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321222\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321249\" ]]\n  then\n    cat \"${fastq}\" >> NPLL61.SRR3321245-SRR3321222-SRR3321249\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321256\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321224\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321250\" ]]\n  then\n    cat \"${fastq}\" >> NPSL15.SRR3321256-SRR3321224-SRR3321250\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321267\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321225\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321251\" ]]\n  then\n    cat \"${fastq}\" >> NPSL24.SRR3321267-SRR3321225-SRR3321251\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321270\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321226\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321252\" ]]\n  then\n    cat \"${fastq}\" >> NPSL29.SRR3321270-SRR3321226-SRR3321252\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321271\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321227\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321253\" ]]\n  then\n    cat \"${fastq}\" >> NPSL36.SRR3321271-SRR3321227-SRR3321253\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321202\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321228\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321254\" ]]\n  then\n    cat \"${fastq}\" >> NPSL50.SRR3321202-SRR3321228-SRR3321254\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321203\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321229\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321255\" ]]\n  then\n    cat \"${fastq}\" >> NPSL58.SRR3321203-SRR3321229-SRR3321255\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321204\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321230\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321257\" ]]\n  then\n    cat \"${fastq}\" >> PLL20.SRR3321204-SRR3321230-SRR3321257\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321205\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321231\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321258\" ]]\n  then\n    cat \"${fastq}\" >> PLL31.SRR3321205-SRR3321231-SRR3321258\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321206\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321232\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321259\" ]]\n  then\n    cat \"${fastq}\" >> PLL43.SRR3321206-SRR3321232-SRR3321259\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321207\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321233\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321260\" ]]\n  then\n    cat \"${fastq}\" >> PLL55.SRR3321207-SRR3321233-SRR3321260\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321208\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321235\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321261\" ]]\n  then\n    cat \"${fastq}\" >> PLL59.SRR3321208-SRR3321235-SRR3321261\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321209\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321236\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321262\" ]]\n  then\n    cat \"${fastq}\" >> PLL62.SRR3321209-SRR3321236-SRR3321262\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321210\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321237\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321263\" ]]\n  then\n    cat \"${fastq}\" >> PSL13.SRR3321210-SRR3321237-SRR3321263\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321211\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321238\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321264\" ]]\n  then\n    cat \"${fastq}\" >> PSL16.SRR3321211-SRR3321238-SRR3321264\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321213\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321239\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321265\" ]]\n  then\n    cat \"${fastq}\" >> PSL35.SRR3321213-SRR3321239-SRR3321265\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321214\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321240\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321266\" ]]\n  then\n    cat \"${fastq}\" >> PSL49.SRR3321214-SRR3321240-SRR3321266\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321215\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321241\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321268\" ]]\n  then\n    cat \"${fastq}\" >> PSL53.SRR3321215-SRR3321241-SRR3321268\"${fastq_pattern}\"\n  elif\n    [[ \"${sample_name}\" == \"SRR3321216\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321242\" ]] \\\n    || [[ \"${sample_name}\" == \"SRR3321269\" ]]\n  then\n    cat \"${fastq}\" >> PSL63.SRR3321216-SRR3321242-SRR3321269\"${fastq_pattern}\"\n  fi\n\ndone\n\n# Check array size to confirm it has all expected samples\n# Exit if mismatch\nif [[ \"${fastq_counter}\" != \"${total_fastqs}\" ]]\nthen\n  echo \"Expected ${total_fastqs} FastQs, but only found ${fastq_counter}!\"\n  echo \"\"\n  echo \"Check original-fastq-checksums.md5 file for list of FastQs processed.\"\n  echo \"\"\n  exit\nfi\n\n###### Load associative array ######\n\n# Set sample counter for array verification\nsample_counter=0\n\nfor fastq in *\"${fastq_pattern}\"\ndo\n  # Generate MD5 checksums for original set of FastQs\n  md5sum \"${fastq}\" >> concatenated-fastq-checksums.md5\n\n  # Increment counter\n  ((sample_counter+=1))\n\n  # Remove path\n  sample_name=\"${fastq##*/}\"\n\n  # Get sample name from first \".\"-delimited field\n  sample_name=$(echo \"${sample_name}\" | awk -F \".\" '{print $1}')\n\n\n  # Set treatment condition for each sample\n  # Primarily used for setting read group (RG) during BAM creation\n  if\n    [[ \"${sample_name}\" == \"NPLL32\" ]] \\\n    || [[ \"${sample_name}\" == \"NPLL34\" ]] \\\n    || [[ \"${sample_name}\" == \"NPLL44\" ]] \\\n    || [[ \"${sample_name}\" == \"NPLL46\" ]] \\\n    || [[ \"${sample_name}\" == \"NPLL56\" ]] \\\n    || [[ \"${sample_name}\" == \"NPLL61\" ]]\n  then\n    treatment=\"lean-non_parasitized\"\n  elif\n    [[ \"${sample_name}\" == \"NPSL15\" ]] \\\n    || [[ \"${sample_name}\" == \"NPSL24\" ]] \\\n    || [[ \"${sample_name}\" == \"NPSL29\" ]] \\\n    || [[ \"${sample_name}\" == \"NPSL36\" ]] \\\n    || [[ \"${sample_name}\" == \"NPSL50\" ]] \\\n    || [[ \"${sample_name}\" == \"NPSL58\" ]]\n  then\n    treatment=\"siscowet-non_parasitized\"\n  elif\n    [[ \"${sample_name}\" == \"PLL20\" ]] \\\n    || [[ \"${sample_name}\" == \"PLL31\" ]] \\\n    || [[ \"${sample_name}\" == \"PLL43\" ]] \\\n    || [[ \"${sample_name}\" == \"PLL55\" ]] \\\n    || [[ \"${sample_name}\" == \"PLL59\" ]] \\\n    || [[ \"${sample_name}\" == \"PLL62\" ]]\n  then\n    treatment=\"lean-parasitized\"\n  else\n    treatment=\"siscowet-parasitized\"  \n  fi\n\n  # Append to associative array\n  samples_associative_array+=([\"${sample_name}\"]=\"${treatment}\")\n\ndone\n\n# Check array size to confirm it has all expected samples\n# Exit if mismatch\nif [[ \"${#samples_associative_array[@]}\" != \"${sample_counter}\" ]] \\\n|| [[ \"${#samples_associative_array[@]}\" != \"${total_samples}\" ]]\n  then\n    echo \"samples_associative_array doesn't have all ${total_samples} samples.\"\n    echo \"\"\n    echo \"samples_associative_array contents:\"\n    echo \"\"\n    for item in \"${!samples_associative_array[@]}\"\n    do\n      printf \"%s\\t%s\\n\" \"${item}\" \"${samples_associative_array[${item}]}\"\n    done\n\n    exit\nfi\n\n# Run Hisat2 on each FastQ file\nfor sample in \"${!samples_associative_array[@]}\"\ndo\n  # Identify corresponding FastQ file\n  # Pipe to sed replace leading \"./\" with \"../\" to manage relative FastQ path\n  fastq=$(find . -name \"${sample}*${fastq_pattern}\" | sed 's/.\\//..\\//')\n\n  # Create and switch to dedicated sample directory\n  mkdir \"${sample}\" && cd \"$_\"\n\n  # Hisat2 alignments\n  # Sets read group info (RG) using samples array\n  # Uses -U for single-end reads\n  \"${programs_array[hisat2]}\" \\\n  -x \"${genome_index_name}\" \\\n  -U \"${fastq}\" \\\n  -S \"${sample}\".sam \\\n  --rg-id \"${sample}\" \\\n  --rg \"SM:\"\"${samples_associative_array[$sample]}\" \\\n  2> \"${sample}\"_hisat2.err\n\n  # Sort SAM files, convert to BAM, and index\n  ${programs_array[samtools_view]} \\\n  -@ \"${threads}\" \\\n  -Su \"${sample}\".sam \\\n  | ${programs_array[samtools_sort]} - \\\n  -@ \"${threads}\" \\\n  -o \"${sample}\".sorted.bam\n\n\n  # Index BAM\n  ${programs_array[samtools_index]} \"${sample}\".sorted.bam\n\n\n  # Run stringtie on alignments\n  # Uses \"-B\" option to output tables intended for use in Ballgown\n  # Uses \"-e\" option; recommended when using \"-B\" option.\n  # Limits analysis to only reads alignments matching reference.\n  \"${programs_array[stringtie]}\" \"${sample}\".sorted.bam \\\n  -p \"${threads}\" \\\n  -o \"${sample}\".gtf \\\n  -G \"${genome_gff}\" \\\n  -C \"${sample}.cov_refs.gtf\" \\\n  -B \\\n  -e\n\n# Add GTFs to list file, only if non-empty\n# Identifies GTF files that only have header\n  gtf_lines=$(wc -l < \"${sample}\".gtf )\n  if [ \"${gtf_lines}\" -gt 2 ]; then\n    echo \"$(pwd)/${sample}.gtf\" >> ../\"${gtf_list}\"\n  fi\n\n  # Delete unneeded SAM files\n  rm ./*.sam\n\n  # Generate checksums\n  for file in *\n  do\n    md5sum \"${file}\" >> \"${sample}\"-checksums.md5\n  done\n\n  # Move up to orig. working directory\n  cd ..\n\ndone\n\n# Merge all BAMs to singular BAM for use in transcriptome assembly later\n## Create list of sorted BAMs for merging\nfind . -name \"*sorted.bam\" > sorted_bams.list\n\n## Merge sorted BAMs\n${programs_array[samtools_merge]} \\\n-b sorted_bams.list \\\n${merged_bam} \\\n--threads ${threads}\n\n## Index merged BAM\n${programs_array[samtools_index]} ${merged_bam}\n\n\n\n# Create singular transcript file, using GTF list file\n\"${programs_array[stringtie]}\" --merge \\\n\"${gtf_list}\" \\\n-p \"${threads}\" \\\n-G \"${genome_gff}\" \\\n-o \"${genome_index_name}\".stringtie.gtf\n\n\n# Generate checksums\nfind . -type f -maxdepth 1 -exec md5sum {} + >> checksums.md5\n\n\n#######################################################################################################\n\n# Capture program options\nif [[ \"${#programs_array[@]}\" -gt 0 ]]; then\n  echo \"Logging program options...\"\n  for program in \"${!programs_array[@]}\"\n  do\n    {\n    echo \"Program options for ${program}: \"\n    echo \"\"\n    # Handle samtools help menus\n    if [[ \"${program}\" == \"samtools_index\" ]] \\\n    || [[ \"${program}\" == \"samtools_sort\" ]] \\\n    || [[ \"${program}\" == \"samtools_view\" ]]\n    then\n      ${programs_array[$program]}\n\n    # Handle DIAMOND BLAST menu\n    elif [[ \"${program}\" == \"diamond\" ]]; then\n      ${programs_array[$program]} help\n\n    # Handle NCBI BLASTx menu\n    elif [[ \"${program}\" == \"blastx\" ]]; then\n      ${programs_array[$program]} -help\n    fi\n    ${programs_array[$program]} -h\n    echo \"\"\n    echo \"\"\n    echo \"----------------------------------------------\"\n    echo \"\"\n    echo \"\"\n  } &>> program_options.log || true\n\n    # If MultiQC is in programs_array, copy the config file to this directory.\n    if [[ \"${program}\" == \"multiqc\" ]]; then\n      cp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n    fi\n  done\n  echo \"Finished logging programs options.\"\n  echo \"\"\nfi\n\n\n# Document programs in PATH (primarily for program version ID)\necho \"Logging system $PATH...\"\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\necho \"Finished logging system $PATH.\"\n```\n\n\n---\n\n# RESULTS\n\nRuntime was almost exactly 7hrs:\n\n![Screencap of Mox job runtime](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms_runtime.png?raw=true)\n\nOutput folder:\n\n- [20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms/](https://gannet.fish.washington.edu/Atumefaciens/20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms/)\n\n  #### MultiQC Report for Hisat2 alignments\n\n    - [20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms/multiqc_report.html](https://gannet.fish.washington.edu/Atumefaciens/20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms/multiqc_report.html) (HTML; opens in browser)\n\n  #### Merged BAM file\n\n    - [20220810-snam-stringtie-GCF_016432855.1-sorted_bams-merged.bam](https://gannet.fish.washington.edu/Atumefaciens/20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms/20220810-snam-stringtie-GCF_016432855.1-sorted_bams-merged.bam) (20G)\n\n      - MD5: `6911d3fc9f725a09a09a4c584b68ddfa`\n\n  #### Merged BAM index file (useful for IGV)\n\n    - [20220810-snam-stringtie-GCF_016432855.1-sorted_bams-merged.bam.bai](https://gannet.fish.washington.edu/Atumefaciens/20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms/20220810-snam-stringtie-GCF_016432855.1-sorted_bams-merged.bam.bai) (3.3M)\n\n      - MD5: `368e45c560e61f812522a00c71a89eee`\n\n  #### StringTie GTF\n\n    - [snam-GCF_016432855.1.stringtie.gtf](https://gannet.fish.washington.edu/Atumefaciens/20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms/snam-GCF_016432855.1.stringtie.gtf) (125M)\n\n      - MD5: `7396cc52190b6c6408c0f3bbc82e9ed6`\n\nIndividual library alignments can be found in their respective subdirectories, along with their BAM, BAM index, GTF, and Ballgown tables (`*.ctab`). See the directory tree below for a better overview.\n\n---\n\nDirectory tree:\n\n```shell\n├── 20220810-snam-hisat2-GCF_016432855.1_index-align-stringtie_isoforms.sh\n├── 20220810-snam-stringtie-GCF_016432855.1-sorted_bams-merged.bam\n├── 20220810-snam-stringtie-GCF_016432855.1-sorted_bams-merged.bam.bai\n├── checksums.md5\n├── concatenated-fastq-checksums.md5\n├── gtf_list.txt\n├── hisat2_build.err\n├── NPLL32\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── NPLL32-checksums.md5\n│   ├── NPLL32.cov_refs.gtf\n│   ├── NPLL32.gtf\n│   ├── NPLL32_hisat2.err\n│   ├── NPLL32.sorted.bam\n│   ├── NPLL32.sorted.bam.bai\n│   └── t_data.ctab\n├── NPLL32.SRR3321200-SRR3321217-SRR3321243.fastq.trimmed.20220707.fq.gz\n├── NPLL34\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── NPLL34-checksums.md5\n│   ├── NPLL34.cov_refs.gtf\n│   ├── NPLL34.gtf\n│   ├── NPLL34_hisat2.err\n│   ├── NPLL34.sorted.bam\n│   ├── NPLL34.sorted.bam.bai\n│   └── t_data.ctab\n├── NPLL34.SRR3321201-SRR3321218-SRR3321244.fastq.trimmed.20220707.fq.gz\n├── NPLL44\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── NPLL44-checksums.md5\n│   ├── NPLL44.cov_refs.gtf\n│   ├── NPLL44.gtf\n│   ├── NPLL44_hisat2.err\n│   ├── NPLL44.sorted.bam\n│   ├── NPLL44.sorted.bam.bai\n│   └── t_data.ctab\n├── NPLL44.SRR3321212-SRR3321219-SRR3321246.fastq.trimmed.20220707.fq.gz\n├── NPLL46\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── NPLL46-checksums.md5\n│   ├── NPLL46.cov_refs.gtf\n│   ├── NPLL46.gtf\n│   ├── NPLL46_hisat2.err\n│   ├── NPLL46.sorted.bam\n│   ├── NPLL46.sorted.bam.bai\n│   └── t_data.ctab\n├── NPLL46.SRR3321223-SRR3321220-SRR3321247.fastq.trimmed.20220707.fq.gz\n├── NPLL56\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── NPLL56-checksums.md5\n│   ├── NPLL56.cov_refs.gtf\n│   ├── NPLL56.gtf\n│   ├── NPLL56_hisat2.err\n│   ├── NPLL56.sorted.bam\n│   ├── NPLL56.sorted.bam.bai\n│   └── t_data.ctab\n├── NPLL56.SRR3321234-SRR3321221-SRR3321248.fastq.trimmed.20220707.fq.gz\n├── NPLL61\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── NPLL61-checksums.md5\n│   ├── NPLL61.cov_refs.gtf\n│   ├── NPLL61.gtf\n│   ├── NPLL61_hisat2.err\n│   ├── NPLL61.sorted.bam\n│   ├── NPLL61.sorted.bam.bai\n│   └── t_data.ctab\n├── NPLL61.SRR3321245-SRR3321222-SRR3321249.fastq.trimmed.20220707.fq.gz\n├── NPSL15\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── NPSL15-checksums.md5\n│   ├── NPSL15.cov_refs.gtf\n│   ├── NPSL15.gtf\n│   ├── NPSL15_hisat2.err\n│   ├── NPSL15.sorted.bam\n│   ├── NPSL15.sorted.bam.bai\n│   └── t_data.ctab\n├── NPSL15.SRR3321256-SRR3321224-SRR3321250.fastq.trimmed.20220707.fq.gz\n├── NPSL24\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── NPSL24-checksums.md5\n│   ├── NPSL24.cov_refs.gtf\n│   ├── NPSL24.gtf\n│   ├── NPSL24_hisat2.err\n│   ├── NPSL24.sorted.bam\n│   ├── NPSL24.sorted.bam.bai\n│   └── t_data.ctab\n├── NPSL24.SRR3321267-SRR3321225-SRR3321251.fastq.trimmed.20220707.fq.gz\n├── NPSL29\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── NPSL29-checksums.md5\n│   ├── NPSL29.cov_refs.gtf\n│   ├── NPSL29.gtf\n│   ├── NPSL29_hisat2.err\n│   ├── NPSL29.sorted.bam\n│   ├── NPSL29.sorted.bam.bai\n│   └── t_data.ctab\n├── NPSL29.SRR3321270-SRR3321226-SRR3321252.fastq.trimmed.20220707.fq.gz\n├── NPSL36\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── NPSL36-checksums.md5\n│   ├── NPSL36.cov_refs.gtf\n│   ├── NPSL36.gtf\n│   ├── NPSL36_hisat2.err\n│   ├── NPSL36.sorted.bam\n│   ├── NPSL36.sorted.bam.bai\n│   └── t_data.ctab\n├── NPSL36.SRR3321271-SRR3321227-SRR3321253.fastq.trimmed.20220707.fq.gz\n├── NPSL50\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── NPSL50-checksums.md5\n│   ├── NPSL50.cov_refs.gtf\n│   ├── NPSL50.gtf\n│   ├── NPSL50_hisat2.err\n│   ├── NPSL50.sorted.bam\n│   ├── NPSL50.sorted.bam.bai\n│   └── t_data.ctab\n├── NPSL50.SRR3321202-SRR3321228-SRR3321254.fastq.trimmed.20220707.fq.gz\n├── NPSL58\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── NPSL58-checksums.md5\n│   ├── NPSL58.cov_refs.gtf\n│   ├── NPSL58.gtf\n│   ├── NPSL58_hisat2.err\n│   ├── NPSL58.sorted.bam\n│   ├── NPSL58.sorted.bam.bai\n│   └── t_data.ctab\n├── NPSL58.SRR3321203-SRR3321229-SRR3321255.fastq.trimmed.20220707.fq.gz\n├── original-fastq-checksums.md5\n├── PLL20\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── PLL20-checksums.md5\n│   ├── PLL20.cov_refs.gtf\n│   ├── PLL20.gtf\n│   ├── PLL20_hisat2.err\n│   ├── PLL20.sorted.bam\n│   ├── PLL20.sorted.bam.bai\n│   └── t_data.ctab\n├── PLL20.SRR3321204-SRR3321230-SRR3321257.fastq.trimmed.20220707.fq.gz\n├── PLL31\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── PLL31-checksums.md5\n│   ├── PLL31.cov_refs.gtf\n│   ├── PLL31.gtf\n│   ├── PLL31_hisat2.err\n│   ├── PLL31.sorted.bam\n│   ├── PLL31.sorted.bam.bai\n│   └── t_data.ctab\n├── PLL31.SRR3321205-SRR3321231-SRR3321258.fastq.trimmed.20220707.fq.gz\n├── PLL43\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── PLL43-checksums.md5\n│   ├── PLL43.cov_refs.gtf\n│   ├── PLL43.gtf\n│   ├── PLL43_hisat2.err\n│   ├── PLL43.sorted.bam\n│   ├── PLL43.sorted.bam.bai\n│   └── t_data.ctab\n├── PLL43.SRR3321206-SRR3321232-SRR3321259.fastq.trimmed.20220707.fq.gz\n├── PLL55\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── PLL55-checksums.md5\n│   ├── PLL55.cov_refs.gtf\n│   ├── PLL55.gtf\n│   ├── PLL55_hisat2.err\n│   ├── PLL55.sorted.bam\n│   ├── PLL55.sorted.bam.bai\n│   └── t_data.ctab\n├── PLL55.SRR3321207-SRR3321233-SRR3321260.fastq.trimmed.20220707.fq.gz\n├── PLL59\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── PLL59-checksums.md5\n│   ├── PLL59.cov_refs.gtf\n│   ├── PLL59.gtf\n│   ├── PLL59_hisat2.err\n│   ├── PLL59.sorted.bam\n│   ├── PLL59.sorted.bam.bai\n│   └── t_data.ctab\n├── PLL59.SRR3321208-SRR3321235-SRR3321261.fastq.trimmed.20220707.fq.gz\n├── PLL62\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── PLL62-checksums.md5\n│   ├── PLL62.cov_refs.gtf\n│   ├── PLL62.gtf\n│   ├── PLL62_hisat2.err\n│   ├── PLL62.sorted.bam\n│   ├── PLL62.sorted.bam.bai\n│   └── t_data.ctab\n├── PLL62.SRR3321209-SRR3321236-SRR3321262.fastq.trimmed.20220707.fq.gz\n├── program_options.log\n├── PSL13\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── PSL13-checksums.md5\n│   ├── PSL13.cov_refs.gtf\n│   ├── PSL13.gtf\n│   ├── PSL13_hisat2.err\n│   ├── PSL13.sorted.bam\n│   ├── PSL13.sorted.bam.bai\n│   └── t_data.ctab\n├── PSL13.SRR3321210-SRR3321237-SRR3321263.fastq.trimmed.20220707.fq.gz\n├── PSL16\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── PSL16-checksums.md5\n│   ├── PSL16.cov_refs.gtf\n│   ├── PSL16.gtf\n│   ├── PSL16_hisat2.err\n│   ├── PSL16.sorted.bam\n│   ├── PSL16.sorted.bam.bai\n│   └── t_data.ctab\n├── PSL16.SRR3321211-SRR3321238-SRR3321264.fastq.trimmed.20220707.fq.gz\n├── PSL35\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── PSL35-checksums.md5\n│   ├── PSL35.cov_refs.gtf\n│   ├── PSL35.gtf\n│   ├── PSL35_hisat2.err\n│   ├── PSL35.sorted.bam\n│   ├── PSL35.sorted.bam.bai\n│   └── t_data.ctab\n├── PSL35.SRR3321213-SRR3321239-SRR3321265.fastq.trimmed.20220707.fq.gz\n├── PSL49\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── PSL49-checksums.md5\n│   ├── PSL49.cov_refs.gtf\n│   ├── PSL49.gtf\n│   ├── PSL49_hisat2.err\n│   ├── PSL49.sorted.bam\n│   ├── PSL49.sorted.bam.bai\n│   └── t_data.ctab\n├── PSL49.SRR3321214-SRR3321240-SRR3321266.fastq.trimmed.20220707.fq.gz\n├── PSL53\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── PSL53-checksums.md5\n│   ├── PSL53.cov_refs.gtf\n│   ├── PSL53.gtf\n│   ├── PSL53_hisat2.err\n│   ├── PSL53.sorted.bam\n│   ├── PSL53.sorted.bam.bai\n│   └── t_data.ctab\n├── PSL53.SRR3321215-SRR3321241-SRR3321268.fastq.trimmed.20220707.fq.gz\n├── PSL63\n│   ├── e2t.ctab\n│   ├── e_data.ctab\n│   ├── i2t.ctab\n│   ├── i_data.ctab\n│   ├── PSL63-checksums.md5\n│   ├── PSL63.cov_refs.gtf\n│   ├── PSL63.gtf\n│   ├── PSL63_hisat2.err\n│   ├── PSL63.sorted.bam\n│   ├── PSL63.sorted.bam.bai\n│   └── t_data.ctab\n├── PSL63.SRR3321216-SRR3321242-SRR3321269.fastq.trimmed.20220707.fq.gz\n├── slurm-3459606.out\n├── snam-GCF_016432855.1.1.ht2\n├── snam-GCF_016432855.1.2.ht2\n├── snam-GCF_016432855.1.3.ht2\n├── snam-GCF_016432855.1.4.ht2\n├── snam-GCF_016432855.1.5.ht2\n├── snam-GCF_016432855.1.6.ht2\n├── snam-GCF_016432855.1.7.ht2\n├── snam-GCF_016432855.1.8.ht2\n├── snam-GCF_016432855.1_hisat2_exons.tab\n├── snam-GCF_016432855.1_hisat2_splice_sites.tab\n├── snam-GCF_016432855.1.stringtie.gtf\n├── sorted_bams.list\n├── SraRunTable.txt\n└── system_path.log\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"Splice Site Identification - S.namaycush Liver Parasitized and Non-Parasitized SRA RNAseq Using Hisat2-Stingtie with Genome GCF_016432855.1","date":"2022-08-10 16:45","tags":["hisat2","lake trout","siscowet","lean","Salvelinus namaycush","stringtie","splice","RNAseq","SRA","GCF_016432855.1"],"categories":["2022","Miscellaneous"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}