{"title":"Nextflow - Trials and Tribulations of Installing and Using NF-Core RNAseq","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"Nextflow - Trials and Tribulations of Installing and Using NF-Core RNAseq","date":"2022-03-25 13:11","tags":["mox","nextflow","RNAseq","nf-core"],"categories":["2022","Miscellaneous"]},"headingText":"INSTALLATION","containsRefs":false,"markdown":"\n\nFor some reason, I struggled to get things installed correctly. Installing [Nextflow](https://www.nextflow.io/) was straightforward and didn't have any issues. First bump in the road came from the [installation directions](https://nf-co.re/rnaseq/3.6#quick-start) for [NF-Core RNAseq](https://nf-co.re/rnaseq). The instructions say \"Download the pipeline and test it..\". Well, that doesn't indicate how/where to download. To add to the confusion (will be evident how in a bit), the previous step says to \"only use Conda as a last resort\". Okay, so how do I get the [NF-Core RNAseq](https://nf-co.re/rnaseq)? I downloaded the latest release from the [GitHub Release page](https://github.com/nf-core/rnaseq/releases/tag/3.6). After doing that, I couldn't figure out how to just get a basic command (e.g. `nf-core download`) to run. I managed to discover that I likely needed to install [nf-core Tools](https://nf-co.re/tools/). However, doing that meant that I would have to use either [Conda](https://bioconda.github.io/recipes/nf-core/README.html) or Docker. Docker seemed overly complicated (didn't want to have to deal with re-learning container/image usage _and_ within the confines of a SLURM environment like Mox - this whole thing was supposed to be quick and easy!) and using Conda was strongly discouraged for the [NF-Core RNAseq](https://nf-co.re/rnaseq). For \"simplicity\" I went the Conda route. This is where everything went awry...\n\nThe pipeline is designed to have internet access to update and download newer config files automatically. Knowing that running SLURM job wouldn't have internet access, I followed the [instructions for downloading a pipeline for offlne use](https://nf-co.re/tools/#downloading-pipelines-for-offline-use). Running the `nf-core download` command initiated an interactive mode to specify things, like which version to download, whether or not to provide a directory for `$NXF_SINGULARITY_CACHEDIR`, and whether or not to compress the Singularity container that would be downloaded. Setting `$NXF_SINGULARITY_CACHEDIR` seemed to cause issues. Additionally, the Singulairity download was surprisingly fast.\n\nAs it all turns out, I think the issue was that I had downloaded [NF-Core RNAseq](https://nf-co.re/rnaseq) from the GitHub release _and_ installed via Conda. Essentially, Conda creates the same directory structure in the same location as the [NF-Core RNAseq](https://nf-co.re/rnaseq) install from the GitHub release. And, this fact, I think broke everything. \n\nTo fix the installation, I uninstalled all things related to [NF-Core RNAseq](https://nf-co.re/rnaseq), but I left the [Nextflow](https://www.nextflow.io/) installation. Then, I installed [nf-core Tools](https://nf-co.re/tools/) (and, subsequently the RNAseq package) using _only_ the Conda installation. Once I did that (and activated the nf-core/rnaseq conda environment) and ran the `nf-core download`, I noticed that the Singularity download took _significantly_ longer than previous attempts, which led me to think that things were working, finally.\n\n#### RUNNING\n\nAfter finally getting things installed properly, I encountered a number of problems just trying to get the pipeline to run successfully. There were a number of small issues that lead to a lot of troubleshooting:\n\nError:\n\nTranscript names not matching GFF.\n\nSolution:\n\nIf supplying a transcriptome, the names in the FastA description lines have to match those in the GFF. Since we _de novo_ assembled our transcriptome using [`Trinity`](https://github.com/trinityrnaseq/trinityrnaseq/wiki), it has Trinity IDs which do not correspond to the genome assembly/annotation. So, I dropped the transcriptome option for the run.\n\nError:\n\n```\nUnable to parse config file: '/gscratch/srlab/programs/nf-core-rnaseq-3.6/workflow/nextflow.config'\n\n  Cannot compare java.lang.Boolean with value 'true' and java.lang.Integer with value '0'\n```\n\nSolution:\n\n```--trim_nextseq``` option actually requires an integer. Documentation didn't indicate such at the time, but may now though as I brought this to the attention of the developers via their Slack group and the discussion indicated they should add this info to the websit.\n\nError:\n\n```\nUnable to parse config file: '/gscratch/srlab/programs/nf-core-rnaseq-3.6/workflow/nextflow.config'\n```\n\nSolution:\n\nWhen using a custom config file, one cannot use the `check_max()`. I had just been modifying the values for RAM, CPUs, run times that were in the `base.config` file. The `base.confi` file utilizes the `check_max()` function. After a bunch of sleuthing on the NF-Core RNAseq GitHub and Slack groups, I finally discovered this solution. Here's what the custom, functional config looks like:\n\n- `/gscratch/srlab/programs/nf-core-rnaseq-3.6/configs/conf/base-srlab_500GB_node.config`\n\n```\n/*\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    nf-core/rnaseq Nextflow base config file modified by Sam White on 20220321 for use\n    on Roberts Lab 500GB Mox node.\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    A 'blank slate' config file, appropriate for general use on most high performance\n    compute environments. Assumes that all software is installed and available on\n    the PATH. Runs in `local` mode - all jobs will be run on the logged in environment.\n----------------------------------------------------------------------------------------\n*\n\nprocess {\n\n    cpus   = 28\n    memory = 500.GB\n    time   = 30.d\n\n    errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish' }\n    maxRetries    = 1\n    maxErrors     = '-1'\n\n    // Process-specific resource requirements\n    withLabel:process_low {\n        cpus   = 28\n        memory = 500.GB\n        time   = 30.d\n    }\n    withLabel:process_medium {\n        cpus   = 28\n        memory = 500.GB\n        time   = 30.d\n    }\n    withLabel:process_high {\n        cpus   = 28\n        memory = 500.GB\n        time   = 30.d\n    }\n    withLabel:process_long {\n        time   = 30.d\n    }\n    withLabel:process_high_memory {\n        memory = 500.GB\n    }\n    withLabel:error_ignore {\n        errorStrategy = 'ignore'\n    }\n    withLabel:error_retry {\n        errorStrategy = 'retry'\n        maxRetries    = 2\n    }\n    withName:CUSTOM_DUMPSOFTWAREVERSIONS {\n        cache = false\n    }\n}\n```\n\nError:\n\n`Error Message: Strand is neither '+' nor '-'!`\n\n```\nERROR nextflow.processor.TaskProcessor - Error executing process > 'NFCORE_RNASEQ:RNASEQ:PREPARE_GENOME:MAKE_TRANSCRIPTS_FASTA (rsem/Panopea-generosa-v1.0.fa)'\nCaused by:\n  Process `NFCORE_RNASEQ:RNASEQ:PREPARE_GENOME:MAKE_TRANSCRIPTS_FASTA (rsem/Panopea-generosa-v1.0.fa)` terminated with an error exit status (255)\nCommand executed:\n  rsem-prepare-reference \\\n      --gtf Panopea-generosa-v1.0_genes.gtf \\\n      --num-threads 28 \\\n       \\\n      rsem/Panopea-generosa-v1.0.fa \\\n      rsem/genome\n  \n  cp rsem/genome.transcripts.fa .\n  \n  cat <<-END_VERSIONS > versions.yml\n  \"NFCORE_RNASEQ:RNASEQ:PREPARE_GENOME:MAKE_TRANSCRIPTS_FASTA\":\n      rsem: $(rsem-calculate-expression --version | sed -e \"s/Current version: RSEM v//g\")\n      star: $(STAR --version | sed -e \"s/STAR_//g\")\n  END_VERSIONS\nCommand exit status:\n  255\nCommand output:\n  rsem-extract-reference-transcripts rsem/genome 0 Panopea-generosa-v1.0_genes.gtf None 0 rsem/Panopea-generosa-v1.0.fa\n  \"rsem-extract-reference-transcripts rsem/genome 0 Panopea-generosa-v1.0_genes.gtf None 0 rsem/Panopea-generosa-v1.0.fa\" failed! Plase check if you provide correct parameters/options for the pipeline!\nCommand error:\n  The GTF file might be corrupted!\n  Stop at line : Scaffold_02    GenSAS_5d82b316cd298-trnascan   transcript      27467   27541   38.1    .       .       transcript_id \"21513.GS22252506.PGEN_.tRNA00000001\"; gene_id \"21513.GS22252506.PGEN_.tRNA00000001\"; Name \"Thr\"; anti_codon \"CGT\"; gene_no \"1376\";\n```\n\nSolution:\n\nAs it turns out, this wasn't an issue with the pipeline, it's really an issue with [how RSEM handles GTF strand parsing](https://github.com/deweylab/RSEM/blob/e4dda70e90fb5eb9b831306f1c381f8bbf71ef0e/GTFItem.h#L64). Even though the [GFF spec](https://github.com/The-Sequence-Ontology/Specifications/blob/master/gff3.md) indicates that strand column can be one of `+`, `-`, `.`, or `?`, RSEM only parses for `+` or `-`. And, as it turns out, our genome GFF has some `.` for strand info. Looking through our \"merged\" GenSAS GFF, it turns out there are two sets of annotations that only have `.` for strand info (`GenSAS_5d82b316cd298-trnascan` & `RNAmmer-1.2`). So, the decision needed to be made if we should convert these sets strands to an \"artificial\" value (e.g. set all of them to `+`), or eliminate them from the input GFF. I ended up converting `GenSAS_5d82b316cd298-trnascan` strand to `+` and eliminated `RNAmmer-1.2` from the final input GFF.\n\nOverall, it was a bit of an arduos process, but it's all running now... Will update if I encounter any more hurdles.\n","srcMarkdownNoYaml":"\n#### INSTALLATION\n\nFor some reason, I struggled to get things installed correctly. Installing [Nextflow](https://www.nextflow.io/) was straightforward and didn't have any issues. First bump in the road came from the [installation directions](https://nf-co.re/rnaseq/3.6#quick-start) for [NF-Core RNAseq](https://nf-co.re/rnaseq). The instructions say \"Download the pipeline and test it..\". Well, that doesn't indicate how/where to download. To add to the confusion (will be evident how in a bit), the previous step says to \"only use Conda as a last resort\". Okay, so how do I get the [NF-Core RNAseq](https://nf-co.re/rnaseq)? I downloaded the latest release from the [GitHub Release page](https://github.com/nf-core/rnaseq/releases/tag/3.6). After doing that, I couldn't figure out how to just get a basic command (e.g. `nf-core download`) to run. I managed to discover that I likely needed to install [nf-core Tools](https://nf-co.re/tools/). However, doing that meant that I would have to use either [Conda](https://bioconda.github.io/recipes/nf-core/README.html) or Docker. Docker seemed overly complicated (didn't want to have to deal with re-learning container/image usage _and_ within the confines of a SLURM environment like Mox - this whole thing was supposed to be quick and easy!) and using Conda was strongly discouraged for the [NF-Core RNAseq](https://nf-co.re/rnaseq). For \"simplicity\" I went the Conda route. This is where everything went awry...\n\nThe pipeline is designed to have internet access to update and download newer config files automatically. Knowing that running SLURM job wouldn't have internet access, I followed the [instructions for downloading a pipeline for offlne use](https://nf-co.re/tools/#downloading-pipelines-for-offline-use). Running the `nf-core download` command initiated an interactive mode to specify things, like which version to download, whether or not to provide a directory for `$NXF_SINGULARITY_CACHEDIR`, and whether or not to compress the Singularity container that would be downloaded. Setting `$NXF_SINGULARITY_CACHEDIR` seemed to cause issues. Additionally, the Singulairity download was surprisingly fast.\n\nAs it all turns out, I think the issue was that I had downloaded [NF-Core RNAseq](https://nf-co.re/rnaseq) from the GitHub release _and_ installed via Conda. Essentially, Conda creates the same directory structure in the same location as the [NF-Core RNAseq](https://nf-co.re/rnaseq) install from the GitHub release. And, this fact, I think broke everything. \n\nTo fix the installation, I uninstalled all things related to [NF-Core RNAseq](https://nf-co.re/rnaseq), but I left the [Nextflow](https://www.nextflow.io/) installation. Then, I installed [nf-core Tools](https://nf-co.re/tools/) (and, subsequently the RNAseq package) using _only_ the Conda installation. Once I did that (and activated the nf-core/rnaseq conda environment) and ran the `nf-core download`, I noticed that the Singularity download took _significantly_ longer than previous attempts, which led me to think that things were working, finally.\n\n#### RUNNING\n\nAfter finally getting things installed properly, I encountered a number of problems just trying to get the pipeline to run successfully. There were a number of small issues that lead to a lot of troubleshooting:\n\nError:\n\nTranscript names not matching GFF.\n\nSolution:\n\nIf supplying a transcriptome, the names in the FastA description lines have to match those in the GFF. Since we _de novo_ assembled our transcriptome using [`Trinity`](https://github.com/trinityrnaseq/trinityrnaseq/wiki), it has Trinity IDs which do not correspond to the genome assembly/annotation. So, I dropped the transcriptome option for the run.\n\nError:\n\n```\nUnable to parse config file: '/gscratch/srlab/programs/nf-core-rnaseq-3.6/workflow/nextflow.config'\n\n  Cannot compare java.lang.Boolean with value 'true' and java.lang.Integer with value '0'\n```\n\nSolution:\n\n```--trim_nextseq``` option actually requires an integer. Documentation didn't indicate such at the time, but may now though as I brought this to the attention of the developers via their Slack group and the discussion indicated they should add this info to the websit.\n\nError:\n\n```\nUnable to parse config file: '/gscratch/srlab/programs/nf-core-rnaseq-3.6/workflow/nextflow.config'\n```\n\nSolution:\n\nWhen using a custom config file, one cannot use the `check_max()`. I had just been modifying the values for RAM, CPUs, run times that were in the `base.config` file. The `base.confi` file utilizes the `check_max()` function. After a bunch of sleuthing on the NF-Core RNAseq GitHub and Slack groups, I finally discovered this solution. Here's what the custom, functional config looks like:\n\n- `/gscratch/srlab/programs/nf-core-rnaseq-3.6/configs/conf/base-srlab_500GB_node.config`\n\n```\n/*\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    nf-core/rnaseq Nextflow base config file modified by Sam White on 20220321 for use\n    on Roberts Lab 500GB Mox node.\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    A 'blank slate' config file, appropriate for general use on most high performance\n    compute environments. Assumes that all software is installed and available on\n    the PATH. Runs in `local` mode - all jobs will be run on the logged in environment.\n----------------------------------------------------------------------------------------\n*\n\nprocess {\n\n    cpus   = 28\n    memory = 500.GB\n    time   = 30.d\n\n    errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish' }\n    maxRetries    = 1\n    maxErrors     = '-1'\n\n    // Process-specific resource requirements\n    withLabel:process_low {\n        cpus   = 28\n        memory = 500.GB\n        time   = 30.d\n    }\n    withLabel:process_medium {\n        cpus   = 28\n        memory = 500.GB\n        time   = 30.d\n    }\n    withLabel:process_high {\n        cpus   = 28\n        memory = 500.GB\n        time   = 30.d\n    }\n    withLabel:process_long {\n        time   = 30.d\n    }\n    withLabel:process_high_memory {\n        memory = 500.GB\n    }\n    withLabel:error_ignore {\n        errorStrategy = 'ignore'\n    }\n    withLabel:error_retry {\n        errorStrategy = 'retry'\n        maxRetries    = 2\n    }\n    withName:CUSTOM_DUMPSOFTWAREVERSIONS {\n        cache = false\n    }\n}\n```\n\nError:\n\n`Error Message: Strand is neither '+' nor '-'!`\n\n```\nERROR nextflow.processor.TaskProcessor - Error executing process > 'NFCORE_RNASEQ:RNASEQ:PREPARE_GENOME:MAKE_TRANSCRIPTS_FASTA (rsem/Panopea-generosa-v1.0.fa)'\nCaused by:\n  Process `NFCORE_RNASEQ:RNASEQ:PREPARE_GENOME:MAKE_TRANSCRIPTS_FASTA (rsem/Panopea-generosa-v1.0.fa)` terminated with an error exit status (255)\nCommand executed:\n  rsem-prepare-reference \\\n      --gtf Panopea-generosa-v1.0_genes.gtf \\\n      --num-threads 28 \\\n       \\\n      rsem/Panopea-generosa-v1.0.fa \\\n      rsem/genome\n  \n  cp rsem/genome.transcripts.fa .\n  \n  cat <<-END_VERSIONS > versions.yml\n  \"NFCORE_RNASEQ:RNASEQ:PREPARE_GENOME:MAKE_TRANSCRIPTS_FASTA\":\n      rsem: $(rsem-calculate-expression --version | sed -e \"s/Current version: RSEM v//g\")\n      star: $(STAR --version | sed -e \"s/STAR_//g\")\n  END_VERSIONS\nCommand exit status:\n  255\nCommand output:\n  rsem-extract-reference-transcripts rsem/genome 0 Panopea-generosa-v1.0_genes.gtf None 0 rsem/Panopea-generosa-v1.0.fa\n  \"rsem-extract-reference-transcripts rsem/genome 0 Panopea-generosa-v1.0_genes.gtf None 0 rsem/Panopea-generosa-v1.0.fa\" failed! Plase check if you provide correct parameters/options for the pipeline!\nCommand error:\n  The GTF file might be corrupted!\n  Stop at line : Scaffold_02    GenSAS_5d82b316cd298-trnascan   transcript      27467   27541   38.1    .       .       transcript_id \"21513.GS22252506.PGEN_.tRNA00000001\"; gene_id \"21513.GS22252506.PGEN_.tRNA00000001\"; Name \"Thr\"; anti_codon \"CGT\"; gene_no \"1376\";\n```\n\nSolution:\n\nAs it turns out, this wasn't an issue with the pipeline, it's really an issue with [how RSEM handles GTF strand parsing](https://github.com/deweylab/RSEM/blob/e4dda70e90fb5eb9b831306f1c381f8bbf71ef0e/GTFItem.h#L64). Even though the [GFF spec](https://github.com/The-Sequence-Ontology/Specifications/blob/master/gff3.md) indicates that strand column can be one of `+`, `-`, `.`, or `?`, RSEM only parses for `+` or `-`. And, as it turns out, our genome GFF has some `.` for strand info. Looking through our \"merged\" GenSAS GFF, it turns out there are two sets of annotations that only have `.` for strand info (`GenSAS_5d82b316cd298-trnascan` & `RNAmmer-1.2`). So, the decision needed to be made if we should convert these sets strands to an \"artificial\" value (e.g. set all of them to `+`), or eliminate them from the input GFF. I ended up converting `GenSAS_5d82b316cd298-trnascan` strand to `+` and eliminated `RNAmmer-1.2` from the final input GFF.\n\nOverall, it was a bit of an arduos process, but it's all running now... Will update if I encounter any more hurdles.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"Nextflow - Trials and Tribulations of Installing and Using NF-Core RNAseq","date":"2022-03-25 13:11","tags":["mox","nextflow","RNAseq","nf-core"],"categories":["2022","Miscellaneous"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}