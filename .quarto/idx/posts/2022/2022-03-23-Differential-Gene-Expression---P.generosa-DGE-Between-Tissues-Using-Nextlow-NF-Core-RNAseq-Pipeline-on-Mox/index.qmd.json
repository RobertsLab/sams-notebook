{"title":"Differential Gene Expression - P.generosa DGE Between Tissues Using Nextlow NF-Core RNAseq Pipeline on Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"Differential Gene Expression - P.generosa DGE Between Tissues Using Nextlow NF-Core RNAseq Pipeline on Mox","date":"2022-03-23 12:55","categories":["nextflow","Panopea generosa","Pacific geoduck","RNAseq","nf-core","mox ","2022","Miscellaneous"]},"headingText":"Copies header to new GFF","containsRefs":false,"markdown":"\nSteven [asked that I obtain relative expression values for various geoduck tissues](https://github.com/RobertsLab/resources/issues/1423) (GitHub Issue). So, I decided to use this as an opportunity to try to use a [Nextflow](https://www.nextflow.io/) pipeline. There's an RNAseq pipeline, [NF-Core RNAseq](https://nf-co.re/rnaseq) which I decided to use. The pipeline appears to be ridiculously thorough (e.g. trims, removes gDNA/rRNA contamination, allows for multiple aligners to be used, quantifies/visualizes feature assignments by reads, performs differential gene expression analysis and visualization), all in one package. Sounds great, but I did have [some initial problems getting things up and running](../2022-03-25-Nextflow---Trials-and-Tribulations-of-Installing-and-Using-NF-Core-RNAseq/index.qmd). Overall, getting things set up to actually run took longer than the actual pipeline run! Oh well, it's a learning process, so that's not totally unexpected.\n\nFor this pipeline run, I made some modifications to the genome GFF input file used. First, I attempted to create a \"`gene_biotype`\" description for the pipeline to use to get some visualizations of read assignments to different components of the genome. I did that in the following fashion:\n\n\n```shell\nawk 'NR < 4 {print $0}' Panopea-generosa-v1.0.gff > Panopea-generosa-v1.0_biotype.gff\n# Adds \"gene_biotype\" to end of line that matches feature field ($3)\nawk 'NR > 3 {print $0\";gene_biotype=\"$3}' Panopea-generosa-v1.0.gff >> Panopea-generosa-v1.0_biotype.gff\n```\n\nThen, modified it further to convert tRNA strand to `+` instead of `.` in order to avoid RSEM errors regarding strand info _and_ removed RNAmmer features to also avoid RSEM strand errors.\n\n```shell\n# Converts strand field ($7) to `+` instead of `.`.\n# Works just on tRNA entries\nawk '$2 == \"GenSAS_5d82b316cd298-trnascan\" {$7=\"+\"}1' Panopea-generosa-v1.0.a4_biotype.gff > Panopea-generosa-v1.0.a4_biotype-trna_strand_converted.gff\n# Prints all lines which are not rRNA\nawk '$2 != \"RNAmmer-1.2\"' Panopea-generosa-v1.0.a4_biotype-trna_strand_converted.gff > Panopea-generosa-v1.0.a4_biotype-trna_strand_converted-no_RNAmmer.gff\n```\n\nThen, this was all run on Mox.\n\nSBATCH script (GitHub):\n\n- [20220323-pgen-nextflow_rnaseq-tissues.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20220323-pgen-nextflow_rnaseq-tissues.sh)\n\n\n```shell\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=20220323-pgen-nextflow_rnaseq-tissues\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=17-00:00:00\n## Memory per node\n#SBATCH --mem=500G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20220323-pgen-nextflow_rnaseq-tissues\n\n# Script to run Nextflow NF Core RNAseq pipeline for RNAseq analysis of P.generosa, per this GitHub Issue:\n# https://github.com/RobertsLab/resources/issues/1423\n\n# See variable assignments below for input files used: genome, GFF, transcriptome\n# List of input FastQs will be generated during run in: sample_sheet-\"${SLURM_JOB_ID}\".csv\n# Custom config file for maximum memory and CPU thread setttings\n\n# Outputs explanations are here: https://nf-co.re/rnaseq/3.6/docs/output/\n# Input parameter explanations are here: https://nf-co.re/rnaseq/3.6/parameters\n\n###################################################################################\n\n# These variables need to be set by user\n\n## Assign Variables\n\n## PROGRAMS ##\n# NF Core RNAseq workflow directory\nnf_core_rnaseq=\"/gscratch/srlab/programs/nf-core-rnaseq-3.6/workflow\"\n\n# NF Core RNAseq custom config file\nnf_core_rnaseq_config=/gscratch/srlab/programs/nf-core-rnaseq-3.6/configs/conf/base-srlab_500GB_node.config\n\n## FILES AND DIRECTORIES ##\n# Wordking directory\nwd=$(pwd)\n\n# RNAseq FastQs directory\nreads_dir=/gscratch/srlab/sam/data/P_generosa/RNAseq\n\n# Genome FastA\ngenome_fasta=/gscratch/srlab/sam/data/P_generosa/genomes/Panopea-generosa-v1.0.fa\n\n# Genome GFF3\n# This was manually modified by me to add gene_biotype to end of each entry.\n# Improves NF-Core RNAseq pipeline analysis/visualiztion to have this info present.\ngenome_gff=/gscratch/srlab/sam/data/P_generosa/genomes/Panopea-generosa-v1.0.a4_biotype-trna_strand_converted-no_RNAmmer.gff\n\n## INITIALIZE ARRAYS ##\n# Leave empty!!\nR1_array=()\nR2_array=()\nR1_uncompressed_array=()\nR2_uncompressed_array=()\n\n###################################################################################\n\n# Exit script if a command fails\nset -e\n\n# Load Anaconda\n# Uknown why this is needed, but Anaconda will not run if this line is not included.\n. \"/gscratch/srlab/programs/anaconda3/etc/profile.d/conda.sh\"\n\n# Activate NF-core conda environment\nconda activate nf-core_env\n\n# Load Singularity Mox module for NF Core/Nextflow\nmodule load singularity\n\n\n# NF Core RNAseq sample sheet header\nsample_sheet_header=\"sample,fastq_1,fastq_2,strandedness\"\nprintf \"%s\\n\" \"${sample_sheet_header}\" >> sample_sheet-\"${SLURM_JOB_ID}\".csv\n\n# Create array of original uncompressed fastq R1 files\n# Set filename pattern\nR1_uncompressed_array=(\"${reads_dir}\"/*_1.fastq)\n\n# Create array of original uncompressed fastq R2 files\n# Set filename pattern\nR2_uncompressed_array=(\"${reads_dir}\"/*_2.fastq)\n\n# Check array size to confirm it has all expected samples\n# Exit if mismatch\nif [[ \"${#R1_uncompressed_array[@]}\" != \"${#R2_uncompressed_array[@]}\" ]]\nthen\n  echo \"\"\n  echo \"Uncompressed array sizes don't match.\"\n  echo \"Confirm all expected FastQs are present in ${reads_dir}\"\n  echo \"\"\n\n  exit\nfi\n\n# Create list of original uncompressed fastq files\n## Uses parameter substitution to strip leading path from filename\nfor fastq in \"${!R1_uncompressed_array[@]}\"\ndo\n  # Strip leading path\n\tno_path=$(echo \"${R1_uncompressed_array[${fastq}]##*/}\")\n\n  # Grab SRA name\n  sra=$(echo \"${no_path}\" | awk -F \"_\" '{print $1}')\n\n  # Only gzip matching FastQs\n  # Only generate MD5 checksums for matching FastQs\n  if [[ \"${sra}\" == \"SRR12218868\" ]] \\\n    || [[ \"${sra}\" == \"SRR12218869\" ]] \\\n    || [[ \"${sra}\" == \"SRR12226692\" ]] \\\n    || [[ \"${sra}\" == \"SRR12218870\" ]] \\\n    || [[ \"${sra}\" == \"SRR12226693\" ]] \\\n    || [[ \"${sra}\" == \"SRR12207404\" ]] \\\n    || [[ \"${sra}\" == \"SRR12207405\" ]] \\\n    || [[ \"${sra}\" == \"SRR12227930\" ]] \\\n    || [[ \"${sra}\" == \"SRR12207406\" ]] \\\n    || [[ \"${sra}\" == \"SRR12207407\" ]] \\\n    || [[ \"${sra}\" == \"SRR12227931\" ]] \\\n    || [[ \"${sra}\" == \"SRR12212519\" ]] \\\n    || [[ \"${sra}\" == \"SRR12227929\" ]] \\\n    || [[ \"${sra}\" == \"SRR8788211\" ]]\n  then\n    echo \"\"\n    echo \"Generating MD5 checksums for ${R1_uncompressed_array[${fastq}]} and ${R2_uncompressed_array[${fastq}]}.\"\n    echo \"\"\n    # Generate MD5 checksums of uncompressed FastQs\n    {\n      md5sum \"${R1_uncompressed_array[${fastq}]}\"\n      md5sum \"${R2_uncompressed_array[${fastq}]}\"\n    } >> uncompressed_fastqs-\"${SLURM_JOB_ID}\".md5\n\n    # Gzip FastQs; NF Core RNAseq requires gzipped FastQs as inputs\n    echo \"Compressing FastQ files.\"\n    if [ ! -f \"${R1_uncompressed_array[${fastq}]}.gz\" ]\n    then \n      gzip --keep \"${R1_uncompressed_array[${fastq}]}\"\n      gzip --keep \"${R2_uncompressed_array[${fastq}]}\"\n    else \n      echo \"${R1_uncompressed_array[${fastq}]}.gz already exists. Skipping.\"\n    fi\n    echo \"\"\n\n\n\n  fi\ndone\n\n\n# Create array of fastq R1 files\n# Set filename pattern\nR1_array=(\"${reads_dir}\"/*_1.fastq.gz)\n\n# Create array of fastq R2 files\n# Set filename pattern\nR2_array=(\"${reads_dir}\"/*_2.fastq.gz)\n\n# Check array sizes to confirm they are same size\n# Exit if mismatch\nif [[ \"${#R1_array[@]}\" != \"${#R2_array[@]}\" ]]\n  then\n    echo \"\"\n    echo \"Read1 and Read2 compressed FastQ array sizes don't match.\"\n    echo \"Confirm all expected compressed FastQs are present in ${reads_dir}\"\n    echo \"\"\n\n    exit\nfi\n\n# Create list of fastq files used in analysis\n## Uses parameter substitution to strip leading path from filename\nfor fastq in \"${!R1_array[@]}\"\ndo\n  echo \"\"\n  echo \"Generating MD5 checksums for ${R1_array[${fastq}]} and ${R2_array[${fastq}]}.\"\n  echo \"\"\n  # Generate MD5 checksums for compressed FastQs used in NF Core RNAseq analysis\n  {\n    md5sum \"${R1_array[${fastq}]}\"\n    md5sum \"${R2_array[${fastq}]}\"\n  } >> input_fastqs-\"${SLURM_JOB_ID}\".md5\n\n  # Strip leading path\n\tno_path=$(echo \"${R1_array[${fastq}]##*/}\")\n\n  # Grab SRA name\n  sra=$(echo \"${no_path}\" | awk -F \"_\" '{print $1}')\n\n  # Set tissue type\n  if [[ \"${sra}\" == \"SRR12218868\" ]]\n  then\n    tissue=\"heart\"\n\n    # Add to NF Core RNAseq sample sheet\n    printf \"%s,%s,%s,%s\\n\" \"${tissue}\" \"${R1_array[${fastq}]}\" \"${R2_array[${fastq}]}\" \"reverse\" \\\n    >> sample_sheet-\"${SLURM_JOB_ID}\".csv\n\n  elif [[ \"${sra}\" == \"SRR12218869\" ]] \\\n    || [[ \"${sra}\" == \"SRR12226692\" ]]\n\n  then\n    tissue=\"gonad\"\n\n    # Add to NF Core RNAseq sample sheet\n    printf \"%s,%s,%s,%s\\n\" \"${tissue}\" \"${R1_array[${fastq}]}\" \"${R2_array[${fastq}]}\" \"reverse\" \\\n    >> sample_sheet-\"${SLURM_JOB_ID}\".csv\n\n  elif [[ \"${sra}\" == \"SRR12218870\" ]] \\\n    || [[ \"${sra}\" == \"SRR12226693\" ]]\n  then\n    tissue=\"ctenidia\"\n\n    # Add to NF Core RNAseq sample sheet\n    printf \"%s,%s,%s,%s\\n\" \"${tissue}\" \"${R1_array[${fastq}]}\" \"${R2_array[${fastq}]}\" \"reverse\" \\\n    >> sample_sheet-\"${SLURM_JOB_ID}\".csv\n\n  elif [[ \"${sra}\" == \"SRR12207404\" ]] \\\n    || [[ \"${sra}\" == \"SRR12207405\" ]] \\\n    || [[ \"${sra}\" == \"SRR12227930\" ]] \\\n    || [[ \"${sra}\" == \"SRR12207406\" ]] \\\n    || [[ \"${sra}\" == \"SRR12207407\" ]] \\\n    || [[ \"${sra}\" == \"SRR12227931\" ]]\n  then\n    tissue=\"juvenile\"\n\n    # Add to NF Core RNAseq sample sheet\n    printf \"%s,%s,%s,%s\\n\" \"${tissue}\" \"${R1_array[${fastq}]}\" \"${R2_array[${fastq}]}\" \"reverse\" \\\n    >> sample_sheet-\"${SLURM_JOB_ID}\".csv\n\n  elif [[ \"${sra}\" == \"SRR12212519\" ]] \\\n    || [[ \"${sra}\" == \"SRR12227929\" ]] \\\n    || [[ \"${sra}\" == \"SRR8788211\" ]]\n  then\n    tissue=\"larvae\"\n\n    # Add to NF Core RNAseq sample sheet\n    printf \"%s,%s,%s,%s\\n\" \"${tissue}\" \"${R1_array[${fastq}]}\" \"${R2_array[${fastq}]}\" \"reverse\" \\\n    >> sample_sheet-\"${SLURM_JOB_ID}\".csv\n  fi\n\ndone\n\necho \"Beginning NF-Core RNAseq pipeline...\"\necho \"\"\n# Run NF Core RNAseq workflow\nnextflow run ${nf_core_rnaseq} \\\n-profile singularity \\\n-c ${nf_core_rnaseq_config} \\\n--input sample_sheet-\"${SLURM_JOB_ID}\".csv \\\n--outdir ${wd} \\\n--multiqc_title \"20220321-pgen-nextflow_rnaseq-tissues-${SLURM_JOB_ID}\" \\\n--fasta ${genome_fasta} \\\n--gff ${genome_gff} \\\n--save_reference \\\n--gtf_extra_attributes gene_name \\\n--gtf_group_features gene_id \\\n--featurecounts_group_type gene_biotype \\\n--featurecounts_feature_type exon \\\n--trim_nextseq 20 \\\n--save_trimmed \\\n--aligner star_salmon \\\n--pseudo_aligner salmon \\\n--min_mapped_reads 5 \\\n--save_align_intermeds \\\n--rseqc_modules bam_stat,\\\ninner_distance,\\\ninfer_experiment,\\\njunction_annotation,\\\njunction_saturation,\\\nread_distribution,\\\nread_duplication\n\n##############################################################\n# Copy config file for later reference, if needed\ncp \"${nf_core_rnaseq_config}\" .\n\n# Document programs in PATH (primarily for program version ID)\n{\n  date\n  echo \"\"\n  echo \"System PATH for $SLURM_JOB_ID\"\n  echo \"\"\n  printf \"%0.s-\" {1..10}\n  echo \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n\necho \"Finished logging system PATH\"\n```\n\n---\n\n# RESULTS\n\nRuntime was surprisingly fast, at just a bit over 2.3 days...\n\n![Screencap of NF-Core RNAseq runtime on Mox showing runtime of 2 days, 9hrs and some change](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20220323-pgen-nextflow_rnaseq-tissues_runtime.png?raw=true)\n\n\n\nThere is a ton of data here to unpack, so I'll just link to some of the most useful files.\n\nRefer to the NF-Core/RNAseq \"Output docs\" for all the things generated, as well as a thorough explanation of the MultiQC Report:\n\n- [https://nf-co.re/rnaseq/3.6/docs/output/](https://nf-co.re/rnaseq/3.6/docs/output/)\n\nAlso, the NF-Core/RNAseq pipeline provides a nice progress report to show you which options are running/completed. This screenshot is from after the pipeline finished successfully:\n\n![Screencap of NF-Core/RNAseq pipeline upon completion. Shows percentages and checkboxes to indicate each process completion. Also provides a list of samples passing STAR mapping threshold and pipeline runtime.](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20220323-pgen-nextflow_rnaseq-tissues_nf-core-rnaseq_progress.png?raw=true)\n\n\nOutput folder:\n\n- [20220323-pgen-nextflow_rnaseq-tissues/](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/)\n\n  - Pipeline MultiQC Report (HTML - opens interactive report in browser):\n\n    - [20220321-pgen-nextflow_rnaseq-tissues-2666621_multiqc_report.html](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/multiqc/star_salmon/20220321-pgen-nextflow_rnaseq-tissues-2666621_multiqc_report.html)\n\n    One interesting thing I noticed in this report is the disproportionate number of reads in gonad samples mapping to Scaffold_08 in the genome. This suggests that there is a cluster of genes invovled in reproduction on Scaffold_08.\n\n    ![Histogram showing normalized read counts of samples mapping to each of the 18 P.generosa genome scaffolds. A noticable spike in the black line (gonad) occurs in Scaffold 08.](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20220323-pgen-nextflow_rnaseq-tissues_multiqc_mapped-reads-gonad.png?raw=true)\n\n    - List of compressed FastQ files and MD5 checksums used (text):\n\n      - [input_fastqs-2666621.md5](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/input_fastqs-2666621.md5)\n\n    - List of original, uncompressed FastQ files and MD5 checksums (text):\n\n      - [uncompressed_fastqs-2666621.md5](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/uncompressed_fastqs-2666621.md5)\n\n    - Sample sheet used as input to NF-Core RNAseq pipeline (CSV):\n\n      - [sample_sheet-2666621.csv](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/sample_sheet-2666621.csv)\n\n    - Config file used as input to NF-Core RNAseq pipeline (text). Mostly used to specify CPUs, RAM, and runtimes:\n\n      - [base-srlab_500GB_node.config](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/base-srlab_500GB_node.config)\n\n    - STAR alignments (BAM):\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/star_salmon/ctenidia.markdup.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/star_salmon/ctenidia.markdup.sorted.bam) (4.2G)\n\n        - MD5: `b5a8d02851184dbbf1155cfb2a7b4800`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/star_salmon/gonad.markdup.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/star_salmon/gonad.markdup.sorted.bam) (3.8G)\n\n        - MD5: `fe2e49e4e81de935eb23c5f095e167f1`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/star_salmon/heart.markdup.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/star_salmon/heart.markdup.sorted.bam) (7.9G)\n\n        - MD5: `3b621ed144399b27a5880416a9d9e98b`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/star_salmon/juvenile.markdup.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/star_salmon/juvenile.markdup.sorted.bam) (26G)\n\n        - MD5: `f191d39dee3ea29964ee69861c48e01a`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/star_salmon/larvae.markdup.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/star_salmon/larvae.markdup.sorted.bam) (5.0G)\n\n        - MD5: `15a215edcde2ae73c46940a4680e9bd4`\n\n\n    - Ballgown table folders:\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/star_salmon/stringtie/ctenidia.ballgown/](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/star_salmon/stringtie/ctenidia.ballgown) (31M)\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/star_salmon/stringtie/gonad.ballgown/](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/star_salmon/stringtie/gonad.ballgown) (31M)\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/star_salmon/stringtie/heart.ballgown/](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/star_salmon/stringtie/heart.ballgown) (31M)\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/star_salmon/stringtie/juvenile.ballgown/](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/star_salmon/stringtie/juvenile.ballgown) (32M)\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/star_salmon/stringtie/larvae.ballgown/](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/star_salmon/stringtie/larvae.ballgown) (31M)\n\n\n    - STAR/Salmon TPM (text):\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/star_salmon/star_salmon/salmon.merged.gene_tpm.tsv](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/star_salmon/salmon.merged.gene_tpm.tsv) (2.1M)\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/star_salmon/star_salmon/salmon.merged.transcript_tpm.tsv](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/star_salmon/salmon.merged.transcript_tpm.tsv) (3.1M)\n\n    - Salmon _ONLY_ `quant.sf` files (text) can be found in tissue subdirectories:\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/salmon](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/salmon/)\n\n    - STAR and Salmon genome index files in respective subdirectories:\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/genome/index/](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/genome/index/)\n\n    - Trimmed FastQs:\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/trimgalore/ctenidia_1_val_1.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/trimgalore/ctenidia_1_val_1.fq.gz) (4.3G)\n\n        - MD5: `fb5683c9734fd90e95f8b09292626f74`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/trimgalore/ctenidia_2_val_2.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/trimgalore/ctenidia_2_val_2.fq.gz) (4.4G)\n\n        - MD5: `a124c1ce517cd106979a32d0a9957742`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/trimgalore/gonad_1_val_1.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/trimgalore/gonad_1_val_1.fq.gz) (4.7G)\n\n        - MD5: `e999349a51d70f6f21384126b42bbe5e`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/trimgalore/gonad_2_val_2.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/trimgalore/gonad_2_val_2.fq.gz) (4.9G)\n\n        - MD5: `f70ac9c1170120f67e54cd523e8284eb`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/trimgalore/heart_1_val_1.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/trimgalore/heart_1_val_1.fq.gz) (8.0G)\n\n        - MD5: `d5d930b6f92005f3acdb8105736d2219`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/trimgalore/heart_2_val_2.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/trimgalore/heart_2_val_2.fq.gz) (7.8G)\n\n        - MD5: `0068df5bf32d18c9a940a4558645021e`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/trimgalore/juvenile_1_val_1.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/trimgalore/juvenile_1_val_1.fq.gz) (26G)\n\n        - MD5: `9f74db3f73fc140e009c470010c5b5b2`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/trimgalore/juvenile_2_val_2.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/trimgalore/juvenile_2_val_2.fq.gz) (26G)\n\n        - MD5: `453b846f816e227f386481b8613aee86`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/trimgalore/larvae_1_val_1.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/trimgalore/larvae_1_val_1.fq.gz) (5.3G)\n\n        - MD5: `70ff0f167449b7952362eba1c6b8ef18`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/trimgalore/larvae_2_val_2.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/trimgalore/larvae_2_val_2.fq.gz) (5.5G)\n\n        - MD5: `9f4b1080d956cfab03b94bba403ee81d`\n","srcMarkdownNoYaml":"\nSteven [asked that I obtain relative expression values for various geoduck tissues](https://github.com/RobertsLab/resources/issues/1423) (GitHub Issue). So, I decided to use this as an opportunity to try to use a [Nextflow](https://www.nextflow.io/) pipeline. There's an RNAseq pipeline, [NF-Core RNAseq](https://nf-co.re/rnaseq) which I decided to use. The pipeline appears to be ridiculously thorough (e.g. trims, removes gDNA/rRNA contamination, allows for multiple aligners to be used, quantifies/visualizes feature assignments by reads, performs differential gene expression analysis and visualization), all in one package. Sounds great, but I did have [some initial problems getting things up and running](../2022-03-25-Nextflow---Trials-and-Tribulations-of-Installing-and-Using-NF-Core-RNAseq/index.qmd). Overall, getting things set up to actually run took longer than the actual pipeline run! Oh well, it's a learning process, so that's not totally unexpected.\n\nFor this pipeline run, I made some modifications to the genome GFF input file used. First, I attempted to create a \"`gene_biotype`\" description for the pipeline to use to get some visualizations of read assignments to different components of the genome. I did that in the following fashion:\n\n\n```shell\n# Copies header to new GFF\nawk 'NR < 4 {print $0}' Panopea-generosa-v1.0.gff > Panopea-generosa-v1.0_biotype.gff\n# Adds \"gene_biotype\" to end of line that matches feature field ($3)\nawk 'NR > 3 {print $0\";gene_biotype=\"$3}' Panopea-generosa-v1.0.gff >> Panopea-generosa-v1.0_biotype.gff\n```\n\nThen, modified it further to convert tRNA strand to `+` instead of `.` in order to avoid RSEM errors regarding strand info _and_ removed RNAmmer features to also avoid RSEM strand errors.\n\n```shell\n# Converts strand field ($7) to `+` instead of `.`.\n# Works just on tRNA entries\nawk '$2 == \"GenSAS_5d82b316cd298-trnascan\" {$7=\"+\"}1' Panopea-generosa-v1.0.a4_biotype.gff > Panopea-generosa-v1.0.a4_biotype-trna_strand_converted.gff\n# Prints all lines which are not rRNA\nawk '$2 != \"RNAmmer-1.2\"' Panopea-generosa-v1.0.a4_biotype-trna_strand_converted.gff > Panopea-generosa-v1.0.a4_biotype-trna_strand_converted-no_RNAmmer.gff\n```\n\nThen, this was all run on Mox.\n\nSBATCH script (GitHub):\n\n- [20220323-pgen-nextflow_rnaseq-tissues.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20220323-pgen-nextflow_rnaseq-tissues.sh)\n\n\n```shell\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=20220323-pgen-nextflow_rnaseq-tissues\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=17-00:00:00\n## Memory per node\n#SBATCH --mem=500G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20220323-pgen-nextflow_rnaseq-tissues\n\n# Script to run Nextflow NF Core RNAseq pipeline for RNAseq analysis of P.generosa, per this GitHub Issue:\n# https://github.com/RobertsLab/resources/issues/1423\n\n# See variable assignments below for input files used: genome, GFF, transcriptome\n# List of input FastQs will be generated during run in: sample_sheet-\"${SLURM_JOB_ID}\".csv\n# Custom config file for maximum memory and CPU thread setttings\n\n# Outputs explanations are here: https://nf-co.re/rnaseq/3.6/docs/output/\n# Input parameter explanations are here: https://nf-co.re/rnaseq/3.6/parameters\n\n###################################################################################\n\n# These variables need to be set by user\n\n## Assign Variables\n\n## PROGRAMS ##\n# NF Core RNAseq workflow directory\nnf_core_rnaseq=\"/gscratch/srlab/programs/nf-core-rnaseq-3.6/workflow\"\n\n# NF Core RNAseq custom config file\nnf_core_rnaseq_config=/gscratch/srlab/programs/nf-core-rnaseq-3.6/configs/conf/base-srlab_500GB_node.config\n\n## FILES AND DIRECTORIES ##\n# Wordking directory\nwd=$(pwd)\n\n# RNAseq FastQs directory\nreads_dir=/gscratch/srlab/sam/data/P_generosa/RNAseq\n\n# Genome FastA\ngenome_fasta=/gscratch/srlab/sam/data/P_generosa/genomes/Panopea-generosa-v1.0.fa\n\n# Genome GFF3\n# This was manually modified by me to add gene_biotype to end of each entry.\n# Improves NF-Core RNAseq pipeline analysis/visualiztion to have this info present.\ngenome_gff=/gscratch/srlab/sam/data/P_generosa/genomes/Panopea-generosa-v1.0.a4_biotype-trna_strand_converted-no_RNAmmer.gff\n\n## INITIALIZE ARRAYS ##\n# Leave empty!!\nR1_array=()\nR2_array=()\nR1_uncompressed_array=()\nR2_uncompressed_array=()\n\n###################################################################################\n\n# Exit script if a command fails\nset -e\n\n# Load Anaconda\n# Uknown why this is needed, but Anaconda will not run if this line is not included.\n. \"/gscratch/srlab/programs/anaconda3/etc/profile.d/conda.sh\"\n\n# Activate NF-core conda environment\nconda activate nf-core_env\n\n# Load Singularity Mox module for NF Core/Nextflow\nmodule load singularity\n\n\n# NF Core RNAseq sample sheet header\nsample_sheet_header=\"sample,fastq_1,fastq_2,strandedness\"\nprintf \"%s\\n\" \"${sample_sheet_header}\" >> sample_sheet-\"${SLURM_JOB_ID}\".csv\n\n# Create array of original uncompressed fastq R1 files\n# Set filename pattern\nR1_uncompressed_array=(\"${reads_dir}\"/*_1.fastq)\n\n# Create array of original uncompressed fastq R2 files\n# Set filename pattern\nR2_uncompressed_array=(\"${reads_dir}\"/*_2.fastq)\n\n# Check array size to confirm it has all expected samples\n# Exit if mismatch\nif [[ \"${#R1_uncompressed_array[@]}\" != \"${#R2_uncompressed_array[@]}\" ]]\nthen\n  echo \"\"\n  echo \"Uncompressed array sizes don't match.\"\n  echo \"Confirm all expected FastQs are present in ${reads_dir}\"\n  echo \"\"\n\n  exit\nfi\n\n# Create list of original uncompressed fastq files\n## Uses parameter substitution to strip leading path from filename\nfor fastq in \"${!R1_uncompressed_array[@]}\"\ndo\n  # Strip leading path\n\tno_path=$(echo \"${R1_uncompressed_array[${fastq}]##*/}\")\n\n  # Grab SRA name\n  sra=$(echo \"${no_path}\" | awk -F \"_\" '{print $1}')\n\n  # Only gzip matching FastQs\n  # Only generate MD5 checksums for matching FastQs\n  if [[ \"${sra}\" == \"SRR12218868\" ]] \\\n    || [[ \"${sra}\" == \"SRR12218869\" ]] \\\n    || [[ \"${sra}\" == \"SRR12226692\" ]] \\\n    || [[ \"${sra}\" == \"SRR12218870\" ]] \\\n    || [[ \"${sra}\" == \"SRR12226693\" ]] \\\n    || [[ \"${sra}\" == \"SRR12207404\" ]] \\\n    || [[ \"${sra}\" == \"SRR12207405\" ]] \\\n    || [[ \"${sra}\" == \"SRR12227930\" ]] \\\n    || [[ \"${sra}\" == \"SRR12207406\" ]] \\\n    || [[ \"${sra}\" == \"SRR12207407\" ]] \\\n    || [[ \"${sra}\" == \"SRR12227931\" ]] \\\n    || [[ \"${sra}\" == \"SRR12212519\" ]] \\\n    || [[ \"${sra}\" == \"SRR12227929\" ]] \\\n    || [[ \"${sra}\" == \"SRR8788211\" ]]\n  then\n    echo \"\"\n    echo \"Generating MD5 checksums for ${R1_uncompressed_array[${fastq}]} and ${R2_uncompressed_array[${fastq}]}.\"\n    echo \"\"\n    # Generate MD5 checksums of uncompressed FastQs\n    {\n      md5sum \"${R1_uncompressed_array[${fastq}]}\"\n      md5sum \"${R2_uncompressed_array[${fastq}]}\"\n    } >> uncompressed_fastqs-\"${SLURM_JOB_ID}\".md5\n\n    # Gzip FastQs; NF Core RNAseq requires gzipped FastQs as inputs\n    echo \"Compressing FastQ files.\"\n    if [ ! -f \"${R1_uncompressed_array[${fastq}]}.gz\" ]\n    then \n      gzip --keep \"${R1_uncompressed_array[${fastq}]}\"\n      gzip --keep \"${R2_uncompressed_array[${fastq}]}\"\n    else \n      echo \"${R1_uncompressed_array[${fastq}]}.gz already exists. Skipping.\"\n    fi\n    echo \"\"\n\n\n\n  fi\ndone\n\n\n# Create array of fastq R1 files\n# Set filename pattern\nR1_array=(\"${reads_dir}\"/*_1.fastq.gz)\n\n# Create array of fastq R2 files\n# Set filename pattern\nR2_array=(\"${reads_dir}\"/*_2.fastq.gz)\n\n# Check array sizes to confirm they are same size\n# Exit if mismatch\nif [[ \"${#R1_array[@]}\" != \"${#R2_array[@]}\" ]]\n  then\n    echo \"\"\n    echo \"Read1 and Read2 compressed FastQ array sizes don't match.\"\n    echo \"Confirm all expected compressed FastQs are present in ${reads_dir}\"\n    echo \"\"\n\n    exit\nfi\n\n# Create list of fastq files used in analysis\n## Uses parameter substitution to strip leading path from filename\nfor fastq in \"${!R1_array[@]}\"\ndo\n  echo \"\"\n  echo \"Generating MD5 checksums for ${R1_array[${fastq}]} and ${R2_array[${fastq}]}.\"\n  echo \"\"\n  # Generate MD5 checksums for compressed FastQs used in NF Core RNAseq analysis\n  {\n    md5sum \"${R1_array[${fastq}]}\"\n    md5sum \"${R2_array[${fastq}]}\"\n  } >> input_fastqs-\"${SLURM_JOB_ID}\".md5\n\n  # Strip leading path\n\tno_path=$(echo \"${R1_array[${fastq}]##*/}\")\n\n  # Grab SRA name\n  sra=$(echo \"${no_path}\" | awk -F \"_\" '{print $1}')\n\n  # Set tissue type\n  if [[ \"${sra}\" == \"SRR12218868\" ]]\n  then\n    tissue=\"heart\"\n\n    # Add to NF Core RNAseq sample sheet\n    printf \"%s,%s,%s,%s\\n\" \"${tissue}\" \"${R1_array[${fastq}]}\" \"${R2_array[${fastq}]}\" \"reverse\" \\\n    >> sample_sheet-\"${SLURM_JOB_ID}\".csv\n\n  elif [[ \"${sra}\" == \"SRR12218869\" ]] \\\n    || [[ \"${sra}\" == \"SRR12226692\" ]]\n\n  then\n    tissue=\"gonad\"\n\n    # Add to NF Core RNAseq sample sheet\n    printf \"%s,%s,%s,%s\\n\" \"${tissue}\" \"${R1_array[${fastq}]}\" \"${R2_array[${fastq}]}\" \"reverse\" \\\n    >> sample_sheet-\"${SLURM_JOB_ID}\".csv\n\n  elif [[ \"${sra}\" == \"SRR12218870\" ]] \\\n    || [[ \"${sra}\" == \"SRR12226693\" ]]\n  then\n    tissue=\"ctenidia\"\n\n    # Add to NF Core RNAseq sample sheet\n    printf \"%s,%s,%s,%s\\n\" \"${tissue}\" \"${R1_array[${fastq}]}\" \"${R2_array[${fastq}]}\" \"reverse\" \\\n    >> sample_sheet-\"${SLURM_JOB_ID}\".csv\n\n  elif [[ \"${sra}\" == \"SRR12207404\" ]] \\\n    || [[ \"${sra}\" == \"SRR12207405\" ]] \\\n    || [[ \"${sra}\" == \"SRR12227930\" ]] \\\n    || [[ \"${sra}\" == \"SRR12207406\" ]] \\\n    || [[ \"${sra}\" == \"SRR12207407\" ]] \\\n    || [[ \"${sra}\" == \"SRR12227931\" ]]\n  then\n    tissue=\"juvenile\"\n\n    # Add to NF Core RNAseq sample sheet\n    printf \"%s,%s,%s,%s\\n\" \"${tissue}\" \"${R1_array[${fastq}]}\" \"${R2_array[${fastq}]}\" \"reverse\" \\\n    >> sample_sheet-\"${SLURM_JOB_ID}\".csv\n\n  elif [[ \"${sra}\" == \"SRR12212519\" ]] \\\n    || [[ \"${sra}\" == \"SRR12227929\" ]] \\\n    || [[ \"${sra}\" == \"SRR8788211\" ]]\n  then\n    tissue=\"larvae\"\n\n    # Add to NF Core RNAseq sample sheet\n    printf \"%s,%s,%s,%s\\n\" \"${tissue}\" \"${R1_array[${fastq}]}\" \"${R2_array[${fastq}]}\" \"reverse\" \\\n    >> sample_sheet-\"${SLURM_JOB_ID}\".csv\n  fi\n\ndone\n\necho \"Beginning NF-Core RNAseq pipeline...\"\necho \"\"\n# Run NF Core RNAseq workflow\nnextflow run ${nf_core_rnaseq} \\\n-profile singularity \\\n-c ${nf_core_rnaseq_config} \\\n--input sample_sheet-\"${SLURM_JOB_ID}\".csv \\\n--outdir ${wd} \\\n--multiqc_title \"20220321-pgen-nextflow_rnaseq-tissues-${SLURM_JOB_ID}\" \\\n--fasta ${genome_fasta} \\\n--gff ${genome_gff} \\\n--save_reference \\\n--gtf_extra_attributes gene_name \\\n--gtf_group_features gene_id \\\n--featurecounts_group_type gene_biotype \\\n--featurecounts_feature_type exon \\\n--trim_nextseq 20 \\\n--save_trimmed \\\n--aligner star_salmon \\\n--pseudo_aligner salmon \\\n--min_mapped_reads 5 \\\n--save_align_intermeds \\\n--rseqc_modules bam_stat,\\\ninner_distance,\\\ninfer_experiment,\\\njunction_annotation,\\\njunction_saturation,\\\nread_distribution,\\\nread_duplication\n\n##############################################################\n# Copy config file for later reference, if needed\ncp \"${nf_core_rnaseq_config}\" .\n\n# Document programs in PATH (primarily for program version ID)\n{\n  date\n  echo \"\"\n  echo \"System PATH for $SLURM_JOB_ID\"\n  echo \"\"\n  printf \"%0.s-\" {1..10}\n  echo \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n\necho \"Finished logging system PATH\"\n```\n\n---\n\n# RESULTS\n\nRuntime was surprisingly fast, at just a bit over 2.3 days...\n\n![Screencap of NF-Core RNAseq runtime on Mox showing runtime of 2 days, 9hrs and some change](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20220323-pgen-nextflow_rnaseq-tissues_runtime.png?raw=true)\n\n\n\nThere is a ton of data here to unpack, so I'll just link to some of the most useful files.\n\nRefer to the NF-Core/RNAseq \"Output docs\" for all the things generated, as well as a thorough explanation of the MultiQC Report:\n\n- [https://nf-co.re/rnaseq/3.6/docs/output/](https://nf-co.re/rnaseq/3.6/docs/output/)\n\nAlso, the NF-Core/RNAseq pipeline provides a nice progress report to show you which options are running/completed. This screenshot is from after the pipeline finished successfully:\n\n![Screencap of NF-Core/RNAseq pipeline upon completion. Shows percentages and checkboxes to indicate each process completion. Also provides a list of samples passing STAR mapping threshold and pipeline runtime.](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20220323-pgen-nextflow_rnaseq-tissues_nf-core-rnaseq_progress.png?raw=true)\n\n\nOutput folder:\n\n- [20220323-pgen-nextflow_rnaseq-tissues/](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/)\n\n  - Pipeline MultiQC Report (HTML - opens interactive report in browser):\n\n    - [20220321-pgen-nextflow_rnaseq-tissues-2666621_multiqc_report.html](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/multiqc/star_salmon/20220321-pgen-nextflow_rnaseq-tissues-2666621_multiqc_report.html)\n\n    One interesting thing I noticed in this report is the disproportionate number of reads in gonad samples mapping to Scaffold_08 in the genome. This suggests that there is a cluster of genes invovled in reproduction on Scaffold_08.\n\n    ![Histogram showing normalized read counts of samples mapping to each of the 18 P.generosa genome scaffolds. A noticable spike in the black line (gonad) occurs in Scaffold 08.](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20220323-pgen-nextflow_rnaseq-tissues_multiqc_mapped-reads-gonad.png?raw=true)\n\n    - List of compressed FastQ files and MD5 checksums used (text):\n\n      - [input_fastqs-2666621.md5](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/input_fastqs-2666621.md5)\n\n    - List of original, uncompressed FastQ files and MD5 checksums (text):\n\n      - [uncompressed_fastqs-2666621.md5](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/uncompressed_fastqs-2666621.md5)\n\n    - Sample sheet used as input to NF-Core RNAseq pipeline (CSV):\n\n      - [sample_sheet-2666621.csv](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/sample_sheet-2666621.csv)\n\n    - Config file used as input to NF-Core RNAseq pipeline (text). Mostly used to specify CPUs, RAM, and runtimes:\n\n      - [base-srlab_500GB_node.config](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/base-srlab_500GB_node.config)\n\n    - STAR alignments (BAM):\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/star_salmon/ctenidia.markdup.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/star_salmon/ctenidia.markdup.sorted.bam) (4.2G)\n\n        - MD5: `b5a8d02851184dbbf1155cfb2a7b4800`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/star_salmon/gonad.markdup.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/star_salmon/gonad.markdup.sorted.bam) (3.8G)\n\n        - MD5: `fe2e49e4e81de935eb23c5f095e167f1`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/star_salmon/heart.markdup.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/star_salmon/heart.markdup.sorted.bam) (7.9G)\n\n        - MD5: `3b621ed144399b27a5880416a9d9e98b`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/star_salmon/juvenile.markdup.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/star_salmon/juvenile.markdup.sorted.bam) (26G)\n\n        - MD5: `f191d39dee3ea29964ee69861c48e01a`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/star_salmon/larvae.markdup.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/star_salmon/larvae.markdup.sorted.bam) (5.0G)\n\n        - MD5: `15a215edcde2ae73c46940a4680e9bd4`\n\n\n    - Ballgown table folders:\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/star_salmon/stringtie/ctenidia.ballgown/](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/star_salmon/stringtie/ctenidia.ballgown) (31M)\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/star_salmon/stringtie/gonad.ballgown/](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/star_salmon/stringtie/gonad.ballgown) (31M)\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/star_salmon/stringtie/heart.ballgown/](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/star_salmon/stringtie/heart.ballgown) (31M)\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/star_salmon/stringtie/juvenile.ballgown/](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/star_salmon/stringtie/juvenile.ballgown) (32M)\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/star_salmon/stringtie/larvae.ballgown/](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/star_salmon/stringtie/larvae.ballgown) (31M)\n\n\n    - STAR/Salmon TPM (text):\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/star_salmon/star_salmon/salmon.merged.gene_tpm.tsv](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/star_salmon/salmon.merged.gene_tpm.tsv) (2.1M)\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/star_salmon/star_salmon/salmon.merged.transcript_tpm.tsv](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/star_salmon/salmon.merged.transcript_tpm.tsv) (3.1M)\n\n    - Salmon _ONLY_ `quant.sf` files (text) can be found in tissue subdirectories:\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/salmon](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/salmon/)\n\n    - STAR and Salmon genome index files in respective subdirectories:\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/genome/index/](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/genome/index/)\n\n    - Trimmed FastQs:\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/trimgalore/ctenidia_1_val_1.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/trimgalore/ctenidia_1_val_1.fq.gz) (4.3G)\n\n        - MD5: `fb5683c9734fd90e95f8b09292626f74`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/trimgalore/ctenidia_2_val_2.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/trimgalore/ctenidia_2_val_2.fq.gz) (4.4G)\n\n        - MD5: `a124c1ce517cd106979a32d0a9957742`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/trimgalore/gonad_1_val_1.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/trimgalore/gonad_1_val_1.fq.gz) (4.7G)\n\n        - MD5: `e999349a51d70f6f21384126b42bbe5e`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/trimgalore/gonad_2_val_2.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/trimgalore/gonad_2_val_2.fq.gz) (4.9G)\n\n        - MD5: `f70ac9c1170120f67e54cd523e8284eb`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/trimgalore/heart_1_val_1.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/trimgalore/heart_1_val_1.fq.gz) (8.0G)\n\n        - MD5: `d5d930b6f92005f3acdb8105736d2219`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/trimgalore/heart_2_val_2.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/trimgalore/heart_2_val_2.fq.gz) (7.8G)\n\n        - MD5: `0068df5bf32d18c9a940a4558645021e`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/trimgalore/juvenile_1_val_1.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/trimgalore/juvenile_1_val_1.fq.gz) (26G)\n\n        - MD5: `9f74db3f73fc140e009c470010c5b5b2`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/trimgalore/juvenile_2_val_2.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/trimgalore/juvenile_2_val_2.fq.gz) (26G)\n\n        - MD5: `453b846f816e227f386481b8613aee86`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/trimgalore/larvae_1_val_1.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/trimgalore/larvae_1_val_1.fq.gz) (5.3G)\n\n        - MD5: `70ff0f167449b7952362eba1c6b8ef18`\n\n      - [20220323-pgen-nextflow_rnaseq-tissues/trimgalore/larvae_2_val_2.fq.gz](https://gannet.fish.washington.edu/Atumefaciens/20220323-pgen-nextflow_rnaseq-tissues/trimgalore/larvae_2_val_2.fq.gz) (5.5G)\n\n        - MD5: `9f4b1080d956cfab03b94bba403ee81d`\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"Differential Gene Expression - P.generosa DGE Between Tissues Using Nextlow NF-Core RNAseq Pipeline on Mox","date":"2022-03-23 12:55","categories":["nextflow","Panopea generosa","Pacific geoduck","RNAseq","nf-core","mox ","2022","Miscellaneous"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}