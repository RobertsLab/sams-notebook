{"title":"FastQC-MultiQC - M.magister MBD-BSseq Pool Test MiSeq Run on Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"FastQC-MultiQC - M.magister MBD-BSseq Pool Test MiSeq Run on Mox","date":"2020-12-11 15:35","tags":["fastqtc","multiqc","Metacarcinus magister","Cancer magister","Dungeness crab","mox"],"categories":["2020","Miscellaneous"]},"headingText":"Job Name","containsRefs":false,"markdown":"\nEarlier today we received the [_M.magister_ (_C.magister_; Dungeness crab) MiSeq data from Mac](https://robertslab.github.io/sams-notebook/posts/2020/2020-12-11-Data-Received---M.magister-MBD-BSseq-Pool-Test-MiSeq-Run/).\n\nI ran [`FastQC`](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/) and [`MultiQC`](https://multiqc.info/) on Mox.\n\nSBATCH script (GitHub):\n\n- [20201211_mmag_fastqc_multiqc_mbd-bsseq_miseq.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20201211_mmag_fastqc_multiqc_mbd-bsseq_miseq.sh)\n\n```shell\n#!/bin/bash\n#SBATCH --job-name=20201211_mmag_fastqc_multiqc_mbd-bsseq_miseq\n## Allocation Definition\n#SBATCH --account=coenv\n#SBATCH --partition=coenv\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=10-00:00:00\n## Memory per node\n#SBATCH --mem=120G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20201211_mmag_fastqc_multiqc_mbd-bsseq_miseq\n\n\n### FastQC assessment of raw MiSeq sequencing test run for\n### MBD-BSseq pool of M.magister samples from 20201202.\n\n\n###################################################################################\n# These variables need to be set by user\n\n# FastQC output directory\noutput_dir=$(pwd)\n\n# Set number of CPUs to use\nthreads=28\n\n# Input/output files\nchecksums=fastq_checksums.md5\nfastq_list=fastq_list.txt\nraw_reads_dir=/gscratch/srlab/sam/data/C_magister/MBD-BSseq\n\n# Paths to programs\nfastqc=/gscratch/srlab/programs/fastqc_v0.11.9/fastqc\nmultiqc=/gscratch/srlab/programs/anaconda3/bin/multiqc\n\n\n# Programs associative array\ndeclare -A programs_array\nprograms_array=(\n[fastqc]=\"${fastqc}\" \\\n[multiqc]=\"${multiqc}\"\n)\n\n###################################################################################\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\nmodule load intel-python3_2017\n\n# Sync raw FastQ files to working directory\nrsync --archive --verbose \\\n\"${raw_reads_dir}\"CH*.fastq.gz .\n\n# Populate array with FastQ files\nfastq_array=(CH*.fastq.gz)\n\n# Pass array contents to new variable\nfastqc_list=$(echo \"${fastq_array[*]}\")\n\n# Run FastQC\n# NOTE: Do NOT quote ${fastqc_list}\n${programs_array[fastqc]} \\\n--threads ${threads} \\\n--outdir ${output_dir} \\\n${fastqc_list}\n\n\n# Create list of fastq files used in analysis\necho \"${fastqc_list}\" | tr \" \" \"\\n\" >> ${fastq_list}\n\n# Generate checksums for reference\nwhile read -r line\ndo\n\n\t# Generate MD5 checksums for each input FastQ file\n\techo \"Generating MD5 checksum for ${line}.\"\n\tmd5sum \"${line}\" >> \"${checksums}\"\n\techo \"Completed: MD5 checksum for ${line}.\"\n\techo \"\"\n\n\t# Remove fastq files from working directory\n\techo \"Removing ${line} from directory\"\n\trm \"${line}\"\n\techo \"Removed ${line} from directory\"\n\techo \"\"\ndone < ${fastq_list}\n\n# Run MultiQC\n${programs_array[multiqc]} .\n\n\n# Capture program options\nfor program in \"${!programs_array[@]}\"\ndo\n\t{\n  echo \"Program options for ${program}: \"\n\techo \"\"\n  # Handle samtools help menus\n  if [[ \"${program}\" == \"samtools_index\" ]] \\\n  || [[ \"${program}\" == \"samtools_sort\" ]] \\\n  || [[ \"${program}\" == \"samtools_view\" ]]\n  then\n    ${programs_array[$program]}\n  fi\n\t${programs_array[$program]} -h\n\techo \"\"\n\techo \"\"\n\techo \"----------------------------------------------\"\n\techo \"\"\n\techo \"\"\n} &>> program_options.log || true\n\n  # If MultiQC is in programs_array, copy the config file to this directory.\n  if [[ \"${program}\" == \"multiqc\" ]]; then\n  \tcp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n  fi\ndone\n\n\n# Document programs in PATH (primarily for program version ID)\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n```\n\n---\n\n# RESULTS\n\nRuntime was fast, ~3.5mins:\n\n![Cumulative runtime for FastQC and MultiQC on C.magister MiSeq data](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20201211_mmag_fastqc_multiqc_mbd-bsseq_miseq_runtime.png?raw=true)\n\n\nWill add [`FastQC`](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/) report links to [`Nightingales`](http://b.link/nightingales) spreadsheet (Google Sheet) for those that did _not_ fail.\n\nNOTE: This post was updated on 20201217 using a newly transferred set of FastQs that Mac set up. See [the previous commit of this post](https://github.com/RobertsLab/sams-notebook/blob/c11f5f8c6149376d5896c2f0acd104960512b972/_posts/2020/2020-12-11-FastQC-MultiQC---M.magister-MBD-BSseq-Pool-Test-MiSeq-Run-on-Mox.md) for more info.\n\nOutput folder:\n\n- [20201211_mmag_fastqc_multiqc_mbd-bsseq_miseq/](https://gannet.fish.washington.edu/Atumefaciens/20201211_mmag_fastqc_multiqc_mbd-bsseq_miseq/)\n\n[`MultiQC`](https://multiqc.info/) Report (HTML; open with web browser):\n\n- [20201211_mmag_fastqc_multiqc_mbd-bsseq_miseq/multiqc_report.html](https://gannet.fish.washington.edu/Atumefaciens/20201211_mmag_fastqc_multiqc_mbd-bsseq_miseq/multiqc_report.html)\n\nIndividual [`FastQC`](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/) reports can be found by browsing the output folder linked above and/or by clicking through the [`MultiQC`](https://multiqc.info/) report that's linked above.\n\nThis test run was to help evaluate evenness of the sample pooling, as well as identify any other possible issues. Evenness appears OK (not great), but I'm not entirely sure how this would be addressed, as an aliquot of each library was created at a concentration of 4nM and then 1uL of each of these aliquots was combined. Is it safe to assume that any sequencing biases leading to preferential library sequencing is due to the individual libraries? And, that this can be adjusted for when making the final pooling that gets sent off for a full sequencing run? Also, I'm a bit surprised at the high levels of adapter content. I'm curious how these data will look after trimming. Anyway, at this point, I'll let Laura Spencer and Mac make decisions about going forward with a full sequencing run, as it's really their project anyway.\n","srcMarkdownNoYaml":"\nEarlier today we received the [_M.magister_ (_C.magister_; Dungeness crab) MiSeq data from Mac](https://robertslab.github.io/sams-notebook/posts/2020/2020-12-11-Data-Received---M.magister-MBD-BSseq-Pool-Test-MiSeq-Run/).\n\nI ran [`FastQC`](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/) and [`MultiQC`](https://multiqc.info/) on Mox.\n\nSBATCH script (GitHub):\n\n- [20201211_mmag_fastqc_multiqc_mbd-bsseq_miseq.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20201211_mmag_fastqc_multiqc_mbd-bsseq_miseq.sh)\n\n```shell\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=20201211_mmag_fastqc_multiqc_mbd-bsseq_miseq\n## Allocation Definition\n#SBATCH --account=coenv\n#SBATCH --partition=coenv\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=10-00:00:00\n## Memory per node\n#SBATCH --mem=120G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20201211_mmag_fastqc_multiqc_mbd-bsseq_miseq\n\n\n### FastQC assessment of raw MiSeq sequencing test run for\n### MBD-BSseq pool of M.magister samples from 20201202.\n\n\n###################################################################################\n# These variables need to be set by user\n\n# FastQC output directory\noutput_dir=$(pwd)\n\n# Set number of CPUs to use\nthreads=28\n\n# Input/output files\nchecksums=fastq_checksums.md5\nfastq_list=fastq_list.txt\nraw_reads_dir=/gscratch/srlab/sam/data/C_magister/MBD-BSseq\n\n# Paths to programs\nfastqc=/gscratch/srlab/programs/fastqc_v0.11.9/fastqc\nmultiqc=/gscratch/srlab/programs/anaconda3/bin/multiqc\n\n\n# Programs associative array\ndeclare -A programs_array\nprograms_array=(\n[fastqc]=\"${fastqc}\" \\\n[multiqc]=\"${multiqc}\"\n)\n\n###################################################################################\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\nmodule load intel-python3_2017\n\n# Sync raw FastQ files to working directory\nrsync --archive --verbose \\\n\"${raw_reads_dir}\"CH*.fastq.gz .\n\n# Populate array with FastQ files\nfastq_array=(CH*.fastq.gz)\n\n# Pass array contents to new variable\nfastqc_list=$(echo \"${fastq_array[*]}\")\n\n# Run FastQC\n# NOTE: Do NOT quote ${fastqc_list}\n${programs_array[fastqc]} \\\n--threads ${threads} \\\n--outdir ${output_dir} \\\n${fastqc_list}\n\n\n# Create list of fastq files used in analysis\necho \"${fastqc_list}\" | tr \" \" \"\\n\" >> ${fastq_list}\n\n# Generate checksums for reference\nwhile read -r line\ndo\n\n\t# Generate MD5 checksums for each input FastQ file\n\techo \"Generating MD5 checksum for ${line}.\"\n\tmd5sum \"${line}\" >> \"${checksums}\"\n\techo \"Completed: MD5 checksum for ${line}.\"\n\techo \"\"\n\n\t# Remove fastq files from working directory\n\techo \"Removing ${line} from directory\"\n\trm \"${line}\"\n\techo \"Removed ${line} from directory\"\n\techo \"\"\ndone < ${fastq_list}\n\n# Run MultiQC\n${programs_array[multiqc]} .\n\n\n# Capture program options\nfor program in \"${!programs_array[@]}\"\ndo\n\t{\n  echo \"Program options for ${program}: \"\n\techo \"\"\n  # Handle samtools help menus\n  if [[ \"${program}\" == \"samtools_index\" ]] \\\n  || [[ \"${program}\" == \"samtools_sort\" ]] \\\n  || [[ \"${program}\" == \"samtools_view\" ]]\n  then\n    ${programs_array[$program]}\n  fi\n\t${programs_array[$program]} -h\n\techo \"\"\n\techo \"\"\n\techo \"----------------------------------------------\"\n\techo \"\"\n\techo \"\"\n} &>> program_options.log || true\n\n  # If MultiQC is in programs_array, copy the config file to this directory.\n  if [[ \"${program}\" == \"multiqc\" ]]; then\n  \tcp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n  fi\ndone\n\n\n# Document programs in PATH (primarily for program version ID)\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n```\n\n---\n\n# RESULTS\n\nRuntime was fast, ~3.5mins:\n\n![Cumulative runtime for FastQC and MultiQC on C.magister MiSeq data](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20201211_mmag_fastqc_multiqc_mbd-bsseq_miseq_runtime.png?raw=true)\n\n\nWill add [`FastQC`](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/) report links to [`Nightingales`](http://b.link/nightingales) spreadsheet (Google Sheet) for those that did _not_ fail.\n\nNOTE: This post was updated on 20201217 using a newly transferred set of FastQs that Mac set up. See [the previous commit of this post](https://github.com/RobertsLab/sams-notebook/blob/c11f5f8c6149376d5896c2f0acd104960512b972/_posts/2020/2020-12-11-FastQC-MultiQC---M.magister-MBD-BSseq-Pool-Test-MiSeq-Run-on-Mox.md) for more info.\n\nOutput folder:\n\n- [20201211_mmag_fastqc_multiqc_mbd-bsseq_miseq/](https://gannet.fish.washington.edu/Atumefaciens/20201211_mmag_fastqc_multiqc_mbd-bsseq_miseq/)\n\n[`MultiQC`](https://multiqc.info/) Report (HTML; open with web browser):\n\n- [20201211_mmag_fastqc_multiqc_mbd-bsseq_miseq/multiqc_report.html](https://gannet.fish.washington.edu/Atumefaciens/20201211_mmag_fastqc_multiqc_mbd-bsseq_miseq/multiqc_report.html)\n\nIndividual [`FastQC`](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/) reports can be found by browsing the output folder linked above and/or by clicking through the [`MultiQC`](https://multiqc.info/) report that's linked above.\n\nThis test run was to help evaluate evenness of the sample pooling, as well as identify any other possible issues. Evenness appears OK (not great), but I'm not entirely sure how this would be addressed, as an aliquot of each library was created at a concentration of 4nM and then 1uL of each of these aliquots was combined. Is it safe to assume that any sequencing biases leading to preferential library sequencing is due to the individual libraries? And, that this can be adjusted for when making the final pooling that gets sent off for a full sequencing run? Also, I'm a bit surprised at the high levels of adapter content. I'm curious how these data will look after trimming. Anyway, at this point, I'll let Laura Spencer and Mac make decisions about going forward with a full sequencing run, as it's really their project anyway.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"FastQC-MultiQC - M.magister MBD-BSseq Pool Test MiSeq Run on Mox","date":"2020-12-11 15:35","tags":["fastqtc","multiqc","Metacarcinus magister","Cancer magister","Dungeness crab","mox"],"categories":["2020","Miscellaneous"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}