{"title":"Transcriptome Comparison - C.bairdi Transcriptomes Evaluations with DETONATE on Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"Transcriptome Comparison - C.bairdi Transcriptomes Evaluations with DETONATE on Mox","date":"2020-06-01 11:45","tags":["Tanner crab","Chionoecetes bairdi","mox","DETONATE"],"categories":["2020","Miscellaneous"]},"headingText":"Job Name","containsRefs":false,"markdown":"\nAttempting to get some other metrics regarding our various _C.bairdi_ transcriptome assemblies other than BUSCO scores, I decided to try running [DETONATE](http://deweylab.biostat.wisc.edu/detonate/), as this is a recommended tool by [`Trinity`](https://github.com/trinityrnaseq/trinityrnaseq/wiki).\n\nI recently ran DETONATE's `ref-eval` ([see 20200529](https://robertslab.github.io/sams-notebook/posts/2020/2020-05-29-Transcriptome-Comparison---C.bairdi-Transcriptomes-Compared-with-DETONATE-on-Mox/)) because it was relatively easy to do and thought it might be useful, as it's included in the [DETONATE](http://deweylab.biostat.wisc.edu/detonate/) package. However, the results are complicated to interpret and I'm not sure they actually tell us anything.\n\nContinuing with the [DETONATE](http://deweylab.biostat.wisc.edu/detonate/) package, I ran the other component (which is probably what we really want and will provide us with a simple \"score\" which will be easier to understand), `rsem-eval`.  Plus, it's a very low effort process, so might as well give it a whirl.\n\nThe job was run on Mox.\n\nSBATCH script (GitHub):\n\n- [20200616_cbai_detonate_transcriptome_evaluations.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20200616_cbai_detonate_transcriptome_evaluations.sh)\n\n```shell\n#!/bin/bash\n#SBATCH --job-name=cbai_detonate_transcriptome_evaluations\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=15-00:00:00\n## Memory per node\n#SBATCH --mem=500G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20200616_cbai_detonate_transcriptome_evaluations\n\n\n###################################################################################\n# These variables need to be set by user\n\n# Assign Variables\n## frag_size is guesstimate of library fragment sizes\nfrag_size=500\nreads_dir=/gscratch/srlab/sam/data/C_bairdi/RNAseq\ntranscriptomes_dir=/gscratch/srlab/sam/data/C_bairdi/transcriptomes\nthreads=28\n\n# Array of the various comparisons to evaluate\n# Each condition in each comparison should be separated by a \"-\"\ntranscriptomes_array=(\n\"${transcriptomes_dir}\"/cbai_transcriptome_v1.0.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v1.5.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v1.6.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v1.7.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v2.0.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v2.1.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v3.0.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v3.1.fasta\n)\n\n\n###################################################################################\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n\n# Programs array\ndeclare -A programs_array\nprograms_array=(\n[bowtie2]=\"/gscratch/srlab/programs/bowtie2-2.3.5.1-linux-x86_64\" \\\n[detonate_trans_length]=\"/gscratch/srlab/programs/detonate-1.11/rsem-eval/rsem-eval-estimate-transcript-length-distribution\" \\\n[detonate]=\"/gscratch/srlab/programs/detonate-1.11/rsem-eval/rsem-eval-calculate-score\"\n)\n\n\n\n\n# Loop through each comparison\nfor transcriptome in \"${!transcriptomes_array[@]}\"\ndo\n\n  ## Inititalize arrays\n  R1_array=()\n  R2_array=()\n  reads_array=()\n\n  # Variables\n  R1_list=\"\"\n  R2_list=\"\"\n\n  transcriptome_name=\"${transcriptomes_array[$transcriptome]##*/}\"\n\n\n  rsem_eval_dist_mean_sd=\"${transcriptome_name}_true_length_dis_mean_sd.txt\"\n\n  # Capture FastA checksums for verification\n  echo \"Generating checksum for ${transcriptome_name}\"\n  md5sum \"${transcriptomes_array[transcriptome]}\" >> fasta.checksums.md5\n  echo \"Finished generating checksum for ${transcriptome_name}\"\n  echo \"\"\n\n\tif [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v1.0.fasta\" ]]; then\n\n    reads_array=(\"${reads_dir}\"/20200[15][13][138]*megan*.fq)\n\n    # Create array of fastq R1 files\n    R1_array=(\"${reads_dir}\"/20200[15][13][138]*megan*R1.fq)\n\n    # Create array of fastq R2 files\n    R2_array=(\"${reads_dir}\"/20200[15][13][138]*megan*R2.fq)\n\n\n\n  elif [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v1.5.fasta\" ]]; then\n\n    reads_array=(\"${reads_dir}\"/20200[145][13][138]*megan*.fq)\n\n    # Create array of fastq R1 files\n    R1_array=(\"${reads_dir}\"/20200[145][13][138]*megan*R1.fq)\n\n    # Create array of fastq R2 files\n    R2_array=(\"${reads_dir}\"/20200[145][13][138]*megan*R2.fq)\n\n  elif [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v1.6.fasta\" ]]; then\n\n    reads_array=(\"${reads_dir}\"/*megan*.fq)\n\n    # Create array of fastq R1 files\n    R1_array=(\"${reads_dir}\"/*megan*R1.fq)\n\n    # Create array of fastq R2 files\n    R2_array=(\"${reads_dir}\"/*megan*R2.fq)\n\n  elif [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v1.7.fasta\" ]]; then\n\n    reads_array=(\"${reads_dir}\"/20200[145][13][189]*megan*.fq)\n\n    # Create array of fastq R1 files\n    R1_array=(\"${reads_dir}\"/20200[145][13][189]*megan*R1.fq)\n\n    # Create array of fastq R2 files\n    R2_array=(\"${reads_dir}\"/20200[145][13][189]*megan*R2.fq)\n\n  elif [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v2.0.fasta\" ]] \\\n  || [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v2.1.fasta\" ]]; then\n\n    reads_array=(\"${reads_dir}\"/*fastp-trim*.fq)\n\n    # Create array of fastq R1 files\n    R1_array=(\"${reads_dir}\"/*R1*fastp-trim*.fq)\n\n    # Create array of fastq R2 files\n    R2_array=(\"${reads_dir}\"/*R2*fastp-trim*.fq)\n\n  elif [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v3.0.fasta\" ]] \\\n  || [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v3.1.fasta\" ]]; then\n\n    reads_array=(\"${reads_dir}\"/*fastp-trim*20[12][09][01][24]1[48]*.fq)\n\n    # Create array of fastq R1 files\n    R1_array=(\"${reads_dir}\"/*R1*fastp-trim*20[12][09][01][24]1[48]*.fq)\n\n    # Create array of fastq R2 files\n    R2_array=(\"${reads_dir}\"/*R2*fastp-trim*20[12][09][01][24]1[48]*.fq)\n\n\n  fi\n\n  # Create list of fastq files used in analysis\n  ## Uses parameter substitution to strip leading path from filename\n  printf \"%s\\n\" \"${reads_array[@]##*/}\" >> \"${transcriptome_name}\".fastq.list.txt\n\n  # Create comma-separated lists of FastQ reads\n  R1_list=$(echo \"${R1_array[@]}\" | tr \" \" \",\")\n  R2_list=$(echo \"${R2_array[@]}\" | tr \" \" \",\")\n\n  # Determine transcript length\n  ${programs_array[detonate_trans_length]} \\\n  \"${transcriptomes_array[$transcriptome]}\" \\\n  \"${rsem_eval_dist_mean_sd}\"\n\n\n  # Run rsem-eval\n  # Use bowtie2 and paired-end options\n  ${programs_array[detonate]} \\\n  --bowtie2 \\\n  --bowtie2-path \"${programs_array[bowtie2]}\" \\\n  --num-threads ${threads} \\\n  --transcript-length-parameters \"${rsem_eval_dist_mean_sd}\" \\\n  --paired-end \\\n  \"${R1_list}\" \\\n  \"${R2_list}\" \\\n  \"${transcriptomes_array[$transcriptome]}\" \\\n  \"${transcriptome_name}\" \\\n  ${frag_size}\n\n\n\ndone\n\n# Document programs in PATH (primarily for program version ID)\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n\n# Capture program options\nfor program in \"${!programs_array[@]}\"\ndo\n\t{\n  echo \"Program options for ${program}: \"\n\techo \"\"\n\t${programs_array[$program]} --help\n\techo \"\"\n\techo \"\"\n\techo \"----------------------------------------------\"\n\techo \"\"\n\techo \"\"\n} &>> program_options.log || true\ndone\n```\n\n\n---\n\n# RESULTS\n\nThis process was PAINFUL. Here's the \"runtime\" for the failed job (due to it timing out; after 65 DAYS!). Also, this was _just_ for `cbai_transcriptome_v2.0`!!!\n\n![ref-eval runtime of 65 days](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20200616_cbai_detonate_transcriptome_evaluations_runtime.png?raw=true)\n\nOverall, even though this required very little effort on my part, it was kind of a pain to manage. For some reason (I guess it's due to the number of sequences it has to align) `cbai_transcriptome_v2.0` alignments took too long (i.e. longer than the 30 days between Mox node maintenance). I restarted this job a couple of times and I finally lucked out for a bit when the October, November, and December 2020 Mox maintenance dates were canceled. Despite that, I neglected to extend the runtime further in December and the job timed out.\n\nBut, with that said, part of me thinks something weird was going on anyway. I mean, look at the size of the BAM file (remember, a BAM file is a _compressed_ version of a SAM file, and is usually close to _10x smaller_ than the originating SAM file!) that was still being made when the job died:\n\n![cbai_transcriptome_v2.0 BAM file size screencap](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20200616_cbai_detonate_transcriptome_evaluations_file_size.png?raw=true)\n\n789GB!!!!\n\nThat's absurd! Not to mention the fact that this was generated over the course of _two months_!\n\nI'm going to try one more thing to see if I can get `rsem-eval` to work. Again, it's low effort, so won't take too much of my time. I'm going to run [`bowtie2`](https://github.com/BenLangmead/bowtie2) independently of `rsem-eval` ([`bowtie2`](https://github.com/BenLangmead/bowtie2) alignment is built-in to that, if the user wants to use it) and see if that is somehow faster. If it is, then I can provide the resulting BAM files as input to `rsem-eval`.\n","srcMarkdownNoYaml":"\nAttempting to get some other metrics regarding our various _C.bairdi_ transcriptome assemblies other than BUSCO scores, I decided to try running [DETONATE](http://deweylab.biostat.wisc.edu/detonate/), as this is a recommended tool by [`Trinity`](https://github.com/trinityrnaseq/trinityrnaseq/wiki).\n\nI recently ran DETONATE's `ref-eval` ([see 20200529](https://robertslab.github.io/sams-notebook/posts/2020/2020-05-29-Transcriptome-Comparison---C.bairdi-Transcriptomes-Compared-with-DETONATE-on-Mox/)) because it was relatively easy to do and thought it might be useful, as it's included in the [DETONATE](http://deweylab.biostat.wisc.edu/detonate/) package. However, the results are complicated to interpret and I'm not sure they actually tell us anything.\n\nContinuing with the [DETONATE](http://deweylab.biostat.wisc.edu/detonate/) package, I ran the other component (which is probably what we really want and will provide us with a simple \"score\" which will be easier to understand), `rsem-eval`.  Plus, it's a very low effort process, so might as well give it a whirl.\n\nThe job was run on Mox.\n\nSBATCH script (GitHub):\n\n- [20200616_cbai_detonate_transcriptome_evaluations.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20200616_cbai_detonate_transcriptome_evaluations.sh)\n\n```shell\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=cbai_detonate_transcriptome_evaluations\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=15-00:00:00\n## Memory per node\n#SBATCH --mem=500G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20200616_cbai_detonate_transcriptome_evaluations\n\n\n###################################################################################\n# These variables need to be set by user\n\n# Assign Variables\n## frag_size is guesstimate of library fragment sizes\nfrag_size=500\nreads_dir=/gscratch/srlab/sam/data/C_bairdi/RNAseq\ntranscriptomes_dir=/gscratch/srlab/sam/data/C_bairdi/transcriptomes\nthreads=28\n\n# Array of the various comparisons to evaluate\n# Each condition in each comparison should be separated by a \"-\"\ntranscriptomes_array=(\n\"${transcriptomes_dir}\"/cbai_transcriptome_v1.0.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v1.5.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v1.6.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v1.7.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v2.0.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v2.1.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v3.0.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v3.1.fasta\n)\n\n\n###################################################################################\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n\n# Programs array\ndeclare -A programs_array\nprograms_array=(\n[bowtie2]=\"/gscratch/srlab/programs/bowtie2-2.3.5.1-linux-x86_64\" \\\n[detonate_trans_length]=\"/gscratch/srlab/programs/detonate-1.11/rsem-eval/rsem-eval-estimate-transcript-length-distribution\" \\\n[detonate]=\"/gscratch/srlab/programs/detonate-1.11/rsem-eval/rsem-eval-calculate-score\"\n)\n\n\n\n\n# Loop through each comparison\nfor transcriptome in \"${!transcriptomes_array[@]}\"\ndo\n\n  ## Inititalize arrays\n  R1_array=()\n  R2_array=()\n  reads_array=()\n\n  # Variables\n  R1_list=\"\"\n  R2_list=\"\"\n\n  transcriptome_name=\"${transcriptomes_array[$transcriptome]##*/}\"\n\n\n  rsem_eval_dist_mean_sd=\"${transcriptome_name}_true_length_dis_mean_sd.txt\"\n\n  # Capture FastA checksums for verification\n  echo \"Generating checksum for ${transcriptome_name}\"\n  md5sum \"${transcriptomes_array[transcriptome]}\" >> fasta.checksums.md5\n  echo \"Finished generating checksum for ${transcriptome_name}\"\n  echo \"\"\n\n\tif [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v1.0.fasta\" ]]; then\n\n    reads_array=(\"${reads_dir}\"/20200[15][13][138]*megan*.fq)\n\n    # Create array of fastq R1 files\n    R1_array=(\"${reads_dir}\"/20200[15][13][138]*megan*R1.fq)\n\n    # Create array of fastq R2 files\n    R2_array=(\"${reads_dir}\"/20200[15][13][138]*megan*R2.fq)\n\n\n\n  elif [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v1.5.fasta\" ]]; then\n\n    reads_array=(\"${reads_dir}\"/20200[145][13][138]*megan*.fq)\n\n    # Create array of fastq R1 files\n    R1_array=(\"${reads_dir}\"/20200[145][13][138]*megan*R1.fq)\n\n    # Create array of fastq R2 files\n    R2_array=(\"${reads_dir}\"/20200[145][13][138]*megan*R2.fq)\n\n  elif [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v1.6.fasta\" ]]; then\n\n    reads_array=(\"${reads_dir}\"/*megan*.fq)\n\n    # Create array of fastq R1 files\n    R1_array=(\"${reads_dir}\"/*megan*R1.fq)\n\n    # Create array of fastq R2 files\n    R2_array=(\"${reads_dir}\"/*megan*R2.fq)\n\n  elif [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v1.7.fasta\" ]]; then\n\n    reads_array=(\"${reads_dir}\"/20200[145][13][189]*megan*.fq)\n\n    # Create array of fastq R1 files\n    R1_array=(\"${reads_dir}\"/20200[145][13][189]*megan*R1.fq)\n\n    # Create array of fastq R2 files\n    R2_array=(\"${reads_dir}\"/20200[145][13][189]*megan*R2.fq)\n\n  elif [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v2.0.fasta\" ]] \\\n  || [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v2.1.fasta\" ]]; then\n\n    reads_array=(\"${reads_dir}\"/*fastp-trim*.fq)\n\n    # Create array of fastq R1 files\n    R1_array=(\"${reads_dir}\"/*R1*fastp-trim*.fq)\n\n    # Create array of fastq R2 files\n    R2_array=(\"${reads_dir}\"/*R2*fastp-trim*.fq)\n\n  elif [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v3.0.fasta\" ]] \\\n  || [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v3.1.fasta\" ]]; then\n\n    reads_array=(\"${reads_dir}\"/*fastp-trim*20[12][09][01][24]1[48]*.fq)\n\n    # Create array of fastq R1 files\n    R1_array=(\"${reads_dir}\"/*R1*fastp-trim*20[12][09][01][24]1[48]*.fq)\n\n    # Create array of fastq R2 files\n    R2_array=(\"${reads_dir}\"/*R2*fastp-trim*20[12][09][01][24]1[48]*.fq)\n\n\n  fi\n\n  # Create list of fastq files used in analysis\n  ## Uses parameter substitution to strip leading path from filename\n  printf \"%s\\n\" \"${reads_array[@]##*/}\" >> \"${transcriptome_name}\".fastq.list.txt\n\n  # Create comma-separated lists of FastQ reads\n  R1_list=$(echo \"${R1_array[@]}\" | tr \" \" \",\")\n  R2_list=$(echo \"${R2_array[@]}\" | tr \" \" \",\")\n\n  # Determine transcript length\n  ${programs_array[detonate_trans_length]} \\\n  \"${transcriptomes_array[$transcriptome]}\" \\\n  \"${rsem_eval_dist_mean_sd}\"\n\n\n  # Run rsem-eval\n  # Use bowtie2 and paired-end options\n  ${programs_array[detonate]} \\\n  --bowtie2 \\\n  --bowtie2-path \"${programs_array[bowtie2]}\" \\\n  --num-threads ${threads} \\\n  --transcript-length-parameters \"${rsem_eval_dist_mean_sd}\" \\\n  --paired-end \\\n  \"${R1_list}\" \\\n  \"${R2_list}\" \\\n  \"${transcriptomes_array[$transcriptome]}\" \\\n  \"${transcriptome_name}\" \\\n  ${frag_size}\n\n\n\ndone\n\n# Document programs in PATH (primarily for program version ID)\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n\n# Capture program options\nfor program in \"${!programs_array[@]}\"\ndo\n\t{\n  echo \"Program options for ${program}: \"\n\techo \"\"\n\t${programs_array[$program]} --help\n\techo \"\"\n\techo \"\"\n\techo \"----------------------------------------------\"\n\techo \"\"\n\techo \"\"\n} &>> program_options.log || true\ndone\n```\n\n\n---\n\n# RESULTS\n\nThis process was PAINFUL. Here's the \"runtime\" for the failed job (due to it timing out; after 65 DAYS!). Also, this was _just_ for `cbai_transcriptome_v2.0`!!!\n\n![ref-eval runtime of 65 days](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20200616_cbai_detonate_transcriptome_evaluations_runtime.png?raw=true)\n\nOverall, even though this required very little effort on my part, it was kind of a pain to manage. For some reason (I guess it's due to the number of sequences it has to align) `cbai_transcriptome_v2.0` alignments took too long (i.e. longer than the 30 days between Mox node maintenance). I restarted this job a couple of times and I finally lucked out for a bit when the October, November, and December 2020 Mox maintenance dates were canceled. Despite that, I neglected to extend the runtime further in December and the job timed out.\n\nBut, with that said, part of me thinks something weird was going on anyway. I mean, look at the size of the BAM file (remember, a BAM file is a _compressed_ version of a SAM file, and is usually close to _10x smaller_ than the originating SAM file!) that was still being made when the job died:\n\n![cbai_transcriptome_v2.0 BAM file size screencap](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20200616_cbai_detonate_transcriptome_evaluations_file_size.png?raw=true)\n\n789GB!!!!\n\nThat's absurd! Not to mention the fact that this was generated over the course of _two months_!\n\nI'm going to try one more thing to see if I can get `rsem-eval` to work. Again, it's low effort, so won't take too much of my time. I'm going to run [`bowtie2`](https://github.com/BenLangmead/bowtie2) independently of `rsem-eval` ([`bowtie2`](https://github.com/BenLangmead/bowtie2) alignment is built-in to that, if the user wants to use it) and see if that is somehow faster. If it is, then I can provide the resulting BAM files as input to `rsem-eval`.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"Transcriptome Comparison - C.bairdi Transcriptomes Evaluations with DETONATE on Mox","date":"2020-06-01 11:45","tags":["Tanner crab","Chionoecetes bairdi","mox","DETONATE"],"categories":["2020","Miscellaneous"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}