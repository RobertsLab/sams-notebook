{"title":"Read Mapping - C.bairdi 201002558-2729-Q7 and 6129-403-26-Q7 Taxa-Specific NanoPore Reads to cbai_genome_v1.01.fasta Using Minimap2 on Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"Read Mapping - C.bairdi 201002558-2729-Q7 and 6129-403-26-Q7 Taxa-Specific NanoPore Reads to cbai_genome_v1.01.fasta Using Minimap2 on Mox","date":"2020-10-14 09:59","tags":["mox","Tanner crab","minimap2","nanopore"],"categories":["2020","Miscellaneous"]},"headingText":"Job Name","containsRefs":false,"markdown":"\nAfter extracting [FastQ reads using `seqtk` on 20201013](https://robertslab.github.io/sams-notebook/posts/2020/2020-10-13-Data-Wrangling-C.bairdi-NanoPore-Reads-Extractions-With-Seqtk-on-Mephisto/) from the various taxa I had been interested in, the next thing needed doing was mapping reads to the [`cbai_genome_v1.01` \"genome\" assembly from 20200917](https://robertslab.github.io/sams-notebook/2020/09/17/Genome-Assembly-C.bairdi-cbai_v1.0-Using-All-NanoPore-Data-With-Flye-on-Mox/). I found that [Minimap2](https://github.com/lh3/minimap2) will map long reads (e.g. NanoPore), in addition to short reads, so I decided to give that a rip.\n\nMinimap2 was run on Mox.\n\nSBATCH script (GitHub):\n\n- [20201014_cbai_minimap_nanopore-megan6-taxa-reads.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20201014_cbai_minimap_nanopore-megan6-taxa-reads.sh)\n\n```shell\n#!/bin/bash\n#SBATCH --job-name=20201014__cbai_minimap_nanopore-megan6-taxa-reads\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=15-00:00:00\n## Memory per node\n#SBATCH --mem=120G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20201014_cbai_minimap_nanopore-megan6-taxa-reads\n\n\n###################################################################################\n# These variables need to be set by user\n\n## Assign Variables\n\n# CPU threads to use\nthreads=27\n\n# Genome FastA path\ngenome_fasta=/gscratch/srlab/sam/data/C_bairdi/genomes/cbai_genome_v1.01.fasta\n\n\n# Paths to programs\nminimap2=\"/gscratch/srlab/programs/minimap2-2.17_x64-linux/minimap2\"\nsamtools=\"/gscratch/srlab/programs/samtools-1.10/samtools\"\n\n\n\n# Programs array\ndeclare -A programs_array\nprograms_array=(\n[minimap2]=\"${minimap2}\" \\\n[samtools_sort]=\"${samtools} sort\" \\\n[samtools_view]=\"${samtools} view\"\n)\n\n\n\n###################################################################################\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n# Capture date\ntimestamp=$(date +%Y%m%d)\n\n# Loop through each FastQ\nfor fastq in *.fq\ndo\n\n  # Parse out sample name\n  sample=$(echo \"${fastq}\" | awk -F\"_\" '{print $2}')\n\n  # Caputure taxa\n  taxa=$(echo \"${fastq}\" | awk -F\"_\" '{print $3}')\n\n  # Capture filename prefix\n  prefix=\"${timestamp}_${sample}_${taxa}\"\n\n  # Run Minimap2 with Oxford NanoPore Technologies (ONT) option\n  # Using SAM output format (-a option)\n  ${programs_array[minimap2]} \\\n  -ax map-ont \\\n  ${genome_fasta} \\\n  ${fastq} \\\n  | ${programs_array[samtools_sort]} --threads ${threads} \\\n  -O sam \\\n  > \"${prefix}\".sorted.sam\n\n\n  # Capture FastA checksums for verification ()\n  echo \"Generating checksum for ${fastq}\"\n  md5sum \"${fastq}\" > fastq_checksums.md5\n  echo \"Finished generating checksum for ${fastq}\"\n  echo \"\"\n\n\ndone\n\n# Document programs in PATH (primarily for program version ID)\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n\n# Capture program options\n## Note: Trinity util/support scripts don't have options/help menus\nfor program in \"${!programs_array[@]}\"\ndo\n\t{\n  echo \"Program options for ${program}: \"\n\techo \"\"\n\t${programs_array[$program]} --help\n\techo \"\"\n\techo \"\"\n\techo \"----------------------------------------------\"\n\techo \"\"\n\techo \"\"\n} &>> program_options.log || true\ndone\n```\n\n\n---\n\n# RESULTS\n\nAlthough there aren't that many total number of sequences to map, I was still surprised at how quick this was; ~5mins:\n\n![Minimap2 runtime on Mox for all taxa read mapping](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20201014_cbai_minimap_nanopore-megan6-taxa-reads_runtime.png?raw=true)\n\nOutput folder and files:\n\n- [20201014_cbai_minimap_nanopore-megan6-taxa-reads/](https://gannet.fish.washington.edu/Atumefaciens/20201014_cbai_minimap_nanopore-megan6-taxa-reads/)\n\n  - [20201014_201002558-2729-Q7_Aquifex.sorted.sam](https://gannet.fish.washington.edu/Atumefaciens/20201014_cbai_minimap_nanopore-megan6-taxa-reads/20201014_201002558-2729-Q7_Aquifex.sorted.sam) (1.5M)\n\n  - [20201014_201002558-2729-Q7_Arthropoda.sorted.sam](https://gannet.fish.washington.edu/Atumefaciens/20201014_cbai_minimap_nanopore-megan6-taxa-reads/20201014_201002558-2729-Q7_Arthropoda.sorted.sam) (11M)\n\n  - [20201014_201002558-2729-Q7_Enterospora.sorted.sam](https://gannet.fish.washington.edu/Atumefaciens/20201014_cbai_minimap_nanopore-megan6-taxa-reads/20201014_201002558-2729-Q7_Enterospora.sorted.sam) (8.3M)\n\n  - [20201014_201002558-2729-Q7_Sar.sorted.sam](https://gannet.fish.washington.edu/Atumefaciens/20201014_cbai_minimap_nanopore-megan6-taxa-reads/20201014_201002558-2729-Q7_Sar.sorted.sam) (104K)\n\n  - [20201014_6129-403-26-Q7_Alveolata.sorted.sam](https://gannet.fish.washington.edu/Atumefaciens/20201014_cbai_minimap_nanopore-megan6-taxa-reads/20201014_6129-403-26-Q7_Alveolata.sorted.sam) (5.6M)\n\n  - [20201014_6129-403-26-Q7_Aquifex.sorted.sam](https://gannet.fish.washington.edu/Atumefaciens/20201014_cbai_minimap_nanopore-megan6-taxa-reads/20201014_6129-403-26-Q7_Aquifex.sorted.sam) (68M)\n\n  - [20201014_6129-403-26-Q7_Arthropoda.sorted.sam](https://gannet.fish.washington.edu/Atumefaciens/20201014_cbai_minimap_nanopore-megan6-taxa-reads/20201014_6129-403-26-Q7_Arthropoda.sorted.sam) (491M)\n\n  - [20201014_6129-403-26-Q7_Enterospora.sorted.sam](https://gannet.fish.washington.edu/Atumefaciens/20201014_cbai_minimap_nanopore-megan6-taxa-reads/20201014_6129-403-26-Q7_Enterospora.sorted.sam) (261M)\n\nI left the output files as SAM files (instead of compressing them to the standard BAM format) so that they would be human readable. I haven't actually explored SAM/BAM manipulation too much in the past and felt that this was a good excuse and being able to view the SAM files without the need to use `samtools` seemed easier. Also, I knew these would be relatively small files, so compressing them wasn't a huge priority.\n\nNext up, messing around with these SAM files and identifying contigs/scaffolds where these various reads map.\n","srcMarkdownNoYaml":"\nAfter extracting [FastQ reads using `seqtk` on 20201013](https://robertslab.github.io/sams-notebook/posts/2020/2020-10-13-Data-Wrangling-C.bairdi-NanoPore-Reads-Extractions-With-Seqtk-on-Mephisto/) from the various taxa I had been interested in, the next thing needed doing was mapping reads to the [`cbai_genome_v1.01` \"genome\" assembly from 20200917](https://robertslab.github.io/sams-notebook/2020/09/17/Genome-Assembly-C.bairdi-cbai_v1.0-Using-All-NanoPore-Data-With-Flye-on-Mox/). I found that [Minimap2](https://github.com/lh3/minimap2) will map long reads (e.g. NanoPore), in addition to short reads, so I decided to give that a rip.\n\nMinimap2 was run on Mox.\n\nSBATCH script (GitHub):\n\n- [20201014_cbai_minimap_nanopore-megan6-taxa-reads.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20201014_cbai_minimap_nanopore-megan6-taxa-reads.sh)\n\n```shell\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=20201014__cbai_minimap_nanopore-megan6-taxa-reads\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=15-00:00:00\n## Memory per node\n#SBATCH --mem=120G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20201014_cbai_minimap_nanopore-megan6-taxa-reads\n\n\n###################################################################################\n# These variables need to be set by user\n\n## Assign Variables\n\n# CPU threads to use\nthreads=27\n\n# Genome FastA path\ngenome_fasta=/gscratch/srlab/sam/data/C_bairdi/genomes/cbai_genome_v1.01.fasta\n\n\n# Paths to programs\nminimap2=\"/gscratch/srlab/programs/minimap2-2.17_x64-linux/minimap2\"\nsamtools=\"/gscratch/srlab/programs/samtools-1.10/samtools\"\n\n\n\n# Programs array\ndeclare -A programs_array\nprograms_array=(\n[minimap2]=\"${minimap2}\" \\\n[samtools_sort]=\"${samtools} sort\" \\\n[samtools_view]=\"${samtools} view\"\n)\n\n\n\n###################################################################################\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n# Capture date\ntimestamp=$(date +%Y%m%d)\n\n# Loop through each FastQ\nfor fastq in *.fq\ndo\n\n  # Parse out sample name\n  sample=$(echo \"${fastq}\" | awk -F\"_\" '{print $2}')\n\n  # Caputure taxa\n  taxa=$(echo \"${fastq}\" | awk -F\"_\" '{print $3}')\n\n  # Capture filename prefix\n  prefix=\"${timestamp}_${sample}_${taxa}\"\n\n  # Run Minimap2 with Oxford NanoPore Technologies (ONT) option\n  # Using SAM output format (-a option)\n  ${programs_array[minimap2]} \\\n  -ax map-ont \\\n  ${genome_fasta} \\\n  ${fastq} \\\n  | ${programs_array[samtools_sort]} --threads ${threads} \\\n  -O sam \\\n  > \"${prefix}\".sorted.sam\n\n\n  # Capture FastA checksums for verification ()\n  echo \"Generating checksum for ${fastq}\"\n  md5sum \"${fastq}\" > fastq_checksums.md5\n  echo \"Finished generating checksum for ${fastq}\"\n  echo \"\"\n\n\ndone\n\n# Document programs in PATH (primarily for program version ID)\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n\n# Capture program options\n## Note: Trinity util/support scripts don't have options/help menus\nfor program in \"${!programs_array[@]}\"\ndo\n\t{\n  echo \"Program options for ${program}: \"\n\techo \"\"\n\t${programs_array[$program]} --help\n\techo \"\"\n\techo \"\"\n\techo \"----------------------------------------------\"\n\techo \"\"\n\techo \"\"\n} &>> program_options.log || true\ndone\n```\n\n\n---\n\n# RESULTS\n\nAlthough there aren't that many total number of sequences to map, I was still surprised at how quick this was; ~5mins:\n\n![Minimap2 runtime on Mox for all taxa read mapping](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20201014_cbai_minimap_nanopore-megan6-taxa-reads_runtime.png?raw=true)\n\nOutput folder and files:\n\n- [20201014_cbai_minimap_nanopore-megan6-taxa-reads/](https://gannet.fish.washington.edu/Atumefaciens/20201014_cbai_minimap_nanopore-megan6-taxa-reads/)\n\n  - [20201014_201002558-2729-Q7_Aquifex.sorted.sam](https://gannet.fish.washington.edu/Atumefaciens/20201014_cbai_minimap_nanopore-megan6-taxa-reads/20201014_201002558-2729-Q7_Aquifex.sorted.sam) (1.5M)\n\n  - [20201014_201002558-2729-Q7_Arthropoda.sorted.sam](https://gannet.fish.washington.edu/Atumefaciens/20201014_cbai_minimap_nanopore-megan6-taxa-reads/20201014_201002558-2729-Q7_Arthropoda.sorted.sam) (11M)\n\n  - [20201014_201002558-2729-Q7_Enterospora.sorted.sam](https://gannet.fish.washington.edu/Atumefaciens/20201014_cbai_minimap_nanopore-megan6-taxa-reads/20201014_201002558-2729-Q7_Enterospora.sorted.sam) (8.3M)\n\n  - [20201014_201002558-2729-Q7_Sar.sorted.sam](https://gannet.fish.washington.edu/Atumefaciens/20201014_cbai_minimap_nanopore-megan6-taxa-reads/20201014_201002558-2729-Q7_Sar.sorted.sam) (104K)\n\n  - [20201014_6129-403-26-Q7_Alveolata.sorted.sam](https://gannet.fish.washington.edu/Atumefaciens/20201014_cbai_minimap_nanopore-megan6-taxa-reads/20201014_6129-403-26-Q7_Alveolata.sorted.sam) (5.6M)\n\n  - [20201014_6129-403-26-Q7_Aquifex.sorted.sam](https://gannet.fish.washington.edu/Atumefaciens/20201014_cbai_minimap_nanopore-megan6-taxa-reads/20201014_6129-403-26-Q7_Aquifex.sorted.sam) (68M)\n\n  - [20201014_6129-403-26-Q7_Arthropoda.sorted.sam](https://gannet.fish.washington.edu/Atumefaciens/20201014_cbai_minimap_nanopore-megan6-taxa-reads/20201014_6129-403-26-Q7_Arthropoda.sorted.sam) (491M)\n\n  - [20201014_6129-403-26-Q7_Enterospora.sorted.sam](https://gannet.fish.washington.edu/Atumefaciens/20201014_cbai_minimap_nanopore-megan6-taxa-reads/20201014_6129-403-26-Q7_Enterospora.sorted.sam) (261M)\n\nI left the output files as SAM files (instead of compressing them to the standard BAM format) so that they would be human readable. I haven't actually explored SAM/BAM manipulation too much in the past and felt that this was a good excuse and being able to view the SAM files without the need to use `samtools` seemed easier. Also, I knew these would be relatively small files, so compressing them wasn't a huge priority.\n\nNext up, messing around with these SAM files and identifying contigs/scaffolds where these various reads map.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"Read Mapping - C.bairdi 201002558-2729-Q7 and 6129-403-26-Q7 Taxa-Specific NanoPore Reads to cbai_genome_v1.01.fasta Using Minimap2 on Mox","date":"2020-10-14 09:59","tags":["mox","Tanner crab","minimap2","nanopore"],"categories":["2020","Miscellaneous"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}