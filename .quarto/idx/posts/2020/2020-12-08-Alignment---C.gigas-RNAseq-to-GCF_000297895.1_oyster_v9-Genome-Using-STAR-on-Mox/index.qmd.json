{"title":"Alignment - C.gigas RNAseq to GCF_000297895.1_oyster_v9 Genome Using STAR on Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"Alignment - C.gigas RNAseq to GCF_000297895.1_oyster_v9 Genome Using STAR on Mox","date":"2020-12-08 21:45","tags":["alignment","STAR","Crassostrea gigas","Pacific oyster","RNAseq"],"categories":["2020","Miscellaneous"]},"headingText":"Job Name","containsRefs":false,"markdown":"\nMac was getting some weird results when mapping some single cell RNAseq data to the _C.gigas_ mitochondrial (mt) genome that she had, so she [asked for some help mapping other _C.gigas_ RNAseq data](https://github.com/RobertsLab/resources/issues/1045) (GitHub Issue) to the _C.gigas_ mt genome to see if someone else would get similar results.\n\nPer Mac's suggestion, I used [`STAR`](https://github.com/alexdobin/STAR) to perform an RNAseq alignment.\n\nI used a genome FastA and transcriptome GTF file that she had previously provided in [this GitHub Issue](https://github.com/RobertsLab/resources/issues/1033), so I don't know much about their origination/history.\n\nFor RNAseq data, I used the only Roberts Lab _C.gigas_ data I could find (see [`Nightingales`](http://b.link/nightingales) (Google Sheet) for more info), which was surprisingly limited. I didn't realize that we've performed so few RNAseq experiments with _C.gigas_.\n\nI used the following files for the alignment:\n\nRNAseq (FastQ):\n\n- [2M_AGTCAA_L001_R1_001.fastq.gz](http://owl.fish.washington.edu/nightingales/C_gigas/2M_AGTCAA_L001_R1_001.fastq.gz) (2.4GB)\n\n- [2M-HS_CCGTCC_L001_R1_001.fastq.gz](http://owl.fish.washington.edu/nightingales/C_gigas/2M-HS_CCGTCC_L001_R1_001.fastq.gz) (1.9GB)\n\n- [4M_AGTTCC_L001_R1_001.fastq.gz](http://owl.fish.washington.edu/nightingales/C_gigas/4M_AGTTCC_L001_R1_001.fastq.gz) (2.0GB)\n\n- [http://owl.fish.washington.edu/nightingales/C_gigas/4M-HS_GTCCGC_L001_R1_001.fastq.gz](http://owl.fish.washington.edu/nightingales/C_gigas/4M-HS_GTCCGC_L001_R1_001.fastq.gz) (1.5GB)\n\n- [http://owl.fish.washington.edu/nightingales/C_gigas/6M_ATGTCA_L001_R1_001.fastq.gz](http://owl.fish.washington.edu/nightingales/C_gigas/6M_ATGTCA_L001_R1_001.fastq.gz) (2.0GB)\n\n- [http://owl.fish.washington.edu/nightingales/C_gigas/6M-HS_GTGAAA_L001_R1_001.fastq.gz](http://owl.fish.washington.edu/nightingales/C_gigas/6M-HS_GTGAAA_L001_R1_001.fastq.gz) (1.5GB)\n\n\nGenome FastA (540MB):\n\n- [GCF_000297895.1_oyster_v9/GCF_000297895.1_oyster_v9_genomic.fasta](https://gannet.fish.washington.edu/Atumefaciens/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9/GCF_000297895.1_oyster_v9_genomic.fasta)\n\nTranscriptome GTF (380MB):\n\n- [GCF_000297895.1_oyster_v9_genomic.gtf.wl_keep_mito_v7.sorted.gtf](https://gannet.fish.washington.edu/Atumefaciens/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9/GCF_000297895.1_oyster_v9_genomic.gtf.wl_keep_mito_v7.sorted.gtf)\n\nThis was run on Mox.\n\nSBATCH script (GitHub):\n\n- [20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9.sh)\n\n```shell\n#!/bin/bash\n#SBATCH --job-name=20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9\n## Allocation Definition\n#SBATCH --account=coenv\n#SBATCH --partition=coenv\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=10-00:00:00\n## Memory per node\n#SBATCH --mem=120G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9\n\n\n### C.gigas RNAseq alignment to NCBI genome FastA file from Mac GCF_000297895.1_oyster_v9_genomic.fasta.\n### Mackenzie Gavery asked for help to evaluate RNAseq read mappings to mt genome.\n\n\n###################################################################################\n# These variables need to be set by user\n\n# Working directory\nwd=$(pwd)\n\n# Set number of CPUs to use\nthreads=28\n\n# Initialize arrays\nfastq_array=()\n\n# Input/output files\nfastq_checksums=fastq_checksums.md5\ngenome_fasta_checksum=genome_fasta_checksum.md5\ngtf_checksum=gtf_checksum.md5\nrnaseq_reads_dir=/gscratch/srlab/sam/data/C_gigas/RNAseq\ngtf=/gscratch/srlab/sam/data/C_gigas/transcriptomes/GCF_000297895.1_oyster_v9_genomic.gtf.wl_keep_mito_v7.sorted.gtf\ngenome_dir=${wd}/genome_dir\ngenome_fasta=/gscratch/srlab/sam/data/C_gigas/genomes/GCF_000297895.1_oyster_v9_genomic.fasta\n\n# Paths to programs\nmultiqc=/gscratch/srlab/programs/anaconda3/bin/multiqc\nsamtools=\"/gscratch/srlab/programs/samtools-1.10/samtools\"\nstar=/gscratch/srlab/programs/STAR-2.7.6a/bin/Linux_x86_64_static/STAR\n\n\n# Programs associative array\ndeclare -A programs_array\nprograms_array=(\n[multiqc]=\"${multiqc}\" \\\n[samtools_index]=\"${samtools} index\" \\\n[samtools_sort]=\"${samtools} sort\" \\\n[samtools_view]=\"${samtools} view\" \\\n[star]=\"${star}\"\n)\n\n###################################################################################\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\nmodule load intel-python3_2017\n\n# Load GCC OMP compiler. Might/not be needed for STAR\nmodule load gcc_8.2.1-ompi_4.0.2\n\n\n# Make STAR genome directory\nmkdir --parents ${genome_dir}\n\n# Populate RNAseq array\nfastq_array=(${rnaseq_reads_dir}/*.fastq)\n\n# Comma separated list required for STAR mapping\n# Uses tr to change spaces between elements to commas\nfastq_list=$(tr ' ' ',' <<< \"${fastq_array[@]}\")\n\n\n\n# Create STAR genome indexes\n# Overhang value is set to \"generic\" 100bp -\n# this value is unknown and is the suggested default in\n# STAR documentation.\n${programs_array[star]} \\\n--runThreadN ${threads} \\\n--runMode genomeGenerate \\\n--genomeDir ${genome_dir} \\\n--genomeFastaFiles ${genome_fasta} \\\n--sjdbGTFfile ${gtf} \\\n--sjdbOverhang 100 \\\n--genomeSAindexNbases 13\n\n# Run STAR mapping\n# Sets output to sorted BAM file\n${programs_array[star]} \\\n--runThreadN ${threads} \\\n--genomeDir ${genome_dir} \\\n--outSAMtype BAM SortedByCoordinate \\\n--readFilesIn ${fastq_list}\n\n# Index BAM output file\n${programs_array[samtools_index]} \\\nAligned.sortedByCoord.out.bam\n\n# Extract mt alignments\n# -h: includes header\n${programs_array[samtools_view]} \\\n--threads ${threads} \\\n--write-index \\\n-h \\\nAligned.sortedByCoord.out.bam NC_001276.1 \\\n-o Aligned.sortedByCoord.out.NC_001276.1.bam\n\n# Generate checksums for reference\n# Uses bash string substitution to replace commas with spaces\n# NOTE: do NOT quote string substitution command\nfor fastq in ${fastq_list//,/ }\ndo\n\n\t# Generate MD5 checksums for each input FastQ file\n\techo \"Generating MD5 checksum for ${fastq}.\"\n\tmd5sum \"${fastq}\" >> \"${fastq_checksums}\"\n\techo \"Completed: MD5 checksum for ${fastq}.\"\n\techo \"\"\ndone\n\n# Run MultiQC\n${programs_array[multiqc]} .\n\n# Generate checksums for genome FastA and GTF\necho \"Generating MD5 checksum for ${genome_fasta}.\"\nmd5sum \"${genome_fasta}\" > \"${genome_fasta_checksum}\"\necho \"Completed: MD5 checksum for ${genome_fasta}.\"\necho \"\"\n\necho \"Generating MD5 hecksum for ${gtf}.\"\nmd5sum \"${gtf}\" > \"${gtf_checksum}\"\necho \"Completed: MD5 checksum for ${gtf}.\"\necho \"\"\n\n\n# Capture program options\necho \"Logging program options...\"\nfor program in \"${!programs_array[@]}\"\ndo\n\t{\n  echo \"Program options for ${program}: \"\n\techo \"\"\n  # Handle samtools help menus\n  if [[ \"${program}\" == \"samtools_index\" ]] \\\n  || [[ \"${program}\" == \"samtools_sort\" ]] \\\n  || [[ \"${program}\" == \"samtools_view\" ]]\n  then\n    ${programs_array[$program]}\n  fi\n\t${programs_array[$program]} -h\n\techo \"\"\n\techo \"\"\n\techo \"----------------------------------------------\"\n\techo \"\"\n\techo \"\"\n} &>> program_options.log || true\n\n  # If MultiQC is in programs_array, copy the config file to this directory.\n  if [[ \"${program}\" == \"multiqc\" ]]; then\n  \tcp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n  fi\ndone\n\necho \"\"\necho \"Finished logging program options.\"\necho \"\"\n\necho \"\"\necho \"Logging system PATH.\"\n# Document programs in PATH (primarily for program version ID)\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n\necho \"Finished logging system PATH\"\n```\n\n\n---\n\n# RESULTS\n\nThis was pretty quick, but wasn't really sure what to expect. Only 20mins:\n\n![STAR runtime on Mox](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9_runtime.png?raw=true)\n\n\nA quick comparison of my alignment with what Mac saw previously show very similar results:\n\nSAM'S ALIGNMENT:\n\n![Sam's C.gigas RNAseq STAR alignment to mt genome in IGV](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9_mt_IGV.png?raw=true)\n\nMAC'S ALIGNMENT:\n\n![Mac's C.gigas single-cell RNAseq alignment to mt genome in IGV](https://user-images.githubusercontent.com/4512578/101513691-52c8bc80-3931-11eb-9f8e-2d5040234575.png)\n\n[Her primary concern](https://github.com/RobertsLab/resources/issues/1045) is the fact that a majority of the reads appear to align to non-coding regions of the _C.gigas_ mt genome. My alignment shows the same. I suspect that is likely related to poor annotation of the _C.gigas_ mt genome/transcriptome. Also, I believe the mitochondrial translation codons differ from that of nuclear translation codons. On top of that, I think invertebrates might also have a slightly altered set of translation codons. Zooming in on the IGV alignment seems to show that the standard (mammalian) codons were used to identify coding regions.\n\nNotice that the stop codon from this alignment shown below uses TGA as termination. [In invertebrate mt genomes, this codon actually encodes for tryptophan (Trp/W)](https://www.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi#SG5). This suggests that the GTF file was generated with a standard (i.e. vertebrate, non-mitochondrial) codon table, instead of a mt codon table (and almost certainly not an invertebrate mt codon table).\n\n![IGV screencap showing standard stop codon usage instead of invertebrate mt tryptophan codon](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9_mt_IGV_stop-codon.png?raw=true)\n\nIn any case, I've posted my thoughts/results [in that GitHub Issue](https://github.com/RobertsLab/resources/issues/1045). Links to files are below.\n\n\nOutput folder:\n\n- [20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9/](https://gannet.fish.washington.edu/Atumefaciens/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9/)\n\n  - BAM files:\n\n    - Mitochondrial BAM and index:\n\n      - [Aligned.sortedByCoord.out.NC_001276.1.bam](https://gannet.fish.washington.edu/Atumefaciens/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9/Aligned.sortedByCoord.out.NC_001276.1.bam)\n\n      - [Aligned.sortedByCoord.out.NC_001276.1.bam.csi](https://gannet.fish.washington.edu/Atumefaciens/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9/Aligned.sortedByCoord.out.NC_001276.1.bam.csi)\n\n    - Full BAM and index:\n\n      - [Aligned.sortedByCoord.out.bam](https://gannet.fish.washington.edu/Atumefaciens/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9/Aligned.sortedByCoord.out.bam)\n\n      - [Aligned.sortedByCoord.out.bam.bai](https://gannet.fish.washington.edu/Atumefaciens/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9/Aligned.sortedByCoord.out.bam.bai)\n\n\n  - MD5 checksums (TEXT):\n\n    - [fastq_checksums.md5](https://gannet.fish.washington.edu/Atumefaciens/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9/fastq_checksums.md5)\n\n    - [genome_fasta_checksum.md5](https://gannet.fish.washington.edu/Atumefaciens/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9/genome_fasta_checksum.md5)\n\n    - [gtf_checksum.md5](https://gannet.fish.washington.edu/Atumefaciens/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9/gtf_checksum.md5)\n","srcMarkdownNoYaml":"\nMac was getting some weird results when mapping some single cell RNAseq data to the _C.gigas_ mitochondrial (mt) genome that she had, so she [asked for some help mapping other _C.gigas_ RNAseq data](https://github.com/RobertsLab/resources/issues/1045) (GitHub Issue) to the _C.gigas_ mt genome to see if someone else would get similar results.\n\nPer Mac's suggestion, I used [`STAR`](https://github.com/alexdobin/STAR) to perform an RNAseq alignment.\n\nI used a genome FastA and transcriptome GTF file that she had previously provided in [this GitHub Issue](https://github.com/RobertsLab/resources/issues/1033), so I don't know much about their origination/history.\n\nFor RNAseq data, I used the only Roberts Lab _C.gigas_ data I could find (see [`Nightingales`](http://b.link/nightingales) (Google Sheet) for more info), which was surprisingly limited. I didn't realize that we've performed so few RNAseq experiments with _C.gigas_.\n\nI used the following files for the alignment:\n\nRNAseq (FastQ):\n\n- [2M_AGTCAA_L001_R1_001.fastq.gz](http://owl.fish.washington.edu/nightingales/C_gigas/2M_AGTCAA_L001_R1_001.fastq.gz) (2.4GB)\n\n- [2M-HS_CCGTCC_L001_R1_001.fastq.gz](http://owl.fish.washington.edu/nightingales/C_gigas/2M-HS_CCGTCC_L001_R1_001.fastq.gz) (1.9GB)\n\n- [4M_AGTTCC_L001_R1_001.fastq.gz](http://owl.fish.washington.edu/nightingales/C_gigas/4M_AGTTCC_L001_R1_001.fastq.gz) (2.0GB)\n\n- [http://owl.fish.washington.edu/nightingales/C_gigas/4M-HS_GTCCGC_L001_R1_001.fastq.gz](http://owl.fish.washington.edu/nightingales/C_gigas/4M-HS_GTCCGC_L001_R1_001.fastq.gz) (1.5GB)\n\n- [http://owl.fish.washington.edu/nightingales/C_gigas/6M_ATGTCA_L001_R1_001.fastq.gz](http://owl.fish.washington.edu/nightingales/C_gigas/6M_ATGTCA_L001_R1_001.fastq.gz) (2.0GB)\n\n- [http://owl.fish.washington.edu/nightingales/C_gigas/6M-HS_GTGAAA_L001_R1_001.fastq.gz](http://owl.fish.washington.edu/nightingales/C_gigas/6M-HS_GTGAAA_L001_R1_001.fastq.gz) (1.5GB)\n\n\nGenome FastA (540MB):\n\n- [GCF_000297895.1_oyster_v9/GCF_000297895.1_oyster_v9_genomic.fasta](https://gannet.fish.washington.edu/Atumefaciens/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9/GCF_000297895.1_oyster_v9_genomic.fasta)\n\nTranscriptome GTF (380MB):\n\n- [GCF_000297895.1_oyster_v9_genomic.gtf.wl_keep_mito_v7.sorted.gtf](https://gannet.fish.washington.edu/Atumefaciens/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9/GCF_000297895.1_oyster_v9_genomic.gtf.wl_keep_mito_v7.sorted.gtf)\n\nThis was run on Mox.\n\nSBATCH script (GitHub):\n\n- [20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9.sh)\n\n```shell\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9\n## Allocation Definition\n#SBATCH --account=coenv\n#SBATCH --partition=coenv\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=10-00:00:00\n## Memory per node\n#SBATCH --mem=120G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9\n\n\n### C.gigas RNAseq alignment to NCBI genome FastA file from Mac GCF_000297895.1_oyster_v9_genomic.fasta.\n### Mackenzie Gavery asked for help to evaluate RNAseq read mappings to mt genome.\n\n\n###################################################################################\n# These variables need to be set by user\n\n# Working directory\nwd=$(pwd)\n\n# Set number of CPUs to use\nthreads=28\n\n# Initialize arrays\nfastq_array=()\n\n# Input/output files\nfastq_checksums=fastq_checksums.md5\ngenome_fasta_checksum=genome_fasta_checksum.md5\ngtf_checksum=gtf_checksum.md5\nrnaseq_reads_dir=/gscratch/srlab/sam/data/C_gigas/RNAseq\ngtf=/gscratch/srlab/sam/data/C_gigas/transcriptomes/GCF_000297895.1_oyster_v9_genomic.gtf.wl_keep_mito_v7.sorted.gtf\ngenome_dir=${wd}/genome_dir\ngenome_fasta=/gscratch/srlab/sam/data/C_gigas/genomes/GCF_000297895.1_oyster_v9_genomic.fasta\n\n# Paths to programs\nmultiqc=/gscratch/srlab/programs/anaconda3/bin/multiqc\nsamtools=\"/gscratch/srlab/programs/samtools-1.10/samtools\"\nstar=/gscratch/srlab/programs/STAR-2.7.6a/bin/Linux_x86_64_static/STAR\n\n\n# Programs associative array\ndeclare -A programs_array\nprograms_array=(\n[multiqc]=\"${multiqc}\" \\\n[samtools_index]=\"${samtools} index\" \\\n[samtools_sort]=\"${samtools} sort\" \\\n[samtools_view]=\"${samtools} view\" \\\n[star]=\"${star}\"\n)\n\n###################################################################################\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\nmodule load intel-python3_2017\n\n# Load GCC OMP compiler. Might/not be needed for STAR\nmodule load gcc_8.2.1-ompi_4.0.2\n\n\n# Make STAR genome directory\nmkdir --parents ${genome_dir}\n\n# Populate RNAseq array\nfastq_array=(${rnaseq_reads_dir}/*.fastq)\n\n# Comma separated list required for STAR mapping\n# Uses tr to change spaces between elements to commas\nfastq_list=$(tr ' ' ',' <<< \"${fastq_array[@]}\")\n\n\n\n# Create STAR genome indexes\n# Overhang value is set to \"generic\" 100bp -\n# this value is unknown and is the suggested default in\n# STAR documentation.\n${programs_array[star]} \\\n--runThreadN ${threads} \\\n--runMode genomeGenerate \\\n--genomeDir ${genome_dir} \\\n--genomeFastaFiles ${genome_fasta} \\\n--sjdbGTFfile ${gtf} \\\n--sjdbOverhang 100 \\\n--genomeSAindexNbases 13\n\n# Run STAR mapping\n# Sets output to sorted BAM file\n${programs_array[star]} \\\n--runThreadN ${threads} \\\n--genomeDir ${genome_dir} \\\n--outSAMtype BAM SortedByCoordinate \\\n--readFilesIn ${fastq_list}\n\n# Index BAM output file\n${programs_array[samtools_index]} \\\nAligned.sortedByCoord.out.bam\n\n# Extract mt alignments\n# -h: includes header\n${programs_array[samtools_view]} \\\n--threads ${threads} \\\n--write-index \\\n-h \\\nAligned.sortedByCoord.out.bam NC_001276.1 \\\n-o Aligned.sortedByCoord.out.NC_001276.1.bam\n\n# Generate checksums for reference\n# Uses bash string substitution to replace commas with spaces\n# NOTE: do NOT quote string substitution command\nfor fastq in ${fastq_list//,/ }\ndo\n\n\t# Generate MD5 checksums for each input FastQ file\n\techo \"Generating MD5 checksum for ${fastq}.\"\n\tmd5sum \"${fastq}\" >> \"${fastq_checksums}\"\n\techo \"Completed: MD5 checksum for ${fastq}.\"\n\techo \"\"\ndone\n\n# Run MultiQC\n${programs_array[multiqc]} .\n\n# Generate checksums for genome FastA and GTF\necho \"Generating MD5 checksum for ${genome_fasta}.\"\nmd5sum \"${genome_fasta}\" > \"${genome_fasta_checksum}\"\necho \"Completed: MD5 checksum for ${genome_fasta}.\"\necho \"\"\n\necho \"Generating MD5 hecksum for ${gtf}.\"\nmd5sum \"${gtf}\" > \"${gtf_checksum}\"\necho \"Completed: MD5 checksum for ${gtf}.\"\necho \"\"\n\n\n# Capture program options\necho \"Logging program options...\"\nfor program in \"${!programs_array[@]}\"\ndo\n\t{\n  echo \"Program options for ${program}: \"\n\techo \"\"\n  # Handle samtools help menus\n  if [[ \"${program}\" == \"samtools_index\" ]] \\\n  || [[ \"${program}\" == \"samtools_sort\" ]] \\\n  || [[ \"${program}\" == \"samtools_view\" ]]\n  then\n    ${programs_array[$program]}\n  fi\n\t${programs_array[$program]} -h\n\techo \"\"\n\techo \"\"\n\techo \"----------------------------------------------\"\n\techo \"\"\n\techo \"\"\n} &>> program_options.log || true\n\n  # If MultiQC is in programs_array, copy the config file to this directory.\n  if [[ \"${program}\" == \"multiqc\" ]]; then\n  \tcp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n  fi\ndone\n\necho \"\"\necho \"Finished logging program options.\"\necho \"\"\n\necho \"\"\necho \"Logging system PATH.\"\n# Document programs in PATH (primarily for program version ID)\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n\necho \"Finished logging system PATH\"\n```\n\n\n---\n\n# RESULTS\n\nThis was pretty quick, but wasn't really sure what to expect. Only 20mins:\n\n![STAR runtime on Mox](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9_runtime.png?raw=true)\n\n\nA quick comparison of my alignment with what Mac saw previously show very similar results:\n\nSAM'S ALIGNMENT:\n\n![Sam's C.gigas RNAseq STAR alignment to mt genome in IGV](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9_mt_IGV.png?raw=true)\n\nMAC'S ALIGNMENT:\n\n![Mac's C.gigas single-cell RNAseq alignment to mt genome in IGV](https://user-images.githubusercontent.com/4512578/101513691-52c8bc80-3931-11eb-9f8e-2d5040234575.png)\n\n[Her primary concern](https://github.com/RobertsLab/resources/issues/1045) is the fact that a majority of the reads appear to align to non-coding regions of the _C.gigas_ mt genome. My alignment shows the same. I suspect that is likely related to poor annotation of the _C.gigas_ mt genome/transcriptome. Also, I believe the mitochondrial translation codons differ from that of nuclear translation codons. On top of that, I think invertebrates might also have a slightly altered set of translation codons. Zooming in on the IGV alignment seems to show that the standard (mammalian) codons were used to identify coding regions.\n\nNotice that the stop codon from this alignment shown below uses TGA as termination. [In invertebrate mt genomes, this codon actually encodes for tryptophan (Trp/W)](https://www.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi#SG5). This suggests that the GTF file was generated with a standard (i.e. vertebrate, non-mitochondrial) codon table, instead of a mt codon table (and almost certainly not an invertebrate mt codon table).\n\n![IGV screencap showing standard stop codon usage instead of invertebrate mt tryptophan codon](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9_mt_IGV_stop-codon.png?raw=true)\n\nIn any case, I've posted my thoughts/results [in that GitHub Issue](https://github.com/RobertsLab/resources/issues/1045). Links to files are below.\n\n\nOutput folder:\n\n- [20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9/](https://gannet.fish.washington.edu/Atumefaciens/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9/)\n\n  - BAM files:\n\n    - Mitochondrial BAM and index:\n\n      - [Aligned.sortedByCoord.out.NC_001276.1.bam](https://gannet.fish.washington.edu/Atumefaciens/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9/Aligned.sortedByCoord.out.NC_001276.1.bam)\n\n      - [Aligned.sortedByCoord.out.NC_001276.1.bam.csi](https://gannet.fish.washington.edu/Atumefaciens/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9/Aligned.sortedByCoord.out.NC_001276.1.bam.csi)\n\n    - Full BAM and index:\n\n      - [Aligned.sortedByCoord.out.bam](https://gannet.fish.washington.edu/Atumefaciens/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9/Aligned.sortedByCoord.out.bam)\n\n      - [Aligned.sortedByCoord.out.bam.bai](https://gannet.fish.washington.edu/Atumefaciens/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9/Aligned.sortedByCoord.out.bam.bai)\n\n\n  - MD5 checksums (TEXT):\n\n    - [fastq_checksums.md5](https://gannet.fish.washington.edu/Atumefaciens/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9/fastq_checksums.md5)\n\n    - [genome_fasta_checksum.md5](https://gannet.fish.washington.edu/Atumefaciens/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9/genome_fasta_checksum.md5)\n\n    - [gtf_checksum.md5](https://gannet.fish.washington.edu/Atumefaciens/20201208_cgig_STAR_RNAseq-to-NCBI-GCF_000297895.1_oyster_v9/gtf_checksum.md5)\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"Alignment - C.gigas RNAseq to GCF_000297895.1_oyster_v9 Genome Using STAR on Mox","date":"2020-12-08 21:45","tags":["alignment","STAR","Crassostrea gigas","Pacific oyster","RNAseq"],"categories":["2020","Miscellaneous"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}