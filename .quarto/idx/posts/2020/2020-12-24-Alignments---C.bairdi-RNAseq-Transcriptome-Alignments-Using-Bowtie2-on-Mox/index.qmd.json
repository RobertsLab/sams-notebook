{"title":"Alignments - C.bairdi RNAseq Transcriptome Alignments Using Bowtie2 on Mox","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","layout":"post","title":"Alignments - C.bairdi RNAseq Transcriptome Alignments Using Bowtie2 on Mox","date":"2020-12-24 05:10","tags":["bowtie2","Tanner crab","mox","bowtie2","transcriptome","RNAseq","Chionoecetes bairdi"],"categories":["2020","Tanner Crab RNAseq"]},"headingText":"Job Name","containsRefs":false,"markdown":"\nI had previously attempted to [compare all of our _C.bairdi_ transcriptome assemblies using DETONATE on 20200601](https://robertslab.github.io/sams-notebook/posts/2020/2020-06-01-Transcriptome-Comparison---C.bairdi-Transcriptomes-Evaluations-with-DETONATE-on-Mox/), but, due to hitting time limits on Mox, failed to successfully get the analysis to complete. I realized that the limiting factor was performing FastQ alignments, so I decided to run this step independently to see if I could at least get that step resolved.  [DETONATE (rsem-eval)](http://deweylab.biostat.wisc.edu/detonate/) will accept BAM files as input, so I'm hoping I can power through this alignment step and then provided  [DETONATE (rsem-eval)](http://deweylab.biostat.wisc.edu/detonate/) with the BAM files.\n\nI ran [`bowtie2`](https://github.com/BenLangmead/bowtie2) on Mox using the alignment settings described in the  [DETONATE (rsem-eval)](http://deweylab.biostat.wisc.edu/detonate/) documentation (see SBATCH script below for actual [`bowtie2`](https://github.com/BenLangmead/bowtie2) parameters).\n\nSBATCH script (GitHub):\n\n- [20201224_cbai_bowtie2_transcriptomes_alignments.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20201224_cbai_bowtie2_transcriptomes_alignments.sh)\n\n```shell\n#!/bin/bash\n#SBATCH --job-name=20201224_cbai_bowtie2_transcriptomes_alignments\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=15-00:00:00\n## Memory per node\n#SBATCH --mem=500G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20201224_cbai_bowtie2_transcriptomes_alignments\n# This is a script to generate BAM files for use in DETONATE's\n# rsem-eval program to compare C.bairdi transcriptome assembly \"qualities\".\n\n###################################################################################\n# These variables need to be set by user\n\n# Assign Variables\nreads_dir=/gscratch/srlab/sam/data/C_bairdi/RNAseq\ntranscriptomes_dir=/gscratch/srlab/sam/data/C_bairdi/transcriptomes\nthreads=28\nmem_per_thread=10G\n\n# Program paths\nbowtie2_dir=\"/gscratch/srlab/programs/bowtie2-2.4.2-linux-x86_64\"\nsamtools=\"/gscratch/srlab/programs/samtools-1.10/samtools\"\n\n# Array of the various comparisons to evaluate\n# Each condition in each comparison should be separated by a \"-\"\ntranscriptomes_array=(\n\"${transcriptomes_dir}\"/cbai_transcriptome_v1.0.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v1.5.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v1.6.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v1.7.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v2.0.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v2.1.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v3.0.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v3.1.fasta\n)\n\n\n###################################################################################\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\nmodule load intel-python3_2017\n\n\n# Programs array\ndeclare -A programs_array\nprograms_array=(\n[bowtie2]=\"${bowtie2_dir}/bowtie2\" \\\n[bowtie2_build]=\"${bowtie2_dir}/bowtie2-build\" \\\n[samtools_index]=\"${samtools} index\" \\\n[samtools_sort]=\"${samtools} sort\" \\\n[samtools_view]=\"${samtools} view\"\n)\n\n\n\n\n# Loop through each comparison\nfor transcriptome in \"${!transcriptomes_array[@]}\"\ndo\n\n  ## Inititalize arrays\n  R1_array=()\n  R2_array=()\n  reads_array=()\n\n  # Variables\n  R1_list=\"\"\n  R2_list=\"\"\n\n  transcriptome_name=\"${transcriptomes_array[$transcriptome]##*/}\"\n\n  # Capture FastA checksums for verification\n  echo \"Generating checksum for ${transcriptome_name}\"\n  md5sum \"${transcriptomes_array[transcriptome]}\" >> fasta.checksums.md5\n  echo \"Finished generating checksum for ${transcriptome_name}\"\n  echo \"\"\n\n\tif [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v1.0.fasta\" ]]; then\n\n    reads_array=(\"${reads_dir}\"/20200[15][13][138]*megan*.fq)\n\n    # Create array of fastq R1 files\n    R1_array=(\"${reads_dir}\"/20200[15][13][138]*megan*R1.fq)\n\n    # Create array of fastq R2 files\n    R2_array=(\"${reads_dir}\"/20200[15][13][138]*megan*R2.fq)\n\n\n\n  elif [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v1.5.fasta\" ]]; then\n\n    reads_array=(\"${reads_dir}\"/20200[145][13][138]*megan*.fq)\n\n    # Create array of fastq R1 files\n    R1_array=(\"${reads_dir}\"/20200[145][13][138]*megan*R1.fq)\n\n    # Create array of fastq R2 files\n    R2_array=(\"${reads_dir}\"/20200[145][13][138]*megan*R2.fq)\n\n  elif [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v1.6.fasta\" ]]; then\n\n    reads_array=(\"${reads_dir}\"/*megan*.fq)\n\n    # Create array of fastq R1 files\n    R1_array=(\"${reads_dir}\"/*megan*R1.fq)\n\n    # Create array of fastq R2 files\n    R2_array=(\"${reads_dir}\"/*megan*R2.fq)\n\n  elif [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v1.7.fasta\" ]]; then\n\n    reads_array=(\"${reads_dir}\"/20200[145][13][189]*megan*.fq)\n\n    # Create array of fastq R1 files\n    R1_array=(\"${reads_dir}\"/20200[145][13][189]*megan*R1.fq)\n\n    # Create array of fastq R2 files\n    R2_array=(\"${reads_dir}\"/20200[145][13][189]*megan*R2.fq)\n\n  elif [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v2.0.fasta\" ]] \\\n  || [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v2.1.fasta\" ]]; then\n\n    reads_array=(\"${reads_dir}\"/*fastp-trim*.fq)\n\n    # Create array of fastq R1 files\n    R1_array=(\"${reads_dir}\"/*R1*fastp-trim*.fq)\n\n    # Create array of fastq R2 files\n    R2_array=(\"${reads_dir}\"/*R2*fastp-trim*.fq)\n\n  elif [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v3.0.fasta\" ]] \\\n  || [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v3.1.fasta\" ]]; then\n\n    reads_array=(\"${reads_dir}\"/*fastp-trim*20[12][09][01][24]1[48]*.fq)\n\n    # Create array of fastq R1 files\n    R1_array=(\"${reads_dir}\"/*R1*fastp-trim*20[12][09][01][24]1[48]*.fq)\n\n    # Create array of fastq R2 files\n    R2_array=(\"${reads_dir}\"/*R2*fastp-trim*20[12][09][01][24]1[48]*.fq)\n\n\n  fi\n\n  # Create list of fastq files used in analysis\n  ## Uses parameter substitution to strip leading path from filename\n  printf \"%s\\n\" \"${reads_array[@]##*/}\" >> \"${transcriptome_name}\".fastq.list.txt\n\n  # Create comma-separated lists of FastQ reads\n  R1_list=$(echo \"${R1_array[@]}\" | tr \" \" \",\")\n  R2_list=$(echo \"${R2_array[@]}\" | tr \" \" \",\")\n\n  # Build Bowtie2 index\n  # Transcriptome name is used as index basename\n  ${programs_array[bowtie2_build]} \\\n  --threads ${threads} \\\n  ${transcriptomes_array[$transcriptome]} \\\n  ${transcriptome_name}\n\n  # Run rsem-eval\n  # Use bowtie2 and paired-end options\n  # Uses settings specified for use with DETONATE\n  # and for paired end reads when using DETONATE.\n  ${programs_array[bowtie2]} \\\n  -x ${transcriptome_name} \\\n  -S ${transcriptome_name}.sam \\\n  --threads ${threads} \\\n  -1 ${R1_list} \\\n  -2 ${R2_list} \\\n  --sensitive \\\n  --dpad 0 \\\n  --gbar 99999999 \\\n  --mp 1,1 \\\n  --np 1 \\\n  --score-min L,0,-0.1 \\\n  --no-mixed \\\n  --no-discordant\n\n  # Convert SAM to sorted BAM\n  #\n  ${programs_array[samtools_view]} \\\n  -b \\\n  ${transcriptome_name}.sam \\\n  | ${programs_array[samtools_sort]} \\\n  -m ${mem_per_thread} \\\n  --threads ${threads} \\\n  -o ${transcriptome_name}.sorted.bam \\\n  -\n\n  # Capture BAM checksums for verification\n  echo \"Generating checksum for ${transcriptome_name}.sorted.bam\"\n  md5sum ${transcriptome_name}.sorted.bam >> bam.checksums.md5\n  echo \"Finished generating checksum for ${transcriptome_name}.sorted.bam\"\n  echo \"\"\n\ndone\n\n# Remove leftover SAM files\nrm *.sam\n\n# Capture program options\necho \"Logging program options...\"\nfor program in \"${!programs_array[@]}\"\ndo\n\t{\n  echo \"Program options for ${program}: \"\n\techo \"\"\n  # Handle samtools help menus\n  if [[ \"${program}\" == \"samtools_index\" ]] \\\n  || [[ \"${program}\" == \"samtools_sort\" ]] \\\n  || [[ \"${program}\" == \"samtools_view\" ]]\n  then\n    ${programs_array[$program]}\n  fi\n\t${programs_array[$program]} -h\n\techo \"\"\n\techo \"\"\n\techo \"----------------------------------------------\"\n\techo \"\"\n\techo \"\"\n} &>> program_options.log || true\n\n  # If MultiQC is in programs_array, copy the config file to this directory.\n  if [[ \"${program}\" == \"multiqc\" ]]; then\n  \tcp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n  fi\ndone\n\necho \"\"\necho \"Finished logging program options.\"\necho \"\"\n\necho \"\"\necho \"Logging system PATH.\"\n# Document programs in PATH (primarily for program version ID)\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n\necho \"Finished logging system PATH\"\n```\n\n---\n\n# RESULTS\n\nRun time was ~2.5 days (not counting some weird issues with Mox):\n\n~[Runtime for bowtie2 alignments on Mox](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20201224_cbai_bowtie2_transcriptomes_alignments_runtime.png?raw=true)\n\nThese will be used in a subsequent analysis using [DETONATE (rsem-eval)](http://deweylab.biostat.wisc.edu/detonate/) to generate a score for each transcriptome. This score can be utilized to help compare the transcriptomes to identify which is the best assembly.\n\nImportant output files are linked below (BAMs, checksums, list of FastQs for each alignment).\n\nOutput folder:\n\n- [20201224_cbai_bowtie2_transcriptomes_alignments/](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/)\n\n  - MD5 checksum files (text) for input FastAs and resulting BAMs:\n\n    - [bam.checksums.md5](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/bam.checksums.md5)\n\n    - [fasta.checksums.md5](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/fasta.checksums.md5)\n\n\n  - cbai_transcriptome_v1.0 files:\n\n    - [`bowtie2`](https://github.com/BenLangmead/bowtie2) BAM file:\n\n      - [cbai_transcriptome_v1.0.fasta.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v1.0.fasta.sorted.bam)\n\n    - List of FastQs used for alignment (text):\n\n      - [cbai_transcriptome_v1.0.fasta.fastq.list.txt](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v1.0.fasta.fastq.list.txt)\n\n  - cbai_transcriptome_v1.5 files:\n\n    - [`bowtie2`](https://gith      - List of FastQs used for alignment (text):\n\n        - [cbai_transcriptome_v1.7.fasta.fastq.list.txt](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v1.7.fasta.fastq.list.txt)ub.com/BenLangmead/bowtie2) BAM file:\n\n      - [cbai_transcriptome_v1.5.fasta.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v1.5.fasta.sorted.bam)\n\n    - List of FastQs used for alignment (text):\n\n      - [cbai_transcriptome_v1.5.fasta.fastq.list.txt](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v1.5.fasta.fastq.list.txt)\n\n  - cbai_transcriptome_v1.6 files:\n\n    - [`bowtie2`](https://github.com/BenLangmead/bowtie2) BAM file:\n\n      - [cbai_transcriptome_v1.6.fasta.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v1.6.fasta.sorted.bam)\n\n    - List of FastQs used for alignment (text):\n\n      - [cbai_transcriptome_v1.6.fasta.fastq.list.txt](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v1.6.fasta.fastq.list.txt)\n\n  - cbai_transcriptome_v1.7 files:\n\n    - [`bowtie2`](https://github.com/BenLangmead/bowtie2) BAM file:\n\n      - [cbai_transcriptome_v1.7.fasta.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v1.7.fasta.sorted.bam)\n\n    - List of FastQs used for alignment (text):\n\n      - [cbai_transcriptome_v1.7.fasta.fastq.list.txt](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v1.7.fasta.fastq.list.txt)\n\n  - cbai_transcriptome_v2.0 files:\n\n    - [`bowtie2`](https://github.com/BenLangmead/bowtie2) BAM file:\n\n      - [cbai_transcriptome_v2.0.fasta.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v2.0.fasta.sorted.bam)\n\n    - List of FastQs used for alignment (text):\n\n      - [cbai_transcriptome_v1.7.fasta.fastq.list.txt](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v1.7.fasta.fastq.list.txt)\n\n  - cbai_transcriptome_v2.1 files:\n\n    - [`bowtie2`](https://github.com/BenLangmead/bowtie2) BAM file:\n\n      - [cbai_transcriptome_v2.1.fasta.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v2.1.fasta.sorted.bam)\n\n    - List of FastQs used for alignment (text):\n\n      - [cbai_transcriptome_v2.1.fasta.fastq.list.txt](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v2.1.fasta.fastq.list.txt)\n\n  - cbai_transcriptome_v3.0 files:\n\n    - [`bowtie2`](https://github.com/BenLangmead/bowtie2) BAM file:\n\n      - [cbai_transcriptome_v3.0.fasta.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v3.0.fasta.sorted.bam)\n\n    - List of FastQs used for alignment (text):\n\n      - [cbai_transcriptome_v3.0.fasta.fastq.list.txt](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v3.0.fasta.fastq.list.txt)\n\n  - cbai_transcriptome_v3.1 files:\n\n    - [`bowtie2`](https://github.com/BenLangmead/bowtie2) BAM file:\n\n      - [cbai_transcriptome_v3.1.fasta.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v3.1.fasta.sorted.bam)\n\n    - List of FastQs used for alignment (text):\n\n      - [cbai_transcriptome_v3.1.fasta.fastq.list.txt](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v3.1.fasta.fastq.list.txt)\n","srcMarkdownNoYaml":"\nI had previously attempted to [compare all of our _C.bairdi_ transcriptome assemblies using DETONATE on 20200601](https://robertslab.github.io/sams-notebook/posts/2020/2020-06-01-Transcriptome-Comparison---C.bairdi-Transcriptomes-Evaluations-with-DETONATE-on-Mox/), but, due to hitting time limits on Mox, failed to successfully get the analysis to complete. I realized that the limiting factor was performing FastQ alignments, so I decided to run this step independently to see if I could at least get that step resolved.  [DETONATE (rsem-eval)](http://deweylab.biostat.wisc.edu/detonate/) will accept BAM files as input, so I'm hoping I can power through this alignment step and then provided  [DETONATE (rsem-eval)](http://deweylab.biostat.wisc.edu/detonate/) with the BAM files.\n\nI ran [`bowtie2`](https://github.com/BenLangmead/bowtie2) on Mox using the alignment settings described in the  [DETONATE (rsem-eval)](http://deweylab.biostat.wisc.edu/detonate/) documentation (see SBATCH script below for actual [`bowtie2`](https://github.com/BenLangmead/bowtie2) parameters).\n\nSBATCH script (GitHub):\n\n- [20201224_cbai_bowtie2_transcriptomes_alignments.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20201224_cbai_bowtie2_transcriptomes_alignments.sh)\n\n```shell\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=20201224_cbai_bowtie2_transcriptomes_alignments\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=15-00:00:00\n## Memory per node\n#SBATCH --mem=500G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20201224_cbai_bowtie2_transcriptomes_alignments\n# This is a script to generate BAM files for use in DETONATE's\n# rsem-eval program to compare C.bairdi transcriptome assembly \"qualities\".\n\n###################################################################################\n# These variables need to be set by user\n\n# Assign Variables\nreads_dir=/gscratch/srlab/sam/data/C_bairdi/RNAseq\ntranscriptomes_dir=/gscratch/srlab/sam/data/C_bairdi/transcriptomes\nthreads=28\nmem_per_thread=10G\n\n# Program paths\nbowtie2_dir=\"/gscratch/srlab/programs/bowtie2-2.4.2-linux-x86_64\"\nsamtools=\"/gscratch/srlab/programs/samtools-1.10/samtools\"\n\n# Array of the various comparisons to evaluate\n# Each condition in each comparison should be separated by a \"-\"\ntranscriptomes_array=(\n\"${transcriptomes_dir}\"/cbai_transcriptome_v1.0.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v1.5.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v1.6.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v1.7.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v2.0.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v2.1.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v3.0.fasta \\\n\"${transcriptomes_dir}\"/cbai_transcriptome_v3.1.fasta\n)\n\n\n###################################################################################\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\nmodule load intel-python3_2017\n\n\n# Programs array\ndeclare -A programs_array\nprograms_array=(\n[bowtie2]=\"${bowtie2_dir}/bowtie2\" \\\n[bowtie2_build]=\"${bowtie2_dir}/bowtie2-build\" \\\n[samtools_index]=\"${samtools} index\" \\\n[samtools_sort]=\"${samtools} sort\" \\\n[samtools_view]=\"${samtools} view\"\n)\n\n\n\n\n# Loop through each comparison\nfor transcriptome in \"${!transcriptomes_array[@]}\"\ndo\n\n  ## Inititalize arrays\n  R1_array=()\n  R2_array=()\n  reads_array=()\n\n  # Variables\n  R1_list=\"\"\n  R2_list=\"\"\n\n  transcriptome_name=\"${transcriptomes_array[$transcriptome]##*/}\"\n\n  # Capture FastA checksums for verification\n  echo \"Generating checksum for ${transcriptome_name}\"\n  md5sum \"${transcriptomes_array[transcriptome]}\" >> fasta.checksums.md5\n  echo \"Finished generating checksum for ${transcriptome_name}\"\n  echo \"\"\n\n\tif [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v1.0.fasta\" ]]; then\n\n    reads_array=(\"${reads_dir}\"/20200[15][13][138]*megan*.fq)\n\n    # Create array of fastq R1 files\n    R1_array=(\"${reads_dir}\"/20200[15][13][138]*megan*R1.fq)\n\n    # Create array of fastq R2 files\n    R2_array=(\"${reads_dir}\"/20200[15][13][138]*megan*R2.fq)\n\n\n\n  elif [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v1.5.fasta\" ]]; then\n\n    reads_array=(\"${reads_dir}\"/20200[145][13][138]*megan*.fq)\n\n    # Create array of fastq R1 files\n    R1_array=(\"${reads_dir}\"/20200[145][13][138]*megan*R1.fq)\n\n    # Create array of fastq R2 files\n    R2_array=(\"${reads_dir}\"/20200[145][13][138]*megan*R2.fq)\n\n  elif [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v1.6.fasta\" ]]; then\n\n    reads_array=(\"${reads_dir}\"/*megan*.fq)\n\n    # Create array of fastq R1 files\n    R1_array=(\"${reads_dir}\"/*megan*R1.fq)\n\n    # Create array of fastq R2 files\n    R2_array=(\"${reads_dir}\"/*megan*R2.fq)\n\n  elif [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v1.7.fasta\" ]]; then\n\n    reads_array=(\"${reads_dir}\"/20200[145][13][189]*megan*.fq)\n\n    # Create array of fastq R1 files\n    R1_array=(\"${reads_dir}\"/20200[145][13][189]*megan*R1.fq)\n\n    # Create array of fastq R2 files\n    R2_array=(\"${reads_dir}\"/20200[145][13][189]*megan*R2.fq)\n\n  elif [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v2.0.fasta\" ]] \\\n  || [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v2.1.fasta\" ]]; then\n\n    reads_array=(\"${reads_dir}\"/*fastp-trim*.fq)\n\n    # Create array of fastq R1 files\n    R1_array=(\"${reads_dir}\"/*R1*fastp-trim*.fq)\n\n    # Create array of fastq R2 files\n    R2_array=(\"${reads_dir}\"/*R2*fastp-trim*.fq)\n\n  elif [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v3.0.fasta\" ]] \\\n  || [[ \"${transcriptome_name}\" == \"cbai_transcriptome_v3.1.fasta\" ]]; then\n\n    reads_array=(\"${reads_dir}\"/*fastp-trim*20[12][09][01][24]1[48]*.fq)\n\n    # Create array of fastq R1 files\n    R1_array=(\"${reads_dir}\"/*R1*fastp-trim*20[12][09][01][24]1[48]*.fq)\n\n    # Create array of fastq R2 files\n    R2_array=(\"${reads_dir}\"/*R2*fastp-trim*20[12][09][01][24]1[48]*.fq)\n\n\n  fi\n\n  # Create list of fastq files used in analysis\n  ## Uses parameter substitution to strip leading path from filename\n  printf \"%s\\n\" \"${reads_array[@]##*/}\" >> \"${transcriptome_name}\".fastq.list.txt\n\n  # Create comma-separated lists of FastQ reads\n  R1_list=$(echo \"${R1_array[@]}\" | tr \" \" \",\")\n  R2_list=$(echo \"${R2_array[@]}\" | tr \" \" \",\")\n\n  # Build Bowtie2 index\n  # Transcriptome name is used as index basename\n  ${programs_array[bowtie2_build]} \\\n  --threads ${threads} \\\n  ${transcriptomes_array[$transcriptome]} \\\n  ${transcriptome_name}\n\n  # Run rsem-eval\n  # Use bowtie2 and paired-end options\n  # Uses settings specified for use with DETONATE\n  # and for paired end reads when using DETONATE.\n  ${programs_array[bowtie2]} \\\n  -x ${transcriptome_name} \\\n  -S ${transcriptome_name}.sam \\\n  --threads ${threads} \\\n  -1 ${R1_list} \\\n  -2 ${R2_list} \\\n  --sensitive \\\n  --dpad 0 \\\n  --gbar 99999999 \\\n  --mp 1,1 \\\n  --np 1 \\\n  --score-min L,0,-0.1 \\\n  --no-mixed \\\n  --no-discordant\n\n  # Convert SAM to sorted BAM\n  #\n  ${programs_array[samtools_view]} \\\n  -b \\\n  ${transcriptome_name}.sam \\\n  | ${programs_array[samtools_sort]} \\\n  -m ${mem_per_thread} \\\n  --threads ${threads} \\\n  -o ${transcriptome_name}.sorted.bam \\\n  -\n\n  # Capture BAM checksums for verification\n  echo \"Generating checksum for ${transcriptome_name}.sorted.bam\"\n  md5sum ${transcriptome_name}.sorted.bam >> bam.checksums.md5\n  echo \"Finished generating checksum for ${transcriptome_name}.sorted.bam\"\n  echo \"\"\n\ndone\n\n# Remove leftover SAM files\nrm *.sam\n\n# Capture program options\necho \"Logging program options...\"\nfor program in \"${!programs_array[@]}\"\ndo\n\t{\n  echo \"Program options for ${program}: \"\n\techo \"\"\n  # Handle samtools help menus\n  if [[ \"${program}\" == \"samtools_index\" ]] \\\n  || [[ \"${program}\" == \"samtools_sort\" ]] \\\n  || [[ \"${program}\" == \"samtools_view\" ]]\n  then\n    ${programs_array[$program]}\n  fi\n\t${programs_array[$program]} -h\n\techo \"\"\n\techo \"\"\n\techo \"----------------------------------------------\"\n\techo \"\"\n\techo \"\"\n} &>> program_options.log || true\n\n  # If MultiQC is in programs_array, copy the config file to this directory.\n  if [[ \"${program}\" == \"multiqc\" ]]; then\n  \tcp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n  fi\ndone\n\necho \"\"\necho \"Finished logging program options.\"\necho \"\"\n\necho \"\"\necho \"Logging system PATH.\"\n# Document programs in PATH (primarily for program version ID)\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n\necho \"Finished logging system PATH\"\n```\n\n---\n\n# RESULTS\n\nRun time was ~2.5 days (not counting some weird issues with Mox):\n\n~[Runtime for bowtie2 alignments on Mox](https://github.com/RobertsLab/sams-notebook/blob/master/images/screencaps/20201224_cbai_bowtie2_transcriptomes_alignments_runtime.png?raw=true)\n\nThese will be used in a subsequent analysis using [DETONATE (rsem-eval)](http://deweylab.biostat.wisc.edu/detonate/) to generate a score for each transcriptome. This score can be utilized to help compare the transcriptomes to identify which is the best assembly.\n\nImportant output files are linked below (BAMs, checksums, list of FastQs for each alignment).\n\nOutput folder:\n\n- [20201224_cbai_bowtie2_transcriptomes_alignments/](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/)\n\n  - MD5 checksum files (text) for input FastAs and resulting BAMs:\n\n    - [bam.checksums.md5](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/bam.checksums.md5)\n\n    - [fasta.checksums.md5](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/fasta.checksums.md5)\n\n\n  - cbai_transcriptome_v1.0 files:\n\n    - [`bowtie2`](https://github.com/BenLangmead/bowtie2) BAM file:\n\n      - [cbai_transcriptome_v1.0.fasta.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v1.0.fasta.sorted.bam)\n\n    - List of FastQs used for alignment (text):\n\n      - [cbai_transcriptome_v1.0.fasta.fastq.list.txt](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v1.0.fasta.fastq.list.txt)\n\n  - cbai_transcriptome_v1.5 files:\n\n    - [`bowtie2`](https://gith      - List of FastQs used for alignment (text):\n\n        - [cbai_transcriptome_v1.7.fasta.fastq.list.txt](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v1.7.fasta.fastq.list.txt)ub.com/BenLangmead/bowtie2) BAM file:\n\n      - [cbai_transcriptome_v1.5.fasta.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v1.5.fasta.sorted.bam)\n\n    - List of FastQs used for alignment (text):\n\n      - [cbai_transcriptome_v1.5.fasta.fastq.list.txt](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v1.5.fasta.fastq.list.txt)\n\n  - cbai_transcriptome_v1.6 files:\n\n    - [`bowtie2`](https://github.com/BenLangmead/bowtie2) BAM file:\n\n      - [cbai_transcriptome_v1.6.fasta.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v1.6.fasta.sorted.bam)\n\n    - List of FastQs used for alignment (text):\n\n      - [cbai_transcriptome_v1.6.fasta.fastq.list.txt](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v1.6.fasta.fastq.list.txt)\n\n  - cbai_transcriptome_v1.7 files:\n\n    - [`bowtie2`](https://github.com/BenLangmead/bowtie2) BAM file:\n\n      - [cbai_transcriptome_v1.7.fasta.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v1.7.fasta.sorted.bam)\n\n    - List of FastQs used for alignment (text):\n\n      - [cbai_transcriptome_v1.7.fasta.fastq.list.txt](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v1.7.fasta.fastq.list.txt)\n\n  - cbai_transcriptome_v2.0 files:\n\n    - [`bowtie2`](https://github.com/BenLangmead/bowtie2) BAM file:\n\n      - [cbai_transcriptome_v2.0.fasta.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v2.0.fasta.sorted.bam)\n\n    - List of FastQs used for alignment (text):\n\n      - [cbai_transcriptome_v1.7.fasta.fastq.list.txt](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v1.7.fasta.fastq.list.txt)\n\n  - cbai_transcriptome_v2.1 files:\n\n    - [`bowtie2`](https://github.com/BenLangmead/bowtie2) BAM file:\n\n      - [cbai_transcriptome_v2.1.fasta.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v2.1.fasta.sorted.bam)\n\n    - List of FastQs used for alignment (text):\n\n      - [cbai_transcriptome_v2.1.fasta.fastq.list.txt](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v2.1.fasta.fastq.list.txt)\n\n  - cbai_transcriptome_v3.0 files:\n\n    - [`bowtie2`](https://github.com/BenLangmead/bowtie2) BAM file:\n\n      - [cbai_transcriptome_v3.0.fasta.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v3.0.fasta.sorted.bam)\n\n    - List of FastQs used for alignment (text):\n\n      - [cbai_transcriptome_v3.0.fasta.fastq.list.txt](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v3.0.fasta.fastq.list.txt)\n\n  - cbai_transcriptome_v3.1 files:\n\n    - [`bowtie2`](https://github.com/BenLangmead/bowtie2) BAM file:\n\n      - [cbai_transcriptome_v3.1.fasta.sorted.bam](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v3.1.fasta.sorted.bam)\n\n    - List of FastQs used for alignment (text):\n\n      - [cbai_transcriptome_v3.1.fasta.fastq.list.txt](https://gannet.fish.washington.edu/Atumefaciens/20201224_cbai_bowtie2_transcriptomes_alignments/cbai_transcriptome_v3.1.fasta.fastq.list.txt)\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","layout":"post","title":"Alignments - C.bairdi RNAseq Transcriptome Alignments Using Bowtie2 on Mox","date":"2020-12-24 05:10","tags":["bowtie2","Tanner crab","mox","transcriptome","RNAseq","Chionoecetes bairdi"],"categories":["2020","Tanner Crab RNAseq"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}