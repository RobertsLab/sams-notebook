{"title":"Data Received - Bisulfite-treated Illumina Sequencing from Genewiz","markdown":{"yaml":{"author":"Sam White","toc-title":"Contents","toc-depth":5,"toc-location":"left","date":"2016-01-09 04:17:12+00:00","layout":"post","slug":"data-received-bisulfite-treated-illumina-sequencing-from-genewiz","title":"Data Received - Bisulfite-treated Illumina Sequencing from Genewiz","categories":["2016","BS-seq Libraries for Sequencing at Genewiz","Olympia oyster reciprocal transplant"],"tags":["BS-seq","Crassostrea gigas","Katie Lotterhos","olympia oyster","Ostrea lurida","Pacific oyster","wget"]},"containsRefs":false,"markdown":"\n\nReceived notice the sequencing data was ready from Genewiz for the samples submitted [20151222](https://robertslab.github.io/sams-notebook/posts/2015/2015-12-22-sample-submission-bs-seq-library-pool-to-genewiz/).\n\nDownload the FASTQ files from Genewiz project directory:\n\n\n    \n    <code>wget -r -np -nc -A \"*.gz\" ftp://username:password@ftp2.genewiz.com/Project_BS1512183</code>\n\n\n\nSince two species were sequenced (_C.gigas_ & _O.lurida_), the corresponding files are in the following locations:\n\n[https://owl.fish.washington.edu/nightingales/O_lurida/](http://owl.fish.washington.edu/nightingales/O_lurida/)\n\n[https://owl.fish.washington.edu/nightingales/C_gigas/](http://owl.fish.washington.edu/nightingales/C_gigas/)\n\n\n\nIn order to process the files, I needed to identify just the FASTQ files from this project and save the list of files to a bash variable called 'bsseq':\n\n\n    \n    <code>bsseq=$(ls | grep '^[0-9]\\{1\\}_*' | grep -v \"2bRAD\")</code>\n\n\n\nExplanation:\n\n\n    \n    <code>bsseq=</code>\n\n\n\n\n\n\n\n  * This initializes a variable called \"bsseq\" to the values contained in the command following the equals sign.\n\n\n\n\n    \n    <code>$(ls | grep '^[0-9]\\{1\\}_*' | grep -v \"2bRAD\")</code>\n\n\n\n\n\n\n\n  * This lists (ls) all files, pipes them to the grep command (|), grep finds those files that begin with (^) one or two digits followed by an underscore ([0-9{1}_*), pipes those results (|) to another grep command which excludes (-v) any results containing the text \"2bRAD\".\n\n\n\n\n\n<table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" dir=\"ltr\" > \n<tbody >\n<tr >\n\n<td data-sheets-value=\"[null,2,\"1_ATCACG_L001_R1_001.fastq.gz\"]\" >FILENAME\n</td>\n\n<td data-sheets-value=\"[null,2,\"1_ATCACG_L001_R1_001.fastq.gz\"]\" >SAMPLE NAME\n</td>\n\n<td data-sheets-value=\"[null,2,\"1_ATCACG_L001_R1_001.fastq.gz\"]\" >SPECIES\n</td>\n</tr>\n<tr >\n\n<td data-sheets-value=\"[null,2,\"1_ATCACG_L001_R1_001.fastq.gz\"]\" >1_ATCACG_L001_R1_001.fastq.gz\n</td>\n\n<td data-sheets-value=\"[null,2,\"1_ATCACG_L001_R1_001.fastq.gz\"]\" >1NF11\n</td>\n\n<td data-sheets-value=\"[null,2,\"1_ATCACG_L001_R1_001.fastq.gz\"]\" >O.lurida\n</td>\n</tr>\n<tr >\n\n<td data-sheets-value=\"[null,2,\"2_CGATGT_L001_R1_001.fastq.gz\"]\" >2_CGATGT_L001_R1_001.fastq.gz\n</td>\n\n<td data-sheets-value=\"[null,2,\"2_CGATGT_L001_R1_001.fastq.gz\"]\" >1NF15\n</td>\n\n<td data-sheets-value=\"[null,2,\"2_CGATGT_L001_R1_001.fastq.gz\"]\" >O.lurida\n</td>\n</tr>\n<tr >\n\n<td data-sheets-value=\"[null,2,\"3_TTAGGC_L001_R1_001.fastq.gz\"]\" >3_TTAGGC_L001_R1_001.fastq.gz\n</td>\n\n<td data-sheets-value=\"[null,2,\"3_TTAGGC_L001_R1_001.fastq.gz\"]\" >1NF16\n</td>\n\n<td data-sheets-value=\"[null,2,\"3_TTAGGC_L001_R1_001.fastq.gz\"]\" >O.lurida\n</td>\n</tr>\n<tr >\n\n<td data-sheets-value=\"[null,2,\"4_TGACCA_L001_R1_001.fastq.gz\"]\" >4_TGACCA_L001_R1_001.fastq.gz\n</td>\n\n<td data-sheets-value=\"[null,2,\"4_TGACCA_L001_R1_001.fastq.gz\"]\" >1NF17\n</td>\n\n<td data-sheets-value=\"[null,2,\"4_TGACCA_L001_R1_001.fastq.gz\"]\" >O.lurida\n</td>\n</tr>\n<tr >\n\n<td data-sheets-value=\"[null,2,\"5_ACAGTG_L001_R1_001.fastq.gz\"]\" >5_ACAGTG_L001_R1_001.fastq.gz\n</td>\n\n<td data-sheets-value=\"[null,2,\"5_ACAGTG_L001_R1_001.fastq.gz\"]\" >2NF5\n</td>\n\n<td data-sheets-value=\"[null,2,\"5_ACAGTG_L001_R1_001.fastq.gz\"]\" >O.lurida\n</td>\n</tr>\n<tr >\n\n<td data-sheets-value=\"[null,2,\"6_GCCAAT_L001_R1_001.fastq.gz\"]\" >6_GCCAAT_L001_R1_001.fastq.gz\n</td>\n\n<td data-sheets-value=\"[null,2,\"6_GCCAAT_L001_R1_001.fastq.gz\"]\" >2NF6\n</td>\n\n<td data-sheets-value=\"[null,2,\"6_GCCAAT_L001_R1_001.fastq.gz\"]\" >O.lurida\n</td>\n</tr>\n<tr >\n\n<td data-sheets-value=\"[null,2,\"7_CAGATC_L001_R1_001.fastq.gz\"]\" >7_CAGATC_L001_R1_001.fastq.gz\n</td>\n\n<td data-sheets-value=\"[null,2,\"7_CAGATC_L001_R1_001.fastq.gz\"]\" >2NF7\n</td>\n\n<td data-sheets-value=\"[null,2,\"7_CAGATC_L001_R1_001.fastq.gz\"]\" >O.lurida\n</td>\n</tr>\n<tr >\n\n<td data-sheets-value=\"[null,2,\"8_ACTTGA_L001_R1_001.fastq.gz\"]\" >8_ACTTGA_L001_R1_001.fastq.gz\n</td>\n\n<td data-sheets-value=\"[null,2,\"8_ACTTGA_L001_R1_001.fastq.gz\"]\" >2NF8\n</td>\n\n<td data-sheets-value=\"[null,2,\"8_ACTTGA_L001_R1_001.fastq.gz\"]\" >O.lurida\n</td>\n</tr>\n<tr >\n\n<td data-sheets-value=\"[null,2,\"9_GATCAG_L001_R1_001.fastq.gz\"]\" >9_GATCAG_L001_R1_001.fastq.gz\n</td>\n\n<td data-sheets-value=\"[null,2,\"9_GATCAG_L001_R1_001.fastq.gz\"]\" >M2\n</td>\n\n<td data-sheets-value=\"[null,2,\"9_GATCAG_L001_R1_001.fastq.gz\"]\" >C.gigas\n</td>\n</tr>\n<tr >\n\n<td data-sheets-value=\"[null,2,\"10_TAGCTT_L001_R1_001.fastq.gz\"]\" >10_TAGCTT_L001_R1_001.fastq.gz\n</td>\n\n<td data-sheets-value=\"[null,2,\"10_TAGCTT_L001_R1_001.fastq.gz\"]\" >M3\n</td>\n\n<td data-sheets-value=\"[null,2,\"10_TAGCTT_L001_R1_001.fastq.gz\"]\" >C.gigas\n</td>\n</tr>\n<tr >\n\n<td data-sheets-value=\"[null,2,\"11_GGCTAC_L001_R1_001.fastq.gz\"]\" >11_GGCTAC_L001_R1_001.fastq.gz\n</td>\n\n<td data-sheets-value=\"[null,2,\"11_GGCTAC_L001_R1_001.fastq.gz\"]\" >NF2_6\n</td>\n\n<td data-sheets-value=\"[null,2,\"11_GGCTAC_L001_R1_001.fastq.gz\"]\" >O.lurida\n</td>\n</tr>\n<tr >\n\n<td data-sheets-value=\"[null,2,\"12_CTTGTA_L001_R1_001.fastq.gz\"]\" >12_CTTGTA_L001_R1_001.fastq.gz\n</td>\n\n<td data-sheets-value=\"[null,2,\"12_CTTGTA_L001_R1_001.fastq.gz\"]\" >NF_18\n</td>\n\n<td data-sheets-value=\"[null,2,\"12_CTTGTA_L001_R1_001.fastq.gz\"]\" >O.lurida\n</td>\n</tr>\n</tbody>\n</table>\n\n\n\nI wanted to add some information about the project to the readme file, like total number of sequencing reads generated and the number of reads in each FASTQ file.\n\nHere's how to count the total of all reads generated in this project\n\n\n    \n    <code>totalreads=0; for i in $bsseq; do linecount=`gunzip -c \"$i\" | wc -l`; readcount=$((linecount/4)); totalreads=$((readcount+totalreads)); done; echo $totalreads</code>\n\n\n\nTotal reads = 138,530,448\n\n_C.gigas_ reads: 22,249,631\n\n_O.lurida_ reads: 116,280,817\n\nCode explanation:\n\n\n    \n    <code>totalreads=0;</code>\n\n\n\n\n\n\n\n  * Creates variable called \"totalreads\" and initializes value to 0.\n\n\n\n\n    \n    <code>for i in $bsseq;</code>\n\n\n\n\n\n\n\n  * Initiates a for loop to process the list of files stored in $bsseq variable. The FASTQ files have been compressed with gzip and end with the .gz extension.\n\n\n\n\n    \n    <code>do linecount=</code>\n\n\n\n\n\n\n\n  * Creates variable called \"linecount\" that stores the results of the following command:\n\n\n\n\n    \n    <code>`gunzip -c \"$i\" | wc -l`;</code>\n\n\n\n\n\n\n\n  * Unzips the files ($i) to stdout (-c) instead of actually uncompressing them. This is piped to the word count command, with the line flag (wc -l) to count the number of lines in the files.\n\n\n\n\n    \n    <code>readcount=$((linecount/4));</code>\n\n\n\n\n\n\n\n  * Divides the value stored in linecount by 4. This is because an entry for a single Illumina read comprises four lines. This value is stored in the \"readcount\" variable.\n\n\n\n\n    \n    <code>totalreads=$((readcount+totalreads));</code>\n\n\n\n\n\n\n\n  * Adds the readcount for the current file and adds the value to totalreads.\n\n\n\n\n    \n    <code>done;</code>\n\n\n\n\n\n\n\n  * End the for loop.\n\n\n\n\n    \n    <code>echo $totalreads</code>\n\n\n\n\n\n\n\n  * Prints the value of totalreads to the screen.\n\n\n\nNext, I wanted to generate list of the FASTQ files and corresponding read counts, and append this information to the readme file.\n\n\n    \n    <code>for i in $bsseq; do linecount=`gunzip -c \"$i\" | wc -l`; readcount=$(($linecount/4)); printf \"%s\\t%s\\n%s\\t\\t\\n\" \"$i\" \"$readcount\" >> readme.md; done</code>\n\n\n\nCode explanation:\n\n\n    \n    <code>for i in $bsseq; do linecount=`gunzip -c \"$i\" | wc -l`; readcount=$(($linecount/4));</code>\n\n\n\n\n\n\n\n  * Same for loop as above that calculates the number of reads in each FASTQ file.\n\n\n\n\n    \n    <code>printf \"%s\\t%s\\n\\n\" \"$i\" \"$readcount\" >> readme.md;</code>\n\n\n\n\n\n\n\n  * This formats the the printed output. The \"%s\\t%s\\n\\n\" portion prints the value in $i as a string (%s), followed by a tab (\\t), followed by the value in $readcount as a string (%s), followed by two consecutive newlines (\\n\\n) to provide an empty line between the entries. See the readme file linked above to see how the output looks.\n\n\n\n\n    \n    <code>>> readme.md; done</code>\n\n\n\n\n\n\n\n  * This appends the result from each loop to the readme.md file and ends the for loop (done).\n\n\n\n\n","srcMarkdownNoYaml":"\n\nReceived notice the sequencing data was ready from Genewiz for the samples submitted [20151222](https://robertslab.github.io/sams-notebook/posts/2015/2015-12-22-sample-submission-bs-seq-library-pool-to-genewiz/).\n\nDownload the FASTQ files from Genewiz project directory:\n\n\n    \n    <code>wget -r -np -nc -A \"*.gz\" ftp://username:password@ftp2.genewiz.com/Project_BS1512183</code>\n\n\n\nSince two species were sequenced (_C.gigas_ & _O.lurida_), the corresponding files are in the following locations:\n\n[https://owl.fish.washington.edu/nightingales/O_lurida/](http://owl.fish.washington.edu/nightingales/O_lurida/)\n\n[https://owl.fish.washington.edu/nightingales/C_gigas/](http://owl.fish.washington.edu/nightingales/C_gigas/)\n\n\n\nIn order to process the files, I needed to identify just the FASTQ files from this project and save the list of files to a bash variable called 'bsseq':\n\n\n    \n    <code>bsseq=$(ls | grep '^[0-9]\\{1\\}_*' | grep -v \"2bRAD\")</code>\n\n\n\nExplanation:\n\n\n    \n    <code>bsseq=</code>\n\n\n\n\n\n\n\n  * This initializes a variable called \"bsseq\" to the values contained in the command following the equals sign.\n\n\n\n\n    \n    <code>$(ls | grep '^[0-9]\\{1\\}_*' | grep -v \"2bRAD\")</code>\n\n\n\n\n\n\n\n  * This lists (ls) all files, pipes them to the grep command (|), grep finds those files that begin with (^) one or two digits followed by an underscore ([0-9{1}_*), pipes those results (|) to another grep command which excludes (-v) any results containing the text \"2bRAD\".\n\n\n\n\n\n<table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" dir=\"ltr\" > \n<tbody >\n<tr >\n\n<td data-sheets-value=\"[null,2,\"1_ATCACG_L001_R1_001.fastq.gz\"]\" >FILENAME\n</td>\n\n<td data-sheets-value=\"[null,2,\"1_ATCACG_L001_R1_001.fastq.gz\"]\" >SAMPLE NAME\n</td>\n\n<td data-sheets-value=\"[null,2,\"1_ATCACG_L001_R1_001.fastq.gz\"]\" >SPECIES\n</td>\n</tr>\n<tr >\n\n<td data-sheets-value=\"[null,2,\"1_ATCACG_L001_R1_001.fastq.gz\"]\" >1_ATCACG_L001_R1_001.fastq.gz\n</td>\n\n<td data-sheets-value=\"[null,2,\"1_ATCACG_L001_R1_001.fastq.gz\"]\" >1NF11\n</td>\n\n<td data-sheets-value=\"[null,2,\"1_ATCACG_L001_R1_001.fastq.gz\"]\" >O.lurida\n</td>\n</tr>\n<tr >\n\n<td data-sheets-value=\"[null,2,\"2_CGATGT_L001_R1_001.fastq.gz\"]\" >2_CGATGT_L001_R1_001.fastq.gz\n</td>\n\n<td data-sheets-value=\"[null,2,\"2_CGATGT_L001_R1_001.fastq.gz\"]\" >1NF15\n</td>\n\n<td data-sheets-value=\"[null,2,\"2_CGATGT_L001_R1_001.fastq.gz\"]\" >O.lurida\n</td>\n</tr>\n<tr >\n\n<td data-sheets-value=\"[null,2,\"3_TTAGGC_L001_R1_001.fastq.gz\"]\" >3_TTAGGC_L001_R1_001.fastq.gz\n</td>\n\n<td data-sheets-value=\"[null,2,\"3_TTAGGC_L001_R1_001.fastq.gz\"]\" >1NF16\n</td>\n\n<td data-sheets-value=\"[null,2,\"3_TTAGGC_L001_R1_001.fastq.gz\"]\" >O.lurida\n</td>\n</tr>\n<tr >\n\n<td data-sheets-value=\"[null,2,\"4_TGACCA_L001_R1_001.fastq.gz\"]\" >4_TGACCA_L001_R1_001.fastq.gz\n</td>\n\n<td data-sheets-value=\"[null,2,\"4_TGACCA_L001_R1_001.fastq.gz\"]\" >1NF17\n</td>\n\n<td data-sheets-value=\"[null,2,\"4_TGACCA_L001_R1_001.fastq.gz\"]\" >O.lurida\n</td>\n</tr>\n<tr >\n\n<td data-sheets-value=\"[null,2,\"5_ACAGTG_L001_R1_001.fastq.gz\"]\" >5_ACAGTG_L001_R1_001.fastq.gz\n</td>\n\n<td data-sheets-value=\"[null,2,\"5_ACAGTG_L001_R1_001.fastq.gz\"]\" >2NF5\n</td>\n\n<td data-sheets-value=\"[null,2,\"5_ACAGTG_L001_R1_001.fastq.gz\"]\" >O.lurida\n</td>\n</tr>\n<tr >\n\n<td data-sheets-value=\"[null,2,\"6_GCCAAT_L001_R1_001.fastq.gz\"]\" >6_GCCAAT_L001_R1_001.fastq.gz\n</td>\n\n<td data-sheets-value=\"[null,2,\"6_GCCAAT_L001_R1_001.fastq.gz\"]\" >2NF6\n</td>\n\n<td data-sheets-value=\"[null,2,\"6_GCCAAT_L001_R1_001.fastq.gz\"]\" >O.lurida\n</td>\n</tr>\n<tr >\n\n<td data-sheets-value=\"[null,2,\"7_CAGATC_L001_R1_001.fastq.gz\"]\" >7_CAGATC_L001_R1_001.fastq.gz\n</td>\n\n<td data-sheets-value=\"[null,2,\"7_CAGATC_L001_R1_001.fastq.gz\"]\" >2NF7\n</td>\n\n<td data-sheets-value=\"[null,2,\"7_CAGATC_L001_R1_001.fastq.gz\"]\" >O.lurida\n</td>\n</tr>\n<tr >\n\n<td data-sheets-value=\"[null,2,\"8_ACTTGA_L001_R1_001.fastq.gz\"]\" >8_ACTTGA_L001_R1_001.fastq.gz\n</td>\n\n<td data-sheets-value=\"[null,2,\"8_ACTTGA_L001_R1_001.fastq.gz\"]\" >2NF8\n</td>\n\n<td data-sheets-value=\"[null,2,\"8_ACTTGA_L001_R1_001.fastq.gz\"]\" >O.lurida\n</td>\n</tr>\n<tr >\n\n<td data-sheets-value=\"[null,2,\"9_GATCAG_L001_R1_001.fastq.gz\"]\" >9_GATCAG_L001_R1_001.fastq.gz\n</td>\n\n<td data-sheets-value=\"[null,2,\"9_GATCAG_L001_R1_001.fastq.gz\"]\" >M2\n</td>\n\n<td data-sheets-value=\"[null,2,\"9_GATCAG_L001_R1_001.fastq.gz\"]\" >C.gigas\n</td>\n</tr>\n<tr >\n\n<td data-sheets-value=\"[null,2,\"10_TAGCTT_L001_R1_001.fastq.gz\"]\" >10_TAGCTT_L001_R1_001.fastq.gz\n</td>\n\n<td data-sheets-value=\"[null,2,\"10_TAGCTT_L001_R1_001.fastq.gz\"]\" >M3\n</td>\n\n<td data-sheets-value=\"[null,2,\"10_TAGCTT_L001_R1_001.fastq.gz\"]\" >C.gigas\n</td>\n</tr>\n<tr >\n\n<td data-sheets-value=\"[null,2,\"11_GGCTAC_L001_R1_001.fastq.gz\"]\" >11_GGCTAC_L001_R1_001.fastq.gz\n</td>\n\n<td data-sheets-value=\"[null,2,\"11_GGCTAC_L001_R1_001.fastq.gz\"]\" >NF2_6\n</td>\n\n<td data-sheets-value=\"[null,2,\"11_GGCTAC_L001_R1_001.fastq.gz\"]\" >O.lurida\n</td>\n</tr>\n<tr >\n\n<td data-sheets-value=\"[null,2,\"12_CTTGTA_L001_R1_001.fastq.gz\"]\" >12_CTTGTA_L001_R1_001.fastq.gz\n</td>\n\n<td data-sheets-value=\"[null,2,\"12_CTTGTA_L001_R1_001.fastq.gz\"]\" >NF_18\n</td>\n\n<td data-sheets-value=\"[null,2,\"12_CTTGTA_L001_R1_001.fastq.gz\"]\" >O.lurida\n</td>\n</tr>\n</tbody>\n</table>\n\n\n\nI wanted to add some information about the project to the readme file, like total number of sequencing reads generated and the number of reads in each FASTQ file.\n\nHere's how to count the total of all reads generated in this project\n\n\n    \n    <code>totalreads=0; for i in $bsseq; do linecount=`gunzip -c \"$i\" | wc -l`; readcount=$((linecount/4)); totalreads=$((readcount+totalreads)); done; echo $totalreads</code>\n\n\n\nTotal reads = 138,530,448\n\n_C.gigas_ reads: 22,249,631\n\n_O.lurida_ reads: 116,280,817\n\nCode explanation:\n\n\n    \n    <code>totalreads=0;</code>\n\n\n\n\n\n\n\n  * Creates variable called \"totalreads\" and initializes value to 0.\n\n\n\n\n    \n    <code>for i in $bsseq;</code>\n\n\n\n\n\n\n\n  * Initiates a for loop to process the list of files stored in $bsseq variable. The FASTQ files have been compressed with gzip and end with the .gz extension.\n\n\n\n\n    \n    <code>do linecount=</code>\n\n\n\n\n\n\n\n  * Creates variable called \"linecount\" that stores the results of the following command:\n\n\n\n\n    \n    <code>`gunzip -c \"$i\" | wc -l`;</code>\n\n\n\n\n\n\n\n  * Unzips the files ($i) to stdout (-c) instead of actually uncompressing them. This is piped to the word count command, with the line flag (wc -l) to count the number of lines in the files.\n\n\n\n\n    \n    <code>readcount=$((linecount/4));</code>\n\n\n\n\n\n\n\n  * Divides the value stored in linecount by 4. This is because an entry for a single Illumina read comprises four lines. This value is stored in the \"readcount\" variable.\n\n\n\n\n    \n    <code>totalreads=$((readcount+totalreads));</code>\n\n\n\n\n\n\n\n  * Adds the readcount for the current file and adds the value to totalreads.\n\n\n\n\n    \n    <code>done;</code>\n\n\n\n\n\n\n\n  * End the for loop.\n\n\n\n\n    \n    <code>echo $totalreads</code>\n\n\n\n\n\n\n\n  * Prints the value of totalreads to the screen.\n\n\n\nNext, I wanted to generate list of the FASTQ files and corresponding read counts, and append this information to the readme file.\n\n\n    \n    <code>for i in $bsseq; do linecount=`gunzip -c \"$i\" | wc -l`; readcount=$(($linecount/4)); printf \"%s\\t%s\\n%s\\t\\t\\n\" \"$i\" \"$readcount\" >> readme.md; done</code>\n\n\n\nCode explanation:\n\n\n    \n    <code>for i in $bsseq; do linecount=`gunzip -c \"$i\" | wc -l`; readcount=$(($linecount/4));</code>\n\n\n\n\n\n\n\n  * Same for loop as above that calculates the number of reads in each FASTQ file.\n\n\n\n\n    \n    <code>printf \"%s\\t%s\\n\\n\" \"$i\" \"$readcount\" >> readme.md;</code>\n\n\n\n\n\n\n\n  * This formats the the printed output. The \"%s\\t%s\\n\\n\" portion prints the value in $i as a string (%s), followed by a tab (\\t), followed by the value in $readcount as a string (%s), followed by two consecutive newlines (\\n\\n) to provide an empty line between the entries. See the readme file linked above to see how the output looks.\n\n\n\n\n    \n    <code>>> readme.md; done</code>\n\n\n\n\n\n\n\n  * This appends the result from each loop to the readme.md file and ends the for loop (done).\n\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../../styles.css"],"toc":true,"toc-depth":5,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.6.42","editor":"source","theme":"darkly","page-layout":"full","code-background":true,"code-copy":true,"title-block-banner":true,"author":"Sam White","toc-title":"Contents","toc-location":"left","date":"2016-01-09 04:17:12+00:00","layout":"post","slug":"data-received-bisulfite-treated-illumina-sequencing-from-genewiz","title":"Data Received - Bisulfite-treated Illumina Sequencing from Genewiz","categories":["2016","BS-seq Libraries for Sequencing at Genewiz","Olympia oyster reciprocal transplant"],"tags":["BS-seq","Crassostrea gigas","Katie Lotterhos","olympia oyster","Ostrea lurida","Pacific oyster","wget"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}