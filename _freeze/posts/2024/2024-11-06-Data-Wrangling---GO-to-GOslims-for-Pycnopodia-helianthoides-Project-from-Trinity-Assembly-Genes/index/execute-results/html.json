{
  "hash": "7d19873bee598022c2de55abfa05bc58",
  "result": {
    "engine": "knitr",
    "markdown": "---\nauthor: Sam White\ntoc-title: Contents\ntoc-depth: 5\ntoc-location: left\ntitle: Data Wrangling - GO to GOslims for Graces Pycnopodia helianthoides Project from Trinity Assembly Genes\ndate: '2024-11-06'\ndraft: false\nengine: knitr\ncategories: \n  - \"2024\"\n  - \"GO\"\n  - \"gene ontology\"\n  - \"GOslim\"\n  - \"Pycnopodia helianthoides\"\n  - \"Trinity\"\n  - \"Sunflower sea star\"\n---\n\n\n\n::: {.callout-note}\nThis notebook consists of a markdown rendering of [01-GO-to-GOslim.Rmd](https://github.com/RobertsLab/code/blob/3b642b455cf0e1bcf3fd77b8f22736b79ce0ade3/r_projects/sam/20241106-phel-GO-to-GOslim/code/01-GO-to-GOslim.Rmd) (commit: `3b642b4`).\n:::\n\n\n\n# 1 INTRO\n\nThis notebook is setup to [take GO IDs and categorize them into their\ncorresponding\nGOslims](https://github.com/RobertsLab/resources/issues/2012) (GitHub\nIssue). Specifically, it will use the following tab-delimited input\nfile:\n\n- [pyc_go.tsv](https://gannet.fish.washington.edu/seashell/bu-github/project-pycno-multispecies-2023/output/06-Go-3-species/pyc_go.tsv)\n\n[Desired output\nformat](https://github.com/RobertsLab/resources/issues/1989#issuecomment-2448757444)\n(GitHub Issue comment) is:\n\n    Term                                                    Count\n    anatomical structure development                        1137\n    signaling                                               600\n    cell differentiation                                    533\n    immune system process                                   331\n    lipid metabolic process                                 212\n\nThis was performed using R, with the following packages:\n\n- GSEABase (Martin Morgan 2017)\n- GO.db (Carlson 2017)\n- tidyverse (Wickham et al. 2019)\n\nIt also relied on gene ontology (GO) information from the [Gene Ontology\nConsortium](https://geneontology.org/) (Ashburner et al. 2000;\nAleksander et al. 2023).\n\n## 1.1 CODE\n\n``` r\nlibrary(GSEABase)\n```\n\n\n``` r\nlibrary(GO.db)\n```\n\n    ## \n\n``` r\nlibrary(knitr)\nlibrary(tidyverse)\n```\n\n``` r\nknitr::opts_chunk$set(\n  echo = TRUE,         # Display code chunks\n  eval = FALSE,        # Evaluate code chunks\n  warning = FALSE,     # Hide warnings\n  message = FALSE,     # Hide messages\n  comment = \"\"         # Prevents appending '##' to beginning of lines in code output\n)\n```\n\n### 1.1.1 Variables\n\n``` r\n# Column names corresponding to gene name/ID and GO IDs\nGO.ID.column <- \"Gene.Ontology.IDs\"\ngene.ID.column <- \"X1\"\n\n# Relative path or URL to input file\ninput.file <- \"https://gannet.fish.washington.edu/seashell/bu-github/project-pycno-multispecies-2023/output/06-Go-3-species/pyc_go.tsv\"\n\n\n##### Official GO info - no need to change #####\ngoslims_obo <- \"goslim_generic.obo\"\ngoslims_url <- \"http://current.geneontology.org/ontology/subsets/goslim_generic.obo\"\n```\n\n### 1.1.2 Set GSEAbase location and download `goslim_generic.obo`\n\n``` r\n# Find GSEAbase installation location\ngseabase_location <- find.package(\"GSEABase\")\n\n# Load path to GOslim OBO file\ngoslim_obo_destintation <- file.path(gseabase_location, \"extdata\", goslims_obo, fsep = \"/\")\n\n# Download the GOslim OBO file\ndownload.file(url = goslims_url, destfile = goslim_obo_destintation)\n\n# Loads package files\ngseabase_files <- system.file(\"extdata\", goslims_obo, package=\"GSEABase\")\n```\n\n### 1.1.3 Read in gene/GO file\n\n``` r\nfull.gene.df <- read.csv(file = input.file, header = TRUE, sep = \"\\t\")\n\nstr(full.gene.df)\n```\n\n    'data.frame':   29145 obs. of  25 variables:\n     $ X1                                : chr  \"TRINITY_DN37046_c0_g1_i2\" \"TRINITY_DN37065_c0_g1_i1\" \"TRINITY_DN37015_c0_g1_i1\" \"TRINITY_DN45769_c0_g1_i1\" ...\n     $ X2                                : chr  \"sp\" \"sp\" \"sp\" \"sp\" ...\n     $ X3                                : chr  \"Q32NR4\" \"Q95NT6\" \"Q9Z0Z4\" \"Q09575\" ...\n     $ X4                                : chr  \"TTC29_XENLA\" \"MTH2_DROYA\" \"HEPH_MOUSE\" \"YRD6_CAEEL\" ...\n     $ X5                                : num  36.4 26 47.5 37.2 51.7 ...\n     $ X6                                : int  439 231 80 121 58 60 35 88 78 88 ...\n     $ X7                                : int  269 155 42 75 28 35 17 59 42 45 ...\n     $ X8                                : int  5 8 0 1 0 1 0 1 1 3 ...\n     $ X9                                : int  502 688 2 361 12 217 55 86 274 266 ...\n     $ X10                               : int  1818 29 241 2 185 38 159 349 41 12 ...\n     $ X11                               : int  19 224 38 776 1146 445 297 456 437 34 ...\n     $ X12                               : int  447 449 117 896 1203 503 331 542 512 113 ...\n     $ X13                               : num  6.37e-79 2.22e-13 3.37e-21 4.39e-25 1.02e-14 ...\n     $ X14                               : num  263 75.5 89 102 70.1 55.8 45.8 50.1 62.8 47.8 ...\n     $ Reviewed                          : chr  NA NA \"reviewed\" NA ...\n     $ Entry.Name                        : chr  NA NA \"HEPH_MOUSE\" NA ...\n     $ Protein.names                     : chr  NA NA \"Hephaestin (Hp) (EC 1.16.3.1)\" NA ...\n     $ Gene.Names                        : chr  NA NA \"Heph Kiaa0698\" NA ...\n     $ Organism                          : chr  NA NA \"Mus musculus (Mouse)\" NA ...\n     $ Length                            : int  NA NA 1157 NA 2812 NA NA NA 583 NA ...\n     $ Gene.Ontology..biological.process.: chr  NA NA \"intestinal iron absorption [GO:0160179]; iron ion transport [GO:0006826]; multicellular organismal-level iron i\"| __truncated__ NA ...\n     $ Gene.Ontology..cellular.component.: chr  NA NA \"basolateral plasma membrane [GO:0016323]; extracellular region [GO:0005576]; perinuclear region of cytoplasm [G\"| __truncated__ NA ...\n     $ Gene.Ontology..GO.                : chr  NA NA \"basolateral plasma membrane [GO:0016323]; extracellular region [GO:0005576]; perinuclear region of cytoplasm [G\"| __truncated__ NA ...\n     $ Gene.Ontology..molecular.function.: chr  NA NA \"copper ion binding [GO:0005507]; ferrous iron binding [GO:0008198]; ferroxidase activity [GO:0004322]; oxidored\"| __truncated__ NA ...\n     $ Gene.Ontology.IDs                 : chr  NA NA \"GO:0004322; GO:0005507; GO:0005576; GO:0005886; GO:0006826; GO:0008198; GO:0016323; GO:0016491; GO:0048471; GO:\"| __truncated__ NA ...\n\n### 1.1.4 Remove rows with NA, remove whitespace in GO IDs column and keep just gene/GO IDs columns\n\n``` r\n# Clean whitespace, filter NA/empty rows, select columns, and split GO terms using column name variables\ngene.GO.df <- full.gene.df %>%\n  mutate(!!GO.ID.column := str_replace_all(.data[[GO.ID.column]], \"\\\\s*;\\\\s*\", \";\")) %>% # Clean up spaces around \";\"\n  filter(!is.na(.data[[gene.ID.column]]) & !is.na(.data[[GO.ID.column]]) & .data[[GO.ID.column]] != \"\") %>% \n  select(all_of(c(gene.ID.column, GO.ID.column)))\n\n\nstr(gene.GO.df)\n```\n\n    'data.frame':   19842 obs. of  2 variables:\n     $ X1               : chr  \"TRINITY_DN37015_c0_g1_i1\" \"TRINITY_DN45794_c0_g1_i1\" \"TRINITY_DN45764_c0_g1_i1\" \"TRINITY_DN48070_c0_g1_i1\" ...\n     $ Gene.Ontology.IDs: chr  \"GO:0004322;GO:0005507;GO:0005576;GO:0005886;GO:0006826;GO:0008198;GO:0016323;GO:0016491;GO:0048471;GO:0060586;G\"| __truncated__ \"GO:0005615;GO:0005886;GO:0007339;GO:0031012;GO:0098609\" \"GO:0000139;GO:0001736;GO:0001737;GO:0004674;GO:0005615;GO:0005737;GO:0005886;GO:0006468;GO:0007219;GO:0007267;G\"| __truncated__ \"GO:0005102;GO:0005739;GO:0005777;GO:0005778;GO:0006633;GO:0019166;GO:0033306;GO:0043231\" ...\n\n### 1.1.5 “Flatten” gene and GO IDs\n\nThis flattens the file so all of the GO IDs per gene are separated into\none GO ID per gene per row.\n\n``` r\nflat.gene.GO.df <- gene.GO.df %>% separate_rows(!!sym(GO.ID.column), sep = \";\")\n\nstr(flat.gene.GO.df)\n```\n\n    tibble [319,980 × 2] (S3: tbl_df/tbl/data.frame)\n     $ X1               : chr [1:319980] \"TRINITY_DN37015_c0_g1_i1\" \"TRINITY_DN37015_c0_g1_i1\" \"TRINITY_DN37015_c0_g1_i1\" \"TRINITY_DN37015_c0_g1_i1\" ...\n     $ Gene.Ontology.IDs: chr [1:319980] \"GO:0004322\" \"GO:0005507\" \"GO:0005576\" \"GO:0005886\" ...\n\n### 1.1.6 Group\n\nGroups the genes by GO ID (i.e. lists all genes associated with each\nunique GO ID)\n\n``` r\ngrouped.gene.GO.df <- flat.gene.GO.df %>%\n  group_by(!!sym(GO.ID.column)) %>%\n  summarise(!!gene.ID.column := paste(.data[[gene.ID.column]], collapse = \",\"))\n\nstr(grouped.gene.GO.df)\n```\n\n    tibble [14,922 × 2] (S3: tbl_df/tbl/data.frame)\n     $ Gene.Ontology.IDs: chr [1:14922] \"GO:0000002\" \"GO:0000009\" \"GO:0000011\" \"GO:0000012\" ...\n     $ X1               : chr [1:14922] \"TRINITY_DN624_c0_g1_i1,TRINITY_DN624_c0_g1_i2,TRINITY_DN678_c0_g1_i1,TRINITY_DN678_c0_g1_i2,TRINITY_DN678_c0_g1\"| __truncated__ \"TRINITY_DN10071_c0_g4_i1\" \"TRINITY_DN628_c0_g2_i1,TRINITY_DN9588_c0_g1_i1,TRINITY_DN9588_c0_g1_i5\" \"TRINITY_DN3105_c1_g1_i3,TRINITY_DN4630_c0_g1_i2,TRINITY_DN4630_c0_g1_i4,TRINITY_DN4630_c0_g1_i5,TRINITY_DN8346_\"| __truncated__ ...\n\n### 1.1.7 Map GO IDs to GOslims\n\nThe mapping steps were derived from this [bioconductor forum\nresponse](https://support.bioconductor.org/p/128407/#128408)\n\n``` r\n# Vector of GO IDs\ngo_ids <- grouped.gene.GO.df[[GO.ID.column]]\n\nstr(go_ids)\n```\n\n     chr [1:14922] \"GO:0000002\" \"GO:0000009\" \"GO:0000011\" \"GO:0000012\" ...\n\n### 1.1.8 Extract GOslims from OBO\n\nCreates new OBO Collection object of just GOslims, based on provided GO\nIDs.\n\n``` r\n# Create GSEAbase GOCollection using `go_ids`\nmyCollection <- GOCollection(go_ids)\n\n# Retrieve GOslims from GO OBO file set\nslim <- getOBOCollection(gseabase_files)\n\nstr(slim)\n```\n\n    Formal class 'OBOCollection' [package \"GSEABase\"] with 7 slots\n      ..@ .stanza     :'data.frame':    153 obs. of  1 variable:\n      .. ..$ value: chr [1:153] \"Root\" \"Term\" \"Term\" \"Term\" ...\n      ..@ .subset     :'data.frame':    22 obs. of  1 variable:\n      .. ..$ value: chr [1:22] \"Rhea list of ChEBI terms representing the major species at pH 7.3.\" \"Term not to be used for direct annotation\" \"Terms planned for obsoletion\" \"AGR slim\" ...\n      ..@ .kv         :'data.frame':    2075 obs. of  3 variables:\n      .. ..$ stanza_id: chr [1:2075] \".__Root__\" \".__Root__\" \".__Root__\" \".__Root__\" ...\n      .. ..$ key      : chr [1:2075] \"format-version\" \"data-version\" \"synonymtypedef\" \"synonymtypedef\" ...\n      .. ..$ value    : chr [1:2075] \"1.2\" \"go/2024-09-08/subsets/goslim_generic.owl\" \"syngo_official_label \\\"label approved by the SynGO project\\\"\" \"systematic_synonym \\\"Systematic synonym\\\" EXACT\" ...\n      ..@ evidenceCode: chr [1:26] \"EXP\" \"IDA\" \"IPI\" \"IMP\" ...\n      ..@ ontology    : chr NA\n      ..@ ids         : chr [1:141] \"GO:0000228\" \"GO:0000278\" \"GO:0000910\" \"GO:0001618\" ...\n      ..@ type        : chr \"OBO\"\n\n### 1.1.9 Get Biological Process (BP) GOslims associated with provided GO IDs.\n\n``` r\n# Retrieve Biological Process (BP) GOslims\nslimdf <- goSlim(myCollection, slim, \"BP\", verbose)\nstr(slimdf)\n```\n\n    'data.frame':   72 obs. of  3 variables:\n     $ Count  : int  102 23 17 533 83 107 28 5 96 60 ...\n     $ Percent: num  1.016 0.229 0.169 5.308 0.827 ...\n     $ Term   : chr  \"mitotic cell cycle\" \"cytokinesis\" \"cytoplasmic translation\" \"immune system process\" ...\n\n### 1.1.10 Map GO to GOslims\n\nPerforms mapping of of GOIDs to GOslims\n\nReturns:\n\n- GOslim IDs (as rownames)\n- GOslim terms\n- Counts of GO IDs matching to corresponding GOslim\n- Percentage of GO IDs matching to corresponding GOslim\n- GOIDs mapped to corresponding GOslim, in a semi-colon delimited format\n\n``` r\n# List of GOslims and all GO IDs from `go_ids`\ngomap <- as.list(GOBPOFFSPRING[rownames(slimdf)])\n\n# Maps `go_ids` to matching GOslims\nmapped <- lapply(gomap, intersect, ids(myCollection))\n\n# Append all mapped GO IDs to `slimdf`\n# `sapply` needed to apply paste() to create semi-colon delimited values\nslimdf$GO.IDs <- sapply(lapply(gomap, intersect, ids(myCollection)), paste, collapse=\";\")\n\n# Remove \"character(0) string from \"GO.IDs\" column\nslimdf$GO.IDs[slimdf$GO.IDs == \"character(0)\"] <- \"\"\n\n# Add self-matching GOIDs to \"GO.IDs\" column, if not present\nfor (go_id in go_ids) {\n  # Check if the go_id is present in the row names\n  if (go_id %in% rownames(slimdf)) {\n    # Check if the go_id is not present in the GO.IDs column\n    # Also removes white space \"trimws()\" and converts all to upper case to handle\n    # any weird, \"invisible\" formatting issues.\n    if (!go_id %in% trimws(toupper(strsplit(slimdf[go_id, \"GO.IDs\"], \";\")[[1]]))) {\n      # Append the go_id to the GO.IDs column with a semi-colon separator\n      if (length(slimdf$GO.IDs) > 0 && nchar(slimdf$GO.IDs[nrow(slimdf)]) > 0) {\n        slimdf[go_id, \"GO.IDs\"] <- paste0(slimdf[go_id, \"GO.IDs\"], \"; \", go_id)\n      } else {\n        slimdf[go_id, \"GO.IDs\"] <- go_id\n      }\n    }\n  }\n}\n\nstr(slimdf)\n```\n\n    'data.frame':   72 obs. of  4 variables:\n     $ Count  : int  102 23 17 533 83 107 28 5 96 60 ...\n     $ Percent: num  1.016 0.229 0.169 5.308 0.827 ...\n     $ Term   : chr  \"mitotic cell cycle\" \"cytokinesis\" \"cytoplasmic translation\" \"immune system process\" ...\n     $ GO.IDs : chr  \"GO:0000022;GO:0000070;GO:0000082;GO:0000086;GO:0000132;GO:0000281;GO:0000282;GO:0001100;GO:0006977;GO:0007052;G\"| __truncated__ \"GO:0000281;GO:0000282;GO:0000911;GO:0000915;GO:0000917;GO:0007111;GO:0032465;GO:0032466;GO:0032467;GO:0032506;G\"| __truncated__ \"GO:0001731;GO:0001732;GO:0002182;GO:0002183;GO:0002190;GO:0002191;GO:0002192;GO:0140018;GO:0140708;GO:1903679;G\"| __truncated__ \"GO:0001771;GO:0001773;GO:0001774;GO:0001776;GO:0001777;GO:0001779;GO:0001780;GO:0001782;GO:0001805;GO:0001812;G\"| __truncated__ ...\n\n### 1.1.11 Flatten GOslims\n\n``` r\n# \"Flatten\" file so each row is single GO ID with corresponding GOslim\n# rownames_to_column needed to retain row name info\nslimdf_separated <- as.data.frame(slimdf %>%\n  rownames_to_column('GOslim') %>%\n  separate_rows(GO.IDs, sep = \";\"))\n\n# Group by unique GO ID\ngrouped_slimdf <- slimdf_separated %>%\n  filter(!is.na(GO.IDs) & GO.IDs != \"\") %>%\n  group_by(GO.IDs) %>%\n  summarize(GOslim = paste(GOslim, collapse = \";\"),\n            Term = paste(Term, collapse = \";\"))\n\n\nstr(grouped_slimdf)\n```\n\n    tibble [6,903 × 3] (S3: tbl_df/tbl/data.frame)\n     $ GO.IDs: chr [1:6903] \" GO:0000278\" \" GO:0002181\" \" GO:0002376\" \" GO:0003014\" ...\n     $ GOslim: chr [1:6903] \"GO:0000278\" \"GO:0002181\" \"GO:0002376\" \"GO:0003014\" ...\n     $ Term  : chr [1:6903] \"mitotic cell cycle\" \"cytoplasmic translation\" \"immune system process\" \"renal system process\" ...\n\n## 1.2 Write slimdf to file\n\n### 1.2.1 Sort and select slmidf\n\nSorts GOslims by `Count`, in descending order and then selects just the\n`Term` and `Count` columns.\n\n``` r\nslimdf.sorted <- slimdf %>% arrange(desc(Count))\n\nslim.count.df <- slimdf.sorted %>% \n  select(Term, Count)\n\nstr(slim.count.df)\n```\n\n    'data.frame':   72 obs. of  2 variables:\n     $ Term : chr  \"anatomical structure development\" \"cell differentiation\" \"signaling\" \"immune system process\" ...\n     $ Count: int  2120 941 925 533 331 316 268 267 253 244 ...\n\n### 1.2.2 Write formatted slim.count.df to file\n\n``` r\nwrite_tsv(slim.count.df, file = \"../output/01-GO-to-GOslim/counts.GOID-per-GOslim_term.tab\")\n```\n\n## 1.3 Count unique Biological Process GO IDs\n\n``` r\n# Flatten the list and count total GO IDs\ntotal_go_ids <- length(unlist(gomap))\n\n# Display the total count\ntotal_go_ids\n```\n\n    [1] 26534\n\n``` r\n# Unlist to extract all GO IDs, then find unique ones and count them\nunique_go_ids <- unique(unlist(gomap))\ntotal_unique_ids <- length(unique_go_ids)\n\n# Display the total count of unique GO IDs\ntotal_unique_ids\n```\n\n    [1] 17913\n\nTotal starting BP GO IDs: 26534\n\nTotal unique BP GO IDs: 17913\n\n# 2 REFERENCES\n\n<div id=\"refs\" class=\"references csl-bib-body hanging-indent\"\nentry-spacing=\"0\">\n\n<div id=\"ref-thegene2023\" class=\"csl-entry\">\n\nAleksander, Suzi A, James Balhoff, Seth Carbon, J Michael Cherry, Harold\nJ Drabkin, Dustin Ebert, Marc Feuermann, et al. 2023. “The Gene Ontology\nKnowledgebase in 2023.” Edited by A Baryshnikova. *GENETICS* 224 (1).\n<https://doi.org/10.1093/genetics/iyad031>.\n\n</div>\n\n<div id=\"ref-ashburner2000\" class=\"csl-entry\">\n\nAshburner, Michael, Catherine A. Ball, Judith A. Blake, David Botstein,\nHeather Butler, J. Michael Cherry, Allan P. Davis, et al. 2000. “Gene\nOntology: Tool for the Unification of Biology.” *Nature Genetics* 25\n(1): 25–29. <https://doi.org/10.1038/75556>.\n\n</div>\n\n<div id=\"ref-carlson2017\" class=\"csl-entry\">\n\nCarlson, Marc. 2017. “GO.db.” <https://doi.org/10.18129/B9.BIOC.GO.DB>.\n\n</div>\n\n<div id=\"ref-martinmorgan2017\" class=\"csl-entry\">\n\nMartin Morgan, Seth Falcon. 2017. “GSEABase.”\n<https://doi.org/10.18129/B9.BIOC.GSEABASE>.\n\n</div>\n\n<div id=\"ref-wickham2019\" class=\"csl-entry\">\n\nWickham, Hadley, Mara Averick, Jennifer Bryan, Winston Chang, Lucy\nMcGowan, Romain François, Garrett Grolemund, et al. 2019. “Welcome to\nthe Tidyverse.” *Journal of Open Source Software* 4 (43): 1686.\n<https://doi.org/10.21105/joss.01686>.\n\n</div>\n\n</div>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}