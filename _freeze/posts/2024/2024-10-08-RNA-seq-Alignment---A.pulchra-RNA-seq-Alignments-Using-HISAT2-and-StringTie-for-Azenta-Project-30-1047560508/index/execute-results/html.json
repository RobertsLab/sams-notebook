{
  "hash": "b0ed6e85bfe38da1ff84f2cc709b0ce0",
  "result": {
    "engine": "knitr",
    "markdown": "---\nauthor: Sam White\ntoc-title: Contents\ntoc-depth: 5\ntoc-location: left\ntitle: RNA-seq Alignment - A.pulchra RNA-seq Alignments Using HISAT2 and StringTie for Azenta Project 30-1047560508\ndate: '2024-10-08'\ndraft: false\nengine: knitr\ncategories: \n  - \"2024\"\n  - \"30-1047560508\"\n  - \"RNA-seq\"\n  - \"E5\"\n  - \"timeseries_molecular\"\n  - \"HISAT2\"\n  - \"StringTie\"\n  - \"alignment\"\n  - \"Acropora pulchra\"\n  - \"coral\"\nbibliography: references.bib\n---\n\n\n\n::: callout-note\nThis notebook entry is knitted from [`urol-e5/timeseries_molecular/D-Apul/code/02.20-D-Apul-RNAseq-alignment-HiSat2.Rmd`](https://github.com/urol-e5/timeseries_molecular/blob/5398f74d0380487051fbfee57d294b1f10dff4d3/D-Apul/code/02.20-D-Apul-RNAseq-alignment-HiSat2.Rmd) (GitHub), commit `5398f74`.\n:::\n\n# 1 INTRODUCTION\n\nThis notebook will align trimmed *A.pulchra* RNA-seq data to the\n*A.pulchra* genome using\n[HISAT2](https://github.com/DaehwanKimLab/hisat2) (Kim et al. 2019).\nFollwed by\n[StringTie](https://ccb.jhu.edu/software/stringtie/index.shtml?t=manual)\n(Pertea et al. 2015, 2016) for transcript assembly/identification and\ncount matrices for downstream expression analysis with\n[DESeq2](https://github.com/thelovelab/DESeq2) and/or\n$$Ballgown$$(<https://github.com/alyssafrazee/ballgown>.\n\nSince the BAM files produced by this notebook are too large for GitHub,\nthey can be accessed on our server here:\n\n<https://gannet.fish.washington.edu/Atumefaciens/gitrepos/urol-e5/timeseries_molecular/D-Apul/output/02.20-D-Apul-RNAseq-alignment-HiSat2/>\n\nInput(s)\n\n- Trimmed FastQ files, with format: `*fastp-trim.fq.gz`\n- HISAT2 genome index: `Apulcrha-genome`\n- Genome GTF: `Apulchra-genome.gtf`\n- Sample metadata: `M-multi-species/data/rna_metadata.csv`\n\nOutputs:\n\n- Primary:\n\n  - `checksums.md5`: MD5 checksum for all files in this directory.\n    Excludes subdirectories.\n\n  - `apul-gene_count_matrix.csv`: Gene count matrix for use in\n    [DESeq2](https://github.com/thelovelab/DESeq2).\n\n  - `apul-transcript_count_matrix.csv`: Transcript count matrix for use\n    in [DESeq2](https://github.com/thelovelab/DESeq2).\n\n  - `apul-transcript_count_matrix_with_gene_ids.csv`: Transcript count\n    matrix which includes corresponding gene IDs.\n\n  - `prepDE-sample_list.txt`: Sample file list provided as input to\n    StringTie for DESeq2 count matrix generation. Also serves as\n    documentation of which files were used for this step.\n\n  - `Apulchra-genome.stringtie.gtf`: Canonical StringTie GTF file\n    compiled from all individual sample GTFs.\n\n  - `sorted-bams-merged.bam`: Merged (and sorted) BAM consisting of all\n    individual sample BAMs.\n\n  - `sorted-bams-merged.bam.bai`: BAM index file. Useful for visualizing\n    assemblies in IGV.\n\n  - `sorted_bams.list`: List file needed for merging of BAMS with\n    samtools. Also serves as documentation of which files were used for\n    this step.\n\n  - `multiqc_report.html`: MultiQC report aggregating all individual\n    HISAT2 alignment stats and samtools flagstats.\n\n  - `gtf_list.txt`: List file needed for merging of GTF files with\n    StringTie. Also serves as documentation of which files were used for\n    this step.\n\n- Individuals:\n\nEach subdirectory is labelled based on sample name and each contains\nindividual HISAT2 alignment and StringTie output files.\n\n- `<sample_name>_checksums.md5`: MD5 checksums for all files in the\n  directory.\n\n- `*.ctab`: Data tables formatted for import into Ballgown.\n\n- `<sample_name>.cov_refs.gtf`: StringTie genome reference sequnce\n  coverage GTF.\n\n- `<sample_name>.gtf`: StringTie GTF.\n\n- `<sample_name>.sorted.bam`: HISAT2 assembly BAM.\n\n- `<sample_name>.sorted.bam.bai`: BAM index file. Useful for visualizing\n  assemblies in IGV.\n\n- `<sample_name>-hisat2_output.flagstat`: samtools flagstat output file.\n\n- `<sample_name>_hisat2.stats`: HISAT2 assembly stats.\n\n- `input_fastqs_checksums.md5`: MD5 checksums of files used as input for\n  assembly. Primarily serves as documentation to track/verify which\n  files were actually used.\n\n# 2 Create a Bash variables file\n\nThis allows usage of Bash variables across R Markdown chunks.\n\n``` bash\n{\necho \"#### Assign Variables ####\"\necho \"\"\n\necho \"# Data directories\"\necho 'export timeseries_dir=/home/shared/16TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular'\necho 'export genome_dir=\"${timeseries_dir}/D-Apul/data\"'\necho 'export genome_index_dir=\"${timeseries_dir}/D-Apul/output/02.10-D-Apul-RNAseq-genome-index-HiSat2\"'\necho 'export output_dir_top=\"${timeseries_dir}/D-Apul/output/02.20-D-Apul-RNAseq-alignment-HiSat2\"'\necho 'export trimmed_fastqs_dir=\"${timeseries_dir}/D-Apul/output/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC\"'\necho 'export trimmed_reads_url=\"https://gannet.fish.washington.edu/Atumefaciens/gitrepos/urol-e5/timeseries_molecular/D-Apul/output/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC\"'\necho \"\"\n\necho \"# Location of Hisat2 index files\"\necho \"# Must keep variable name formatting, as it's used by HiSat2\"\necho 'export HISAT2_INDEXES=\"${genome_index_dir}\"'\n\n\necho \"# Input files\"\necho 'export exons=\"${output_dir_top}/Apulchra-genome_hisat2_exons.tab\"'\necho 'export genome_index_name=\"Apulchra-genome\"'\necho 'export genome_gff=\"${genome_dir}/Apulchra-genome.gff\"'\necho 'export genome_fasta=\"${genome_dir}/Apulchra-genome.fa\"'\necho 'export splice_sites=\"${output_dir_top}/Apulchra-genome_hisat2_splice_sites.tab\"'\necho 'export transcripts_gtf=\"${genome_dir}/Apulchra-genome.gtf\"'\n\necho \"# Output files\"\necho 'export gtf_list=\"${output_dir_top}/gtf_list.txt\"'\necho 'export merged_bam=\"${output_dir_top}/sorted-bams-merged.bam\"'\necho \"\"\n\necho \"# Paths to programs\"\necho 'export programs_dir=\"/home/shared\"'\necho 'export hisat2_dir=\"${programs_dir}/hisat2-2.2.1\"'\n\necho 'export hisat2=\"${hisat2_dir}/hisat2\"'\n\necho 'export multiqc=/home/sam/programs/mambaforge/bin/multiqc'\n\necho 'export samtools=\"${programs_dir}/samtools-1.12/samtools\"'\n\necho 'export prepDE=\"${programs_dir}/stringtie-2.2.1.Linux_x86_64/prepDE.py3\"'\necho 'export stringtie=\"${programs_dir}/stringtie-2.2.1.Linux_x86_64/stringtie\"'\n\necho \"\"\n\necho \"# Set FastQ filename patterns\"\necho \"export R1_fastq_pattern='*_R1_*.fq.gz'\"\necho \"export R2_fastq_pattern='*_R2_*.fq.gz'\"\necho \"export trimmed_fastq_pattern='*fastp-trim.fq.gz'\"\necho \"\"\n\necho \"# Set number of CPUs to use\"\necho 'export threads=47'\necho \"\"\n\necho \"# Set average read length - for StringTie prepDE.py\"\necho 'export read_length=125'\necho \"\"\n\n\necho \"## Initialize arrays\"\necho 'export fastq_array_R1=()'\necho 'export fastq_array_R2=()'\necho 'export R1_names_array=()'\necho 'export R2_names_array=()'\necho \"declare -A sample_timepoint_map\"\necho \"\"\n\necho \"# Programs associative array\"\necho \"declare -A programs_array\"\necho \"programs_array=(\"\necho '[hisat2]=\"${hisat2}\" \\'\necho '[multiqc]=\"${multiqc}\" \\'\necho '[prepDE]=\"${prepDE}\" \\'\necho '[samtools]=\"${samtools}\" \\'\necho '[stringtie]=\"${stringtie}\" \\'\necho \")\"\necho \"\"\n\necho \"# Print formatting\"\necho 'export line=\"--------------------------------------------------------\"'\necho \"\"\n} > .bashvars\n\ncat .bashvars\n```\n\n    #### Assign Variables ####\n\n    # Data directories\n    export timeseries_dir=/home/shared/16TB_HDD_01/sam/gitrepos/urol-e5/timeseries_molecular\n    export genome_dir=\"${timeseries_dir}/D-Apul/data\"\n    export genome_index_dir=\"${timeseries_dir}/D-Apul/output/02.10-D-Apul-RNAseq-genome-index-HiSat2\"\n    export output_dir_top=\"${timeseries_dir}/D-Apul/output/02.20-D-Apul-RNAseq-alignment-HiSat2\"\n    export trimmed_fastqs_dir=\"${timeseries_dir}/D-Apul/output/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC\"\n    export trimmed_reads_url=\"https://gannet.fish.washington.edu/Atumefaciens/gitrepos/urol-e5/timeseries_molecular/D-Apul/output/01.00-D-Apul-RNAseq-trimming-fastp-FastQC-MultiQC\"\n\n    # Location of Hisat2 index files\n    # Must keep variable name formatting, as it's used by HiSat2\n    export HISAT2_INDEXES=\"${genome_index_dir}\"\n    # Input files\n    export exons=\"${output_dir_top}/Apulchra-genome_hisat2_exons.tab\"\n    export genome_index_name=\"Apulchra-genome\"\n    export genome_gff=\"${genome_dir}/Apulchra-genome.gff\"\n    export genome_fasta=\"${genome_dir}/Apulchra-genome.fa\"\n    export splice_sites=\"${output_dir_top}/Apulchra-genome_hisat2_splice_sites.tab\"\n    export transcripts_gtf=\"${genome_dir}/Apulchra-genome.gtf\"\n    # Output files\n    export gtf_list=\"${output_dir_top}/gtf_list.txt\"\n    export merged_bam=\"${output_dir_top}/sorted-bams-merged.bam\"\n\n    # Paths to programs\n    export programs_dir=\"/home/shared\"\n    export hisat2_dir=\"${programs_dir}/hisat2-2.2.1\"\n    export hisat2=\"${hisat2_dir}/hisat2\"\n    export multiqc=/home/sam/programs/mambaforge/bin/multiqc\n    export samtools=\"${programs_dir}/samtools-1.12/samtools\"\n    export prepDE=\"${programs_dir}/stringtie-2.2.1.Linux_x86_64/prepDE.py3\"\n    export stringtie=\"${programs_dir}/stringtie-2.2.1.Linux_x86_64/stringtie\"\n\n    # Set FastQ filename patterns\n    export R1_fastq_pattern='*_R1_*.fq.gz'\n    export R2_fastq_pattern='*_R2_*.fq.gz'\n    export trimmed_fastq_pattern='*fastp-trim.fq.gz'\n\n    # Set number of CPUs to use\n    export threads=47\n\n    # Set average read length - for StringTie prepDE.py\n    export read_length=125\n\n    ## Initialize arrays\n    export fastq_array_R1=()\n    export fastq_array_R2=()\n    export R1_names_array=()\n    export R2_names_array=()\n    declare -A sample_timepoint_map\n\n    # Programs associative array\n    declare -A programs_array\n    programs_array=(\n    [hisat2]=\"${hisat2}\" \\\n    [multiqc]=\"${multiqc}\" \\\n    [prepDE]=\"${prepDE}\" \\\n    [samtools]=\"${samtools}\" \\\n    [stringtie]=\"${stringtie}\" \\\n    )\n\n    # Print formatting\n    export line=\"--------------------------------------------------------\"\n\nIf needed, download trimmed RNA-seq.\n\nChange `eval=FALSE` to `eval=TRUE` to execute the next two chunks to\ndownload RNA-seq and then verify MD5 checksums.\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Make output directory if it doesn't exist\nmkdir --parents ${trimmed_fastqs_dir}\n\n# Run wget to retrieve FastQs and MD5 files\nwget \\\n--directory-prefix ${trimmed_fastqs_dir} \\\n--recursive \\\n--no-check-certificate \\\n--continue \\\n--cut-dirs 3 \\\n--no-host-directories \\\n--no-parent \\\n--quiet \\\n--accept=\"*fastp-trim*, *.md5\"\n${trimmed_reads_url}\n\nls -lh \"${trimmed_fastqs_dir}\"\n```\n\nVerify trimmed read checksums\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\ncd \"${trimmed_fastqs_dir}\"\n\n# Verify checksums\nfor file in *.md5\ndo\n  md5sum --check \"${file}\"\ndone\n```\n\n# 3 Align reads using HISAT2\n\n## 3.1 HISAT2 Alignment\n\nThis requires usage of the `rna_metadata.csv`\n\nThis step has a lengthy, semi-complex workflow:\n\n1.  Parse `rna_metadata.csv` for *A.pulchra* sample names and time\n    point. This info will be used for downstream file naming and to\n    assign the time point to the read group (`SM:`) in the alignment\n    file.\n2.  Loop through all samples and perform individual alignments using\n    HISAT2.\n3.  HISAT2 output is piped to through multiple samtools tools: flagstat\n    (stats aggregation), sort (creates/sorts BAM), index (creates BAM\n    index). Piping saves time and disk space, by avoiding the generation\n    of large SAM files.\n4.  Loop continues and runs StringTie on sorted BAM file to produce\n    individual GTF file.\n5.  Loop continues and adds GTF path/filename to a list file, which will\n    be used downstream.\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Make output directories, if they don't exist\nmkdir --parents \"${output_dir_top}\"\n\n# Change to ouput directory\ncd \"${output_dir_top}\"\n\n## Populate trimmed reads arrays\nfastq_array_R1=(\"${trimmed_fastqs_dir}\"/${R1_fastq_pattern})\nfastq_array_R2=(\"${trimmed_fastqs_dir}\"/${R2_fastq_pattern})\n\n############## BEGIN HISAT2 ALIGNMENTS ##############\n\nfor filepath in \"${fastq_array_R1[@]}\"; do\n    filename=${filepath##*/}      # Strip path\n    sample=$(echo \"$filename\" | awk -F\"_\" '{print $1}')\n    timepoint=$(echo \"$filename\" | awk -F\"[_-]\" '{print $3}')\n\n    \n  # Create and switch to dedicated sample directory\n  mkdir --parents \"${sample}\" && cd \"$_\"\n    \n  # Create HISAT2 list of fastq R1 files\n  # and generated MD5 checksums file.\n  for fastq in \"${fastq_array_R1[@]}\"\n  do\n\n    \n    # Parse sample name from FastQ filename\n    fastq_sample=$(echo \"${fastq##*/}\" | awk -F\"_\" '{print $1}')\n    \n\n    \n    # Process matching FastQ file, based on sample name\n    if [ \"${fastq_sample}\" == \"${sample}\" ]; then\n      \n      # Generate checksum/list of input files used\n      md5sum \"${fastq}\" >> input_fastqs_checksums.md5\n      \n      # Create comma-separated lists of FastQs for HISAT2\n      printf -v joined_R1 '%s,' \"${fastq}\"\n      fastq_list_R1=$(echo \"${joined_R1%,}\")\n    fi\n  done\n\n  # Create HISAT2 list of fastq R1 files\n  # and generated MD5 checksums file.\n  for fastq in \"${fastq_array_R2[@]}\"\n  do\n    # Parse sample name from FastQ filename\n    fastq_sample=$(echo \"${fastq##*/}\" | awk -F\"_\" '{print $1}')\n    \n    # Process matching FastQ file, based on sample name\n    if [ \"${fastq_sample}\" == \"${sample}\" ]; then\n      \n      # Generate checksum/list of input files used\n      md5sum \"${fastq}\" >> input_fastqs_checksums.md5\n\n      # Create comma-separated lists of FastQs for HISAT2\n      printf -v joined_R2 '%s,' \"${fastq}\"\n      fastq_list_R2=$(echo \"${joined_R2%,}\")\n    fi\n  done\n\n\n\n  # HISAT2 alignments\n  # Sets read group info (RG) using samples array\n  \"${programs_array[hisat2]}\" \\\n  -x \"${genome_index_name}\" \\\n  -1 \"${fastq_list_R1}\" \\\n  -2 \"${fastq_list_R2}\" \\\n  --threads \"${threads}\" \\\n  --rg-id \"${sample}\" \\\n  --rg \"SM:\"\"${timepoint}\" \\\n  2> \"${sample}\"_hisat2.stats \\\n  | tee >(${programs_array[samtools]} flagstat - > \"${sample}\"-hisat2_output.flagstat) \\\n  | ${programs_array[samtools]} sort - -@ \"${threads}\" -O BAM \\\n  | tee \"${sample}\".sorted.bam \\\n  | ${programs_array[samtools]} index - \"${sample}\".sorted.bam.bai\n  \n  \n  # Run stringtie on alignments\n  # Uses \"-B\" option to output tables intended for use in Ballgown\n  # Uses \"-e\" option; recommended when using \"-B\" option.\n  # Limits analysis to only reads alignments matching reference.\n  \"${programs_array[stringtie]}\" \"${sample}\".sorted.bam \\\n  -p \"${threads}\" \\\n  -o \"${sample}\".gtf \\\n  -G \"${genome_gff}\" \\\n  -C \"${sample}.cov_refs.gtf\" \\\n  -B \\\n  -e \n  \n  \n  # Add GTFs to list file, only if non-empty\n  # Identifies GTF files that only have header\n  gtf_lines=$(wc -l < \"${sample}\".gtf )\n  if [ \"${gtf_lines}\" -gt 2 ]; then\n    echo \"$(pwd)/${sample}.gtf\" >> \"${gtf_list}\"\n  fi \n\n  # Generate checksums\n  find ./ -type f -not -name \"*.md5\" -exec md5sum {} \\; > ${sample}_checksums.md5\n  # Move up to orig. working directory\n  cd ..\n\ndone\n```\n\n## 3.2 Review HISAT2 Output\n\nView the resulting directory structure of resulting from the\nHISAT2/StringTie process.\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Change to ouput directory\ncd \"${output_dir_top}\"\n\n# Display HISAT2 output directory structure\n# with directory (--du) and file sizes (-h)\ntree --du -h\n```\n\n    [138G]  \u001b[01;34m.\u001b[0m\n    ├── [1.6G]  \u001b[01;34mACR-139-TP1\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-139-TP1_checksums.md5\u001b[0m\n    │   ├── [7.6M]  \u001b[00mACR-139-TP1.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-139-TP1.gtf\u001b[0m\n    │   ├── [ 450]  \u001b[00mACR-139-TP1-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 636]  \u001b[00mACR-139-TP1_hisat2.stats\u001b[0m\n    │   ├── [1.6G]  \u001b[00mACR-139-TP1.sorted.bam\u001b[0m\n    │   ├── [811K]  \u001b[00mACR-139-TP1.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.3M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.8G]  \u001b[01;34mACR-139-TP2\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-139-TP2_checksums.md5\u001b[0m\n    │   ├── [8.2M]  \u001b[00mACR-139-TP2.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-139-TP2.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-139-TP2-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 637]  \u001b[00mACR-139-TP2_hisat2.stats\u001b[0m\n    │   ├── [1.7G]  \u001b[00mACR-139-TP2.sorted.bam\u001b[0m\n    │   ├── [819K]  \u001b[00mACR-139-TP2.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.3M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.6G]  \u001b[01;34mACR-139-TP3\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-139-TP3_checksums.md5\u001b[0m\n    │   ├── [6.3M]  \u001b[00mACR-139-TP3.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-139-TP3.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-139-TP3-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 637]  \u001b[00mACR-139-TP3_hisat2.stats\u001b[0m\n    │   ├── [1.5G]  \u001b[00mACR-139-TP3.sorted.bam\u001b[0m\n    │   ├── [827K]  \u001b[00mACR-139-TP3.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.3M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.9G]  \u001b[01;34mACR-139-TP4\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-139-TP4_checksums.md5\u001b[0m\n    │   ├── [6.9M]  \u001b[00mACR-139-TP4.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-139-TP4.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-139-TP4-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 637]  \u001b[00mACR-139-TP4_hisat2.stats\u001b[0m\n    │   ├── [1.8G]  \u001b[00mACR-139-TP4.sorted.bam\u001b[0m\n    │   ├── [853K]  \u001b[00mACR-139-TP4.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.3M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [2.1G]  \u001b[01;34mACR-145-TP1\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-145-TP1_checksums.md5\u001b[0m\n    │   ├── [5.4M]  \u001b[00mACR-145-TP1.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-145-TP1.gtf\u001b[0m\n    │   ├── [ 450]  \u001b[00mACR-145-TP1-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 639]  \u001b[00mACR-145-TP1_hisat2.stats\u001b[0m\n    │   ├── [2.1G]  \u001b[00mACR-145-TP1.sorted.bam\u001b[0m\n    │   ├── [985K]  \u001b[00mACR-145-TP1.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.3M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.7G]  \u001b[01;34mACR-145-TP2\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-145-TP2_checksums.md5\u001b[0m\n    │   ├── [6.3M]  \u001b[00mACR-145-TP2.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-145-TP2.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-145-TP2-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 636]  \u001b[00mACR-145-TP2_hisat2.stats\u001b[0m\n    │   ├── [1.6G]  \u001b[00mACR-145-TP2.sorted.bam\u001b[0m\n    │   ├── [735K]  \u001b[00mACR-145-TP2.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.3M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.9G]  \u001b[01;34mACR-145-TP3\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-145-TP3_checksums.md5\u001b[0m\n    │   ├── [3.0M]  \u001b[00mACR-145-TP3.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-145-TP3.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-145-TP3-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 640]  \u001b[00mACR-145-TP3_hisat2.stats\u001b[0m\n    │   ├── [1.8G]  \u001b[00mACR-145-TP3.sorted.bam\u001b[0m\n    │   ├── [795K]  \u001b[00mACR-145-TP3.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.2M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.9G]  \u001b[01;34mACR-145-TP4\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-145-TP4_checksums.md5\u001b[0m\n    │   ├── [3.6M]  \u001b[00mACR-145-TP4.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-145-TP4.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-145-TP4-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 638]  \u001b[00mACR-145-TP4_hisat2.stats\u001b[0m\n    │   ├── [1.8G]  \u001b[00mACR-145-TP4.sorted.bam\u001b[0m\n    │   ├── [789K]  \u001b[00mACR-145-TP4.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.2M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [2.0G]  \u001b[01;34mACR-150-TP1\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-150-TP1_checksums.md5\u001b[0m\n    │   ├── [3.0M]  \u001b[00mACR-150-TP1.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-150-TP1.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-150-TP1-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 640]  \u001b[00mACR-150-TP1_hisat2.stats\u001b[0m\n    │   ├── [2.0G]  \u001b[00mACR-150-TP1.sorted.bam\u001b[0m\n    │   ├── [807K]  \u001b[00mACR-150-TP1.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.2M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.7G]  \u001b[01;34mACR-150-TP2\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-150-TP2_checksums.md5\u001b[0m\n    │   ├── [7.5M]  \u001b[00mACR-150-TP2.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-150-TP2.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-150-TP2-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 637]  \u001b[00mACR-150-TP2_hisat2.stats\u001b[0m\n    │   ├── [1.6G]  \u001b[00mACR-150-TP2.sorted.bam\u001b[0m\n    │   ├── [796K]  \u001b[00mACR-150-TP2.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.3M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.6G]  \u001b[01;34mACR-150-TP3\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-150-TP3_checksums.md5\u001b[0m\n    │   ├── [8.0M]  \u001b[00mACR-150-TP3.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-150-TP3.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-150-TP3-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 637]  \u001b[00mACR-150-TP3_hisat2.stats\u001b[0m\n    │   ├── [1.6G]  \u001b[00mACR-150-TP3.sorted.bam\u001b[0m\n    │   ├── [798K]  \u001b[00mACR-150-TP3.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.3M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.8G]  \u001b[01;34mACR-150-TP4\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-150-TP4_checksums.md5\u001b[0m\n    │   ├── [7.1M]  \u001b[00mACR-150-TP4.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-150-TP4.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-150-TP4-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 637]  \u001b[00mACR-150-TP4_hisat2.stats\u001b[0m\n    │   ├── [1.7G]  \u001b[00mACR-150-TP4.sorted.bam\u001b[0m\n    │   ├── [829K]  \u001b[00mACR-150-TP4.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.3M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.8G]  \u001b[01;34mACR-173-TP1\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-173-TP1_checksums.md5\u001b[0m\n    │   ├── [4.9M]  \u001b[00mACR-173-TP1.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-173-TP1.gtf\u001b[0m\n    │   ├── [ 451]  \u001b[00mACR-173-TP1-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 637]  \u001b[00mACR-173-TP1_hisat2.stats\u001b[0m\n    │   ├── [1.8G]  \u001b[00mACR-173-TP1.sorted.bam\u001b[0m\n    │   ├── [964K]  \u001b[00mACR-173-TP1.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.2M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.6G]  \u001b[01;34mACR-173-TP2\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-173-TP2_checksums.md5\u001b[0m\n    │   ├── [8.0M]  \u001b[00mACR-173-TP2.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-173-TP2.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-173-TP2-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 635]  \u001b[00mACR-173-TP2_hisat2.stats\u001b[0m\n    │   ├── [1.5G]  \u001b[00mACR-173-TP2.sorted.bam\u001b[0m\n    │   ├── [759K]  \u001b[00mACR-173-TP2.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.3M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.8G]  \u001b[01;34mACR-173-TP3\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-173-TP3_checksums.md5\u001b[0m\n    │   ├── [5.1M]  \u001b[00mACR-173-TP3.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-173-TP3.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-173-TP3-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 637]  \u001b[00mACR-173-TP3_hisat2.stats\u001b[0m\n    │   ├── [1.7G]  \u001b[00mACR-173-TP3.sorted.bam\u001b[0m\n    │   ├── [824K]  \u001b[00mACR-173-TP3.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.3M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.5G]  \u001b[01;34mACR-173-TP4\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-173-TP4_checksums.md5\u001b[0m\n    │   ├── [4.0M]  \u001b[00mACR-173-TP4.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-173-TP4.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-173-TP4-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 636]  \u001b[00mACR-173-TP4_hisat2.stats\u001b[0m\n    │   ├── [1.5G]  \u001b[00mACR-173-TP4.sorted.bam\u001b[0m\n    │   ├── [718K]  \u001b[00mACR-173-TP4.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.2M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.4G]  \u001b[01;34mACR-186-TP1\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-186-TP1_checksums.md5\u001b[0m\n    │   ├── [2.3M]  \u001b[00mACR-186-TP1.cov_refs.gtf\u001b[0m\n    │   ├── [ 33M]  \u001b[00mACR-186-TP1.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-186-TP1-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 637]  \u001b[00mACR-186-TP1_hisat2.stats\u001b[0m\n    │   ├── [1.4G]  \u001b[00mACR-186-TP1.sorted.bam\u001b[0m\n    │   ├── [635K]  \u001b[00mACR-186-TP1.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.2M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.6G]  \u001b[01;34mACR-186-TP2\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-186-TP2_checksums.md5\u001b[0m\n    │   ├── [7.0M]  \u001b[00mACR-186-TP2.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-186-TP2.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-186-TP2-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 636]  \u001b[00mACR-186-TP2_hisat2.stats\u001b[0m\n    │   ├── [1.5G]  \u001b[00mACR-186-TP2.sorted.bam\u001b[0m\n    │   ├── [795K]  \u001b[00mACR-186-TP2.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.3M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.4G]  \u001b[01;34mACR-186-TP3\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-186-TP3_checksums.md5\u001b[0m\n    │   ├── [3.5M]  \u001b[00mACR-186-TP3.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-186-TP3.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-186-TP3-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 636]  \u001b[00mACR-186-TP3_hisat2.stats\u001b[0m\n    │   ├── [1.3G]  \u001b[00mACR-186-TP3.sorted.bam\u001b[0m\n    │   ├── [705K]  \u001b[00mACR-186-TP3.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.2M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.7G]  \u001b[01;34mACR-186-TP4\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-186-TP4_checksums.md5\u001b[0m\n    │   ├── [6.7M]  \u001b[00mACR-186-TP4.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-186-TP4.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-186-TP4-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 637]  \u001b[00mACR-186-TP4_hisat2.stats\u001b[0m\n    │   ├── [1.6G]  \u001b[00mACR-186-TP4.sorted.bam\u001b[0m\n    │   ├── [803K]  \u001b[00mACR-186-TP4.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.3M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.5G]  \u001b[01;34mACR-225-TP1\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-225-TP1_checksums.md5\u001b[0m\n    │   ├── [4.8M]  \u001b[00mACR-225-TP1.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-225-TP1.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-225-TP1-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 636]  \u001b[00mACR-225-TP1_hisat2.stats\u001b[0m\n    │   ├── [1.5G]  \u001b[00mACR-225-TP1.sorted.bam\u001b[0m\n    │   ├── [793K]  \u001b[00mACR-225-TP1.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.2M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.8G]  \u001b[01;34mACR-225-TP2\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-225-TP2_checksums.md5\u001b[0m\n    │   ├── [6.1M]  \u001b[00mACR-225-TP2.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-225-TP2.gtf\u001b[0m\n    │   ├── [ 450]  \u001b[00mACR-225-TP2-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 637]  \u001b[00mACR-225-TP2_hisat2.stats\u001b[0m\n    │   ├── [1.7G]  \u001b[00mACR-225-TP2.sorted.bam\u001b[0m\n    │   ├── [854K]  \u001b[00mACR-225-TP2.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.3M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.8G]  \u001b[01;34mACR-225-TP3\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-225-TP3_checksums.md5\u001b[0m\n    │   ├── [7.0M]  \u001b[00mACR-225-TP3.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-225-TP3.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-225-TP3-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 637]  \u001b[00mACR-225-TP3_hisat2.stats\u001b[0m\n    │   ├── [1.8G]  \u001b[00mACR-225-TP3.sorted.bam\u001b[0m\n    │   ├── [831K]  \u001b[00mACR-225-TP3.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.3M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.4G]  \u001b[01;34mACR-225-TP4\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-225-TP4_checksums.md5\u001b[0m\n    │   ├── [4.2M]  \u001b[00mACR-225-TP4.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-225-TP4.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-225-TP4-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 636]  \u001b[00mACR-225-TP4_hisat2.stats\u001b[0m\n    │   ├── [1.4G]  \u001b[00mACR-225-TP4.sorted.bam\u001b[0m\n    │   ├── [725K]  \u001b[00mACR-225-TP4.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.2M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [2.0G]  \u001b[01;34mACR-229-TP1\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-229-TP1_checksums.md5\u001b[0m\n    │   ├── [7.9M]  \u001b[00mACR-229-TP1.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-229-TP1.gtf\u001b[0m\n    │   ├── [ 450]  \u001b[00mACR-229-TP1-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 637]  \u001b[00mACR-229-TP1_hisat2.stats\u001b[0m\n    │   ├── [1.9G]  \u001b[00mACR-229-TP1.sorted.bam\u001b[0m\n    │   ├── [942K]  \u001b[00mACR-229-TP1.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.3M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.7G]  \u001b[01;34mACR-229-TP2\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-229-TP2_checksums.md5\u001b[0m\n    │   ├── [6.9M]  \u001b[00mACR-229-TP2.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-229-TP2.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-229-TP2-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 637]  \u001b[00mACR-229-TP2_hisat2.stats\u001b[0m\n    │   ├── [1.6G]  \u001b[00mACR-229-TP2.sorted.bam\u001b[0m\n    │   ├── [792K]  \u001b[00mACR-229-TP2.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.3M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.6G]  \u001b[01;34mACR-229-TP3\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-229-TP3_checksums.md5\u001b[0m\n    │   ├── [7.5M]  \u001b[00mACR-229-TP3.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-229-TP3.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-229-TP3-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 637]  \u001b[00mACR-229-TP3_hisat2.stats\u001b[0m\n    │   ├── [1.5G]  \u001b[00mACR-229-TP3.sorted.bam\u001b[0m\n    │   ├── [791K]  \u001b[00mACR-229-TP3.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.3M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.9G]  \u001b[01;34mACR-229-TP4\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-229-TP4_checksums.md5\u001b[0m\n    │   ├── [2.5M]  \u001b[00mACR-229-TP4.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-229-TP4.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-229-TP4-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 640]  \u001b[00mACR-229-TP4_hisat2.stats\u001b[0m\n    │   ├── [1.9G]  \u001b[00mACR-229-TP4.sorted.bam\u001b[0m\n    │   ├── [809K]  \u001b[00mACR-229-TP4.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.2M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.9G]  \u001b[01;34mACR-237-TP1\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-237-TP1_checksums.md5\u001b[0m\n    │   ├── [4.5M]  \u001b[00mACR-237-TP1.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-237-TP1.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-237-TP1-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 638]  \u001b[00mACR-237-TP1_hisat2.stats\u001b[0m\n    │   ├── [1.8G]  \u001b[00mACR-237-TP1.sorted.bam\u001b[0m\n    │   ├── [823K]  \u001b[00mACR-237-TP1.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.2M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.5G]  \u001b[01;34mACR-237-TP2\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-237-TP2_checksums.md5\u001b[0m\n    │   ├── [5.7M]  \u001b[00mACR-237-TP2.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-237-TP2.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-237-TP2-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 637]  \u001b[00mACR-237-TP2_hisat2.stats\u001b[0m\n    │   ├── [1.4G]  \u001b[00mACR-237-TP2.sorted.bam\u001b[0m\n    │   ├── [699K]  \u001b[00mACR-237-TP2.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.3M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.6G]  \u001b[01;34mACR-237-TP3\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-237-TP3_checksums.md5\u001b[0m\n    │   ├── [8.4M]  \u001b[00mACR-237-TP3.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-237-TP3.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-237-TP3-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 636]  \u001b[00mACR-237-TP3_hisat2.stats\u001b[0m\n    │   ├── [1.5G]  \u001b[00mACR-237-TP3.sorted.bam\u001b[0m\n    │   ├── [789K]  \u001b[00mACR-237-TP3.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.3M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [2.0G]  \u001b[01;34mACR-237-TP4\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-237-TP4_checksums.md5\u001b[0m\n    │   ├── [4.6M]  \u001b[00mACR-237-TP4.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-237-TP4.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-237-TP4-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 638]  \u001b[00mACR-237-TP4_hisat2.stats\u001b[0m\n    │   ├── [2.0G]  \u001b[00mACR-237-TP4.sorted.bam\u001b[0m\n    │   ├── [901K]  \u001b[00mACR-237-TP4.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.3M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.8G]  \u001b[01;34mACR-244-TP1\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-244-TP1_checksums.md5\u001b[0m\n    │   ├── [4.1M]  \u001b[00mACR-244-TP1.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-244-TP1.gtf\u001b[0m\n    │   ├── [ 448]  \u001b[00mACR-244-TP1-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 637]  \u001b[00mACR-244-TP1_hisat2.stats\u001b[0m\n    │   ├── [1.7G]  \u001b[00mACR-244-TP1.sorted.bam\u001b[0m\n    │   ├── [648K]  \u001b[00mACR-244-TP1.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.2M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [2.0G]  \u001b[01;34mACR-244-TP2\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-244-TP2_checksums.md5\u001b[0m\n    │   ├── [7.3M]  \u001b[00mACR-244-TP2.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-244-TP2.gtf\u001b[0m\n    │   ├── [ 450]  \u001b[00mACR-244-TP2-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 638]  \u001b[00mACR-244-TP2_hisat2.stats\u001b[0m\n    │   ├── [1.9G]  \u001b[00mACR-244-TP2.sorted.bam\u001b[0m\n    │   ├── [809K]  \u001b[00mACR-244-TP2.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.3M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [2.1G]  \u001b[01;34mACR-244-TP3\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-244-TP3_checksums.md5\u001b[0m\n    │   ├── [8.5M]  \u001b[00mACR-244-TP3.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-244-TP3.gtf\u001b[0m\n    │   ├── [ 450]  \u001b[00mACR-244-TP3-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 638]  \u001b[00mACR-244-TP3_hisat2.stats\u001b[0m\n    │   ├── [2.1G]  \u001b[00mACR-244-TP3.sorted.bam\u001b[0m\n    │   ├── [1008K]  \u001b[00mACR-244-TP3.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.4M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.8G]  \u001b[01;34mACR-244-TP4\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-244-TP4_checksums.md5\u001b[0m\n    │   ├── [3.2M]  \u001b[00mACR-244-TP4.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-244-TP4.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-244-TP4-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 640]  \u001b[00mACR-244-TP4_hisat2.stats\u001b[0m\n    │   ├── [1.8G]  \u001b[00mACR-244-TP4.sorted.bam\u001b[0m\n    │   ├── [882K]  \u001b[00mACR-244-TP4.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.2M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [2.6G]  \u001b[01;34mACR-265-TP1\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-265-TP1_checksums.md5\u001b[0m\n    │   ├── [3.0M]  \u001b[00mACR-265-TP1.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-265-TP1.gtf\u001b[0m\n    │   ├── [ 450]  \u001b[00mACR-265-TP1-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 642]  \u001b[00mACR-265-TP1_hisat2.stats\u001b[0m\n    │   ├── [2.5G]  \u001b[00mACR-265-TP1.sorted.bam\u001b[0m\n    │   ├── [1002K]  \u001b[00mACR-265-TP1.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.2M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [1.9G]  \u001b[01;34mACR-265-TP2\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-265-TP2_checksums.md5\u001b[0m\n    │   ├── [6.4M]  \u001b[00mACR-265-TP2.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-265-TP2.gtf\u001b[0m\n    │   ├── [ 450]  \u001b[00mACR-265-TP2-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 637]  \u001b[00mACR-265-TP2_hisat2.stats\u001b[0m\n    │   ├── [1.8G]  \u001b[00mACR-265-TP2.sorted.bam\u001b[0m\n    │   ├── [856K]  \u001b[00mACR-265-TP2.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.3M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [2.0G]  \u001b[01;34mACR-265-TP3\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-265-TP3_checksums.md5\u001b[0m\n    │   ├── [5.7M]  \u001b[00mACR-265-TP3.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-265-TP3.gtf\u001b[0m\n    │   ├── [ 450]  \u001b[00mACR-265-TP3-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 638]  \u001b[00mACR-265-TP3_hisat2.stats\u001b[0m\n    │   ├── [1.9G]  \u001b[00mACR-265-TP3.sorted.bam\u001b[0m\n    │   ├── [940K]  \u001b[00mACR-265-TP3.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.3M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [2.0G]  \u001b[01;34mACR-265-TP4\u001b[0m\n    │   ├── [ 601]  \u001b[00mACR-265-TP4_checksums.md5\u001b[0m\n    │   ├── [3.9M]  \u001b[00mACR-265-TP4.cov_refs.gtf\u001b[0m\n    │   ├── [ 34M]  \u001b[00mACR-265-TP4.gtf\u001b[0m\n    │   ├── [ 449]  \u001b[00mACR-265-TP4-hisat2_output.flagstat\u001b[0m\n    │   ├── [ 640]  \u001b[00mACR-265-TP4_hisat2.stats\u001b[0m\n    │   ├── [1.9G]  \u001b[00mACR-265-TP4.sorted.bam\u001b[0m\n    │   ├── [849K]  \u001b[00mACR-265-TP4.sorted.bam.bai\u001b[0m\n    │   ├── [2.4M]  \u001b[00me2t.ctab\u001b[0m\n    │   ├── [ 15M]  \u001b[00me_data.ctab\u001b[0m\n    │   ├── [1.9M]  \u001b[00mi2t.ctab\u001b[0m\n    │   ├── [7.2M]  \u001b[00mi_data.ctab\u001b[0m\n    │   ├── [ 400]  \u001b[00minput_fastqs_checksums.md5\u001b[0m\n    │   └── [3.7M]  \u001b[00mt_data.ctab\u001b[0m\n    ├── [ 35M]  \u001b[00mApulchra-genome.stringtie.gtf\u001b[0m\n    ├── [5.1M]  \u001b[00mapul-gene_count_matrix.csv\u001b[0m\n    ├── [5.2M]  \u001b[00mapul-transcript_count_matrix.csv\u001b[0m\n    ├── [5.7M]  \u001b[00mapul-transcript_count_matrix_with_gene_ids.csv\u001b[0m\n    ├── [ 633]  \u001b[00mchecksums.md5\u001b[0m\n    ├── [5.7K]  \u001b[00mgtf_list.txt\u001b[0m\n    ├── [316K]  \u001b[01;34mmultiqc_data\u001b[0m\n    │   ├── [5.3K]  \u001b[00mmultiqc_bowtie2.txt\u001b[0m\n    │   ├── [ 307]  \u001b[00mmultiqc_citations.txt\u001b[0m\n    │   ├── [275K]  \u001b[00mmultiqc_data.json\u001b[0m\n    │   ├── [3.3K]  \u001b[00mmultiqc_general_stats.txt\u001b[0m\n    │   ├── [4.1K]  \u001b[00mmultiqc.log\u001b[0m\n    │   ├── [8.0K]  \u001b[00mmultiqc_samtools_flagstat.txt\u001b[0m\n    │   └── [ 16K]  \u001b[00mmultiqc_sources.txt\u001b[0m\n    ├── [1.1M]  \u001b[00mmultiqc_report.html\u001b[0m\n    ├── [6.1K]  \u001b[00mprepDE-sample_list.txt\u001b[0m\n    ├── [3.0K]  \u001b[00mREADME.md\u001b[0m\n    ├── [1.4K]  \u001b[00msorted_bams.list\u001b[0m\n    ├── [ 66G]  \u001b[00msorted-bams-merged.bam\u001b[0m\n    └── [ 13M]  \u001b[00msorted-bams-merged.bam.bai\u001b[0m\n\n     209G used in 42 directories, 539 files\n\n## 3.3 MultiQC alignment rates\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Change to ouput directory\ncd \"${output_dir_top}\"\n\n${multiqc} --interactive .\n```\n\n# 4 Merge sorted BAMs\n\nMerge all BAMs to singular BAM for use in transcriptome assembly later,\nif needed.\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Change to ouput directory\ncd \"${output_dir_top}\"\n\n\n## Create list of sorted BAMs for merging\nfind . -name \"*sorted.bam\" > sorted_bams.list\n\n## Merge sorted BAMs\n${programs_array[samtools]} merge \\\n-b sorted_bams.list \\\n${merged_bam} \\\n--threads ${threads}\n\n## Index merged BAM\n${programs_array[samtools]} index ${merged_bam}\n```\n\n# 5 Create combined GTF\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Change to ouput directory\ncd \"${output_dir_top}\"\n\n\n# Create singular transcript file, using GTF list file\n\"${programs_array[stringtie]}\" --merge \\\n\"${gtf_list}\" \\\n-p \"${threads}\" \\\n-G \"${genome_gff}\" \\\n-o \"${genome_index_name}\".stringtie.gtf\n```\n\n# 6 Create DESeq2 Count Matrices\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Change to output directory\ncd \"${output_dir_top}\"\n\n# Check if prepDE-sample_list.txt exists\nif [ -f prepDE-sample_list.txt ]; then\n  gtf_lines=$(wc -l < gtf_list.txt)\n  prepde_lines=$(wc -l < prepDE-sample_list.txt)\n  if [ \"$gtf_lines\" -eq \"$prepde_lines\" ]; then\n    echo \"prepDE-sample_list.txt exists and line count matches gtf_list.txt. Skipping sample list creation.\"\n  else\n    echo \"prepDE-sample_list.txt exists but line count does not match. Regenerating sample list.\"\n    rm prepDE-sample_list.txt\n    while read -r line\n    do\n      sample_no_path=${line##*/}\n      sample=${sample_no_path%.*}\n      echo ${sample} ${line}\n    done < gtf_list.txt >> prepDE-sample_list.txt\n  fi\nelse\n  echo \"prepDE-sample_list.txt does not exist. Creating sample list.\"\n  while read -r line\n  do\n    sample_no_path=${line##*/}\n    sample=${sample_no_path%.*}\n    echo ${sample} ${line}\n  done < gtf_list.txt >> prepDE-sample_list.txt\nfi\n\n# Create count matrices for genes and transcripts\n# Compatible with import to DESeq2\npython3 \"${programs_array[prepDE]}\" \\\n--input=prepDE-sample_list.txt \\\n-g apul-gene_count_matrix.csv \\\n-t apul-transcript_count_matrix.csv \\\n--length=${read_length}\n```\n\n    prepDE-sample_list.txt exists and line count matches gtf_list.txt. Skipping sample list creation.\n    /home/shared/stringtie-2.2.1.Linux_x86_64/prepDE.py3:69: SyntaxWarning: invalid escape sequence '\\-'\n      RE_COVERAGE=re.compile('cov \"([\\-\\+\\d\\.]+)\"')\n    /home/shared/stringtie-2.2.1.Linux_x86_64/prepDE.py3:72: SyntaxWarning: invalid escape sequence '\\-'\n      RE_GFILE=re.compile('\\-G\\s*(\\S+)') #assume filepath without spaces..\n\n# 7 Add Gene IDs to Transcript Count Matrix\n\nCreate an enhanced version of the transcript count matrix that includes\nthe corresponding gene ID for each transcript.\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Change to output directory\ncd \"${output_dir_top}\"\n\n# Extract transcript_id to ref_gene_id mapping from GTF file\necho \"Extracting transcript to gene ID mappings from GTF file...\"\n\ngrep -E $'\\ttranscript\\t' \"${genome_dir}/Apulchra-genome.stringtie.gtf\" | \\\nawk -F'\\t' '{\n    # Extract transcript_id\n    match($9, /transcript_id \"([^\"]+)\"/, transcript_arr)\n    transcript_id = transcript_arr[1]\n    \n    # Extract ref_gene_id\n    match($9, /ref_gene_id \"([^\"]+)\"/, gene_arr)\n    ref_gene_id = gene_arr[1]\n    \n    # Print mapping if both IDs found\n    if (transcript_id && ref_gene_id) {\n        print transcript_id \"\\t\" ref_gene_id\n    }\n}' > transcript_gene_mapping.txt\n\n# Check if mapping file was created successfully\nif [ ! -s transcript_gene_mapping.txt ]; then\n    echo \"Error: Failed to create transcript-gene mapping file\"\n    exit 1\nfi\n\necho \"Found $(wc -l < transcript_gene_mapping.txt) transcript-gene mappings\"\n\n# Create enhanced transcript count matrix with gene IDs\necho \"Creating enhanced transcript count matrix with gene IDs...\"\n\n# Read header from original transcript count matrix\nhead -1 apul-transcript_count_matrix.csv > temp_header.txt\n\n# Add ref_gene_id to header (insert after transcript_id column)\nsed 's/transcript_id,/transcript_id,ref_gene_id,/' temp_header.txt > apul-transcript_count_matrix_with_gene_ids.csv\n\n# Process data rows\ntail -n +2 apul-transcript_count_matrix.csv | while IFS=',' read -r transcript_id rest_of_line; do\n    # Look up gene ID for this transcript\n    gene_id=$(grep \"^${transcript_id}[[:space:]]\" transcript_gene_mapping.txt | cut -f2)\n    \n    # If no gene ID found, use empty field\n    if [ -z \"$gene_id\" ]; then\n        gene_id=\"\"\n    fi\n    \n    # Output line with gene ID inserted after transcript ID\n    echo \"${transcript_id},${gene_id},${rest_of_line}\"\ndone >> apul-transcript_count_matrix_with_gene_ids.csv\n\n# Generate summary statistics\necho \"\"\necho \"Summary of enhanced transcript count matrix:\"\noriginal_lines=$(wc -l < apul-transcript_count_matrix.csv)\nenhanced_lines=$(wc -l < apul-transcript_count_matrix_with_gene_ids.csv)\necho \"Original transcript count matrix lines: $original_lines\"\necho \"Enhanced transcript count matrix lines: $enhanced_lines\"\n\n# Count transcripts with and without gene ID mappings\ntranscripts_with_genes=$(tail -n +2 apul-transcript_count_matrix_with_gene_ids.csv | awk -F',' '$2 != \"\"' | wc -l)\ntranscripts_without_genes=$(tail -n +2 apul-transcript_count_matrix_with_gene_ids.csv | awk -F',' '$2 == \"\"' | wc -l)\n\necho \"Number of transcripts with gene ID mappings: $transcripts_with_genes\"\necho \"Number of transcripts without gene ID mappings: $transcripts_without_genes\"\n\n# Display first few lines of enhanced matrix\necho \"\"\necho \"First 5 rows of enhanced transcript count matrix (first 5 columns):\"\nhead -6 apul-transcript_count_matrix_with_gene_ids.csv | cut -d',' -f1-5\n\n# Clean up temporary files\nrm temp_header.txt transcript_gene_mapping.txt\n\necho \"\"\necho \"Enhanced transcript count matrix saved as: apul-transcript_count_matrix_with_gene_ids.csv\"\n```\n\n    Extracting transcript to gene ID mappings from GTF file...\n    Found 44371 transcript-gene mappings\n    Creating enhanced transcript count matrix with gene IDs...\n\n    Summary of enhanced transcript count matrix:\n    Original transcript count matrix lines: 44372\n    Enhanced transcript count matrix lines: 44372\n    Number of transcripts with gene ID mappings: 44371\n    Number of transcripts without gene ID mappings: 0\n\n    First 5 rows of enhanced transcript count matrix (first 5 columns):\n    transcript_id,ref_gene_id,ACR-139-TP1,ACR-139-TP2,ACR-139-TP3\n    FUN_002326-T1,FUN_002326,3,2,3\n    FUN_002315-T1,FUN_002315,0,1,0\n    FUN_002316-T1,FUN_002316,0,0,0\n    FUN_002303-T1,FUN_002303,10,5,10\n    FUN_002304-T1,FUN_002304,2,1,1\n\n    Enhanced transcript count matrix saved as: apul-transcript_count_matrix_with_gene_ids.csv\n\n# 8 Generate checksums\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Change to ouput directory\ncd \"${output_dir_top}\"\n\n# Uses find command to avoid passing\n# directory names to the md5sum command.\nfind . -maxdepth 1 -type f -exec md5sum {} + \\\n| tee --append checksums.md5\n```\n\n<div id=\"refs\" class=\"references csl-bib-body hanging-indent\">\n\n<div id=\"ref-kim2019\" class=\"csl-entry\">\n\nKim, Daehwan, Joseph M. Paggi, Chanhee Park, Christopher Bennett, and\nSteven L. Salzberg. 2019. “Graph-Based Genome Alignment and Genotyping\nwith HISAT2 and HISAT-Genotype.” *Nature Biotechnology* 37 (8): 907–15.\n<https://doi.org/10.1038/s41587-019-0201-4>.\n\n</div>\n\n<div id=\"ref-pertea2016\" class=\"csl-entry\">\n\nPertea, Mihaela, Daehwan Kim, Geo M Pertea, Jeffrey T Leek, and Steven L\nSalzberg. 2016. “Transcript-Level Expression Analysis of RNA-Seq\nExperiments with HISAT, StringTie and Ballgown.” *Nature Protocols* 11\n(9): 1650–67. <https://doi.org/10.1038/nprot.2016.095>.\n\n</div>\n\n<div id=\"ref-pertea2015\" class=\"csl-entry\">\n\nPertea, Mihaela, Geo M Pertea, Corina M Antonescu, Tsung-Cheng Chang,\nJoshua T Mendell, and Steven L Salzberg. 2015. “StringTie Enables\nImproved Reconstruction of a Transcriptome from RNA-Seq Reads.” *Nature\nBiotechnology* 33 (3): 290–95. <https://doi.org/10.1038/nbt.3122>.\n\n</div>\n\n</div>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}