{
  "hash": "657415920e0b929ec35bdb6a63381ab4",
  "result": {
    "engine": "knitr",
    "markdown": "---\nauthor: Sam White\ntoc-title: Contents\ntoc-depth: 5\ntoc-location: left\ntitle: Resazurin - C.gigas Second Trial\ndate: '2024-03-12'\ndraft: false\nengine: knitr\ncategories: \n  - \"Crassostrea gigas\"\n  - \"Pacific oyster\"\n  - \"2024\"\n  - \"resazurin\"\n---\n\n\n\n# INTRO\n\n[After running the initial resazuring test on 20240308](../2024-03-08-Resazurin---Preliminary-Respiration-Test-Using-C.gigas/index.qmd) (Notebook), Steven/Ariana [asked that I run another trial](https://github.com/RobertsLab/resources/issues/1842) (GitHub Issue). This second trial was designed to get some baseline respiration from a set of oysters, followed by a heat stress at 35<sup>o</sup>C.\n\nFor this initial test, I followed the [resazurin assay](https://github.com/RobertsLab/project-gigas-carryover/blob/27441a713dfe68578758103bb82dd4dca4b4c091/protocols/Resazurin-assay.md) (commit 27441a7) shared by Steven, with the following modifications:\n\n- Non-sterile water/sea water was used.\n\n- No penn/strep/Fungizone used.\n\n## Procedure\n\n### Pre-stress\n\nA total of nine small oysters were weighed, measured (using analog calipers). Two larger oyters were also weighed/measured and placed in their own glass Petri dishes. Fresh resazuring assay media was prepared. Two milliliters was added to 11 wells of the 12-well plate - the final position (`C04`) was left empty. Twenty milliliters was added to each Petri dish. These volumes ensured that the oysters would be submerged when added.\n\nFluorescence was measured on a Victor<sup>3</sup> plate reader immediatley after adding resazurin assay media to the plate and dishes. The oysters were then distributed/added to the 12-well plate and dishes. Fluorescence was measured again after 0.5 and 1.0hrs. To measure the dishes, 2mL of assay media was transferred to wells `A01` and `A02` of a clean 12-well plate (the smaller of the two oysters in `A01`).\n\n### Heat stress @ 35<sup>o</sup>C.\n\nAs before, a fresh batch of resazurin assay media was made and distributed in a 12-well plate and two glass Petri dishes. The plate and the dishes were warmed at 35<sup>o</sup>C in a warm air incubator (Barnstead) for 45mins. The 12-well plate was covered; the Petri dishes were not. Fluorescence was measured on a Victor<sup>3</sup> plate reader immediately before  transferring oysters to the plate and dishes.\n\nOysters were transferred from the pre-stress plate/dishes to the pre-warmed plate/dishes. Fluorescence was measured again after 0.5 and 1.0hrs. To measure the dishes, 2mL of assay media was transferred to wells `A01` and `A02` of a clean 12-well plate (the smaller of the two oysters in `A01`).\n\n### Plate layout\n\n![Oysters in 12-well plate, a ruler, and oysters in two glass Petri dishes.](20240312-cgig-12_well-dishes-with_ruler.jpg){fig-alt=\"Oysters in 12-well plate, a ruler, and oysters in two glass Petri dishes.\"}\n\n# RESULTS\n\n## Output files\n\nAll files have been deposited in the [`project-gigas-carryover` repo](https://github.com/RobertsLab/project-gigas-carryover/tree/main/lifestage_carryover/data/resazurin_trial_02). Please visit that link to obtain files, as well as view the [`REAMDE.md` file](https://github.com/RobertsLab/project-gigas-carryover/tree/main/lifestage_carryover/data/resazurin_trial_02/REAMDE.md) for descriptions of each file.\n\nAll measurements were compiled in the following file:\n\n- [`20240312-cgig-resazurin-trial-02.csv`](https://github.com/RobertsLab/project-gigas-carryover/blob/04a64e3bd45487b5cd631f5817937d3cd4318e70/lifestage_carryover/data/resazurin_trial_02/20240312-cgig-resazurin-trial-02.csv) (CSV; commit `a2398b0`)\n\n## Analysis\n\n::: callout-note\nData frame links to commit `a2398b0`.\n:::\n\n\n\n\n\n\n\n\n\n\n### Read in `20240312-cgig-resazurin-trial-02.csv`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresazurin.df <- read.csv(\"https://raw.githubusercontent.com/RobertsLab/project-gigas-carryover/a2398b08c839035df3c8924b12de55e2d91d8824/lifestage_carryover/data/resazurin_trial_02/20240312-cgig-resazurin-trial-02.csv\",\nheader = TRUE,\nsep = \",\")\n\nstr(resazurin.df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t28 obs. of  10 variables:\n $ well     : chr  \"A01\" \"A02\" \"A03\" \"A04\" ...\n $ sample   : chr  \"oyster-01\" \"oyster-02\" \"oyster-03\" \"oyster-04\" ...\n $ weight.mg: num  403.2 235.6 112.4 34.9 21.6 ...\n $ length.mm: num  17.71 11.51 10.46 7.35 5.25 ...\n $ width.mm : num  12.51 10.46 7.35 4.21 5.27 ...\n $ depth.mm : num  5.24 3.18 3.16 2.14 1.12 2.12 3.15 4.21 2.15 NA ...\n $ treatment: chr  \"pre-stress\" \"pre-stress\" \"pre-stress\" \"pre-stress\" ...\n $ t0       : int  10932 10328 10841 11549 10812 11027 11106 11347 11430 11549 ...\n $ t0.5     : int  17076 16051 11742 11349 10475 12125 11819 14929 12076 11478 ...\n $ t1.0     : int  22549 19028 13454 12211 11330 13679 12397 17741 12320 11666 ...\n```\n\n\n:::\n:::\n\n\n\n\n\n### Reshape the data from wide to long format\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nresazurin_data_long <- resazurin.df %>%\n  pivot_longer(cols = c(t0, t0.5, t1.0), names_to = \"time_point\", values_to = \"A590\")\n```\n:::\n\n\n\n\n#### Pre-stress\n\n##### Plot pre-stress raw flourescence\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter the data for treatment == \"pre-stress\"\npre_stress_data <- subset(resazurin_data_long, treatment == \"pre-stress\")\n\n# Get unique sample names\nunique_samples <- unique(pre_stress_data$sample)\n\n# Define colors for unique samples\nsample_colors <- ifelse(grepl(\"^neg-control\", unique_samples), \"black\", rainbow(length(unique_samples)))\n\n# Create a named vector for color mapping\nsample_color_mapping <- setNames(sample_colors, unique_samples)\n\n# Create the dot plot\nggplot(pre_stress_data, aes(x = time_point, y = A590, color = sample)) +\n  geom_line(aes(group = sample), linetype = \"solid\", size = 1) + # Set linetype to solid\n  geom_point() +\n  scale_color_manual(values = sample_color_mapping) +\n  labs(x = \"Time Point\", y = \"A590\", color = \"Sample\", linetype = \"Sample\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot-pre-stress-raw-fluorescence-1.png){width=672}\n:::\n:::\n\n\n\n\n##### Plot pre-stress control-subtracted fluorescence\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 1: Calculate the mean of A590 for each time point for \"pre-stress\" samples beginning with \"neg-control\"\nneg_control_means <- pre_stress_data %>%\n  filter(grepl(\"^neg-control\", sample)) %>%\n  group_by(time_point) %>%\n  summarise(mean_A590 = mean(A590))\n\n# Step 2: Subtract the mean calculated in step 1 from each corresponding time point for other samples\nadjusted_data <- pre_stress_data %>%\n  left_join(neg_control_means, by = \"time_point\") %>%\n  mutate(adjusted_A590 = ifelse(!is.na(mean_A590), A590 - mean_A590, A590))\n\n# Step 3: Filter out values from samples \"empty\" and samples beginning with \"neg-control\"\nadjusted_data <- adjusted_data %>%\n  filter(!grepl(\"^empty|^neg-control\", sample))\n\n# Step 4: Create a dot plot using the adjusted values\nggplot(adjusted_data, aes(x = time_point, y = adjusted_A590, color = sample)) +\n  geom_line(aes(group = sample), linetype = \"solid\", size = 1) +\n  geom_point() +\n  labs(x = \"Time Point\", y = \"Adjusted A590\", color = \"Sample\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/prestress-control-adjusted-fluorescence-1.png){width=672}\n:::\n:::\n\n\n\n\n\n### Heat stress @ 35<sup>o</sup>C\n\n##### Plot heat stress raw flourescence\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter the data for treatment == \"pre-stress\"\nheat_stress_data <- subset(resazurin_data_long, treatment == \"heat_stress\")\n\n# Get unique sample names\nunique_samples <- unique(heat_stress_data$sample)\n\n# Define colors for unique samples\nsample_colors <- ifelse(grepl(\"^neg-control\", unique_samples), \"black\", rainbow(length(unique_samples)))\n\n# Create a named vector for color mapping\nsample_color_mapping <- setNames(sample_colors, unique_samples)\n\n# Create the dot plot\nggplot(heat_stress_data, aes(x = time_point, y = A590, color = sample)) +\n  geom_line(aes(group = sample), linetype = \"solid\", size = 1) + # Set linetype to solid\n  geom_point() +\n  scale_color_manual(values = sample_color_mapping) +\n  labs(x = \"Time Point\", y = \"A590\", color = \"Sample\", linetype = \"Sample\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot-heat-stress-raw-fluorescence-1.png){width=672}\n:::\n:::\n\n\n\n\n##### Plot heat stress control-subtracted fluorescence\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 1: Calculate the mean of A590 for each time point for \"pre-stress\" samples beginning with \"neg-control\"\nneg_control_means <- heat_stress_data %>%\n  filter(grepl(\"^neg-control\", sample)) %>%\n  group_by(time_point) %>%\n  summarise(mean_A590 = mean(A590))\n\n# Step 2: Subtract the mean calculated in step 1 from each corresponding time point for other samples\nadjusted_data <- heat_stress_data %>%\n  left_join(neg_control_means, by = \"time_point\") %>%\n  mutate(adjusted_A590 = ifelse(!is.na(mean_A590), A590 - mean_A590, A590))\n\n# Step 3: Filter out values from samples \"empty\" and samples beginning with \"neg-control\"\nadjusted_data_filtered <- adjusted_data %>%\n  filter(!grepl(\"^empty|^neg-control\", sample))\n\n# Step 4: Create a dot plot using the adjusted values\nggplot(adjusted_data_filtered, aes(x = time_point, y = adjusted_A590, color = sample)) +\n  geom_line(aes(group = sample), linetype = \"solid\", size = 1) +\n  geom_point() +\n  labs(x = \"Time Point\", y = \"Adjusted A590\", color = \"Sample\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot-heat-stress-control-adjusted-fluorescence-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n### Combined bar plot\n\n#### Calculate the mean of A590 for each time point for \"pre-stress\" samples beginning with \"neg-control\"\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Step 1: Calculate the mean of A590 for each time point for \"pre-stress\" samples beginning with \"neg-control\"\nneg_control_means <- resazurin_data_long %>%\n  filter(grepl(\"^neg-control\", sample)) %>%\n  group_by(time_point) %>%\n  summarise(mean_A590 = mean(A590))\n\nstr(neg_control_means)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [3 × 2] (S3: tbl_df/tbl/data.frame)\n $ time_point: chr [1:3] \"t0\" \"t0.5\" \"t1.0\"\n $ mean_A590 : num [1:3] 11096 11306 11566\n```\n\n\n:::\n:::\n\n\n\n\n#### Subtract negative controls\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Subtract the mean calculated in step 1 from each corresponding time point for other samples\nadjusted_data <- resazurin_data_long %>%\n  left_join(neg_control_means, by = \"time_point\") %>%\n  mutate(adjusted_A590 = ifelse(!is.na(mean_A590), A590 - mean_A590, A590))\n\nstr(adjusted_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [84 × 11] (S3: tbl_df/tbl/data.frame)\n $ well         : chr [1:84] \"A01\" \"A01\" \"A01\" \"A02\" ...\n $ sample       : chr [1:84] \"oyster-01\" \"oyster-01\" \"oyster-01\" \"oyster-02\" ...\n $ weight.mg    : num [1:84] 403 403 403 236 236 ...\n $ length.mm    : num [1:84] 17.7 17.7 17.7 11.5 11.5 ...\n $ width.mm     : num [1:84] 12.5 12.5 12.5 10.5 10.5 ...\n $ depth.mm     : num [1:84] 5.24 5.24 5.24 3.18 3.18 3.18 3.16 3.16 3.16 2.14 ...\n $ treatment    : chr [1:84] \"pre-stress\" \"pre-stress\" \"pre-stress\" \"pre-stress\" ...\n $ time_point   : chr [1:84] \"t0\" \"t0.5\" \"t1.0\" \"t0\" ...\n $ A590         : int [1:84] 10932 17076 22549 10328 16051 19028 10841 11742 13454 11549 ...\n $ mean_A590    : num [1:84] 11096 11306 11566 11096 11306 ...\n $ adjusted_A590: num [1:84] -164 5770 10983 -768 4745 ...\n```\n\n\n:::\n:::\n\n\n\n\n#### Filter for desired data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter out values from samples \"empty\" and samples beginning with \"neg-control\"\nadjusted_data_filtered <- adjusted_data %>%\n  filter(!grepl(\"^empty|^neg-control\", sample))\n\n\n# Filter data for \"pre-stress\" and \"heat_stress\" treatments\nfiltered_data <- adjusted_data_filtered %>%\n  filter(treatment %in% c(\"pre-stress\", \"heat_stress\"))\n\nstr(filtered_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [66 × 11] (S3: tbl_df/tbl/data.frame)\n $ well         : chr [1:66] \"A01\" \"A01\" \"A01\" \"A02\" ...\n $ sample       : chr [1:66] \"oyster-01\" \"oyster-01\" \"oyster-01\" \"oyster-02\" ...\n $ weight.mg    : num [1:66] 403 403 403 236 236 ...\n $ length.mm    : num [1:66] 17.7 17.7 17.7 11.5 11.5 ...\n $ width.mm     : num [1:66] 12.5 12.5 12.5 10.5 10.5 ...\n $ depth.mm     : num [1:66] 5.24 5.24 5.24 3.18 3.18 3.18 3.16 3.16 3.16 2.14 ...\n $ treatment    : chr [1:66] \"pre-stress\" \"pre-stress\" \"pre-stress\" \"pre-stress\" ...\n $ time_point   : chr [1:66] \"t0\" \"t0.5\" \"t1.0\" \"t0\" ...\n $ A590         : int [1:66] 10932 17076 22549 10328 16051 19028 10841 11742 13454 11549 ...\n $ mean_A590    : num [1:66] 11096 11306 11566 11096 11306 ...\n $ adjusted_A590: num [1:66] -164 5770 10983 -768 4745 ...\n```\n\n\n:::\n:::\n\n\n\n\n\n#### Pivot the data to have separate columns for \"t0\" and \"t1.0\"\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npivoted_data <- filtered_data %>%\n  filter(time_point %in% c(\"t0\", \"t1.0\")) %>%\n  group_by(sample, time_point, treatment) %>%\n  summarize(adjusted_A590 = first(adjusted_A590)) %>%\n  pivot_wider(names_from = time_point, values_from = adjusted_A590)\n\nstr(pivoted_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ngropd_df [22 × 4] (S3: grouped_df/tbl_df/tbl/data.frame)\n $ sample   : chr [1:22] \"big-oyster\" \"big-oyster\" \"bigger-oyster\" \"bigger-oyster\" ...\n $ treatment: chr [1:22] \"heat_stress\" \"pre-stress\" \"heat_stress\" \"pre-stress\" ...\n $ t0       : num [1:22] -462 454 -440 450 -4180 ...\n $ t1.0     : num [1:22] 14629 10739 5085 4876 4092 ...\n - attr(*, \"groups\")= tibble [11 × 2] (S3: tbl_df/tbl/data.frame)\n  ..$ sample: chr [1:11] \"big-oyster\" \"bigger-oyster\" \"oyster-01\" \"oyster-02\" ...\n  ..$ .rows : list<int> [1:11] \n  .. ..$ : int [1:2] 1 2\n  .. ..$ : int [1:2] 3 4\n  .. ..$ : int [1:2] 5 6\n  .. ..$ : int [1:2] 7 8\n  .. ..$ : int [1:2] 9 10\n  .. ..$ : int [1:2] 11 12\n  .. ..$ : int [1:2] 13 14\n  .. ..$ : int [1:2] 15 16\n  .. ..$ : int [1:2] 17 18\n  .. ..$ : int [1:2] 19 20\n  .. ..$ : int [1:2] 21 22\n  .. ..@ ptype: int(0) \n  ..- attr(*, \".drop\")= logi TRUE\n```\n\n\n:::\n:::\n\n\n\n\n\n\n#### Calculate the difference in A590 between \"t0\" and \"t1.0\" normalized by weight\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndifference_data <- pivoted_data %>%\n  left_join(filtered_data %>%\n  select(sample, weight.mg, treatment), by = c(\"sample\", \"treatment\")) %>%\n  mutate(difference = (`t1.0` - `t0`) / weight.mg)\n\nstr(difference_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ngropd_df [66 × 6] (S3: grouped_df/tbl_df/tbl/data.frame)\n $ sample    : chr [1:66] \"big-oyster\" \"big-oyster\" \"big-oyster\" \"big-oyster\" ...\n $ treatment : chr [1:66] \"heat_stress\" \"heat_stress\" \"heat_stress\" \"pre-stress\" ...\n $ t0        : num [1:66] -462 -462 -462 454 454 ...\n $ t1.0      : num [1:66] 14629 14629 14629 10739 10739 ...\n $ weight.mg : num [1:66] 2400 2400 2400 2400 2400 ...\n $ difference: num [1:66] 6.29 6.29 6.29 4.29 4.29 ...\n - attr(*, \"groups\")= tibble [11 × 2] (S3: tbl_df/tbl/data.frame)\n  ..$ sample: chr [1:11] \"big-oyster\" \"bigger-oyster\" \"oyster-01\" \"oyster-02\" ...\n  ..$ .rows : list<int> [1:11] \n  .. ..$ : int [1:6] 1 2 3 4 5 6\n  .. ..$ : int [1:6] 7 8 9 10 11 12\n  .. ..$ : int [1:6] 13 14 15 16 17 18\n  .. ..$ : int [1:6] 19 20 21 22 23 24\n  .. ..$ : int [1:6] 25 26 27 28 29 30\n  .. ..$ : int [1:6] 31 32 33 34 35 36\n  .. ..$ : int [1:6] 37 38 39 40 41 42\n  .. ..$ : int [1:6] 43 44 45 46 47 48\n  .. ..$ : int [1:6] 49 50 51 52 53 54\n  .. ..$ : int [1:6] 55 56 57 58 59 60\n  .. ..$ : int [1:6] 61 62 63 64 65 66\n  .. ..@ ptype: int(0) \n  ..- attr(*, \".drop\")= logi TRUE\n```\n\n\n:::\n:::\n\n\n\n\n#### Grouped bar plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Reorder treatment levels\n# Makes pre-stress on left and heat-stress on right\ndifference_data$treatment <- factor(difference_data$treatment, levels = c(\"pre-stress\", \"heat_stress\"))\n\n# Get default ggplot2 colors\ndefault_colors <- scales::hue_pal()(2)\n\n# Define custom fill colors with swapped treatments\ncustom_colors <- c(\"pre-stress\" = default_colors[2], \"heat_stress\" = default_colors[1])\n\n# Plot grouped bar plot with swapped treatments and default colors\nggplot(difference_data, aes(x = reorder(sample, weight.mg), y = difference, fill = treatment)) +\n  geom_bar(stat = \"identity\", position = position_dodge(width = 0.9)) +\n  labs(x = \"Sample\", y = \"\\u0394 A590 per mg\") + # Unicode for capital delta is \\u0394\n  scale_fill_manual(values = custom_colors) +  # Assign default ggplot2 colors to custom treatments\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1)) +\n  geom_segment(aes(x = 0, xend = max(as.numeric(as.factor(difference_data$sample))) + 1.0, y = -3.5, yend = -3.5), arrow = arrow(type = \"open\", length = unit(0.2, \"inches\")), color = \"black\") + # adds arrow along X-axis\n  geom_text(aes(x = 0, y = -8.0, label = \"Smaller\"), hjust = 0, vjust = 0, color = \"black\") +\n  geom_text(aes(x = max(as.numeric(as.factor(difference_data$sample))) + 0.5, y = -8.0, label = \"Larger\"), hjust = 1, vjust = 0, color = \"black\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/grouped-bar-plot-1.png){width=672}\n:::\n:::\n\n\n\n\n## DISCUSSION\n\nGlancing at the grouped bar plots, it appears that the smaller oysters have a greater change in respiration during heat stress. Additionally, the two largest oysters, possibly unintutively, exhibit the lowest changes in respiration. However, my guess is that these larger oysters have the ability to remain closed for longer durations than the smaller oysters. As such, they remained closed after being handled and placed in the resazurin assay media. This would explain low respiration rates _and_ minimal response to heat stress.\n\nThis idea is further supported by the fact that we see that as oysters get larger, their respiration rates are _lower_ than when unstressed. It's possible that the heat stress triggered a response for them to keep closed and, in turn, reducing respiration. While the smallest oysters are unable to keep their shells closed for lengthy periods of time, requiring them to open and respire at higher rates during heat stress.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}