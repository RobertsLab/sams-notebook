{
  "hash": "dcfcf6f0f15c89cea6e39071246e0b39",
  "result": {
    "engine": "knitr",
    "markdown": "---\nauthor: Sam White\ntoc-title: Contents\ntoc-depth: 5\ntoc-location: left\ntitle: FastQ QC - M.trossulus WGBS from Psomagen Using FastQC and MultiQC\ndate: '2024-11-07'\ndraft: false\nengine: knitr\ncategories: \n  - \"2024\"\n  - \"Mytilus trossulus\"\n  - \"WGBS\"\n  - \"Psomagen\"\n  - \"FastQC\"\n  - \"MultiQC\"\n  - \"mussel\"\n  - \"project-mytilus-methylation\"\nimage: \"/posts/2024/2024-11-07-FastQ-QC---M.trossulus-WGBS-from-Psomagen-Using-FastQC-and-MultiQC/20241107-mtro-screenshot-fastqc-example.png\"\n---\n\n\n\n# INTRO\n\nThis is part of Chris' [project-mytilus-methylation](https://github.com/RobertsLab/project-mytilus-methylation)(GitHub repo). Data was received from Psomagen on [20241101](../2024-11-01-Data-Received---Mytilus-trossulus-WGBS-Data-from-Psomagen/index.qmd) (Notebook entry). I performed the initial QC using [`FastQC`](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/) and [`MultiQC`](https://multiqc.info/). I'll add this info to [`Nightingales`](https://b.link/nightingales) (Google Sheet).\n\nA full backup of this repo, including large files is available here:\n\n- [https://gannet.fish.washington.edu/Atumefaciens/gitrepos/project-mytilus-methylation/](https://gannet.fish.washington.edu/Atumefaciens/gitrepos/project-mytilus-methylation/)\n\n:::: {.callout-note}\nThis notebook is markdown knitted from [`00.00-WGBSseq-reads-FastQC-MultiQC.Rmd`](https://github.com/RobertsLab/project-mytilus-methylation/blob/b352e666f21e6e39f5843fd886e3502bf3b754ba/code/00.00-WGBSseq-reads-FastQC-MultiQC.Rmd) (commit `b352e66`).\n:::\n\n\nThis Rmd file will download raw WGBSseq FastQs and evaluate them using\n[FastQC](https://github.com/s-andrews/FastQC) and\n[MultiQC](https://multiqc.info/)(Ewels et al. 2016).\n\n# 1 Create a Bash variables file\n\nThis allows usage of Bash variables across R Markdown chunks.\n\n``` bash\n{\necho \"#### Assign Variables ####\"\necho \"\"\n\necho \"# Data directories\"\necho 'export output_dir_top=\"../output/00.00-WGBSseq-reads-FastQC-MultiQC\"'\necho 'export raw_fastqc_dir=\"${output_dir_top}/raw-fastqc\"'\necho 'export raw_reads_dir=\"../data/raw-wgbs\"'\necho 'export raw_reads_url=\"https://owl.fish.washington.edu/nightingales/M_trossulus/\"'\necho \"\"\n\n\necho \"# Set FastQ filename patterns\"\necho \"export fastq_pattern='*.fastq.gz'\"\necho \"export R1_fastq_pattern='*_1.fastq.gz'\"\necho \"export R2_fastq_pattern='*_2.fastq.gz'\"\necho \"\"\n\necho \"# Set number of CPUs to use\"\necho 'export threads=50'\necho \"\"\n\n\necho \"## Inititalize arrays\"\necho 'export fastq_array_R1=()'\necho 'export fastq_array_R2=()'\necho 'export raw_fastqs_array=()'\necho 'export R1_names_array=()'\necho 'export R2_names_array=()'\necho \"\"\n\necho \"# Print formatting\"\necho 'export line=\"--------------------------------------------------------\"'\necho \"\"\n} > .bashvars\n\ncat .bashvars\n```\n\n    #### Assign Variables ####\n\n    # Data directories\n    export output_dir_top=\"../output/00.00-WGBSseq-reads-FastQC-MultiQC\"\n    export raw_fastqc_dir=\"${output_dir_top}/raw-fastqc\"\n    export raw_reads_dir=\"../data/raw-wgbs\"\n    export raw_reads_url=\"https://owl.fish.washington.edu/nightingales/M_trossulus/\"\n\n    # Set FastQ filename patterns\n    export fastq_pattern='*.fastq.gz'\n    export R1_fastq_pattern='*_1.fastq.gz'\n    export R2_fastq_pattern='*_2.fastq.gz'\n\n    # Set number of CPUs to use\n    export threads=50\n\n    ## Inititalize arrays\n    export fastq_array_R1=()\n    export fastq_array_R2=()\n    export raw_fastqs_array=()\n    export R1_names_array=()\n    export R2_names_array=()\n\n    # Print formatting\n    export line=\"--------------------------------------------------------\"\n\n# 2 Download raw FastQs\n\n## 2.1 Download raw reads\n\nReads are downloaded from\n<https://owl.fish.washington.edu/nightingales/M_trossulus/>\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Make output directory if it doesn't exist\nmkdir --parents ${raw_reads_dir}\n\n# Run wget to retrieve FastQs and MD5 files\nwget \\\n--directory-prefix ${raw_reads_dir} \\\n--recursive \\\n--no-check-certificate \\\n--continue \\\n--cut-dirs 3 \\\n--no-host-directories \\\n--no-parent \\\n--quiet \\\n--level=1 \\\n--accept \"[0-9]M*.fastq.gz,[0-9]M*.fastq.gz.md5sum\" \\\n${raw_reads_url}\n```\n\n## 2.2 Verify raw read checksums\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\ncd \"${raw_reads_dir}\"\n\n# Checksums file contains other files, so this just looks for the sRNAseq files.\nfor file in *.md5sum\ndo\n  md5sum --check \"${file}\"\ndone\n```\n\n# 3 FastQC/MultiQC on raw reads\n\n``` bash\n# Load bash variables into memory\nsource .bashvars\n\n# Make output directory if it doesn't exist\nmkdir --parents \"${raw_fastqc_dir}\"\n\n############ RUN FASTQC ############\n\n\n# Create array of trimmed FastQs\nraw_fastqs_array=(${raw_reads_dir}/${fastq_pattern})\n\n# Pass array contents to new variable as space-delimited list\nraw_fastqc_list=$(echo \"${raw_fastqs_array[*]}\")\n\necho \"Beginning FastQC on raw reads...\"\necho \"\"\n\n# Run FastQC\n### NOTE: Do NOT quote raw_fastqc_list\nfastqc \\\n--threads ${threads} \\\n--outdir ${raw_fastqc_dir} \\\n--quiet \\\n${raw_fastqc_list}\n\necho \"FastQC on raw reads complete!\"\necho \"\"\n\n############ END FASTQC ############\n\n############ RUN MULTIQC ############\necho \"Beginning MultiQC on raw FastQC...\"\necho \"\"\n\nmultiqc ${raw_fastqc_dir} -o ${raw_fastqc_dir}\n\necho \"\"\necho \"MultiQC on raw FastQs complete.\"\necho \"\"\n\n############ END MULTIQC ############\n\necho \"Removing FastQC zip files.\"\necho \"\"\nrm ${raw_fastqc_dir}/*.zip\necho \"FastQC zip files removed.\"\necho \"\"\n\n# View directory contents\nls -lh ${raw_fastqc_dir}\n```\n\n<div id=\"refs\" class=\"references csl-bib-body hanging-indent\">\n\n<div id=\"ref-ewels2016\" class=\"csl-entry\">\n\nEwels, Philip, Måns Magnusson, Sverker Lundin, and Max Käller. 2016.\n“MultiQC: Summarize Analysis Results for Multiple Tools and Samples in a\nSingle Report.” *Bioinformatics* 32 (19): 3047–48.\n<https://doi.org/10.1093/bioinformatics/btw354>.\n\n</div>\n\n</div>\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}