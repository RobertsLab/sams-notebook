{
  "hash": "060285f3a11689d5f6045e2b8d34cef6",
  "result": {
    "engine": "knitr",
    "markdown": "---\nauthor: Sam White\ntoc-title: Contents\ntoc-depth: 5\ntoc-location: left\ntitle: Transcriptome Annotation - M.magister De Novo Transcriptome Assembly for DuMOAR Project Using DIAMOND BLASTx on Mox\ndate: '2023-11-09'\ndraft: false\nengine: knitr\ncategories: \n  - \"mox\"\n  - \"DIAMOND\"\n  - \"BLASTx\"\n  - \"transcriptome\"\n  - \"2023\"\n  - \"DuMOAR\"\n  - \"Dungeness crab\"\n  - \"Metacarcinus magister\"\n---\n\n\n\n# Intro\n\nAs part of the process for using [`Trinotate`](https://github.com/Trinotate/Trinotate/wiki) for [transcriptome annotation](https://github.com/laurahspencer/DuMOAR/issues/44) (GitHub Issue), I previously ran [TransDecoder on 20231107](../2023-11-07-Transcriptome-Annotation---M.magister-De-Novo-Transcriptome-Assembly-for-DuMOAR-Project-Using-TransDecoder-on-Mox/index.qmd). Next, I needed to run BLASTx. As usual, I opted for [`DIAMOND`](https://github.com/bbuchfink/diamond) BLASTx, as it is insanely faster than [NCBI `BLASTx`](https://www.ncbi.nlm.nih.gov/books/NBK279690/). This was run on Mox.\n\n## SLURM script\n\n- [20231109-mmag-transcriptome-diamond-blastx.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20231109-mmag-transcriptome-diamond-blastx.sh) (GitHub)\n\n\n```bash\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=20231109-mmag-transcriptome-diamond-blastx\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=3-00:00:00\n## Memory per node\n#SBATCH --mem=500G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20231109-mmag-transcriptome-diamond-blastx\n\n### DIAMOND BLASTx of M.magister de novo transcriptome.\n### For use in DuMOAR transcript annotation.\n\n\n###################################################################################\n# These variables need to be set by user\n\n# Exit script if any command fails\nset -e\n\n# Load Python Mox module for Python module availability\n\nmodule load intel-python3_2017\n\n# SegFault fix?\nexport THREADS_DAEMON_MODEL=1\n\n\n# Programs array\ndeclare -A programs_array\nprograms_array=(\n[diamond]=\"/gscratch/srlab/programs/diamond-v2.1.1/diamond\"\n)\n\n# DIAMOND UniProt database\ndmnd_db=\"/gscratch/srlab/blastdbs/20230727-uniprot-swissprot-reviewed/uniprot_sprot.dmnd\"\n\n\n# Genome (FastA)\nfasta=\"/gscratch/srlab/sam/data/M_magister/transcriptomes/trinity_denovo.Trinity.fasta\"\n\n###################################################################################\n\n# Strip leading pat and extensions\nno_path=$(echo \"${fasta##*/}\")\n\n# Strip extension\nno_ext=$(echo \"${no_path%.*}\")\n\n# Run DIAMOND with blastx\n${programs_array[diamond]} blastx \\\n--db ${dmnd_db} \\\n--query \"${fasta}\" \\\n--out \"${no_ext}\".blastx.outfmt6 \\\n--outfmt 6 \\\n--sensitive \\\n--evalue 1e-25 \\\n--max-target-seqs 1 \\\n--block-size 15.0 \\\n--index-chunks 4\n\n# Generate checksums for future reference\nfor file in *\ndo\n  echo \"\"\n  echo \"Generating checksum for ${file}.\"\n  echo \"\"\n\n  md5sum \"${file}\" | tee --append checksums.md5\n  \n  echo \"\"\ndone\n\necho \"Generating checksum for ${fasta}.\"\necho \"\"\n\nmd5sum \"${fasta}\" | tee --append checksums.md5\n\n\n###################################################################################\n\n# Disable exit on error\nset +e\n\n# Capture program options\nif [[ \"${#programs_array[@]}\" -gt 0 ]]; then\n  echo \"Logging program options...\"\n  for program in \"${!programs_array[@]}\"\n  do\n    {\n    echo \"Program options for ${program}: \"\n    echo \"\"\n    # Handle samtools help menus\n    if [[ \"${program}\" == \"samtools_index\" ]] \\\n    || [[ \"${program}\" == \"samtools_sort\" ]] \\\n    || [[ \"${program}\" == \"samtools_view\" ]]\n    then\n      ${programs_array[$program]}\n\n    # Handle DIAMOND BLAST menu\n    elif [[ \"${program}\" == \"diamond\" ]]; then\n      ${programs_array[$program]} help\n\n    # Handle NCBI BLASTx menu\n    elif [[ \"${program}\" == \"blastx\" ]]; then\n      ${programs_array[$program]} -help\n    fi\n    ${programs_array[$program]} -h\n    echo \"\"\n    echo \"\"\n    echo \"----------------------------------------------\"\n    echo \"\"\n    echo \"\"\n  } &>> program_options.log || true\n\n    # If MultiQC is in programs_array, copy the config file to this directory.\n    if [[ \"${program}\" == \"multiqc\" ]]; then\n      cp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n    fi\n  done\nfi\n\n\n# Document programs in PATH (primarily for program version ID)\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\n```\n\n/----------\n\n# RESULTS\n\n## Runtime\n\nAs usual, [`DIAMOND`](https://github.com/bbuchfink/diamond) BLASTx was ridiculously fast; 1m and 17secs!\n\n![Screencap showing Mox DIAMOND BLASTx run time of 1min and 17secs](20231109-mmag-transcriptome-diamond-blastx-runtime.png)\n\n## FILES\n\nOutput directory:\n\n- [20231109-mmag-transcriptome-diamond-blastx/](https://gannet.fish.washington.edu/Atumefaciens/20231109-mmag-transcriptome-diamond-blastx/)\n\n\n  ### BLASTx (txt; output format 6)\n\n  - [trinity_denovo.Trinity.blastx.outfmt6](https://gannet.fish.washington.edu/Atumefaciens/20231109-mmag-transcriptome-diamond-blastx/trinity_denovo.Trinity.blastx.outfmt6)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}