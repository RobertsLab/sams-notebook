{
  "hash": "c82b2e93e06b2fa18d100dca0c0e6132",
  "result": {
    "engine": "knitr",
    "markdown": "---\nauthor: Sam White\ntoc-title: Contents\ntoc-depth: 5\ntoc-location: left\ntitle: Transcriptome Annotation - M.magister De Novo Transcriptome Assembly for DuMOAR Project Using TransDecoder on Mox\ndate: '2023-11-07'\ndraft: true\nengine: knitr\ncategories: \n  - \"mox\"\n  - \"TransDecoder\"\n  - \"annotation\"\n  - \"transcriptome\"\n  - \"2023\"\n  - \"DuMOAR\"\n  - \"Dungeness crab\"\n  - \"Metacarcinus magister\"\n---\n\n\n\nBegan [transcriptome annotation](https://github.com/laurahspencer/DuMOAR/issues/44) (GitHub issue) using [`TransDecoder`](https://github.com/TransDecoder/TransDecoder/wiki) on the _de novo_ transcriptome assembly provide by Giles Goetz (see link to issue). [`TransDecoder`](https://github.com/TransDecoder/TransDecoder/wiki) uses a combination of [`BLASTp`](https://www.ncbi.nlm.nih.gov/books/NBK279690/) `hmmscan` and `pfam` to identify the longest potential open reading frames (ORFs) from the hundreds of thousands of contigs assembled by [`Trinity`](https://github.com/trinityrnaseq/trinityrnaseq/wiki). The job was run on Mox.\n\n# SLURM script\n\n- [20231107-mmag-transdecoder-transcriptome.sh](https://github.com/RobertsLab/sams-notebook/blob/master/sbatch_scripts/20231107-mmag-transdecoder-transcriptome.sh) (GitHub)\n\n```bash\n#!/bin/bash\n## Job Name\n#SBATCH --job-name=20231107-mmag-transdecoder-transcriptome\n## Allocation Definition\n#SBATCH --account=srlab\n#SBATCH --partition=srlab\n## Resources\n## Nodes\n#SBATCH --nodes=1\n## Walltime (days-hours:minutes:seconds format)\n#SBATCH --time=05-00:00:00\n## Memory per node\n#SBATCH --mem=200G\n##turn on e-mail notification\n#SBATCH --mail-type=ALL\n#SBATCH --mail-user=samwhite@uw.edu\n## Specify the working directory for this job\n#SBATCH --chdir=/gscratch/scrubbed/samwhite/outputs/20231107-mmag-transdecoder-transcriptome\n\n# Transdecoder to identify ORFs DuMOAR Trinity assembly\n\n###################################################################################\n# These variables need to be set by user\n\n## Assign Variables\n\nthreads=28\n\n\n# Paths to input/output files\n\ntrinity_fasta=\"/gscratch/srlab/sam/data/C_magister/transcriptomes/trinity_denovo.Trinity.fasta\"\ntrinity_gene_trans_map=\"/gscratch/srlab/sam/data/C_magister/transcriptomes/trinity_denovo.Trinity.fasta.gene_trans_map\"\n\nblastp_out_dir=\"blastp_out\"\ntransdecoder_out_dir=\"${trinity_fasta##*/}.transdecoder_dir\"\npfam_out_dir=\"pfam_out\"\nblastp_out=\"${blastp_out_dir}/blastp.outfmt6\"\n\npfam_out=\"${pfam_out_dir}/pfam.domtblout\"\nlORFs_pep=\"${transdecoder_out_dir}/longest_orfs.pep\"\npfam_db=\"/gscratch/srlab/programs/Trinotate-v3.1.1/admin/Pfam-A.hmm\"\nsp_db=\"/gscratch/srlab/programs/Trinotate-v3.1.1/admin/uniprot_sprot.pep\"\n\n# Paths to programs\nblast_dir=\"/gscratch/srlab/programs/ncbi-blast-2.8.1+/bin\"\nblastp=\"${blast_dir}/blastp\"\nhmmer_dir=\"/gscratch/srlab/programs/hmmer-3.2.1/src\"\nhmmscan=\"${hmmer_dir}/hmmscan\"\ntransdecoder_dir=\"/gscratch/srlab/programs/TransDecoder-v5.5.0\"\ntransdecoder_lORFs=\"${transdecoder_dir}/TransDecoder.LongOrfs\"\ntransdecoder_predict=\"${transdecoder_dir}/TransDecoder.Predict\"\n###################################################################################\n\n\n# Load Python Mox module for Python module availability\nmodule load intel-python3_2017\n\n# Capture input FastA checksum\necho \"Input Fasta: ${trinity_fasta}\"\necho \"MD5 checksum:\"\necho \"\"\nmd5sum \"${trinity_fasta}\" | tee --append md5checksum-assembly.txt\necho \"\"\n\n# Make output directories\nmkdir --parents \"${blastp_out_dir}\"\nmkdir --parents \"${pfam_out_dir}\"\n\n# Extract long open reading frames\n${transdecoder_lORFs} \\\n-t ${trinity_fasta} \\\n--gene_trans_map ${trinity_gene_trans_map}\n\n# Run blastp on long ORFs\n${blastp} \\\n-query ${lORFs_pep} \\\n-db ${sp_db} \\\n-max_target_seqs 1 \\\n-outfmt 6 \\\n-evalue 1e-5 \\\n-num_threads ${threads} \\\n> ${blastp_out}\n\n# Run pfam search\n${hmmscan} \\\n--cpu ${threads} \\\n--domtblout ${pfam_out} \\\n${pfam_db} \\\n${lORFs_pep}\n\n# Run Transdecoder with blastp and Pfam results\n${transdecoder_predict} \\\n-t ${trinity_fasta} \\\n--retain_pfam_hits ${pfam_out} \\\n--retain_blastp_hits ${blastp_out}\n\n####################################################################\n\n# Capture program options\nif [[ \"${#programs_array[@]}\" -gt 0 ]]; then\n  echo \"Logging program options...\"\n  for program in \"${!programs_array[@]}\"\n  do\n    {\n    echo \"Program options for ${program}: \"\n    echo \"\"\n    # Handle samtools help menus\n    if [[ \"${program}\" == \"samtools_index\" ]] \\\n    || [[ \"${program}\" == \"samtools_sort\" ]] \\\n    || [[ \"${program}\" == \"samtools_view\" ]]\n    then\n      ${programs_array[$program]}\n\n    # Handle DIAMOND BLAST menu\n    elif [[ \"${program}\" == \"diamond\" ]]; then\n      ${programs_array[$program]} help\n\n    # Handle NCBI BLASTx menu\n    elif [[ \"${program}\" == \"blastx\" ]]; then\n      ${programs_array[$program]} -help\n\n    # Handle StringTie prepDE script\n    elif [[ \"${program}\" == \"prepDE\" ]]; then\n      python3 ${programs_array[$program]} -h\n    fi\n    ${programs_array[$program]} -h\n    echo \"\"\n    echo \"\"\n    echo \"----------------------------------------------\"\n    echo \"\"\n    echo \"\"\n  } &>> program_options.log || true\n\n    # If MultiQC is in programs_array, copy the config file to this directory.\n    if [[ \"${program}\" == \"multiqc\" ]]; then\n      cp --preserve ~/.multiqc_config.yaml multiqc_config.yaml\n    fi\n  done\n  echo \"Finished logging programs options.\"\n  echo \"\"\nfi\n\n\n# Document programs in PATH (primarily for program version ID)\necho \"Logging system $PATH...\"\n{\ndate\necho \"\"\necho \"System PATH for $SLURM_JOB_ID\"\necho \"\"\nprintf \"%0.s-\" {1..10}\necho \"${PATH}\" | tr : \\\\n\n} >> system_path.log\necho \"Finished logging system $PATH.\"\n```\n/----------\n\n# RESULTS\n\n## Runtime\n\nRuntime was actually longer than I anticipated: ~1.25 days.\n![TransDecoder runtime for M.magister transcriptome assembly of 1 day, 6hrs 49mins, and 28secs](20231107-mmag-transdecoder-transcriptome-runtime.png)\n\n## Files\n\nAlthough there are other files generated by [`TransDecoder`](https://github.com/TransDecoder/TransDecoder/wiki), such as BEDs and GFFs, the following files are those utilized downstream by [`Trinotate`](https://github.com/Trinotate/Trinotate/wiki) to complete the transcriptome annotation pipeline.\n\nOutput folder:\n\n- [20231107-mmag-transdecoder-transcriptome/](https://gannet.fish.washington.edu/Atumefaciens/20231107-mmag-transdecoder-transcriptome/)\n\n - FastA checksum (TXT):\n\n    - [md5checksum-assembly.txt](https://gannet.fish.washington.edu/Atumefaciens/20231107-mmag-transdecoder-transcriptome/md5checksum-assembly.txt)\n\n  - BLASTp output format 6 (TXT):\n\n    - [20231107-mmag-transdecoder-transcriptome/blastp_out/blastp.outfmt6](https://gannet.fish.washington.edu/Atumefaciens/20231107-mmag-transdecoder-transcriptome/blastp_out/blastp.outfmt6) (6.5MB)\n\n  - Longest peptide ORFs (FastA):\n\n    - [20231107-mmag-transdecoder-transcriptome/trinity_denovo.Trinity.fasta.transdecoder_dir/longest_orfs.pep](https://gannet.fish.washington.edu/Atumefaciens/20231107-mmag-transdecoder-transcriptome/trinity_denovo.Trinity.fasta.transdecoder_dir/longest_orfs.pep) (57MB)\n\n  - Pfam output (TXT):\n\n    - [20231107-mmag-transdecoder-transcriptome/pfam_out/pfam.domtblout](https://gannet.fish.washington.edu/Atumefaciens/20231107-mmag-transdecoder-transcriptome/pfam_out/pfam.domtblout) (143MB)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}