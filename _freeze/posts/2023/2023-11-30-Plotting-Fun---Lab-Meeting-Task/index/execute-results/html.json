{
  "hash": "7583f8c7e93201ce7e8465726a204316",
  "result": {
    "engine": "knitr",
    "markdown": "---\nauthor: Sam White\ntoc-title: Contents\ntoc-depth: 5\ntoc-location: left\ntitle: Plotting Fun - Lab Meeting Task\ndate: '2023-11-30'\ndraft: false\nengine: knitr\ncategories: \n  - \"plotting\"\n  - \"R\"\n---\n\n\n\nFor today's lab meeting, Steven tasked us with the following on Wednesday:\n\n> For lab meeting Thursday the topic is \"Plots\". Before the meeting make sure to create a notebook post where you show-off a plot of something you did in November, including showing the code used to generate the plot. :bar_chart: - Drop the url to the notebook post below.\n\nSo, drawing a blank on what to plot, I opted to visualize commit history for the [Coral E5 deep dive repo](https://github.com/urol-e5/deep-dive) (GitHub repo).\n\nLet's start with just trying to plot commits per day.\n\n# Initial setup\n\n## Load libraries\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check if the '/home/sam/gitrepos/deep-dive' directory exists\nif (!file.exists(\"/home/sam/gitrepos/deep-dive\")) {\n  # If not, clone the repository\n  system(\"cd /home/sam/gitrepos && git clone git@github.com:urol-e5/deep-dive.git\")\n}\n```\n:::\n\n\n\n\n## Set Git Repo Path\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nrepo_path <- \"/home/sam/gitrepos/deep-dive/\"\n```\n:::\n\n\n\n\n## Set date range\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n# Set date range\nstart_date <- as.Date(\"2023-11-01\")\nend_date <- as.Date(\"2023-11-30\")\n\n# Catpures all days in range\nall_days <- data.frame(Date = seq(start_date, end_date, by = \"day\"))\n\nhead(all_days)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        Date\n1 2023-11-01\n2 2023-11-02\n3 2023-11-03\n4 2023-11-04\n5 2023-11-05\n6 2023-11-06\n```\n\n\n:::\n:::\n\n\n\n\n## Define the Git command to get commit dates using `system()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ngit_command <- paste(\"git --git-dir=\",\n                     repo_path, \".git log --pretty=format:%ad --date=short --after=\",\n                     start_date,\n                     \" --before=\",\n                     end_date,\n                     \" --all\",\n                     sep=\"\")\n\nprint(git_command)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"git --git-dir=/home/sam/gitrepos/deep-dive/.git log --pretty=format:%ad --date=short --after=2023-11-01 --before=2023-11-30 --all\"\n```\n\n\n:::\n:::\n\n\n\n\n# Data manipulation\n\n## Excecute git command\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ncommit_info <- system(git_command, intern = TRUE)\n\nstr(commit_info)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n chr [1:235] \"2023-11-30\" \"2023-11-30\" \"2023-11-17\" \"2023-11-17\" ...\n```\n\n\n:::\n:::\n\n\n\n\n## Convert to Dates structure\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ncommit_dates <- as.Date(gsub(\"'\", \"\", commit_info))\n\nstr(commit_dates)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Date[1:235], format: \"2023-11-30\" \"2023-11-30\" \"2023-11-17\" \"2023-11-17\" \"2023-11-17\" ...\n```\n\n\n:::\n:::\n\n\n\n\n## Count number of commits\n\nThis will create a two-column dataframe (Date, Commits)\nand replace dates with 0 commits (NAs) with `0`.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n# This counts number of commits on each date.\ncommit_table <- table(commit_dates)\nstr(commit_table)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n 'table' int [1:14(1d)] 13 17 19 6 7 21 13 5 4 16 ...\n - attr(*, \"dimnames\")=List of 1\n  ..$ commit_dates: chr [1:14] \"2023-11-01\" \"2023-11-02\" \"2023-11-03\" \"2023-11-04\" ...\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"false\"}\nall_days <- merge(\n  all_days,\n  data.frame(\n    Date = as.Date(\n      names(commit_table)\n      ),\n    Commits = as.numeric(\n      commit_table)\n    ),\n  all.x = TRUE,\n  by = \"Date\")\n\n# Assigns value of `0` to all NAs\nall_days$Commits[is.na(all_days$Commits)] <- 0\n\nhead(all_days)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        Date Commits\n1 2023-11-01      13\n2 2023-11-02      17\n3 2023-11-03      19\n4 2023-11-04       6\n5 2023-11-05       7\n6 2023-11-06      21\n```\n\n\n:::\n:::\n\n\n\n\n\n\n# Plot all commits per day\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nggplot(all_days, aes(x = Date, y = Commits)) +\n  geom_bar(stat = \"identity\", fill = \"steelblue\") +\n  labs(title = \"Commits per Day in Nov 2023\", x = \"Date\", y = \"Number of Commits\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![Bar plot of all November 2023 commits](index_files/figure-html/bar-plot-all-commits-1.png){width=672}\n:::\n:::\n\n\n\n\nNow, let's try to look at commits per day by author...\n\n# Commits per day per author\n\n## Create a data frame with all days in November\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nall_days <- data.frame(Date = seq(start_date, end_date, by = \"day\"))\n```\n:::\n\n\n\n\n## New git command\nThis adds author to format output\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ngit_command <- paste(\"git --git-dir=\",repo_path, \".git log --date=short --all --format='%ad %an'\", sep=\"\")\n\ncommit_info <- system(git_command, intern = TRUE)\n```\n:::\n\n\n\n\n## Split the commit information into date and author\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\ncommit_info_split <- strsplit(commit_info, \" \")\ncommit_dates <- as.Date(sapply(commit_info_split, \"[[\", 1))\ncommit_authors <- sapply(commit_info_split, \"[[\", 2)\n\nstr(commit_dates)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n Date[1:788], format: \"2025-02-19\" \"2025-02-19\" \"2025-02-18\" \"2025-02-18\" \"2025-02-18\" ...\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"false\"}\nstr(commit_authors)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n chr [1:788] \"Steven\" \"Steven\" \"Steven\" \"Zach\" \"Zach\" \"Jill\" \"Jill\" \"Jill\" ...\n```\n\n\n:::\n:::\n\n\n\n\n## Create data frame with commits and authors\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n# Create a data frame with commit information\ncommit_data <- data.frame(Date = commit_dates, Author = commit_authors)\nhead(commit_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        Date Author\n1 2025-02-19 Steven\n2 2025-02-19 Steven\n3 2025-02-18 Steven\n4 2025-02-18   Zach\n5 2025-02-18   Zach\n6 2024-11-27   Jill\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"false\"}\nstr(commit_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t788 obs. of  2 variables:\n $ Date  : Date, format: \"2025-02-19\" \"2025-02-19\" ...\n $ Author: chr  \"Steven\" \"Steven\" \"Steven\" \"Zach\" ...\n```\n\n\n:::\n:::\n\n\n\n\n### Update dataframe to include all days in November\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nall_days <- merge(all_days, commit_data, all.x = TRUE, by = \"Date\")\n\nstr(all_days)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t254 obs. of  2 variables:\n $ Date  : Date, format: \"2023-11-01\" \"2023-11-01\" ...\n $ Author: chr  \"kubu4\" \"kubu4\" \"Steven\" \"kubu4\" ...\n```\n\n\n:::\n:::\n\n\n\n\n\n### Update dataframe with commit counts per author\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nall_days <- all_days %>%\n  group_by(Date, Author) %>%\n  summarise(Commits = n())\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'Date'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code  code-fold=\"false\"}\nstr(all_days)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ngropd_df [45 × 3] (S3: grouped_df/tbl_df/tbl/data.frame)\n $ Date   : Date[1:45], format: \"2023-11-01\" \"2023-11-01\" ...\n $ Author : chr [1:45] \"Steven\" \"kubu4\" \"Steven\" \"kubu4\" ...\n $ Commits: int [1:45] 1 12 4 10 3 5 14 2 4 4 ...\n - attr(*, \"groups\")= tibble [30 × 2] (S3: tbl_df/tbl/data.frame)\n  ..$ Date : Date[1:30], format: \"2023-11-01\" \"2023-11-02\" ...\n  ..$ .rows: list<int> [1:30] \n  .. ..$ : int [1:2] 1 2\n  .. ..$ : int [1:3] 3 4 5\n  .. ..$ : int [1:2] 6 7\n  .. ..$ : int [1:2] 8 9\n  .. ..$ : int [1:2] 10 11\n  .. ..$ : int [1:2] 12 13\n  .. ..$ : int [1:2] 14 15\n  .. ..$ : int 16\n  .. ..$ : int 17\n  .. ..$ : int 18\n  .. ..$ : int 19\n  .. ..$ : int 20\n  .. ..$ : int 21\n  .. ..$ : int [1:2] 22 23\n  .. ..$ : int [1:3] 24 25 26\n  .. ..$ : int [1:3] 27 28 29\n  .. ..$ : int [1:3] 30 31 32\n  .. ..$ : int 33\n  .. ..$ : int 34\n  .. ..$ : int 35\n  .. ..$ : int 36\n  .. ..$ : int 37\n  .. ..$ : int 38\n  .. ..$ : int 39\n  .. ..$ : int 40\n  .. ..$ : int 41\n  .. ..$ : int 42\n  .. ..$ : int 43\n  .. ..$ : int 44\n  .. ..$ : int 45\n  .. ..@ ptype: int(0) \n  ..- attr(*, \".drop\")= logi TRUE\n```\n\n\n:::\n:::\n\n\n\n\n# Plot commits per day per author\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nggplot(all_days, aes(x = Date, y = Commits, fill = Author)) +\n  geom_bar(stat = \"identity\") +\n  labs(title = \"Commits by Author per Day in Nov 2023\", x = \"Date\", y = \"Number of Commits\") +\n  theme_minimal() +\n  scale_fill_brewer(palette = \"Set2\")\n```\n\n::: {.cell-output-display}\n![Stacked bar plot of November 2023 commits per day per author](index_files/figure-html/stacked-bar-plot-commits-by-author-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}